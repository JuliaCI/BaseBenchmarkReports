cset: moving following pidspec: 14130
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.785247639 seconds)
loading group "shootout"... done (took 1.190841183 seconds)
loading group "string"... done (took 0.423023996 seconds)
loading group "linalg"... done (took 8.217876625 seconds)
loading group "parallel"... done (took 0.162019773 seconds)
loading group "find"... done (took 1.383730661 seconds)
loading group "tuple"... done (took 2.015498198 seconds)
loading group "union"... done (took 13.032304333 seconds)
loading group "dates"... done (took 1.385302967 seconds)
loading group "micro"... done (took 0.210955403 seconds)
loading group "simd"... done (took 4.566087068 seconds)
loading group "io"... done (took 1.06628016 seconds)
loading group "random"... done (took 9.018246624 seconds)
loading group "problem"... done (took 1.562059683 seconds)
loading group "array"... done (took 20.230322882 seconds)
loading group "misc"... done (took 1.541195261 seconds)
loading group "scalar"... done (took 41.431267852 seconds)
loading group "sort"... done (took 3.343855785 seconds)
loading group "sparse"... done (took 12.128407197 seconds)
loading group "collection"... done (took 17.756748196 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.519294099 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121350503 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.126958713 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119572607 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.18211838 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.120202437 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12703308 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084770757 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.84980339 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.13634318 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114044091 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.432028636 seconds)
done (took 5.296189001 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.168594279 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.091704258 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081487083 seconds)
  done (took 1.324603 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06453984 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.133811428 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065350869 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066472692 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065804094 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065259993 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065267299 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064971214 seconds)
  done (took 1.678981642 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.070910825 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.066658849 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.064541949 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066603523 seconds)
  done (took 1.423139642 seconds)
done (took 5.826076651 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.240750675 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.099357337 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.287313795 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.44280935 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.607055271 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.092687462 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.0738037 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.069373104 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.12863869 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.319242685 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102416124 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.179641678 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088751778 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.164759976 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.994140311 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.120588692 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085150003 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.122335379 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093753543 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132018015 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.389690756 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.076529903 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.074720653 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.069200271 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.066957481 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.648305469 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.667697434 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.122521133 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082380865 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.160233127 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.115567402 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.647247451 seconds)
  done (took 10.753307586 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.091198627 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.088795506 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067437129 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12243331 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.092415242 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068558256 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074312401 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066891104 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086815517 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.122233484 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088780784 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.096956808 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065054398 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068233914 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.072681967 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.194764596 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080816476 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081301993 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067655636 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081070351 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104752882 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077655215 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077030147 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076591597 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128253687 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.168741423 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096286994 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09712859 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071415172 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080006913 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11408187 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126425283 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067022281 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.064219823 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.11843289 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094705562 seconds)
  done (took 4.541083033 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.976042416 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.093455314 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.098748246 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.627188464 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065182956 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.148976689 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.23888971 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072353417 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.436772355 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.14763943 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.140203299 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.14570711 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.116352663 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.068069849 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.251248547 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.119722157 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.532323415 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066903603 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.065866289 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.064424638 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.067045183 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066830892 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063234665 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068625958 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.094524954 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.086191699 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.18120563 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.962542673 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.290848581 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.069622127 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.158505614 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.086501766 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.356163759 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.069150965 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.081686233 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.444639574 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.12236454 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064709066 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.168207072 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.116415879 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063746697 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.118578358 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.077214135 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.067928323 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.067708463 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.06710689 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070189833 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.07727049 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.099790285 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066786699 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064348905 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169341588 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063707401 seconds)
    (53/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065028713 seconds)
    (54/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.06587359 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.148431065 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065113759 seconds)
    (57/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.139731484 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06320369 seconds)
    (59/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067867101 seconds)
    (60/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.101305404 seconds)
    (61/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.06792147 seconds)
    (62/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.084900639 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.093173055 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06342595 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.326718545 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.030874907 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066991455 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.009763607 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078548014 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.065057814 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.069009627 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065559197 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.069383405 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.083016792 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066135949 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.070820544 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069281205 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067789433 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.107571641 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065891476 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069327963 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.066308804 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070836157 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.096477369 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065623438 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.498337778 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.096471672 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065256381 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.074886984 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.10412101 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065763762 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.069829986 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.066390358 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.066154207 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065442892 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.065624435 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068219371 seconds)
    (98/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.095758059 seconds)
    (99/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069396128 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112501511 seconds)
    (101/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.134925288 seconds)
    (102/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068765858 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063679896 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066097335 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.071747145 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.071430576 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063503159 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068549782 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065986062 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067868272 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067534363 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064245038 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.1052849 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.065688844 seconds)
  done (took 21.876814155 seconds)
done (took 39.298237585 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.324872416 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.0773016 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076972408 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07687914 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077153451 seconds)
  done (took 1.883455961 seconds)
done (took 3.11917709 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.108237745 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.063278948 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.098582578 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.097845708 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.062794584 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.063163088 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.096977292 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.06292049 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.096889377 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.098701631 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.100528091 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.099468404 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.063149093 seconds)
  done (took 2.360320902 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.069533038 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.08068778 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.081743122 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061269346 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.070867794 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081202129 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061388801 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.07998693 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.085703858 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080747355 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080265833 seconds)
  done (took 2.066558444 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.07087858 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080834915 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.081993541 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060844046 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072124773 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081027092 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061380469 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080292125 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.083222706 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080903369 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080601579 seconds)
  done (took 2.061984871 seconds)
done (took 7.714359399 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.065223 seconds)
  done (took 1.277463105 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.517602307 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.202976756 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.066808857 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.084726967 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.188947187 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.09051685 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.197185708 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.069733882 seconds)
  done (took 7.802588331 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096916635 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071444187 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.067039155 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.0660826 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.066122996 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.066654795 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.067902518 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.067407108 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.066691712 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06833395 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.06696197 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.0684227 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.066444202 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067159288 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.066520142 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.067407914 seconds)
  done (took 2.41876711 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098135648 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096440975 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.070790425 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.071325739 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.069414376 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.069345946 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.071701616 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.070867548 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.068294053 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.069660911 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071085509 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.070119582 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070022222 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.061014727 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.071085117 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.071911704 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.068401628 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.071038071 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.071516558 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.072683667 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07121587 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.061233866 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.069604649 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.070388903 seconds)
  done (took 3.066602615 seconds)
done (took 15.791587496 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.169929828 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072754024 seconds)
  done (took 1.466420657 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.066652383 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.066928204 seconds)
  done (took 1.370307379 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.071372575 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.059825025 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.076858557 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.069132229 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06023251 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.059841372 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.074999864 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.060026441 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.059821266 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.059861384 seconds)
  done (took 1.889830557 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.061889412 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.067950349 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066081336 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.066911953 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.065308755 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.060921352 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.063518675 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.061441899 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.067623 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.060741465 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.064051582 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080704375 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.063876898 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.081190488 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.063624635 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.064368909 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.066142798 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.063923995 seconds)
  done (took 2.42940259 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.060337381 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.060444662 seconds)
  done (took 1.366967345 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.063395197 seconds)
    (2/7) benchmarking "second"...
    done (took 0.061187941 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063141835 seconds)
    (4/7) benchmarking "year"...
    done (took 0.062528935 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.061103777 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.060382091 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.060821177 seconds)
  done (took 1.672335075 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.413579799 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.119809105 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.335684778 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.067336216 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.074916771 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.249058913 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06303044 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.067215768 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.067184072 seconds)
  done (took 2.741032815 seconds)
done (took 14.183580806 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080524967 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.175357549 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.08676609 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.523426237 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.089705894 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066421559 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.111957225 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.166195912 seconds)
done (took 2.559636483 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.229029223 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.318443484 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.781076549 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.065520642 seconds)
  done (took 3.411675472 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.329501894 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.077848309 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077333364 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066458088 seconds)
  done (took 1.810052852 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064648633 seconds)
    (2/2) benchmarking "read"...
    done (took 0.0702653 seconds)
  done (took 1.38550892 seconds)
done (took 8.091612721 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063175469 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.063194231 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063483103 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.062452735 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063381167 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062682072 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.062514025 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.062355066 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.062567437 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.091640465 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.062859179 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064104411 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063305949 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063741696 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062435314 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.062602855 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062700262 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062663238 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063319708 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062615731 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.06275489 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062203003 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06264061 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063505996 seconds)
  done (took 2.819262576 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.077602252 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.064583138 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.066155728 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.065603733 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.066521355 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.065100196 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.06626789 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.064391457 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.065988784 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.063911494 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065587239 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.065828075 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.064184821 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.065975201 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064282513 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.065796545 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.06571803 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06440346 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064058524 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.065930617 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.066048671 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064642552 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.065735722 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065236092 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.065801601 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066068427 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.064272129 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.064494997 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065739667 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.065980314 seconds)
  done (took 3.235266114 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065239482 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.059234211 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.059500152 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.077139548 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.059135297 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.059659461 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.060320104 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.058690752 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.059034006 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.060575571 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.059475379 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.059031447 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.059799332 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.058940226 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.058828192 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.059184769 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06358413 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077426035 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.058853234 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.058859234 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.063135102 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.059722253 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.058663577 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.058797159 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.059238025 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.058730482 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.058688646 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.058926658 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.05866003 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.060326563 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.058972376 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.062889631 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.064286371 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.058969746 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069988931 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.063984131 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.058883374 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.063498131 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.060171789 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.058611213 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.059040737 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.058594033 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.058893294 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.058693774 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.06877325 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.059284718 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.060169899 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.059406463 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.05886661 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.058768711 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.059598281 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.060531915 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.064182303 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.060281109 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.058555234 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.059854885 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.058491024 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.05970109 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.058864382 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.058592514 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.058584721 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06278593 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.060176642 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.059529094 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078129906 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.060376541 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068558801 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.05906979 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.059491221 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.063047372 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.059051383 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075924443 seconds)
  done (took 5.675180204 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082458439 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084252225 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064038465 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064206283 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060184834 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.059161764 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066721496 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059402357 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063709995 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079345644 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059218573 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064174531 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063865485 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063632274 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059364845 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064275714 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.067292196 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059656644 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.059688845 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.063428551 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059751438 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066874627 seconds)
  done (took 2.713010954 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.137264686 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065312385 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10303444 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072242062 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066793804 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072403584 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064532017 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064843611 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065162031 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065189473 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065297387 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06452569 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067397222 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065782264 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06514492 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065192504 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064709319 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065506146 seconds)
  done (took 2.571287536 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.074840862 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.064685162 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085110077 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064706697 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064717086 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06513612 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06775268 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068228188 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.064265561 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064853416 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.068380621 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064419447 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.064241888 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064413451 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064358321 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064551423 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.064119166 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064389899 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068442733 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067577156 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067722803 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068040603 seconds)
  done (took 2.743554608 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075281069 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063987802 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.078153857 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065212592 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059893431 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.05953702 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.064482413 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064150006 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.064783484 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.063520753 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06389534 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059810041 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.065069814 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064098564 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.065291071 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063798143 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063429683 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064120633 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063362207 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059098725 seconds)
  done (took 2.561027285 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084886132 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062027126 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06184462 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081138295 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062034527 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.061879675 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080876452 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06204646 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.061725508 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083425258 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061879433 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061699628 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080977855 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080749447 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.061644947 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081236562 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081121349 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081123274 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061779487 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061644779 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083034257 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.061760893 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080916535 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0620271 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061913058 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.062028715 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06246526 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081137919 seconds)
  done (took 3.243058963 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.062567255 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062418961 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062791754 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062656489 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06367021 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063172359 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062976279 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063327969 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06252916 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062986938 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06281907 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06266433 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062389852 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.062077478 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06241726 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06290131 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06263857 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063162698 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063060538 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063138743 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.062594882 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062550625 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.062716098 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062885466 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062817497 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.062181253 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062328015 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062483591 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061902863 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062616598 seconds)
  done (took 3.157584705 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.072613281 seconds)
    (2/2) benchmarking "in"...
    done (took 0.070660641 seconds)
  done (took 1.42089172 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061114529 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075726021 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.059344332 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071476052 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06781988 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063228329 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.067973863 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06708897 seconds)
  done (took 1.807150424 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.064969232 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.089040971 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.060969542 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.061440769 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.064121523 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11994362 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.072900101 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.072280896 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074515469 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063561793 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.061445245 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.072494075 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.063692652 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073517083 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062122967 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06983302 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067882858 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073429936 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073889373 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.059481081 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073421285 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061371171 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.059772571 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.061239966 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.060687415 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067485441 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07608993 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072766337 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069639975 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059376235 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.079230073 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.059434939 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.060511359 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06896739 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.063830282 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.05959838 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.096496191 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.059853709 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.064983565 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.059551897 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071431708 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079824745 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073721109 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.07727583 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.061118083 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06168691 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.059127772 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.061473352 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063635386 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069053874 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.059525209 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067291973 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059584108 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.06107591 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070017665 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.059869776 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.064954423 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068893234 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073313078 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070554701 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068920661 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075055183 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068538313 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.067536671 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06033047 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07880584 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.061185207 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072881726 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.074053288 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.060722735 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072185918 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.058747029 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.058336114 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.05980804 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092133133 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.061115072 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.060312248 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.059488416 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.059147462 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.060761014 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068711215 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064586278 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067017744 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062921866 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074957226 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068739038 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.05944006 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.0658804 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.077001314 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063269972 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.059432051 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.075887492 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062751671 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.05909181 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076193467 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069337419 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.060854402 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.060404905 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063449505 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072644128 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.060660078 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058413088 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067497227 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.060859263 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.062179671 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.063214349 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066971809 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.059598149 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069460242 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.063491502 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.060736422 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.058344247 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063206621 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.060066937 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.057902322 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068326288 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.058856158 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.073202917 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065823025 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.072627971 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072660804 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.068801832 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073667527 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.058726211 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.057445334 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.075742078 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068003567 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.060045325 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075960965 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.058319262 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068848852 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.189899842 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.062542645 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.070892096 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060657676 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062908919 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.060967065 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.065282655 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.061617429 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061804065 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065222349 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068421248 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071935789 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.062021483 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069396558 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.061204714 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075172931 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069700519 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065269 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063847677 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.060022051 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071577815 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066782338 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069546078 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.059627872 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.06041526 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.060001892 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070230005 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069726807 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.061125956 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.066777507 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064123337 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.060223188 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.060256953 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.060801312 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063536685 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063037214 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.060241201 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067785145 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069016129 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.074127802 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066828988 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069515694 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.059128007 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.059649893 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.064958514 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.059719061 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064282531 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069224709 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075211683 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071160291 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079886644 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.060132084 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069560531 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.060850884 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076024582 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072582017 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.061051115 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064033157 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.058776226 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061123378 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069359466 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07091639 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.073426118 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074299565 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064300209 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064115843 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.059364489 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07429639 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.060457277 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068477691 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.06911296 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.064438358 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.059654502 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.061514007 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068829633 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064290032 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.05994455 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.075696655 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.065253286 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.059166319 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073802939 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.059614193 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.070324841 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.059345785 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063576002 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064852545 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.061372346 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069415081 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074811601 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.05915261 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.060339701 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07514935 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.061719876 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061262941 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067775128 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.074452485 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064314806 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067521376 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070825221 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069483388 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064288527 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069620699 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.060368609 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.068367275 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.062450929 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070652386 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.059246831 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077051422 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058506045 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.074336322 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.060547008 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.070558843 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.060216101 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068747529 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.0600906 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.075708235 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.06102433 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.059624717 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070746671 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.0579665 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.06806167 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.058861175 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.063859217 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066011536 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.068390538 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.061253716 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068326895 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.059865212 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067059515 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.063018908 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.066521223 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.067548563 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.062831006 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.058178558 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066931995 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069256566 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06665539 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.060049677 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.060090274 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.058977926 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068284516 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.060707525 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.059805713 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066838124 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.063820328 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065335988 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.06003277 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.060834533 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.060140985 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067190917 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068060874 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076518177 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067209691 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065932232 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067960533 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058388849 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073331648 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.05877224 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065796397 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.057537899 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.063641728 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.067538215 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.05840241 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076445701 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.059620352 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066518289 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069837215 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067045552 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.062450761 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075839625 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.061278373 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.0672759 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.066513051 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.063325403 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.064996339 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.060433724 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067256003 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068131149 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.06908486 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.05993833 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066470661 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068212911 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059696962 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.063343764 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.060011913 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067156865 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.059578835 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.058035707 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.063394922 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.069659031 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.063633184 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.063655238 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.05853555 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.057932185 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.058356663 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.063802763 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.063465281 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067028245 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074060189 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057910007 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.059509 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.058097578 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.062058168 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.076126182 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067625611 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066595197 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.063710072 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.060619805 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.059692003 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.060306715 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.059061948 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.060727621 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.057696452 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.057806482 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068352055 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.059760142 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063381353 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058601737 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.059239955 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.06775767 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.061725012 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.059196105 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064983004 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.058436607 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06355235 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.057704462 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.060115427 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063272312 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.057781754 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062829746 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.06908616 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.074544326 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065033119 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067396392 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.05924146 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066138434 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072994858 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063269857 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059454101 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.066816615 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.057378184 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075290997 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.066886543 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066560017 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067622458 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.059707426 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.073648624 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.062616391 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.06773008 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.07333056 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.05851918 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.062922011 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.057781424 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.073695545 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.063018004 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.058074664 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.066660181 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067087802 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.064389489 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.069456218 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.058768977 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.065951633 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062102353 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.061714927 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.059108588 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.058948466 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.066370404 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073244378 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.058763705 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.061530667 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066320864 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067131458 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06268009 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.317616751 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071251657 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063306329 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064418378 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066734628 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062787623 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073935263 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062114154 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067563665 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067908762 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062193024 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069635428 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079443765 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072726931 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073172202 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062135321 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06130024 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.080196209 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066417564 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.065854712 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070016396 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071719489 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073958592 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071224568 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078996489 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062427124 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067849601 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074750873 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.062618261 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.061123593 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065637719 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.063146836 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07075773 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071663927 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069445398 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063195899 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067844237 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074358393 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.062003171 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065339582 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.065395119 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.061410242 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070897488 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068463654 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069199446 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.061741962 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060254555 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064337313 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069250124 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067912185 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069290115 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061486249 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.066415276 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.074290264 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06831902 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063504986 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060450829 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063243074 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069713121 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.064502473 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060149461 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06461316 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064184828 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.066523616 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069808609 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064732809 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060143073 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076982631 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068684593 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.069424407 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.062241844 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.062154839 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060975757 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060357151 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071225918 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059940501 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.061624238 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065295436 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.061794383 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.07738188 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068645681 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.075831953 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061375105 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065565996 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060462921 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069829846 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065094986 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.060881266 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070824308 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06177491 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075573453 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.071816312 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.06535085 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060309867 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06590048 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068379806 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077762524 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069723046 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068996724 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.064005355 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069803997 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.062281655 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.07110537 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.060012239 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.059085509 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070165863 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06897484 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073116561 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060391376 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.070192754 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.06221114 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068368867 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068470595 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.061818704 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062337855 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.062007708 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070136657 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065469969 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069784927 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065400461 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07668348 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.061187594 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071475326 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069559786 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.07092232 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073935755 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072323868 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.06835463 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.060761929 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0677797 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068433817 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.060951465 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064812642 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.063028273 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080743753 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.061579248 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.2062442 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.07468244 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.066057878 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.060569217 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.066439826 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064506185 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.070147076 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.07946626 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.070345478 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.063735508 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.061040351 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065013676 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065734688 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.059490024 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060004012 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.060430597 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070428043 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065249556 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06041817 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.079534603 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.061752342 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069185582 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071143966 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067165502 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.061980671 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059222505 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.061566994 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073590441 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075842947 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064084621 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06899883 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.061693696 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069740662 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.059391836 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068976222 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068478868 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068543852 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060012355 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060340519 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075273837 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075985664 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065003941 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069647481 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069090692 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06257887 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.081183435 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069281639 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061379859 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.071540391 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062805858 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.059861422 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.059421221 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.061871282 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071717186 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.059849035 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.062168365 seconds)
  done (took 41.115438637 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.09859626 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061362434 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060099507 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060299167 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071258591 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061442571 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060662232 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061332396 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061263023 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062856806 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060253201 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06060467 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070540786 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.072609714 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070303638 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064007181 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060471537 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060968221 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06027633 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0611789 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07031439 seconds)
  done (took 2.809647016 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.066840752 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.07496396 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070965363 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076554771 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068054166 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064262434 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070918921 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064271575 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071494158 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069890364 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071270255 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064239321 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.069527309 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.06994349 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069345304 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064323832 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071247685 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068346677 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.064140352 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07088197 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064470785 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071479898 seconds)
  done (took 2.92255796 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.061833339 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.060870616 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069738682 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060359242 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.059698756 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.063106341 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.060231953 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.064355585 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.064813166 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.064865777 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069721304 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.060879266 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.059683079 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.065816656 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.059528928 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.060575465 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.100986018 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.061261639 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.060876797 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.059940404 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.062584273 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069030811 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060164342 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060289915 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067258636 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.063519388 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.059887245 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.062512654 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.060911731 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064676004 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.061216114 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.059516446 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069082635 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068703145 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064952666 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064468522 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.06137456 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.060741098 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.059835795 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.060035553 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068608701 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.061160454 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.060023597 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.061203457 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068942455 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.059902406 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.060072215 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069433258 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.05991098 seconds)
  done (took 4.527770214 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.070508912 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111543035 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06626811 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092449007 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.072355717 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.06606586 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.065736399 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.0931636 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.061105896 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.061813081 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.073323857 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.074230874 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063401859 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.064543446 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.067557836 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062696356 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063348389 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062481123 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.065364097 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062347275 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.065667463 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.067077344 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.072555506 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.072796115 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063354669 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062061546 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062350468 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06377236 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.072655981 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.065959586 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.064361318 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064537997 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.072923124 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.065682661 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062204459 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.062448796 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.073609575 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.063538744 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.062408352 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.061580758 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.062439312 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.063804551 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.067329781 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.073580998 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062603772 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.067435847 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062785882 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.060527879 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.072667011 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06241804 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.066530033 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.073902777 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064006342 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.063101934 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064170119 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.072792839 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062783157 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.061582139 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06303497 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.072697764 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.061310289 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.0639051 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.073697128 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.062357392 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.065960482 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.073565154 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.067940646 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063988653 seconds)
  done (took 6.122871273 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069066292 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094421903 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07161107 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071501844 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070222339 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070851736 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070617361 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070354275 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070742762 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071486294 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070601885 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108665714 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067054947 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074771546 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071257681 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070445791 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070413632 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070167943 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070090455 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070665107 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070288715 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070981811 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070729793 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070713507 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.072533839 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067093298 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070047989 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070830453 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071085901 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070176239 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.072766416 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070132859 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070571361 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071019737 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.072547477 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070279411 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.060996384 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070667249 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070783676 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070348603 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066930083 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070859593 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070310582 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067011437 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070555511 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070579329 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070982161 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.0726698 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076311418 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070932949 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070886573 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07112176 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070584586 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07059102 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070754719 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.077180998 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071196031 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070808151 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070771271 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070773285 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070728543 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.076731508 seconds)
  done (took 5.892860081 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073003055 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067110897 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078312921 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060245468 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06034199 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069195763 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060117135 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.059742036 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06917612 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.066573686 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067913462 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069394445 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071747659 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068051069 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068849373 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071145211 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06905393 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068868947 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066582674 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068853286 seconds)
  done (took 2.794350922 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074963271 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.078292688 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066153065 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069276878 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.065715244 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069628378 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.065486268 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065428321 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066118396 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065868774 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070222356 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070251295 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065929935 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069153894 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070536767 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069254502 seconds)
  done (took 2.531340335 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.066434186 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.066830789 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.066859121 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.061573113 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065127436 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.060791134 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.060861709 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.059534138 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.060356635 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.074282729 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.060940746 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072896212 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.061061203 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.060792173 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.060480431 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.066610535 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.060622174 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06134092 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.061039708 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.065526714 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.067225615 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.062367635 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.064970521 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.061185508 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066205814 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.068568929 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063123604 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064996154 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061079143 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.061418265 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066761688 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.067416833 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061060611 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062447969 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.061440008 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062279934 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.061493199 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.061652022 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.066845441 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.0623831 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.060734854 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066515229 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063574152 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.061728815 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.060521341 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.061677881 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.060189356 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066804673 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.061285256 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066511911 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.061197536 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.062656807 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06145104 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.067730943 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06332999 seconds)
  done (took 4.925191884 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076875352 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065418851 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060015094 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060016987 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.065451061 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.065767235 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065856384 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.065766257 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065949363 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059703512 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065757607 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.064860393 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065539696 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065770236 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065721829 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065488521 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059838528 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06520393 seconds)
  done (took 2.613135271 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072253664 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065733219 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07100246 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065370226 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065643506 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0647998 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060496852 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.060802785 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060481219 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065044004 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064847729 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06505341 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060513816 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.064560502 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065020257 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064979817 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.064371923 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060170211 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065061568 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060155113 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06462695 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061667028 seconds)
  done (took 2.850324842 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.087820191 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083681822 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.125911063 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079220576 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088043505 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071660505 seconds)
  done (took 1.975856558 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093087569 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102681609 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06524647 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065448495 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072783722 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068093755 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067982204 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068031842 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073542081 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071876891 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068314837 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073181589 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073401799 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069740589 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073311893 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075362287 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068182468 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068072233 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065692625 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075655271 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068249692 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073769533 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068241757 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067883624 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068659584 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069664319 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075959381 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072144313 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068152908 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073402719 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075785908 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06808066 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073684194 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074912106 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065354662 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073189823 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068503801 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075569814 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073355995 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069990283 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065584554 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073268184 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073354111 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070227049 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0756713 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068348813 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069843201 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068494967 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068598897 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078170398 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073290784 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069819285 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073840509 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075745869 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075829171 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07805088 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072063504 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069722504 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074054871 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071978993 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069626546 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074082586 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070047637 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072218603 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075877512 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070013529 seconds)
  done (took 6.204765453 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099784448 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065876738 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068856995 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072297954 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070897675 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06835267 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06873488 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068813163 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068246553 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065862519 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10376238 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068896359 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070140773 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070101684 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068848269 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068634541 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068685451 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070032667 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065890308 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078006165 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068293418 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07016701 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069911465 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070201382 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07183535 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076066575 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068564338 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06823761 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068327965 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068352896 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069596023 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068658744 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069567589 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065863205 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069607672 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068375641 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068235755 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06990213 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068451272 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073292671 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069880384 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075530297 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068258079 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068169773 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071568959 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068292945 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068243559 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065858243 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068304476 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065572665 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072189514 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071948811 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072171039 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069966687 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068360285 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068164027 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068644087 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068522492 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068148465 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075557054 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069837736 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068526437 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078090378 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068253713 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068400169 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069853587 seconds)
  done (took 6.121781954 seconds)
done (took 126.608944075 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.210723284 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.183050631 seconds)
  done (took 1.822183049 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073861915 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096793712 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.074912326 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.134038908 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071841601 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105857525 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104328597 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.074999516 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071368556 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071536228 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071491737 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074106524 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13676163 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071331894 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071814376 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073707757 seconds)
  done (took 2.825651696 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106169329 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.182625173 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.11399201 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069785047 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106701073 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075648181 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069401156 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.08051978 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072862932 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.081163865 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07548752 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074620967 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071310164 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074030767 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072765407 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075693031 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071473545 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075773763 seconds)
  done (took 3.002101843 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.097779291 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.084677244 seconds)
  done (took 1.640246894 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158937803 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105252317 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.144536865 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.322918908 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.127916013 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.125906077 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.130267151 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127128771 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.114002846 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.121259474 seconds)
  done (took 2.930141311 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.105421758 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.175600389 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.313286104 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120427483 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075557643 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096780002 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121918741 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081937996 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079007248 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.078994577 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078443442 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076115485 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100840442 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075021238 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074246589 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079147181 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103680057 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073821925 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074700528 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074505504 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105127434 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069994145 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075730923 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073789214 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076768472 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077092926 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071641197 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06980706 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074981625 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07423734 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076994626 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093882766 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076940878 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.096657388 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07368039 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.098102921 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.073861076 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073116452 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074513975 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072927642 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07640607 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076142318 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.079035424 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075851264 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071519938 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.073661912 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071401918 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070091258 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077474757 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071105756 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077444542 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07645568 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.096879476 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070540009 seconds)
  done (took 6.170257023 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108551882 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105595949 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069907997 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11257136 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104520136 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069954753 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10401336 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09962094 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108218332 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068646805 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068520755 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069163666 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074992075 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.078097385 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115760713 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107234104 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071114364 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069705046 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107408276 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.106613221 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068233002 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101105183 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099635482 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105600726 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068056598 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069789862 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067762202 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068382285 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073309241 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.074510999 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068046961 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074696718 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.079709963 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074197414 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067238944 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068138003 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067820955 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07425023 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075197843 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075181501 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.073760107 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068162348 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067643267 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06833183 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068793257 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067299836 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073473405 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.074437643 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.073217443 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068124213 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067997048 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067569721 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068503586 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074188882 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.073905538 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.075361705 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074678249 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067669355 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068261684 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069683891 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075655205 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07567778 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075667202 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068867692 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075886916 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068090208 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076421502 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079095397 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068141862 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06855076 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067968889 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068690085 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068448381 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073697977 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.073526784 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068721606 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068190467 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068160277 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076078373 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073620191 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067714016 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.0732698 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067878826 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06846834 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069376345 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068504177 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07389369 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.075064896 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069110349 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068086224 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067999159 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068392724 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067492711 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.073431014 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074828194 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.074741546 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.073855006 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068357598 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.074451302 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073890546 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068804474 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.074040627 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067886831 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06834431 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068471064 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073534389 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.073145028 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.074976267 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067586791 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067415338 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.073663534 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076378968 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067334563 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.072505135 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074782806 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.206642255 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068364823 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077683504 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068664666 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076161242 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068469634 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076351799 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07155049 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074319007 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068081582 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068334925 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068459803 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.074007097 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068585927 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068326215 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068677071 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068076195 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.074606732 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077422682 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069068598 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074040383 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07439145 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069040649 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074602174 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068849449 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075445453 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068485116 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069302019 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068070816 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077376898 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068733636 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068802682 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068240077 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075734497 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068481672 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075637051 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.072978644 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067698176 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077968881 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076739236 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073544538 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.076939565 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068521744 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068442438 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068313318 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068231466 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.0734936 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074783284 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068823161 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068318302 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.073618731 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.075886633 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067784829 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.073311298 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073494506 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.073871552 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068327327 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067938233 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077078383 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075748079 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.074031152 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.073360803 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074268157 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068044314 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073201789 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073976905 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068324353 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079333725 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067594109 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.077706721 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074260123 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07310309 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074290199 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.075620663 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.075600182 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07641557 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.077871297 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067837614 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068071068 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.073593101 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067652766 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068226723 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.073698252 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068469594 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068401652 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.078307275 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068276744 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076107895 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067619668 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.074734737 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067808246 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068563413 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078287124 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067925714 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068835343 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073527566 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067995969 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.073850899 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075978315 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.073378659 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067840658 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068249989 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074373758 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07465133 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067518493 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067376344 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06806444 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.07321094 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07278248 seconds)
  done (took 18.134636642 seconds)
done (took 37.989135507 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.217915467 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.164957813 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.200160253 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.114929326 seconds)
  done (took 2.255982502 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.090076008 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098054087 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.074448871 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064693329 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.079408071 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064532053 seconds)
  done (took 1.970568855 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.250327604 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.186186187 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170506133 seconds)
  done (took 2.098635872 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.214379407 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.193083487 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.724352221 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.302842147 seconds)
  done (took 3.031205509 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.127777391 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.076646968 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.062367062 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.073244618 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.101642267 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.130624861 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.083749534 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.105577981 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07407812 seconds)
  done (took 2.391131677 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.128350474 seconds)
done (took 13.387511645 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.119970885 seconds)
    (2/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.201614025 seconds)
    (3/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.282535872 seconds)
    (4/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.11250643 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.155399414 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.103842697 seconds)
    (7/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.236874796 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073409517 seconds)
    (9/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078725227 seconds)
    (10/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066287084 seconds)
    (11/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.209758413 seconds)
    (12/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.219963479 seconds)
    (13/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070858963 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091748937 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075425301 seconds)
    (16/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.220987291 seconds)
    (17/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.155944259 seconds)
    (18/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.206768327 seconds)
    (19/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079754565 seconds)
    (20/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082002814 seconds)
    (21/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075788194 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091003731 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.093873752 seconds)
    (24/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.073388553 seconds)
    (25/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072812675 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086944258 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.09012758 seconds)
    (28/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.188550191 seconds)
    (29/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07295842 seconds)
    (30/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.231820445 seconds)
    (31/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.219468319 seconds)
    (32/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.25619276 seconds)
    (33/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069751938 seconds)
    (34/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.092986575 seconds)
    (35/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.065574899 seconds)
    (36/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065417339 seconds)
    (37/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.14147662 seconds)
    (38/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075420663 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.090341897 seconds)
    (40/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.075157151 seconds)
    (41/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.075468081 seconds)
    (42/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.073666632 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.088244318 seconds)
    (44/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072654165 seconds)
    (45/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075400641 seconds)
    (46/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.120818005 seconds)
    (47/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.152489773 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095021098 seconds)
    (49/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074401199 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07293782 seconds)
    (51/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074044344 seconds)
    (52/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.181006729 seconds)
    (53/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.076834626 seconds)
    (54/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.063283753 seconds)
    (55/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.137190915 seconds)
    (56/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073335768 seconds)
    (57/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.135171185 seconds)
    (58/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.075211965 seconds)
    (59/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073259889 seconds)
    (60/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.073246942 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.154931164 seconds)
    (62/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.077262585 seconds)
    (63/309) benchmarking ("sort", Bool, false)...
    done (took 0.146960829 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.149404658 seconds)
    (65/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.16825264 seconds)
    (66/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.188531153 seconds)
    (67/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.066744956 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.090243091 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065105981 seconds)
    (70/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.157597099 seconds)
    (71/309) benchmarking ("sort", Int64, false)...
    done (took 0.066041772 seconds)
    (72/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074011435 seconds)
    (73/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073240905 seconds)
    (74/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075282708 seconds)
    (75/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074302423 seconds)
    (76/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.064411766 seconds)
    (77/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.171343557 seconds)
    (78/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073708622 seconds)
    (79/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.1965405 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066291096 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066392744 seconds)
    (82/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.128527637 seconds)
    (83/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063450241 seconds)
    (84/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.063538901 seconds)
    (85/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.195565137 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071236897 seconds)
    (87/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.350060147 seconds)
    (88/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06736495 seconds)
    (89/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068255334 seconds)
    (90/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.167257019 seconds)
    (91/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.177775263 seconds)
    (92/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073142154 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065669982 seconds)
    (94/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077514278 seconds)
    (95/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.142094231 seconds)
    (96/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.193618485 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086405488 seconds)
    (98/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.224209348 seconds)
    (99/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.06476778 seconds)
    (100/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.142822318 seconds)
    (101/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074981838 seconds)
    (102/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.137089278 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.153548141 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.125175867 seconds)
    (105/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.176343959 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.124019826 seconds)
    (107/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.249698485 seconds)
    (108/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.064679615 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088238978 seconds)
    (110/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.158857158 seconds)
    (111/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.199608694 seconds)
    (112/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.064144378 seconds)
    (113/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.072914352 seconds)
    (114/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.064064565 seconds)
    (115/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072591416 seconds)
    (116/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.072136895 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072234208 seconds)
    (118/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.144988137 seconds)
    (119/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.065787661 seconds)
    (120/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.064796732 seconds)
    (121/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.064502361 seconds)
    (122/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.21400554 seconds)
    (123/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065924862 seconds)
    (124/309) benchmarking ("sort", Float32, false)...
    done (took 0.137634399 seconds)
    (125/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.065153927 seconds)
    (126/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.141156848 seconds)
    (127/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.227232236 seconds)
    (128/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06808968 seconds)
    (129/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.064183862 seconds)
    (130/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.064203726 seconds)
    (131/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.071918909 seconds)
    (132/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.06465731 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.085321394 seconds)
    (134/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.227537024 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.123794439 seconds)
    (136/309) benchmarking ("sort", Int8, false)...
    done (took 0.166649423 seconds)
    (137/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075327906 seconds)
    (138/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075838151 seconds)
    (139/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073155092 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087091317 seconds)
    (141/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.0721892 seconds)
    (142/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.138684175 seconds)
    (143/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.141832053 seconds)
    (144/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180975668 seconds)
    (145/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.073478341 seconds)
    (146/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067691618 seconds)
    (147/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.06602541 seconds)
    (148/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072733981 seconds)
    (149/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069578087 seconds)
    (150/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.135671524 seconds)
    (151/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.063931975 seconds)
    (152/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074664207 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064328196 seconds)
    (154/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067192951 seconds)
    (155/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074522375 seconds)
    (156/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.209770785 seconds)
    (157/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.065354652 seconds)
    (158/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075714004 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064956075 seconds)
    (160/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074729167 seconds)
    (161/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.065025413 seconds)
    (162/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.159458956 seconds)
    (163/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.144764301 seconds)
    (164/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07242028 seconds)
    (165/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.092555887 seconds)
    (166/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.144238744 seconds)
    (167/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072513247 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.110024934 seconds)
    (169/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.158867561 seconds)
    (170/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090071993 seconds)
    (171/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.064040784 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085237149 seconds)
    (173/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.164432466 seconds)
    (174/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.065494063 seconds)
    (175/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.0640506 seconds)
    (176/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.063187941 seconds)
    (177/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081281788 seconds)
    (178/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.18299132 seconds)
    (179/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.065094124 seconds)
    (180/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065359467 seconds)
    (181/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.06568721 seconds)
    (182/309) benchmarking ("sort", Float64, false)...
    done (took 0.135816121 seconds)
    (183/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06693237 seconds)
    (184/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.065283501 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087627139 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.148965547 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.113883692 seconds)
    (188/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.064879107 seconds)
    (189/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.064795941 seconds)
    (190/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.063699474 seconds)
    (191/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.074622408 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.063169195 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.145091141 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064197913 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.16759368 seconds)
    (196/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.064616002 seconds)
    (197/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.229334933 seconds)
    (198/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.094275991 seconds)
    (199/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07822683 seconds)
    (200/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.06501373 seconds)
    (201/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.06558717 seconds)
    (202/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.066701058 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065693319 seconds)
    (204/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.073436552 seconds)
    (205/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.064803882 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.088102094 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090652297 seconds)
    (208/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.148335727 seconds)
    (209/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.066419358 seconds)
    (210/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.06489385 seconds)
    (211/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065730471 seconds)
    (212/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.065564676 seconds)
    (213/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.065654185 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.172471167 seconds)
    (215/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.067411963 seconds)
    (216/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.077175239 seconds)
    (217/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.065928603 seconds)
    (218/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.065328504 seconds)
    (219/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.160322188 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.084884562 seconds)
    (221/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065768781 seconds)
    (222/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.076588565 seconds)
    (223/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.072851947 seconds)
    (224/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066036497 seconds)
    (225/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.064299789 seconds)
    (226/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079224757 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.1447071 seconds)
    (228/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.076650558 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077750116 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075836811 seconds)
    (231/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.06565969 seconds)
    (232/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.064543439 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.147665814 seconds)
    (234/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.065159286 seconds)
    (235/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.06395786 seconds)
    (236/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067013548 seconds)
    (237/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.066055321 seconds)
    (238/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.064158597 seconds)
    (239/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072982122 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088249017 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090552571 seconds)
    (242/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.072716558 seconds)
    (243/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068310199 seconds)
    (244/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.06466202 seconds)
    (245/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.06441306 seconds)
    (246/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072588873 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.128285717 seconds)
    (248/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.064448888 seconds)
    (249/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065604215 seconds)
    (250/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.064574732 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066434614 seconds)
    (252/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.06496909 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.131041572 seconds)
    (254/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064569226 seconds)
    (255/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.07297835 seconds)
    (256/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.077372096 seconds)
    (257/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.069487044 seconds)
    (258/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.158545865 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06497786 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065328937 seconds)
    (261/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.064683609 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064957649 seconds)
    (263/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.064059832 seconds)
    (264/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.076272682 seconds)
    (265/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064264443 seconds)
    (266/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.063495832 seconds)
    (267/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.063659648 seconds)
    (268/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.065881962 seconds)
    (269/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064543029 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06515631 seconds)
    (271/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.0661522 seconds)
    (272/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.173164949 seconds)
    (273/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.070043519 seconds)
    (274/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091939416 seconds)
    (275/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.064517111 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130499072 seconds)
    (277/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.064614884 seconds)
    (278/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.065368765 seconds)
    (279/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072727846 seconds)
    (280/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.066113793 seconds)
    (281/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.066377322 seconds)
    (282/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067718978 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.089648863 seconds)
    (284/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.071917737 seconds)
    (285/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067647097 seconds)
    (286/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072473218 seconds)
    (287/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.145261921 seconds)
    (288/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086027783 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.122807651 seconds)
    (290/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.080056366 seconds)
    (291/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.06453706 seconds)
    (292/309) benchmarking ("sort", BigInt, false)...
    done (took 0.259751986 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076874376 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.143790855 seconds)
    (295/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063952974 seconds)
    (296/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.064846001 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090409827 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.139095769 seconds)
    (299/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.065573094 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071854715 seconds)
    (301/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.066075923 seconds)
    (302/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.065794073 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129847703 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06431785 seconds)
    (305/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.064680358 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.06436756 seconds)
    (307/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064552643 seconds)
    (308/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.064411885 seconds)
    (309/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072252565 seconds)
  done (took 32.845723106 seconds)
done (took 34.357447949 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085886058 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089633099 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.072829799 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.084087072 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08015725 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.099722569 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07347143 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077687646 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079981969 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078388614 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077779486 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072150391 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074061301 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073989082 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072013586 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087090859 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080107645 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073525604 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073748225 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064129562 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07346266 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065456312 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.063909905 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072321046 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076450142 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071670373 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074555624 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073984843 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065416692 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065765606 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070361292 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074264655 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064925983 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076739179 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073570207 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074165495 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077298427 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078355668 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.064381771 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064966864 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075972111 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065352416 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073686988 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071954448 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07068811 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072829637 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073777152 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076774309 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087089937 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069373314 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076153742 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076045807 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075834191 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07054461 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07044204 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073451904 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071622626 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08734874 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073559547 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069080008 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075240575 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074665771 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072432902 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073427324 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073248004 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077186696 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076555276 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072529764 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076170111 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072978258 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064945914 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073611965 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069781551 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065604448 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076691079 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078915544 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063380573 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069341667 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073054103 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073411229 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064054708 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069032699 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06383836 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.069957156 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069043274 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071160618 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070425573 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072507209 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06391429 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073909649 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072706177 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073488375 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.064005209 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076684452 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064339124 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071523236 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065535014 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064970617 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.064019061 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070467288 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064929751 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069389086 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073481971 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.064111864 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070001771 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077823826 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064826155 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072948733 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064097758 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064603943 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.075443053 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076144421 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064849255 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069450677 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06418282 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070853026 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06465976 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064530925 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064504673 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065215153 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069842392 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064683546 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069158204 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070798599 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077365026 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06497924 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069818771 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069620907 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065073308 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072164893 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065684335 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065946277 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.064032631 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078644848 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069798751 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065226039 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070708035 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069465773 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073086297 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.063110318 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073331866 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070619728 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.06866596 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07145878 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.062905666 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075166455 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068617714 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069116762 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.203554854 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065876333 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064583616 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065198209 seconds)
done (took 12.655980519 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06608397 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.103953348 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.072485237 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.080815247 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.07718315 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066035909 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.068526668 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.081111585 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06843936 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.08428788 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091846468 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087009177 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.091675674 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064390332 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065833557 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.066435344 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06414358 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.073094308 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.079451083 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087958884 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.094016675 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06510877 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.067686034 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.081659035 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.075743158 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.081219084 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066913757 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.066110822 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069099475 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.081981529 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090405041 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.065523962 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066684955 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.078810612 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.079050139 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.072046429 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067071158 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.06959626 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06625777 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065581057 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067474689 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.079365567 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.069338739 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.069762426 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.067332026 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.067151392 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.065867539 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.071560166 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.079262221 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.069063031 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.073720905 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.077088399 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067129928 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065954988 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063847339 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.069020172 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.06564353 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.066191497 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066338413 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.065587963 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065967057 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068063888 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.066237399 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.06626429 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068590163 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.067581671 seconds)
  done (took 6.366459181 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084191459 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093433264 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081884853 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082212756 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065749469 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066567229 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066168338 seconds)
  done (took 2.151360989 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066668186 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.077598246 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080330201 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080818111 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.073774646 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.083690719 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06656473 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.097560256 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.064832696 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.078228499 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.110783765 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08240039 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069123732 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077779489 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066441802 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.072666587 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066223276 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07488501 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073593258 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082611717 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069836535 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095249299 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.080821737 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067294587 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.085110455 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.069525519 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.065270131 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066574556 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067140606 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.067054381 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066526142 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104400682 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.069117089 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077921517 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067065552 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.101965494 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.07168213 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069552516 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.067637381 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.074420799 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.070692637 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066839474 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.064619753 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066771983 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.068211374 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.069777916 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.064529755 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067049088 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067003955 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.076983667 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.065059555 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.069502324 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068835414 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070450232 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.0722552 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070045484 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074520818 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06743137 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.076906673 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.073256686 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066517228 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073597041 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.073034112 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.070610377 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.072850812 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.070066473 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.069113162 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.070124725 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.066858761 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.067746362 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.067269441 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.073231019 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.065340547 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.068044178 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069725393 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067727395 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.069363865 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.082511472 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.082261387 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.078280822 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067951271 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067014331 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069505041 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.082057925 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070442442 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066565917 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069627723 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065305908 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07123124 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066972885 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072366958 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.066861575 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.073957511 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.068083533 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069807665 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07386743 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.065761446 seconds)
  done (took 8.651123278 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06833127 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067317352 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.067989452 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067085552 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067706034 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067003751 seconds)
  done (took 2.047778497 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.088107116 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.066955225 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08129878 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.066480241 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102422877 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.072125667 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.072994218 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073378044 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.079174582 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078592378 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.072178879 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.07528571 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.072254838 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.06813186 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.072387443 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.067319511 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.072190447 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069333202 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07818712 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06817124 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.078657075 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.067690239 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067858489 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.077703419 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.069077568 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.067144887 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067405203 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078832127 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077781595 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07372721 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.067859861 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.06890483 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073985717 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.076301121 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.072283644 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074465881 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066008489 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071918591 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068709272 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.068781199 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.074353065 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.068195269 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.068419285 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.071393368 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.073699391 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074182243 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071528966 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.070032806 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.07225383 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.071217686 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071514722 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.066644031 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.068967039 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071377525 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074633319 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073703795 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071415699 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.071833657 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.067461115 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074389785 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.066108499 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.068822004 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073115098 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.068445211 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.070391878 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071240901 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074783135 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.06763867 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067810278 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.065624077 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071424461 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.066030063 seconds)
  done (took 6.800075332 seconds)
done (took 27.612972435 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.544006962 seconds)
  done (took 2.136963103 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.573566546 seconds)
  done (took 2.202042401 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.753562925 seconds)
  done (took 8.383097302 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.287667105 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.315124081 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.733569511 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13000808 seconds)
  done (took 3.127610431 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.738244084 seconds)
  done (took 2.376027942 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234563665 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224993054 seconds)
  done (took 2.105476229 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.339014242 seconds)
  done (took 1.96928108 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.127203442 seconds)
  done (took 2.75733067 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.220928664 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.157517525 seconds)
  done (took 2.016061029 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.486742013 seconds)
  done (took 2.118776354 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.307819724 seconds)
  done (took 5.945359856 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.229976558 seconds)
  done (took 1.903720611 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.233137566 seconds)
  done (took 1.872668798 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.781452153 seconds)
  done (took 3.416660606 seconds)
done (took 43.966748053 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082166631 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085329222 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084983237 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080760765 seconds)
  done (took 1.948198528 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.072731466 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.069270887 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.071833323 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.072397842 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.070562148 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.071624971 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.072054359 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.068824682 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.070564843 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.068786712 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.067529714 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.068432759 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.071187678 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.068385741 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.071706392 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.072493046 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.069878411 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.06880125 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.071437078 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.068544429 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.071429209 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.06925916 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.067393753 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.068757211 seconds)
  done (took 3.321330388 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076968854 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071698348 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074568696 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070695972 seconds)
  done (took 1.941146704 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.07550395 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.08276058 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.084191452 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.088483477 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075499052 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.075463766 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.080790757 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.082545827 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.064762678 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.084553259 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.06695971 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.066200715 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.066073725 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.083958492 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.081297903 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.061725038 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.063354475 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.075134177 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.074575878 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.076857086 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.067742175 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.064629655 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076366361 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.074383809 seconds)
  done (took 3.439772865 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077712521 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.064994388 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077297765 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.08983465 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091859397 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064933373 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.077609568 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091949279 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121974711 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064539609 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071098484 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064908305 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.103223305 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065149141 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078645683 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105062696 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107935154 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068619532 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097246715 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064334368 seconds)
  done (took 3.300998696 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075141108 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068582303 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.069503618 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065061378 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076310563 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073017817 seconds)
  done (took 2.082028398 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06757478 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067643418 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067405843 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066168088 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071088978 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066699482 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065249438 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067073045 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067163015 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066349716 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065597137 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065390589 seconds)
  done (took 2.450971847 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.164778157 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068201854 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069009642 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06518227 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070151252 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066017606 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080337456 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.07054667 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.083513128 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066239481 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066145775 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067911099 seconds)
  done (took 2.586075934 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.102584943 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099051398 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.143433372 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.114292758 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092223067 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.092659609 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.15722266 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.134006427 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11423031 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.068523706 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085817128 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.0986219 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098155317 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.131146566 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110827416 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.071913007 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.110457191 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079398448 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.113075121 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.120700482 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113838377 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.12033189 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.092242237 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096518495 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105148225 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.115825555 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.070643866 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070215783 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146634974 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.09816388 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.091173033 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097438387 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107256774 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.06825073 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.085368239 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.104757879 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082312096 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.114317497 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.085488813 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097227756 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07959647 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.129134171 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104081996 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101863701 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.129096911 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09103737 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109114715 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.104937247 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080761682 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.116214244 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097002061 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089650808 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078569856 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.157053056 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087680457 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.108938767 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110605469 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.080270727 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.087188887 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.100483581 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.127798776 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.105522973 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111356352 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.256247314 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.090180015 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091211333 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.129607009 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084618651 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099114935 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128696362 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.091457694 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.075024867 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.09468018 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068830595 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.096401286 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105804771 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090947332 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109697735 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.07603987 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12590445 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.107821798 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.072063239 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.116361244 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097785735 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.154196717 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093590456 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.09913965 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089863769 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.148221647 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084303035 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.078922977 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097286727 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126724114 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092608368 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094848648 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.125852387 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095357183 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.085998695 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073859378 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.087992642 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100577635 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106022311 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099893249 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087649602 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.085953113 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094678706 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.073601655 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079650292 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.100310544 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084282101 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.123024436 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107764677 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.122541086 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.077769571 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103882708 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.095380742 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126105446 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.115852109 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.082846204 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106155232 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138506097 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.112150293 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084120473 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.099149333 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10981188 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106663694 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.095552346 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.136555973 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115075351 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088262575 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.092436857 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09301678 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.262293191 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.153836229 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.0889514 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.103281558 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.136820641 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.111936739 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089657246 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.083091304 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.095157413 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104218843 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.139752308 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.094874345 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.070089233 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091089531 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.129543143 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075222678 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098833384 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.091896654 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.082647858 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080265922 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.06776894 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100652223 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.134351225 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.11230955 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097863199 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.105331787 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068917824 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097641652 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103371597 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.139497363 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115295931 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097262402 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.097305957 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10312235 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078592755 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.131630607 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.131422888 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09007651 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089790021 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121305078 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.094778864 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.103325783 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113048363 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102073388 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.099191963 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.139844297 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119175667 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.122251006 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103266019 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121898149 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080713913 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.115047568 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.07391717 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103001969 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.076355032 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104967215 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.078886865 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.10979602 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.077912127 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.097607613 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.067921072 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.072150806 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.107874555 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.242077319 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085918379 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.133452121 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.12889637 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.080881726 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.100755462 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099552899 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100445977 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.107179269 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.089355494 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090504135 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.077829963 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.078839655 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097937936 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092566245 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105929319 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.077794493 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.074949153 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.136601301 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102234553 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089799528 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094448164 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.11940873 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.087836252 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.087070854 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102158129 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.136994139 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.116603667 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.079172571 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.090118351 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.068404721 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.083623129 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.074735843 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107540393 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.073977973 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109175286 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.067940236 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.127617077 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08523537 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.100108683 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096242707 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126570031 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.089553281 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.1266886 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085692 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106129832 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092300812 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.094411252 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.107931911 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.094629331 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103999487 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109514921 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092192351 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088723141 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119282841 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104162923 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115294172 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104054293 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.134000805 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110656325 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.074159472 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102495365 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098834929 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.144397109 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098647942 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.089321376 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.094188716 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.1020156 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080396861 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.292515666 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08628001 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.085423378 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111270599 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.088234355 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.096523188 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075926615 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.099415367 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.093398489 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111844869 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.09806554 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.092625583 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108539513 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108873244 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085203345 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085245446 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.121974331 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.127937828 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.101250088 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093842444 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087241744 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097158828 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092560601 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.107357041 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079261453 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.074918027 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.067479491 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.07159928 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.116056548 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106727733 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097140822 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096988692 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.100791535 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.07134535 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086754041 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089354995 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.081944949 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088768653 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.113421676 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.101855541 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.127145652 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.100505682 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084455916 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.140277958 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.127037167 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084120634 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090581753 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099538886 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.073583147 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145800991 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.117638854 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.076656212 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.084726278 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.076440016 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082806049 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.071138035 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102389964 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102184316 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0750029 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.101390468 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09687834 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.12241249 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095765696 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075119471 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.078601762 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.073519001 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.074590856 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.101038072 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.076527358 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075699734 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128481908 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.1025689 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106434665 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.083575969 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07333915 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.283435449 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.069439266 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130882772 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081223596 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109678967 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.080260398 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078798125 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088631131 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105233178 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104914716 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111975311 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07026739 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102241324 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.153369565 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07504457 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074343707 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.074284428 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109680297 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086788349 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.141018843 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088765369 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092255881 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076093557 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.126520391 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101938728 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082078001 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.12599007 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.07896561 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.0700974 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.085279865 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.110175087 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.072233695 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.074565382 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113285649 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.508218355 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090275796 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.074898921 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.087987431 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126095015 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082653308 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10769223 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.116515648 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.1052696 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.183416439 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073530005 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089557101 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.102379452 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.096754707 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090727196 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078359749 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.086261765 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086449412 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.083595968 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104865615 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.079680881 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.089799608 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.078519381 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.102078131 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.127522993 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084700141 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.100042295 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086614569 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089797143 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097810224 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110588193 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.10429115 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.086130499 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086376341 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.107467357 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081986436 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.230707242 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.0994184 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.076684976 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078156015 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.116931765 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.083045914 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.092893273 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10278935 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.088892616 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112795292 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.115749363 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110133794 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.097330008 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078334003 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084732041 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.086694424 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073760765 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077902992 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.074035366 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.070139461 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105898263 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084627889 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081074987 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.099295381 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.108336388 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.099466602 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105434053 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089393373 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096234958 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.099136893 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.125393809 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.144207634 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097316387 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.121595122 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.130098637 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.075984843 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.074455088 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.080001717 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.129640108 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.081064023 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090963623 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.235947184 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.077802811 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.080730198 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089918549 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106112032 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.08197437 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079585394 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098291897 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109370224 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08363483 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080895172 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092533508 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.107089964 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.126894551 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.088657929 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.074625146 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107129919 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.100946051 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.121750417 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.072414135 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080034558 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.126772587 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086815858 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103403681 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079148952 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.123354263 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.130828105 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073225964 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08813948 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.072324203 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086595276 seconds)
  done (took 50.571235971 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.148659498 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.141087856 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.081359625 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.097691123 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.185665962 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.195065123 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.117594566 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.094678865 seconds)
  done (took 2.862563442 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067807995 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.082582888 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100287734 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082079561 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066096989 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067758165 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.198604733 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080518583 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065840429 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.10475549 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.074376301 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067397834 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.358859743 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065266571 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066510956 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.073680788 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066171387 seconds)
  done (took 3.447302448 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.36918206 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.621388793 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.322197752 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074365091 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.994162172 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088566058 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.224255819 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138663 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081459528 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.544281367 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.371353711 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.132783323 seconds)
  done (took 18.730274992 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074654871 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.074789753 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.077380508 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.076831871 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073836771 seconds)
  done (took 2.141504365 seconds)
done (took 100.483787227 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082262652 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.169836663 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.066879663 seconds)
  done (took 2.034877471 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.081522162 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.080255564 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.080046998 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.077252571 seconds)
  done (took 2.087374217 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073437583 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075331819 seconds)
  done (took 1.911278591 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.231909782 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.173561827 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088817479 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082400564 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079447525 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079255499 seconds)
  done (took 2.013913447 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070770065 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07066226 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071195303 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.071573985 seconds)
  done (took 2.045952197 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.066916657 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.065242722 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.067623338 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.070540762 seconds)
  done (took 2.034054077 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.082212006 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077895014 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077871521 seconds)
  done (took 2.001490587 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107998542 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095647925 seconds)
  done (took 1.966665552 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.079019329 seconds)
  done (took 1.847504407 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.088851433 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.0948466 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.139283725 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.106068312 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140003051 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.124145732 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.075718701 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.076486312 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.072537516 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.071653032 seconds)
  done (took 2.755538405 seconds)
done (took 23.035817896 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078677311 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.36680844 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.358360529 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085871945 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670142429 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356332463 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.98364241 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089534121 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.097872905 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067242265 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083503627 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646331054 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.975636418 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.328975889 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.963027943 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32878907 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.64870242 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068170868 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066879932 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067777446 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.966564728 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066808072 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06731163 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067996246 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647477836 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372882018 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068806436 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.328978483 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067490087 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069303713 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354993902 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068167462 seconds)
  done (took 16.222396717 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069925203 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121335078 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072304926 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083177304 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069737527 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068889589 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070710733 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068528004 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108968527 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067998566 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084206766 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067563766 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071602321 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069450255 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08844092 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068536597 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069667645 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069198272 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068616207 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069337213 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086733144 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068227293 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069608857 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071801613 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068824642 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081781736 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070203903 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068487701 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068457357 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070685419 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071768886 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069526591 seconds)
  done (took 4.178540549 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121911098 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124916749 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073171759 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108603385 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116961563 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069761286 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150308047 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090193607 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11276501 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067950897 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084450591 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068241579 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104409023 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070240302 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088207176 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068691157 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070197949 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069506198 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06826889 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069286688 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087073542 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068749697 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069023248 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069119706 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069491736 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083063626 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069303118 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068414786 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069037398 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070656104 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072750537 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070381613 seconds)
  done (took 4.452219421 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.068819043 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.071113677 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.079302256 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08028897 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.066449996 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.068654993 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.070023061 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.066855894 seconds)
  done (took 2.359286245 seconds)
done (took 28.993173271 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079182723 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068321699 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.070610475 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088069602 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074041654 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.069759512 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.064991363 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073934869 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.070957506 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.070930886 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.072370772 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066353285 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069193613 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.064763265 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.071358195 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066549005 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.072776871 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070796206 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.070692355 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.072659505 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068792115 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071882564 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074966573 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.07109806 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.071600189 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.071229462 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.075066356 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072200612 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.066896315 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.072768676 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.068196962 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079644071 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072473091 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.072591991 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066114511 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066325184 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07118013 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068751333 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.072398574 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075105691 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068337022 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074979812 seconds)
  done (took 4.754771847 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08658928 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092619708 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085066893 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.08212466 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.104259424 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081887167 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088669115 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078917152 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.077181818 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087835628 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073325313 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.078197398 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079301396 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.071739932 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077762772 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074170441 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079385211 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.072898079 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.079072261 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078521963 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089800758 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072397368 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079565377 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080305369 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073903804 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.079739526 seconds)
  done (took 3.901110449 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.072274574 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088011505 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091343683 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140687039 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.109130661 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082535936 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081714707 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.103066651 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.101055902 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067859189 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071507292 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094468889 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096138907 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074488416 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.106303189 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085826421 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079107015 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069209162 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07389093 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102228243 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090866497 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086852393 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.100991531 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087860139 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067256518 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076936505 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074062096 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083176928 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07553648 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079516087 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07130624 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07074461 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068116747 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079356676 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071403587 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.065219021 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088652598 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079788868 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082840503 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.105126313 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076691904 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068575312 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096906284 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133718925 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066847875 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.069689351 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.070725091 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079618909 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068490441 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09658403 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084965281 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066903376 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.086213858 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068352001 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068549772 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083247532 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068802999 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069399245 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079030966 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.072989476 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.087620042 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071895079 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086920256 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067261662 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07816836 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068350866 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06900433 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065771653 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.102399836 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074557838 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117884247 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068190732 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.0654187 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079214205 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078012167 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073775689 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.0668681 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085499552 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07879329 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07059437 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078844336 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069849609 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070380955 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.102616343 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.066185232 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06520905 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.065429599 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.069452269 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070098792 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067469574 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080014557 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066625656 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070742495 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.081055223 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067563928 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067644538 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.069199245 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.067921079 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066944341 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077163159 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.070929903 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068775883 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078989951 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068164461 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070513125 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081995602 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076506542 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066819297 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.068343894 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.069161209 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068766567 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071797692 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070766852 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068975048 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.073219184 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074013774 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072619683 seconds)
  done (took 10.98692979 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16087779 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15198453 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.068950149 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146380404 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075423106 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.071794343 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147394072 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.086561472 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067982865 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06949336 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06744013 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.094948993 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.089999568 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.101846855 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07219211 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068435239 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093681928 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.100161047 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149939899 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.145372388 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091217759 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075232162 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070098 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069330153 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069386671 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.076644229 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084066583 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075625621 seconds)
  done (took 4.477098837 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.074501163 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.110323496 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.071891737 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092207449 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.086588249 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06848281 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069966342 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068614079 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.084593285 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.074628132 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067265162 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07189256 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.071016909 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070471092 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068718851 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074322028 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074356005 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.066743713 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071704313 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07266136 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078044864 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092535384 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071960769 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067299799 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.069883804 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067666722 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.074313085 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.076710351 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.066900563 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097882886 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065275007 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072049786 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081763744 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068763871 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067650906 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068533969 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068275268 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067695527 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06866386 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066124 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065452098 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072084881 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066397231 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.073830671 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081906043 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.074751822 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.068944714 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.070128448 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.06982078 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064675503 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070323025 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071002172 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069938078 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076026612 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071548847 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.069969784 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068638208 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096420273 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.073800214 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067268188 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066743196 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068623057 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.068856653 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.075087214 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084536441 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.068920391 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065960638 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067744994 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072397202 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081354292 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067238061 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072885576 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064425696 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.067593557 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.069549477 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.0705207 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068816379 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066064869 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067416175 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067900109 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.067979874 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067291437 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.066727392 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069937883 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065403074 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065920388 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067877803 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.068981592 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.073577441 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.066246574 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.069838365 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068731989 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066702845 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070166454 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.073335103 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071362218 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.086830013 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.075862131 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068090273 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065494005 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081812795 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.069567542 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066984445 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.07384686 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07189127 seconds)
  done (took 9.401877288 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090504578 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069791014 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087536534 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09408667 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.07797706 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073223104 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081229251 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068675433 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083653721 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.06755033 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076778977 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.065934769 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080120324 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07584134 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069261667 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077778526 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070239078 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087527174 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082483413 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.066481756 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076322712 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079750311 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.080562058 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085837845 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085010171 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085599734 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.080135317 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.070277276 seconds)
  done (took 4.032138368 seconds)
done (took 39.331950272 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.865091599 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.031196515 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.866881334 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.074390988 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.087235485 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.889475998 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.087968879 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.861733076 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.918096133 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.888524611 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.162858533 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.368138555 seconds)
done (took 67.961689635 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.886449849 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.009573313 seconds)
    (2/2) benchmarking "String"...
    done (took 2.07543894 seconds)
  done (took 5.885004961 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.017709873 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.503012895 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.143807034 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.861410087 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.867513823 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.376740277 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.670984889 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.350233784 seconds)
  done (took 31.574079011 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.037528636 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.090256778 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.576305705 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.614172549 seconds)
  done (took 16.16009316 seconds)
done (took 65.413490065 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.89877716 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.864661965 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.894958276 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.900189953 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.875317709 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.864867153 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.86450301 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.866868294 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.872090639 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.959972821 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.867734968 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.874623971 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.866638207 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.895310234 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.456597628 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.914441163 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.880985607 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.876434897 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.886010394 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.881911769 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.868478011 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.866073101 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.330704418 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.02007588 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.485215868 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.185026055 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.353782719 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.269586632 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.87441908 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.865156977 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 7.072877088 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.18906198 seconds)
  done (took 207.444145428 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.866186526 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.8780635 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.9813489 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.909507898 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.399223919 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.042810518 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.962940981 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.442747303 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.871552498 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.877171886 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.220048924 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.865164251 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.223356837 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.809705911 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.901038018 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.898725808 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.128291539 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.234798826 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.903614054 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.016205627 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.86736005 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.989999929 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.939954175 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.192986866 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.898476856 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.881511179 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.887661727 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.872561491 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.053508786 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.100205794 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.901872836 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.873340545 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.069407195 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.73602028 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.884234155 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.874208077 seconds)
  done (took 174.260850116 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.057140909 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.873133625 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.8663427 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.927205705 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.990504029 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.869238207 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.54037634 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.882037178 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.28984146 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.868276985 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.867136091 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.866644929 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.867659082 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.880323419 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.965077339 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.869720007 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.881190882 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.869686781 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.891962154 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.869289629 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.866917918 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.867143748 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.866596097 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.86741212 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.867065615 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.867506165 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.241901688 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.118359637 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.868637333 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.868071698 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.410252584 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.882991095 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.896421595 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.869077475 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.959509629 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.929290142 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.994272605 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.86973639 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.086337704 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.948108805 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.86869644 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.868754088 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.932499799 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.881392355 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.872038189 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.870463012 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.874514968 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.93266846 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.137084334 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.869725816 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.991611735 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.362303468 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.870356009 seconds)
    (53/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.869238919 seconds)
    (54/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.8687894 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.484541413 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.871808996 seconds)
    (57/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.870134317 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.875034123 seconds)
    (59/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.87543545 seconds)
    (60/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.870240926 seconds)
    (61/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.86958994 seconds)
    (62/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.254015432 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.939458734 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.870179823 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.929120691 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.130989458 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.871323144 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.125433235 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.063999117 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.869295231 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.870614704 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.868970981 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.871781213 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.869278655 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.869809299 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.87213919 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.993156101 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.877725245 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.003758725 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.952894843 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.992747852 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.872351326 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.885829023 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.708401337 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.94003794 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.912167952 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.702614333 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.873786575 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.243213401 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.655893339 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.872182385 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.870627683 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.884268333 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.872154118 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.871780691 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.872456195 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.95253412 seconds)
    (98/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.87151994 seconds)
    (99/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.993825487 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.604360227 seconds)
    (101/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.178525885 seconds)
    (102/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.873166311 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.871907073 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.87215239 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.884314453 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.952562611 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.874444436 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.994656299 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.873967508 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.937190109 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.877965533 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.873345155 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.967772878 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.873738081 seconds)
  done (took 411.153848931 seconds)
done (took 796.774414743 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.578917446 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.468283004 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.614343952 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.491150479 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.456461077 seconds)
  done (took 14.419315925 seconds)
done (took 16.226616639 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.884865623 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.878055783 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.928593054 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.956228231 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.890440911 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.88994025 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.952877512 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.892060106 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.923225247 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.926794241 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.95699863 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.958496966 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.895931007 seconds)
  done (took 26.743796068 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.882098847 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.024381383 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.088094712 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.914129936 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.882640393 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.105944515 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.936221448 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.006303242 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.015130536 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.098217751 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.109638833 seconds)
  done (took 23.875196898 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.880959363 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.014840901 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.093819642 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.91627432 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.882372825 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.089900066 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.943010481 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.013041445 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.014388553 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.095823152 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.098993518 seconds)
  done (took 23.861703179 seconds)
done (took 76.288242139 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.877717577 seconds)
  done (took 3.689923633 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.900739612 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.073785009 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.877669345 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.881351697 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.878964893 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.878617749 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.882404872 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.878757404 seconds)
  done (took 17.064829695 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.878796097 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.877476471 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.878928695 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.87831365 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.878302701 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.878119291 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.877949124 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.878802892 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.879130844 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.878506954 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.877854826 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.877531732 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.877643342 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.879203408 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.877466866 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.878277534 seconds)
  done (took 31.865904776 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.88071043 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.879012077 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.878883845 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.878301516 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.879110514 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.878424792 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.879240389 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.879620917 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.879499898 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.878652644 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.879469373 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.878308222 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.878003876 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.879302774 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.879484714 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.879060959 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.878654019 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.879933615 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.884170427 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.879244696 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.879343806 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.879538469 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.88042507 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.880153349 seconds)
  done (took 46.920511196 seconds)
done (took 101.357733721 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.677459948 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.640716249 seconds)
  done (took 10.132344776 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.880656565 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.880043069 seconds)
  done (took 5.578176892 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.880881996 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.880574184 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.880688789 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.88021609 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.880439298 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.881125224 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.879685388 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.880429142 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.879795381 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.880985178 seconds)
  done (took 20.620964816 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.879826599 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.880700827 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.879868997 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.880618221 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.880566038 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.881157195 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.88076303 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.880749365 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.88077087 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.881583484 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.881577668 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.880531646 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.880543889 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.880868671 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.881505344 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.881932639 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.881650447 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.880906588 seconds)
  done (took 35.671562014 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.881158035 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.882695349 seconds)
  done (took 5.58010832 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.881718296 seconds)
    (2/7) benchmarking "second"...
    done (took 1.881507984 seconds)
    (3/7) benchmarking "month"...
    done (took 1.882314642 seconds)
    (4/7) benchmarking "year"...
    done (took 1.882091022 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.882759309 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.882235806 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.882317909 seconds)
  done (took 14.991534254 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.881890306 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.028952749 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.079415212 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.489183421 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.883407384 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.885269146 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.749877508 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.884718285 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.885772621 seconds)
  done (took 20.585388432 seconds)
done (took 114.972694289 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.649029088 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.88374354 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.122426346 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.943451972 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.899858129 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.22021244 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.912201061 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.483749864 seconds)
done (took 42.93040109 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.956463464 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.879597179 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.910223747 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.909967696 seconds)
  done (took 22.517351938 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.882462018 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.244065429 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.904257022 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.730778362 seconds)
  done (took 22.596342902 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.262420306 seconds)
    (2/2) benchmarking "read"...
    done (took 2.225583975 seconds)
  done (took 6.309781689 seconds)
done (took 60.19665546 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.883256029 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.884483845 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.884806894 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.883216187 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.884333603 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.884750988 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.883556372 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.883439088 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.884598313 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.885348958 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.88388369 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.883854676 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.884012606 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.883003372 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.885254617 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.884625285 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.884638585 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.883879766 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.88433145 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.884799846 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.884483892 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.884705525 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.88307972 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.884314328 seconds)
  done (took 47.040086771 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.886909864 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.886481411 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.88587234 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.885060724 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.885381133 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.885951551 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.88493708 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.886052232 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.885622214 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.884916673 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.885276808 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.886851408 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.885079412 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.885738507 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.885798595 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.885894514 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.887605425 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.88579628 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.886028649 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.892192528 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.886595021 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.886945187 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.885216876 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.886346364 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.885804378 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.886927099 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.885565504 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.890415267 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.887354125 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.887297526 seconds)
  done (took 58.412456824 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.886317356 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.886532822 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.888275336 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.88684281 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.88740006 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.886889079 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.887521113 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.887283437 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.887130538 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.887016746 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.887082201 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.887034665 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.887248899 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.88750239 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.887152235 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.887370974 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.887713857 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.887228672 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.888171867 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.8877027 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.887028679 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.888381906 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.887971812 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.888374456 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.888281354 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.88791845 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.887823575 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.88781912 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.888416275 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.888893664 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.889041918 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.888202977 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.88769322 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.888359835 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.888344129 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.887479424 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.888928903 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.888175642 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.889320331 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.888381197 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.88945465 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.889240996 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.888629797 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.889366327 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.888919898 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.890858718 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.889291242 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.889474635 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.889690844 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.890313368 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.890218952 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.890344998 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.889519152 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.890280653 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.890308899 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.88928198 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.89051213 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.88930559 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.891037845 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.889418299 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.890203804 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.891304567 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.890351266 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.891398645 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.890930621 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.890600202 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.890359727 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.890351292 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.890931063 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.890163356 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.891420369 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.890586675 seconds)
  done (took 137.817722221 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.890224044 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.890860014 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.890648407 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.890197137 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.891185507 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.892088485 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.891311561 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.892233437 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.895142315 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.891650497 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.892258325 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.891863454 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.891560096 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.891561084 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.89181132 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.891719819 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.891861716 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.891402883 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.891255056 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.89144435 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.89301767 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.892593794 seconds)
  done (took 43.442714244 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.892544957 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.894270168 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.892022686 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.892866886 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.89236881 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.892227853 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.892199103 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.892775547 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.892933564 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.892853155 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.892013136 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.892239769 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.892496432 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.893507749 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.89316777 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.8937373 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.894040288 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.892460419 seconds)
  done (took 35.896872447 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.891665109 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.893888391 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.892732907 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.892868261 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.893416341 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.89296301 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.893059603 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.893387478 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.893030461 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.893361939 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.893864996 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.892480203 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.893057911 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.894872463 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.893666338 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.893978096 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.893785481 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.893633603 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.893468087 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.893886889 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.895206592 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.894085804 seconds)
  done (took 43.484564879 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.89340717 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.89356219 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.893708808 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.89538073 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.893982276 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.894411939 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.896923009 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.894599063 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.894146354 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.895272962 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.89506748 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.895806665 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.895812294 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.895746269 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.895648494 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.89543307 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.895486554 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.895984061 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.895239468 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.894883233 seconds)
  done (took 39.72949434 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.895435779 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.896711872 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.894874417 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.894748988 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.895283771 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.895790806 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.894598339 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.895119191 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.897435825 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.895335069 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.89554178 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.895603039 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.895162016 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.895717638 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.896167709 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.895633988 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.897114097 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.898361942 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.895070541 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.896589357 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.896603903 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.896598018 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.896208509 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.89591573 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.895722063 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.895681009 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.896301315 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.897123673 seconds)
  done (took 54.91729701 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.895872038 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.897225306 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.895564993 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.896696758 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.898185062 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.896467606 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.897035838 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.896781398 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.89668849 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.897406471 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.89727781 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.897532409 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.898289437 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.897684972 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.897786631 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.897252039 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.897524773 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.899192296 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.898635721 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.898996414 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.900083323 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.897600119 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.897889085 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.897368554 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.899015478 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.898616339 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.89789402 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.899537462 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.899050984 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.897835881 seconds)
  done (took 58.763898599 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.918344487 seconds)
    (2/2) benchmarking "in"...
    done (took 1.919051473 seconds)
  done (took 5.669637635 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.898574551 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.899441287 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.898928022 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.898234828 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.897814327 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.898136762 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.898292965 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.898655576 seconds)
  done (took 17.020160398 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.898735343 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.901898088 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.899767493 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.899409903 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.898873442 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.907590045 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.899641099 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.900397168 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.902590202 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.900024012 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.903031476 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.903502531 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.90703728 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.903920276 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.900393382 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.899545425 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.90112336 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.902793416 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.900750397 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.900409247 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.902586167 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.900104932 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.90103683 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.899597599 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.903759977 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.902304998 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.910669689 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.901753739 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.901700581 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.90100175 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.908779855 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.90110896 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.900651507 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.902247024 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.901662111 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.902036794 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.908207728 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.90200834 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.901985375 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.902063175 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.904848038 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.904162628 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.905012753 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.910230095 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.900759328 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.901627042 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.901461945 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.901668971 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.901770321 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.905605898 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.910848046 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.902043618 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.90193098 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.902394207 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.904971925 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.902491262 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.903598247 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.904064484 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.910621362 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.910357764 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.905509711 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.923804851 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.911455975 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.902219896 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.902291276 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.912195923 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.92586548 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.903614377 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.90366485 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.903782705 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.910387033 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.903937933 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.902683794 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.901706517 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.916660472 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.910896723 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.902786947 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.902296227 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.903191633 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.901763304 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.904102491 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.902562815 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.902864031 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.903149256 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.913999559 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.928886152 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.903012198 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.904198005 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.905700849 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.90532613 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.908739674 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.905509104 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.905717319 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.903654664 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.904590608 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.906523396 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.903643442 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.903242186 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.902699375 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.914203749 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.904453652 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.903077936 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.907325769 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.914057642 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.903817372 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.903966106 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.905177014 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.903506867 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.912906305 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.90379368 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.90390893 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.904181353 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.905580803 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.908862192 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.903640422 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.908145749 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.912085305 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.913491898 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.907291872 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.909585181 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.909419115 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.907181071 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.915390197 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.928634698 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.905717966 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.908241754 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.910978241 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.917964769 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.909378522 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.906231138 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.908596851 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.905422207 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.905908821 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.907991688 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.906498839 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.905911442 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.906989126 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.905545367 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.906322057 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.906324548 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.909024997 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.907974224 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.908530953 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.906628929 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.910191619 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.906652492 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.909165497 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.91391977 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.906359141 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.905813726 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.908383212 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.908603349 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.907828499 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.907135307 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.907571865 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.906813083 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.906003252 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.907732894 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.908500283 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.907589973 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.906500247 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.908663204 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.911800743 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.907406783 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.907026496 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.908382956 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.908348641 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.907639925 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.908505402 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.908323479 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.910182352 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.908220497 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.912220598 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.908428431 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.908068744 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.907858563 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.908347951 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.90838141 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.911246736 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.918690724 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.911705119 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.918302514 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.911478258 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.916198288 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.908952717 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.909748642 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.910059783 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.909302247 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.909578073 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.908730466 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.909131802 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.911907462 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.932717375 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.920066699 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.912132368 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.910540427 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.915885802 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.915394809 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.918155651 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.909571654 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.91051374 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.911259036 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.908996349 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.908451403 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.909398161 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.913956291 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.909705182 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.90960955 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.91395123 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.908655121 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.909936482 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.912110158 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.908393811 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.912738215 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.909094405 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.909655884 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.909915109 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.910666229 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.918470792 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.912484625 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.911328678 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.909871395 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.913122483 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.910957854 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.910741759 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.912115903 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.913897647 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.910525053 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.912344872 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.920202671 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.911569677 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.910960488 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.911864583 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.911723808 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.91320703 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.911135429 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.914666568 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.920323754 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.914580931 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.912758041 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.917330322 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.912056866 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.914730025 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.911560154 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.913118379 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.91543705 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.91246638 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.911707688 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.912218091 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.919683565 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.91123353 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.913859142 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.912476381 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.91506805 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.912649992 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.914075618 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.912132255 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.91547101 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.920278626 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.919089163 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.914538296 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.917452818 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.914780716 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.913644961 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.91805482 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.915105559 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.92702356 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.922865807 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.91363233 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.913954415 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.912301465 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.915326123 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.912959439 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.914499127 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.92188004 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.914421868 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.919798845 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.91933712 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.913076936 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.913587365 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.921660303 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.916108145 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.915723894 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.915909515 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.915187364 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.91457734 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.914942861 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.917001777 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.914712683 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.916475245 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.918448535 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.915303094 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.917198115 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.915182802 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.924800062 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.914715595 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.915600751 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.923407081 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.916728806 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.91533983 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.916866987 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.915780707 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.916263525 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.916521226 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.914142811 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.91618011 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.915004334 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.919626178 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.925991547 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.919174534 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.923486605 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.917350364 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.926677274 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.915455024 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.917006868 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.916246543 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.919444843 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.923186996 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.915909752 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.915573485 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.927530092 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.915889605 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.916981926 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.923654416 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.916358211 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.915847916 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.916194411 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.9175582 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.92210118 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.91851601 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.916102172 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.916849592 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.916595255 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.91658741 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.919653026 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.917301778 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.917437847 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.917666634 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.916647817 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.91911139 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.916616007 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.916607196 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.917201406 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.917424389 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.917798053 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.925972421 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.917869425 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.919746194 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.921449142 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.916770322 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.927882137 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.918040543 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.917930861 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.918482952 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.918928701 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.922928013 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.918426254 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.917444209 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.917800788 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.917764465 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.919310691 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.930649019 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.925270061 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.921845864 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.920946186 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.918422981 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.919279148 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.928727596 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.942209173 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.918794687 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.922065684 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.924629165 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.926263198 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.921075502 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.92446231 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.923845794 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.927040843 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.919602154 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.91946277 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.922446455 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.93248398 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.918789944 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.918821778 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.919889686 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.923929393 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.921439312 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.922991025 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.922773978 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.924033124 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.921880501 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.933151098 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.920598922 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.922412703 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.919548169 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.920283016 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.92039338 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.919484232 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.921224741 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.921152053 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.919634981 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.921064925 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.924020874 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.925676938 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.920938144 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.925027345 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.930390522 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.921868861 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.921299626 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.922103518 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.921290471 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.92279635 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.920823095 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.920420474 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.923172337 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.920208453 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.922107039 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.925483349 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.932959977 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.92349991 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.921105449 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.921619321 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.925842253 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.922087389 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.921479028 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.923379134 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.931173036 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.926818495 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.934098793 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.93240884 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.921955919 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.923281465 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.929447161 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.929963279 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.922889726 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.92181527 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.92196551 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.92529939 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.924825133 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.923094984 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.922882562 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.923803918 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.92849261 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.922925788 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.923060818 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.922749451 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.924104538 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.924963333 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.926059445 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.930361189 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.923907722 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.923856062 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.922770447 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.925288613 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.92418261 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.927242301 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.923645336 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.923571015 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.925420251 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.926106239 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.928859316 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.925038528 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.923728677 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.924595045 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.924110355 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.925975444 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.924398655 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.924323285 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.92493392 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.927546283 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.932475306 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.924332971 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.925825868 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.925933631 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.928632508 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.924927884 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.924254795 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.924287769 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.925059344 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.933521178 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.925946828 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.923883049 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.924794366 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.925502696 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.930292281 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.926208027 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.929293395 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.925010296 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.925078853 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.926191412 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.928425107 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.935044915 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.928920153 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.929059168 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.934373789 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.931008596 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.928806093 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.92683958 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.926086158 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.926311912 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.928175124 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.929584426 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.928489158 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.929058767 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.927271444 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.927790175 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.92602512 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.928050049 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.926380777 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.926660315 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.930653819 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.936188831 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.937469 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.926636805 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.928685961 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.927210347 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.929710393 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.937841539 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.926909825 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.926050361 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.926871296 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.927725198 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.928609314 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.935422552 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.936312926 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.931730775 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.927726049 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.933994163 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.945360214 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.930816824 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.937569127 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.960149115 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.930250893 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.928387905 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.928466046 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.929326945 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.92768072 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.931532796 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.927910934 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.935397613 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.928363388 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.928582474 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.937433517 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.929578361 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.928112729 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.930047894 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.929983676 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.936135023 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.928356687 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.937551477 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.928917027 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.930039548 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.929852342 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.931900825 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.929011593 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.929608599 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.929762821 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.931742012 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.929766532 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.928679019 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.939293179 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.931600342 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.930891935 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.944999462 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.941675118 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.930738348 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.930063888 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.929369121 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.935300634 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.932507041 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.931269154 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.933322518 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.938993945 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.934283286 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.939201271 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.931703213 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.931705739 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.933291457 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.93067667 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.928913066 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.944243854 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.941997367 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.930999568 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.931498017 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.937704453 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.930824194 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.938438922 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.937286333 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.930321625 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.932145731 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.931148914 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.929854253 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.930582632 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.931267139 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.934199896 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.939574023 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.930550372 seconds)
  done (took 1144.765631277 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.931145885 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.93188278 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.932144055 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.93222456 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.932220344 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.931937752 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.931864243 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.933830665 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.932600699 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.933051318 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.933052785 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.932522406 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.932264795 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.93332083 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.932711494 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.932762119 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.932143681 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.932327056 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.932610005 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.933258171 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.931516044 seconds)
  done (took 42.447153742 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.932438517 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.933887272 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.932778572 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.932646554 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.933253322 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.932094582 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.932716588 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.932672249 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.933220206 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.932844038 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.932656495 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.933027489 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.933262267 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.934455384 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.934105571 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.934004785 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.934229956 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.932806067 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.932995265 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.933266077 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.934449046 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.934469253 seconds)
  done (took 44.398601507 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.933540587 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.93391639 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.935323431 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.934176685 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.934170597 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.933366999 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.934694011 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.937681221 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.934749242 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.936243521 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.942644396 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.942980856 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.935208692 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.938320016 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.934269551 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.93470211 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.080036191 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.934553661 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.934034528 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.935041852 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.93475082 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.942706248 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.935260932 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.934556079 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.93602104 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.935766985 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.935322355 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.937650055 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.936015045 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.93653229 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.93992292 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.935046842 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.93627939 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.938786161 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.935911264 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.936674815 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.939454831 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.936473435 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.93697936 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.936481367 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.947423695 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.959421245 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.935625867 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.935869426 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.943829124 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.936514433 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.93616154 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.939889385 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.94467237 seconds)
  done (took 96.943694571 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.936937646 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.936469131 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.93703275 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.936915819 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.937410289 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.938739497 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.93656267 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.937742112 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.936646207 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.937993048 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.936786881 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.938135419 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.937988455 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.940335596 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.938014038 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.937651123 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.938861356 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.938582125 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.937989062 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.938884947 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.93877224 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.940001527 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.9378693 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.937828838 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.938446255 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.939158478 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.938433817 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.938432446 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.938942881 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.938610055 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.938535026 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.93903295 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.937858769 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.938808858 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.93922717 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.939032332 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.939720417 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.937859084 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.939025647 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.939162578 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.939234211 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.938743162 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.938835995 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.938680536 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.938985771 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.938760913 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.939538657 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.939364398 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.939799618 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.939099042 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.940136334 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.939572767 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.940273753 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.940352619 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.939965425 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.939359916 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.940291639 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.940763598 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.940077674 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.940239526 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.939832144 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.940879258 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.940699047 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.940887699 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.940566582 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.941120327 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.941403195 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.942571563 seconds)
  done (took 133.721657004 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.939978442 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.939829283 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.941116291 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.940271333 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.941106766 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.940262316 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.940486294 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.940336031 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.940126934 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.939960768 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.940831928 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.941646493 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.94104422 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.941430321 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.942156267 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.94122973 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.941709339 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.941678519 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.942398213 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.94199577 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.941169242 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.941216923 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.941252041 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.941805597 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.942257874 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.941136155 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.942215 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.941588537 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.941779951 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.943427888 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.941660071 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.942460908 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.941995923 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.942225453 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.942623056 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.942379413 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.943081902 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.943093004 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.942890941 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.942176777 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.942972522 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.94367014 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.943053378 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.942327356 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.94331974 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.949573654 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.942819593 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.943838232 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.945086147 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.943946551 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.94371999 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.943566609 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.942590853 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.94264826 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.94448822 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.94423791 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.943219715 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.943919534 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.943799265 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.943839004 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.946712929 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.944819217 seconds)
  done (took 122.305495443 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.944577053 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.944670592 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.944362865 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.943949421 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.94396105 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.944256864 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.944784736 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.944285053 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.944751467 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.944614027 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.944780891 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.94520766 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.94401978 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.9440019 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.942941395 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.943708284 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.945000795 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.941799802 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.943597564 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.941793638 seconds)
  done (took 40.758116847 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.94323489 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.942637035 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.942326026 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.942778105 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.94328759 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.942798202 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.942311469 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.945627793 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.942907467 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.94296377 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.944107222 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.942849818 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.943412485 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.942109236 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.941851959 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.943748738 seconds)
  done (took 32.963955111 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.944532818 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.943709975 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.94251534 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.943272496 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.944056289 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.943740427 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.946078665 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.943022531 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.943098475 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.943808639 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.943485187 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.943560647 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.943222982 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.942136021 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.945186313 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.941492623 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.941792417 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.94203374 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.940788809 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.941519183 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.942436158 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.94316548 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.941104251 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.941573116 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.942435164 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.936904483 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.935799646 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.935212055 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.93557282 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.935306599 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.936190134 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.934418293 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.933956541 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.933999948 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.933963418 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.938364256 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.933769875 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.936202494 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.933870272 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.934264376 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.935394931 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.935115526 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.934804168 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.934825977 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.93431693 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.934729101 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.93478558 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.935220682 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.935157415 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.93401138 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.93436325 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.933663192 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.938438811 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.935187434 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.934872427 seconds)
  done (took 108.504682894 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.936148344 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.934250148 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.935346249 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.935472606 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.934759652 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.934091799 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.935035331 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.935746369 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.935674718 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.93636785 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.936564416 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.934546665 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.939104781 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.934939784 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.93543396 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.934060205 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.933123256 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.933641341 seconds)
  done (took 36.702864819 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.932194113 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.934030603 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.930268554 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.93281371 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.93138314 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.931150468 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.934752306 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.931562795 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.933127266 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.932025149 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.93106628 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.930843222 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.932187382 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.930719678 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.93174155 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.93255343 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.929730389 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.931308093 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.932090134 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.932320352 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.93121525 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.932532897 seconds)
  done (took 44.368678871 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.932444685 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.935018346 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.948189006 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.954645212 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.953635134 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.9685343 seconds)
  done (took 13.556259156 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.932198992 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.932440293 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.93489449 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.934637554 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.932349525 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.935048478 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.932985646 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.932217307 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.932922788 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.931049377 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.932540366 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.932733112 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.9314243 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.933780942 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.935328462 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.933862813 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.931001043 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.932608437 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.936210893 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.933102187 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.933847821 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.933094605 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.935702092 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.933201705 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.93185164 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.935100977 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.932995162 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.932390985 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.936127716 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.932453661 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.931708348 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.934030138 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.935467989 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.932446971 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.934568366 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.933820568 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.933218841 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.93257255 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.933604276 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.933843032 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.933106857 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.93213437 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.933345794 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.93459787 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.934715069 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.935153427 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.935323054 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.933437307 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.934084297 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.934422064 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.932862045 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.934198784 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.933612377 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.932778748 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.932919637 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.934740838 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.934785828 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.933117256 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.93239534 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.935475858 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.932145383 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.932050148 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.932182179 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.93354103 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.933419165 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.931670792 seconds)
  done (took 129.474509219 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.928764107 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.93056606 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.929109778 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.931515891 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.93112985 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.927769846 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.929496303 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.928285819 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.929317042 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.927745697 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.927211164 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.927582889 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.92857583 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.928138452 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.927717175 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.92648813 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.927643303 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.925625188 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.92886467 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.927489985 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.927606105 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.924672915 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.927832705 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.924514542 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.923916012 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.922987765 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.924608674 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.923383996 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.926743319 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.924695734 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.923324652 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.927478201 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.92463472 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.924857174 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.925525871 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.9262281 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.927212559 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.924255008 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.923079016 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.923592144 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.926653307 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.923790965 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.925897728 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.926158389 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.926353123 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.925116081 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.92426792 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.926539763 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.925203016 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.92418028 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.922136222 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.926159207 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.926574706 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.924853929 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.923001474 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.92444086 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.921798703 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.924291719 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.925521658 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.923690531 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.926323824 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.923586318 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.924072754 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.925151425 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.923231809 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.926534843 seconds)
  done (took 128.97947108 seconds)
done (took 2663.90958115 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.952426527 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.966642607 seconds)
  done (took 15.775813907 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.089244646 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.04037163 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.927122269 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.978765635 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.930380567 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.94884183 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.949661606 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.925429815 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.926218069 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.925427321 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.925309369 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.110074836 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.987518073 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.925838729 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.927401774 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.018101247 seconds)
  done (took 53.397336251 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.931535534 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.92639472 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.945706184 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.927289021 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.931267279 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.943129702 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.955968241 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.93380801 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.964804955 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.944761327 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.002095266 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.941380593 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.929142563 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.981461989 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.944727742 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.945216372 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.023767021 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.008808108 seconds)
  done (took 37.032986362 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.008751453 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.934073101 seconds)
  done (took 10.801904399 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.918089617 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.932069308 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.925893916 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.924937653 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.936598518 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.927455362 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.930509947 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.930536298 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.926766731 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.938882835 seconds)
  done (took 71.149780447 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.926639639 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.923702115 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.92451973 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.921636217 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.918196887 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.925274427 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.921317309 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.918476548 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.611643442 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.958923664 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.9331901 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.927533852 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.918595955 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.920863896 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.916895326 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.943816836 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.084823583 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.914884079 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.917996806 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.923164547 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.919088792 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.987076609 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.931453056 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.919224209 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.955931606 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.608218477 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.934185644 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.924949198 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.088100553 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.917664544 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.918652041 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.131174681 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.929831658 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.290021713 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.208677065 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.930864292 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.928902717 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.927800963 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.919297138 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.094281668 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.920527545 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.925700599 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.73088287 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.180354028 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.011344449 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.965116821 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.284152678 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.922694837 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.918451276 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.952067845 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.923539017 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.918217792 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.940768966 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.424405149 seconds)
  done (took 135.686631257 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.919345925 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.166177594 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.071219976 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.918619377 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.174773685 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.130778824 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.907500831 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.965179067 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.921598488 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.117704363 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.175935193 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.022562181 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.921297124 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.919811085 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.920992612 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.919685358 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.059113324 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.984959502 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.922138597 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.918118912 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.942052692 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.117736148 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.042890233 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.923955345 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.945651902 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.128158897 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.039991779 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.022694505 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.70900368 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.919163808 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.98006877 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.924750739 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.91999007 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.919668551 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.072055647 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.010390102 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.001400215 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.92075055 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.919608456 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.91696885 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.594183323 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.121296618 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.013807754 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.039364303 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.169248759 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.13455395 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.532140838 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.918320299 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.545848889 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.087994523 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.12646325 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.122185305 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.03857093 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.923897112 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.196673262 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.915915237 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.918470606 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.143566961 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.140490986 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.015960899 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.925732644 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.922867454 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.919176827 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.160116834 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.921059213 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.00925434 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.925353389 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.922930792 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.011515354 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.020640146 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.150410137 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.137883239 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.951894828 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.259692791 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.432327586 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.121362742 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.98664381 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.144057689 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.923314614 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.919547494 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.999465985 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.758602904 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.17287879 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.161507109 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.120680702 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.954798365 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.545868185 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.923045454 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.108272537 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.106042697 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.157257499 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.165315114 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.152599834 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.250907757 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.923960916 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.922412298 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.206216006 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.033954667 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.856151725 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.260505466 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.156124863 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.405653638 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.947709985 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.207704309 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.049535682 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.923749993 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.565186598 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.924618408 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.130699831 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.958519231 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.926509622 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.922995533 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.109305906 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.824794497 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.921053526 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.617569747 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.983358084 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.925454027 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.12489383 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.926238626 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.171570015 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.926495016 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.155144641 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.090513342 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.95523427 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.099783395 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.167574312 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.548109467 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.168505692 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.165546594 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.037706758 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.148011567 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.708232864 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.925107305 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.185968196 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.944794991 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.923212724 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.092543918 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.926609559 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.06758928 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.925048109 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.19205454 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.94468044 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.154210114 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.9269518 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.158779482 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.954973958 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.981042265 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.927174273 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.0520719 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.937981433 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.7507302 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.093972062 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.927075112 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.933939566 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.523555011 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.929511525 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.072583806 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.159653881 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.944440264 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.991979047 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.470408038 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.910102342 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.004486445 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.946770037 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.221209393 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.927985921 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.181299288 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.876648767 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.404811557 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.92240129 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.16054089 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.110123433 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.926507958 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.925601261 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.759961851 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.885767117 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.921029449 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.496007925 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.363064226 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.692590859 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.123936736 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.925319644 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.053492738 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.928965295 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.996060628 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.256012752 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.922825878 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.924789251 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.923376745 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.924192772 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.926658024 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.136729439 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.947616077 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.356087018 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.058278901 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.177633345 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.228258965 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.124558739 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.963179183 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.930168258 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.150303925 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.927077922 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.990209059 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.931759575 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.948669399 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.159892274 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.928510993 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.139013454 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.160822513 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.792549299 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.971491153 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.930669627 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.924913453 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.855926994 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.072285692 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.013554648 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.928870438 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.924336958 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.03705905 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.040706314 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.10151686 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.615723364 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.137606164 seconds)
  done (took 912.604065033 seconds)
done (took 1238.303082067 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.919226199 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.926725232 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.923059202 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.925628232 seconds)
  done (took 29.545828677 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.927422305 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.92291854 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.925922567 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.930860096 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.926118787 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.925416033 seconds)
  done (took 13.411956984 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.922579735 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.926160413 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.931063024 seconds)
  done (took 22.632797592 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.001615265 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.332438891 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.064035945 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.347043991 seconds)
  done (took 10.596336091 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.921407419 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.92206101 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.921863094 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.922752138 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.928578505 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.92806727 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.922635298 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.923045642 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.928644211 seconds)
  done (took 19.17333331 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.983616218 seconds)
done (took 101.204071422 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.187159906 seconds)
    (2/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.130614652 seconds)
    (3/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.353232499 seconds)
    (4/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.869677805 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.936382064 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.014693176 seconds)
    (7/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.144148738 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.95546503 seconds)
    (9/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.934566696 seconds)
    (10/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.245207276 seconds)
    (11/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.936539485 seconds)
    (12/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.934006481 seconds)
    (13/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.037711638 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.584319686 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.965007374 seconds)
    (16/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.932235043 seconds)
    (17/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.974832667 seconds)
    (18/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.718701085 seconds)
    (19/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.936441124 seconds)
    (20/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.73107395 seconds)
    (21/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.024163663 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.796950894 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.908307691 seconds)
    (24/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.092182954 seconds)
    (25/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.946168344 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.327481198 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.259878699 seconds)
    (28/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.140745772 seconds)
    (29/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.945615864 seconds)
    (30/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.155808808 seconds)
    (31/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.936242809 seconds)
    (32/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.879241122 seconds)
    (33/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.01564402 seconds)
    (34/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.633939059 seconds)
    (35/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.565195032 seconds)
    (36/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.037942992 seconds)
    (37/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.205634797 seconds)
    (38/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.484156089 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.374299708 seconds)
    (40/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.02813657 seconds)
    (41/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.199149933 seconds)
    (42/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.073358471 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.934134487 seconds)
    (44/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 3.685708417 seconds)
    (45/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.933650559 seconds)
    (46/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.012085353 seconds)
    (47/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.934065179 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.531093589 seconds)
    (49/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.947851563 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.08159594 seconds)
    (51/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.945665615 seconds)
    (52/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.935473037 seconds)
    (53/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.58919692 seconds)
    (54/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.039809783 seconds)
    (55/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.010790282 seconds)
    (56/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.48538323 seconds)
    (57/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.158086932 seconds)
    (58/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.149471934 seconds)
    (59/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.019134633 seconds)
    (60/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.064216515 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.960206709 seconds)
    (62/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.351275376 seconds)
    (63/309) benchmarking ("sort", Bool, false)...
    done (took 2.152259029 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.938868572 seconds)
    (65/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.038119268 seconds)
    (66/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.233482356 seconds)
    (67/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.801163312 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.030566707 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.23652075 seconds)
    (70/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.117740384 seconds)
    (71/309) benchmarking ("sort", Int64, false)...
    done (took 5.565270193 seconds)
    (72/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.957069406 seconds)
    (73/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.517458227 seconds)
    (74/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.028773698 seconds)
    (75/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.237576462 seconds)
    (76/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.051855919 seconds)
    (77/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.101115834 seconds)
    (78/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.960624058 seconds)
    (79/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.120804378 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.94379925 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.947110923 seconds)
    (82/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.943948001 seconds)
    (83/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.018764046 seconds)
    (84/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.03517587 seconds)
    (85/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.255709858 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.12652508 seconds)
    (87/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.122189433 seconds)
    (88/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.250311295 seconds)
    (89/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.04154471 seconds)
    (90/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.384350244 seconds)
    (91/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.018979607 seconds)
    (92/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.950670655 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.329688276 seconds)
    (94/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.956652808 seconds)
    (95/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.202453693 seconds)
    (96/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.108715375 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.845467966 seconds)
    (98/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.338296377 seconds)
    (99/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.386993463 seconds)
    (100/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.119748701 seconds)
    (101/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.959013124 seconds)
    (102/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.419767113 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.93953941 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.072024126 seconds)
    (105/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.07897735 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.671480471 seconds)
    (107/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.846294447 seconds)
    (108/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.32665848 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.9354964 seconds)
    (110/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.139669067 seconds)
    (111/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.292914386 seconds)
    (112/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.02902855 seconds)
    (113/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.090620694 seconds)
    (114/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.238787947 seconds)
    (115/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.064834949 seconds)
    (116/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.021735555 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.957428541 seconds)
    (118/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.15905744 seconds)
    (119/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.443032918 seconds)
    (120/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.145944085 seconds)
    (121/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.03398095 seconds)
    (122/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.18681535 seconds)
    (123/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.940243455 seconds)
    (124/309) benchmarking ("sort", Float32, false)...
    done (took 7.372512957 seconds)
    (125/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.080517974 seconds)
    (126/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.207539492 seconds)
    (127/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.93923865 seconds)
    (128/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.024031049 seconds)
    (129/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.01677515 seconds)
    (130/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.24512676 seconds)
    (131/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.956386298 seconds)
    (132/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.320831784 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.840285246 seconds)
    (134/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.887584425 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.00944997 seconds)
    (136/309) benchmarking ("sort", Int8, false)...
    done (took 4.96654471 seconds)
    (137/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.247141614 seconds)
    (138/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.474905397 seconds)
    (139/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.094634921 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.178670027 seconds)
    (141/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.95668985 seconds)
    (142/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.211875367 seconds)
    (143/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.185530683 seconds)
    (144/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.942968768 seconds)
    (145/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.953786864 seconds)
    (146/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.001603415 seconds)
    (147/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.269810109 seconds)
    (148/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.246520441 seconds)
    (149/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.958796814 seconds)
    (150/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.027447133 seconds)
    (151/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.081153151 seconds)
    (152/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.960124307 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.254657021 seconds)
    (154/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.023957593 seconds)
    (155/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.176718823 seconds)
    (156/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.940538145 seconds)
    (157/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 4.262011584 seconds)
    (158/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.951723072 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.312459125 seconds)
    (160/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.257041624 seconds)
    (161/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.043585945 seconds)
    (162/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.204715561 seconds)
    (163/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.148258308 seconds)
    (164/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.953365366 seconds)
    (165/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.980937789 seconds)
    (166/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.326350826 seconds)
    (167/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.954881935 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.064378895 seconds)
    (169/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.039607894 seconds)
    (170/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.96130217 seconds)
    (171/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.087529436 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.825965492 seconds)
    (173/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.473928849 seconds)
    (174/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.031713892 seconds)
    (175/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.704568727 seconds)
    (176/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.959914644 seconds)
    (177/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.757508165 seconds)
    (178/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.950332275 seconds)
    (179/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.212008763 seconds)
    (180/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.639262538 seconds)
    (181/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.760332341 seconds)
    (182/309) benchmarking ("sort", Float64, false)...
    done (took 5.770106412 seconds)
    (183/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.25983806 seconds)
    (184/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.389036001 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.065275291 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.94678474 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.083319952 seconds)
    (188/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.941631253 seconds)
    (189/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.049704503 seconds)
    (190/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.328273551 seconds)
    (191/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.074317097 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.122275734 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.976217985 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.248996995 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.930883459 seconds)
    (196/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.646471561 seconds)
    (197/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.057203972 seconds)
    (198/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.725727937 seconds)
    (199/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.521155089 seconds)
    (200/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.25200561 seconds)
    (201/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.948472357 seconds)
    (202/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.34281403 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.294721984 seconds)
    (204/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.965015056 seconds)
    (205/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.255195452 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.355182756 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.544347388 seconds)
    (208/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.95453878 seconds)
    (209/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.949310969 seconds)
    (210/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 3.710606899 seconds)
    (211/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.950634333 seconds)
    (212/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.092173443 seconds)
    (213/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.654247674 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.945574172 seconds)
    (215/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.947139565 seconds)
    (216/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 4.003324321 seconds)
    (217/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.179858094 seconds)
    (218/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.081201786 seconds)
    (219/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.057164148 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.851682064 seconds)
    (221/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.954218504 seconds)
    (222/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.477436363 seconds)
    (223/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.190898623 seconds)
    (224/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.051299239 seconds)
    (225/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.266399098 seconds)
    (226/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.503732982 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.098071044 seconds)
    (228/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.948287398 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.582501221 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.242324867 seconds)
    (231/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.432870054 seconds)
    (232/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.322032696 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.949236665 seconds)
    (234/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.186875009 seconds)
    (235/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.329902569 seconds)
    (236/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.951676603 seconds)
    (237/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.090926537 seconds)
    (238/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.09664096 seconds)
    (239/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.962860294 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.848363828 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.730788117 seconds)
    (242/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.088827407 seconds)
    (243/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.009003329 seconds)
    (244/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.946111886 seconds)
    (245/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.23233769 seconds)
    (246/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.967631616 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.072655021 seconds)
    (248/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.953250528 seconds)
    (249/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.949663322 seconds)
    (250/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.406521635 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.94867007 seconds)
    (252/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 3.667066905 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.074560976 seconds)
    (254/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.089960341 seconds)
    (255/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.352695657 seconds)
    (256/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.112242133 seconds)
    (257/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.042059024 seconds)
    (258/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.077290249 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.289456289 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.195016966 seconds)
    (261/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.355250407 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.349336622 seconds)
    (263/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.225450196 seconds)
    (264/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.627457852 seconds)
    (265/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.101219268 seconds)
    (266/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.969517555 seconds)
    (267/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.031826378 seconds)
    (268/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.162287913 seconds)
    (269/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.193317325 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.29434885 seconds)
    (271/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.711201465 seconds)
    (272/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.951066663 seconds)
    (273/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.035390726 seconds)
    (274/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.955584539 seconds)
    (275/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.339619161 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.06507844 seconds)
    (277/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.080504293 seconds)
    (278/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.06094316 seconds)
    (279/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.974206139 seconds)
    (280/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.386177655 seconds)
    (281/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.95012472 seconds)
    (282/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.710827426 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.441087835 seconds)
    (284/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.956053707 seconds)
    (285/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.013306346 seconds)
    (286/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.962687054 seconds)
    (287/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.951927004 seconds)
    (288/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.033378856 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.779354281 seconds)
    (290/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.526394579 seconds)
    (291/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.240039884 seconds)
    (292/309) benchmarking ("sort", BigInt, false)...
    done (took 6.954249567 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.889265557 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.97580365 seconds)
    (295/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.05196847 seconds)
    (296/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.153466656 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.741186167 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.092448516 seconds)
    (299/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.255540924 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.975901878 seconds)
    (301/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.288006433 seconds)
    (302/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.964752508 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.077569259 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.03790239 seconds)
    (305/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.925106191 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.260563916 seconds)
    (307/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.211048833 seconds)
    (308/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.360507362 seconds)
    (309/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.967211476 seconds)
  done (took 1033.453197028 seconds)
done (took 1035.615286299 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.984938559 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.977173171 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.958431096 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.979991367 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.071385216 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.999802382 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.974092211 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.95907142 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.007232289 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.008229847 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.955145427 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.999268538 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.958076494 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.957300464 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.956949123 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.977542776 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.270079228 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.988702603 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.978025955 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.970157199 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.978674922 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.957720413 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.008639049 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.998121966 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.965259482 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.964353115 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.964731331 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.978628797 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.071670337 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.96271929 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.968585581 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.975307713 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.264787056 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.985274764 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.957414964 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.978667427 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.970957298 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.971589864 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.967323364 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.990934114 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.417428146 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.962193561 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.958479541 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.958558068 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.960958699 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.969303348 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.961411529 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.968469939 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.97575113 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.977941537 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.411391744 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.980007328 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.962704375 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.95903346 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.972266986 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.959916223 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.96285681 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.975737968 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.978606907 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.976016751 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.256125203 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.997923988 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.962331699 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.979125435 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.96813142 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.445644773 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.963333065 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.966189077 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.417061686 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.972109076 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.44985945 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.976228806 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.961900717 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.975308565 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.992876562 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.27170114 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.988962621 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.959243029 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.969168458 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.959912773 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.975817122 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.976154304 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.965410469 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.961610418 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.976045953 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.00754199 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.973808832 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.962533083 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.972152911 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.98032856 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.976594175 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.973644858 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.965831059 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.96009974 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.975740468 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.967504953 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.966713191 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.965487623 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.968251078 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.974112746 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.420603319 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.984738029 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.959504095 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.958368622 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.962597852 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.9816547 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.417138512 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.970377371 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.987710046 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.012477002 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.969240287 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.256485698 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.995352788 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.980572771 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.974102017 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.967415489 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.961553759 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.259027762 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.442424388 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.986747909 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.962105529 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.961096541 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.980482873 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.966777683 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.960599067 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.274874289 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.994241086 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.978895866 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.086444792 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.977507921 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.996158225 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.961369995 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.965730138 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.009584708 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.985261993 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.993930813 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.965387129 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.980848815 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.983163796 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.967827379 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.975548073 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.977001021 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.963956911 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.970911549 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.963093497 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.010532404 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.979586734 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.981311886 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.986848503 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.088518336 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.967838991 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.261542773 seconds)
done (took 308.355296576 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.045898365 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.962558084 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.052770785 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.968144655 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.058539203 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.042441594 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.962026194 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.964110256 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.971232299 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.470418639 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.965862822 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.967103695 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.959794837 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.964705576 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.040678419 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.967305767 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.962640281 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.244482519 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.963276108 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.046565746 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.968432388 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.962574044 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.963485391 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.4770923 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.966373061 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.965529791 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.051556215 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.967127435 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.276143422 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.964227366 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.969145902 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.25553389 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.050651772 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.978786196 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.971220685 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.973313869 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.06104059 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.976019176 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.037899689 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.035543603 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.057270727 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.998223406 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.967305776 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.970153071 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.972474805 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.966087673 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.963775612 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.999554979 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.967279514 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.969587955 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.247837235 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.976289787 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.973798815 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.96863037 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.967333809 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.982404698 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.967003675 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.965546554 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.048078474 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.966799515 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.044387051 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.509124229 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.477971854 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.972100483 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.968685203 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.966674559 seconds)
  done (took 191.176526972 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.036769122 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.041379786 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.036200927 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.974442269 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.014227682 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.040272395 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.972168737 seconds)
  done (took 16.009374775 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.971963351 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.968747593 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.033703688 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.028013033 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.969017603 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.147349507 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.978973272 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.982676226 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.997329811 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.972246288 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.605911387 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.032393191 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.979143507 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.970297868 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.986832285 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.036176099 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.974522803 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.971973101 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.080355166 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.123326206 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.974999176 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.974891632 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.996373808 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.985058859 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.972341046 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.971700777 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.971471422 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.978864833 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.973659615 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.972261471 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.970229693 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.036769739 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.973323457 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.969903042 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.973330397 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.973792229 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.971445543 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.976828974 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.972283494 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.973586915 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.974230659 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.973299746 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.971936059 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.974661336 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.971812627 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.998896303 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.972767124 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.973794511 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.971889849 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.980419766 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.999249447 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.974728496 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.972729151 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.978324062 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.018863825 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.981185783 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.970819936 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.97378128 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.972209242 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.974401538 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.975124594 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.12438363 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.032688591 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.973546368 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.036559068 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.131713473 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.972375281 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.972209088 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.972971387 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.070488174 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.975894079 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.03309429 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.974560169 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.092773641 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.97578385 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.155095774 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.001496787 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.976902069 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.978120197 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.978136084 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.982630845 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.972771206 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.981172263 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.982798093 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.980530666 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.973991574 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.974434529 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.980581257 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.983322508 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.97434972 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.027265794 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.975656385 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.977141806 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.115389159 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.977337784 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.087053011 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.9997375 seconds)
  done (took 216.201793414 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.982589468 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.985434142 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.976357613 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.992606877 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.97864796 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.97929574 seconds)
  done (took 13.800092664 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.979282635 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.979681196 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.977760753 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.977383312 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.97608202 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.97763916 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.97512106 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.979174089 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.981686962 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.978748686 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.978427579 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.976420447 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.978472667 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.978562801 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.977474592 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.980361772 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.980783349 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.979673209 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.980028798 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.977481443 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.11276181 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.977602878 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.980123083 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.983018727 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.983151398 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.975667642 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.991693285 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.98029249 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.978263321 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.985185516 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.980429748 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.97700077 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.988553124 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.984365879 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.984678526 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.982594562 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.982010518 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.981133024 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.978130975 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.979048061 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.979927499 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.981510328 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.983647889 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.978319984 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.98107287 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.992300951 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.985715138 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.994739149 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.979330524 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.978901651 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.98294538 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.980750879 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.981106526 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.981506023 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.987958795 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.985630751 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.986940696 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.980778726 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.97976323 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.986287724 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.981710805 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.97810873 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.987010965 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.986806454 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.98472128 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.981579739 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.987120429 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.983123743 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.980798695 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.981249472 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.979925614 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.980157916 seconds)
  done (took 145.703551 seconds)
done (took 584.795597604 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.064678527 seconds)
  done (took 8.970860294 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.003508282 seconds)
  done (took 9.014532019 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.746055901 seconds)
  done (took 10.657003852 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.992920938 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.98933432 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.999271082 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.982375308 seconds)
  done (took 29.881584798 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.273115136 seconds)
  done (took 9.181223828 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.989892154 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.976474395 seconds)
  done (took 15.947930728 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.029684179 seconds)
  done (took 8.937921606 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.40964609 seconds)
  done (took 9.335191959 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.99056509 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.006107732 seconds)
  done (took 15.926591969 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.980373542 seconds)
  done (took 8.889651806 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.836163116 seconds)
  done (took 9.838635602 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.99110764 seconds)
  done (took 8.919826252 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.986837793 seconds)
  done (took 8.894520629 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.045066695 seconds)
  done (took 8.952847993 seconds)
done (took 165.255354427 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.985430337 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.97668981 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.978649383 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.982677726 seconds)
  done (took 29.832576472 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.013007844 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.013478183 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.02173094 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.014374034 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.00362784 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.004330831 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.014188678 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.012727566 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.004179345 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.011363682 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.014332849 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.013784965 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.013320629 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.023527792 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.023558339 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.01157201 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.013518725 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.015161802 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.004206308 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.02307181 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.011662819 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.013760233 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.980549682 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.97928275 seconds)
  done (took 50.163896505 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.165076915 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.046956762 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.133102927 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.02505203 seconds)
  done (took 10.278273197 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.979773159 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.044263841 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.031182606 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.033778745 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.066384625 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.084091732 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.0329106 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.190591303 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.095586544 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.108389299 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.988952396 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 2.001686851 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.001741569 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.033668998 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.083221474 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.981198379 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.979879008 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.096262989 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.041456987 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.192305673 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.982296386 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.035702626 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.075043869 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.036179192 seconds)
  done (took 51.106458508 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.983223544 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.990716279 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.989560354 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.982768293 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.983179659 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.983918683 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.989529991 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.984194217 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.004500304 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.985793794 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.982258864 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.983127545 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.989270309 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.982377565 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.982317455 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.995372528 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.998099333 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.982920064 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.985983642 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.989398622 seconds)
  done (took 41.660201736 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.981885695 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.826857885 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.326165556 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.234303167 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.982674154 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.98449601 seconds)
  done (took 32.247871681 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.995447385 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.988478136 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.982715522 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.039402756 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.119957087 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.990486535 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.983943147 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.99533478 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.028574269 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.049603089 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.003579293 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.010734131 seconds)
  done (took 26.100672031 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.982411509 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.986588429 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.984751812 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.000704809 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.992852987 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.990768588 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.991145589 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.981973227 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.996412928 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.001831952 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.991743914 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.99402513 seconds)
  done (took 45.811381172 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.19739808 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.208676028 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.205461385 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.502868004 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.975985971 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.8826459 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.663763102 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.675038745 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.275128595 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.962815797 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.949988017 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.864360708 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.224743345 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.985133159 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.242489059 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.913009308 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.984866093 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.254917138 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.985493972 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.990327609 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.282384537 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.042845254 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.19880332 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.031681293 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.19798403 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.411826348 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.231276733 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.242220276 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.328398416 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.106947548 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.086254868 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.031428578 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.993101328 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.998066691 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.989652715 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.996865271 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.255833702 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.989651121 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.04923317 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.974204017 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.910768253 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.283888459 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.109080299 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.398230068 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.106945553 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.225920472 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.990474512 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.088760144 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.04504438 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.219804206 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.097200684 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.198491814 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.910415483 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.346710726 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.119003612 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.988146523 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.990032505 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.685792688 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.224999903 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.065539659 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.284550317 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.10676935 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.98866395 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.075529448 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.98668545 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.099545834 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.358429755 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.991343412 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.98595915 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.994591469 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.083586279 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.20009283 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.987507219 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.987887403 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.006859885 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.989437417 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.338766656 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.468789725 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.976772332 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.555414007 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.467075022 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.955510549 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.414057946 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.03145438 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.265057691 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.205446154 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.172939206 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.232719589 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.871607393 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.993130137 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.79521946 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.068154322 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.067900945 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.98715356 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.080806797 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.264653249 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.112689053 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.99225728 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.914271305 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.998985262 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.191224635 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.413475572 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.043798673 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.988972655 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.989730418 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.995030032 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.989627117 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.004532777 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.000815578 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.509159128 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.275718845 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.094808901 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.244986208 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.988496261 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.670409472 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.261664985 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.117212088 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.557090135 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.120956933 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.989846749 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134468518 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.99863956 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.993341522 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.366831526 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.399065861 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.097274645 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.233596455 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.064571235 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.022104336 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.996510637 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.073658481 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.216194645 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.990383925 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.239379804 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.236213826 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.658351879 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.062234112 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.067327117 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.998594574 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.206804527 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.072177469 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.518204449 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.212599475 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.489976389 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.974537332 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.491734682 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.230818147 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.383178468 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.007667773 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.094717887 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.023521525 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.692101425 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.917867756 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.996173056 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.322386793 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.029090372 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.087118093 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.99388221 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.99331792 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.999386167 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.074237594 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.061324267 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.067516252 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.920098028 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.995834308 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.995100944 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.994433641 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.508104363 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.670744742 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.284844162 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.991915787 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.052037093 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.994237399 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.594554814 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.997298548 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.115824325 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.077467774 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.719289117 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.023827727 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.231802694 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.424991552 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.111327019 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.996024529 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.996345397 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.693854838 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.003128118 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.694926864 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.277901691 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.994233743 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.447995554 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.060105531 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.178217797 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 2.011491443 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.995969694 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.996314654 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.996001228 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.198186298 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.50042941 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.30024868 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.350812191 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.079203052 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.265091818 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.187660238 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.419285532 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.678289894 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.516207082 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.220562475 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.995864044 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.996148312 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.676181958 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.002453111 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.215396421 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.197783481 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.273183793 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.291101383 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.409901627 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.000876051 seconds)
    (218/481) benchmarking "4d"...
    done (took 3.010336976 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.237518667 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.995902886 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.426815545 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.06388132 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.325842897 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.812107382 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.259401955 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.065363386 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.008451991 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.641469738 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.132730223 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.949585061 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.113463399 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.921912272 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.691265504 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.287852846 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.270337226 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.979371852 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.332199199 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.293519576 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.245469837 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.632629319 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.997216904 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.050524175 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.076961006 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.00216302 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.460881333 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.037335846 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.04295866 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.002022693 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.998093416 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.998609478 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.674391209 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.075001234 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.116670202 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.763961175 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.455255289 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.907080982 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.267774175 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.055072402 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.438855445 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.045107467 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.212102045 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.00332811 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.483103574 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.04586144 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.268299303 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.955348319 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.211371934 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.204062492 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.024474081 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.005898794 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.925052944 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.874073818 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.002626238 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.098256456 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.882509144 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 2.001739682 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.302583825 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.53702902 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.036513797 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.000868701 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.306971377 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.401827522 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.283140645 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.008094404 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.21371031 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.121561941 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.919348048 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.486010698 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.582430998 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.70030336 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 2.014117602 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.201588993 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.305683951 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.216650058 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.036911336 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.077828627 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.273176889 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.981183387 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.001371543 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.519681812 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.09774261 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.241835206 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.312073341 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.469374948 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.406652753 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.444944881 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.055838065 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.213009968 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.363454352 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.247996785 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.00358712 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.092056029 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.214813427 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.284533225 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.893461021 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.710784957 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.241995991 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.006202 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.955820699 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.208149389 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.500379581 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.359037802 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.53120735 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.113002845 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.029853959 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.499204822 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.018221839 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.937116193 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.002985208 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.959675286 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.21949 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.109410618 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.041978236 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.558089945 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.250693025 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.414513523 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.157511632 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.042427662 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.928273524 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.684672954 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.954217319 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.072077392 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.044205603 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.074110588 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.006245009 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.205710721 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.442408179 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.048965788 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.533359585 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.206201722 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.305929488 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.272851645 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.302863234 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.968820302 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.278094643 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.953161796 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.583578782 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.094108684 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.098713711 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.006791438 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.009367561 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.277615674 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.308326956 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.556633278 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.043740344 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.312195767 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.113982058 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.009308146 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.011903268 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.44461592 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.24468327 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.222859014 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.084174034 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.13558683 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.079557215 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.520522858 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.010983886 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.009564187 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.143231023 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.00958348 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.697395831 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.308146196 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.74456904 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.209931308 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.528352953 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.91629855 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.116902115 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.054653881 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.008020253 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.133410309 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.01283815 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.248945296 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.28021235 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.774289022 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.015258039 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.007623928 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.920609764 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.675929032 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.248690233 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.022753437 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.064756375 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.012693947 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.124244249 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.008279002 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.272008462 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.066654398 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.007942159 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.016149952 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.223051234 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.522167788 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.025027136 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.709570993 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.211517533 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.014104374 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.486607736 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.469590054 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.1905603 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.053363981 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.115152489 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.257102174 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.529954697 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.12043781 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.007462299 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.235452049 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.011952793 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.281411165 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.283641737 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.010952147 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.224525585 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.449803457 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.299355155 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.020488668 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.931011071 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.012876349 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.274683621 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.065269444 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.009588532 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.019451643 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.548534892 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.673396503 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.481423572 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.169333045 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.300871518 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.780583071 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.770494344 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.01406189 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.013250616 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.670923544 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.734201674 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.224523221 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.298392722 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.95805574 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.214028306 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.714634132 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.011032292 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.262244997 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.938408689 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.014568004 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.585788888 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.285879988 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.947459666 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.016921651 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.594432056 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.011495036 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.095374021 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.012716525 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.128282214 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.277900878 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.360775627 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.13303608 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.652130723 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.675186111 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.954657363 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.055734683 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.818893703 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.583147051 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.678869267 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.036863148 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.028857295 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.937481384 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.015106806 seconds)
  done (took 1707.696729406 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.067698648 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.078663656 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.025030602 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.040382062 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.093088235 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.061129037 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.031749448 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.066804026 seconds)
  done (took 58.406279743 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.027320832 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.029534276 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.020405734 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.014969206 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.018654419 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.015249882 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.179213435 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.02470679 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.018436147 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.021422661 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.014977883 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.022638006 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.285553211 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.034281027 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.016179388 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.012925928 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.018409476 seconds)
  done (took 76.721700035 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.013775525 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.299794169 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.069563433 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.01938002 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.852680476 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.015877557 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.123992575 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.027955506 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.020049569 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.156256293 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.314811788 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.057046845 seconds)
  done (took 91.915835363 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.019885243 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.015640227 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.014637704 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.014112007 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.016565919 seconds)
  done (took 12.027502032 seconds)
done (took 2235.940230019 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.323482459 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.073725655 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.113857126 seconds)
  done (took 6.130060493 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.1645264 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.209307649 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.320115963 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.083122994 seconds)
  done (took 10.726798233 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.301253395 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.521820037 seconds)
  done (took 6.767045433 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.376722546 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.028023542 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.402549878 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.017156459 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.018228219 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.019286013 seconds)
  done (took 23.004242357 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.017673607 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.016485052 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.016995613 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.017606514 seconds)
  done (took 10.013267439 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.016923147 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.684971757 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.01481878 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.025896973 seconds)
  done (took 21.687281191 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.15874087 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.028572387 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.154881236 seconds)
  done (took 8.287095973 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.237923731 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.02616679 seconds)
  done (took 7.208761316 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.159991557 seconds)
  done (took 4.105671193 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.044540369 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.291162614 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.490137108 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.540819663 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.62687671 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.769207705 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.334181127 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.279501915 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.416789117 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.44959467 seconds)
  done (took 26.18872112 seconds)
done (took 140.191057127 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.377287047 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.038975185 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.213795098 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.378181789 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.242452546 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.21484513 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.234598043 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.362799576 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.04805759 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.038711401 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.381828538 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.240910348 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.181346576 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.030789039 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.18857839 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.028932903 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.239542534 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.385180534 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.050832252 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.292359463 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.245483854 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.023361583 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.219294421 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.035463788 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.240074857 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.164792267 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.564262406 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.030013669 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.201507857 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.572406445 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.16638325 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.448984302 seconds)
  done (took 173.028455672 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.018134679 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.016176206 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.016511389 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.018683285 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.293117908 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.014376201 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.01418625 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.015233466 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.257984814 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.239258147 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.011574941 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.26487852 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.010921675 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.005387529 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.008774459 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.004898383 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.408382206 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.002892741 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.999497983 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.996931246 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.003400609 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.101975731 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.994928764 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.108280973 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.37339613 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.99531133 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.994150463 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.989674797 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.99340047 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.990492633 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.991032952 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.989227623 seconds)
  done (took 212.094075843 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.993390121 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.988395023 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.988905243 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.988419061 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.989251836 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.989839132 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.987781041 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.990126544 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.637601636 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.626675818 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.990377768 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.985911338 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.988969449 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.988556396 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.989417696 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.989118187 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.989015636 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.986955391 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.985258384 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.989909849 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.985017621 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.662675705 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.991163231 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.669526087 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.983459163 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.990080926 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.982819618 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.991446374 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.988061359 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.985757301 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.98731472 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.98885733 seconds)
  done (took 224.188351991 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.230044265 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.989760996 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.990134341 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.000682047 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.987434528 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.988602936 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.987212691 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.233772385 seconds)
  done (took 20.324309128 seconds)
done (took 631.590950022 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.345063504 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.723929854 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.127516294 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.010444979 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.243690535 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.053952812 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.007354338 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.064437334 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.837555146 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.079618682 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.392602662 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.015872638 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.758057413 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.036252665 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.130943027 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.063049591 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.366139189 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.710729356 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.149559804 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.68789197 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.163235978 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.937305053 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.086582224 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.874731702 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.410483187 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.967079445 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.045758047 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.369129066 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.013381004 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.161984114 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.622575086 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.313580514 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.021352656 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.010029706 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.064657621 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.040607186 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.233879064 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.019306294 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.128021813 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.727165643 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.672295084 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.718071627 seconds)
  done (took 105.321591722 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.003514065 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.993874604 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.997021758 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.998002079 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.004869354 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.994642585 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.994837088 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.995229087 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.994211236 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.999082056 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.993024794 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.005594415 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.993301394 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.004117565 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.995353822 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.996454403 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.998688921 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.002927839 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.99445329 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.995388302 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.998434277 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.995758892 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.993465642 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.997565056 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.996023949 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.995994251 seconds)
  done (took 53.860699441 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.991588754 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.155145917 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.226733304 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.010438967 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.996376298 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.997342725 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.02450778 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.001517185 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.996407707 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.995633542 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.106452299 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.999588528 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.004649276 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.229373927 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.009471351 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.991225426 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.992843014 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.995297213 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.161899909 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.009838074 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.020609403 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.000995006 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.021645 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.009549953 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.994681055 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.994915139 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.999158087 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.428134973 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.006282141 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.110077805 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.037416539 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.026195086 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.359446031 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.240274055 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.045500205 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.999512181 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.992263409 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.114561495 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.998508283 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.99423688 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.021970077 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.003443434 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.234167963 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.513268984 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.009594748 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.996354934 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.429638381 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.12223097 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.036942833 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.004610859 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.243006512 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.012084975 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.995940081 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.995602084 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.030686002 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.006983852 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.997574712 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.295506182 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.011731125 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.021892992 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.003292098 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.000375577 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.170361046 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.004093979 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.156643107 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.004542315 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.002300667 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.996295392 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.235512836 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.013564101 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.531438412 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.008449223 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.995047265 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.113560348 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.163763729 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.455768657 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.008858583 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.1744163 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.374661196 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.033097867 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.00626846 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.416426537 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.034422909 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.008116143 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.995867658 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.997357049 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.998193078 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.041080317 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.023513203 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.451039268 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.528342452 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.309163835 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.037260676 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.009194382 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.999199452 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.295661318 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.004977795 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.995728396 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.227148033 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.540137546 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.011223259 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.00879726 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.504535849 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.009643757 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.028691526 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.010786236 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.251901064 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.01181787 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.044329515 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.998079302 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.006374718 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.00005836 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.026794865 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.008500849 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.997884606 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.499615736 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.131261686 seconds)
  done (took 247.110648352 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.999845977 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.996591324 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.996598852 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.996737696 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.997711919 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.999708488 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.998414312 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.99770539 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.999203942 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.99817286 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.997621226 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.999986283 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.999584237 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.002424554 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.06689948 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.032703541 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.520336795 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.03531423 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.034541218 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.034879899 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.593605507 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.038476799 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.032681539 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.033502123 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.034771041 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.036523947 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.034470916 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.074221802 seconds)
  done (took 171.512012601 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.032983576 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.089179128 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.04181951 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.078611297 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.044793934 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.031698817 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.131659679 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.049552838 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.042336177 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.034479918 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.034467057 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.066861294 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.042790825 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.130958157 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.066081009 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.141190145 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.135993541 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.041092126 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.033592104 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.036003548 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.08179927 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.04317126 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.063385274 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.092671756 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.045209398 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.089469198 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.050272217 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.036232895 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.035197858 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.146146731 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.052557571 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.065718102 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.068545234 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.054266626 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.152887739 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.14578272 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.138258951 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.135209413 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.041283608 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.031549319 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.036725592 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.038296986 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.090353414 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.047419173 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.03860117 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.148310679 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.053733677 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.039396287 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.03651338 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.033545748 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.046143479 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.05364599 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.06964392 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.15586543 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.078892808 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.060021149 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.129804475 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.153479368 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.036375393 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.131493088 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.041215968 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.14647747 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.051941694 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.037505075 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.03708903 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.040681697 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.084236235 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.142755569 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.136180535 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.044472098 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.128945666 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.087803056 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.047857825 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.037781378 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.036408479 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.0935209 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.142460551 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.08732433 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.096568411 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.072805659 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.049426969 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.040724103 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.039391581 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.063464294 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.044219922 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.147942208 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.147710029 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.043322031 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.039868665 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.039416726 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.037207781 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.060503753 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.097354175 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.076510076 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.142160874 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.073551321 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.074468173 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.044019774 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.052481824 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.044164176 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.06951901 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.042609131 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.051081257 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.30994054 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.067981044 seconds)
  done (took 219.811734392 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.40407038 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.079526267 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.114603741 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.309651595 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.400374601 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.92711143 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.073692336 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.086394925 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.098209085 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.214451211 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.146086687 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.127642566 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.074346548 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.061541683 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.081376999 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.100473548 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.116194879 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.405370493 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.273883316 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.547056794 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.077631336 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.357007954 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.425172877 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.437515622 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.135122006 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.478727968 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.661955184 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.183139704 seconds)
  done (took 67.365316187 seconds)
done (took 866.897061785 seconds)
SAVING RESULT...
DONE!
