cset: moving following pidspec: 31708
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.342782259 seconds)
loading group "string"... done (took 0.54800548 seconds)
loading group "linalg"... done (took 7.067221753 seconds)
loading group "parallel"... done (took 0.152452094 seconds)
loading group "find"... done (took 1.105409205 seconds)
loading group "tuple"... done (took 1.815242761 seconds)
loading group "dates"... done (took 1.173672594 seconds)
loading group "micro"... done (took 0.212280768 seconds)
loading group "io"... done (took 0.920100677 seconds)
loading group "scalar"... done (took 36.679901156 seconds)
loading group "sparse"... done (took 11.146957991 seconds)
loading group "broadcast"... done (took 0.904080054 seconds)
loading group "union"... done (took 11.801364416 seconds)
loading group "simd"... done (took 4.119301102 seconds)
loading group "random"... done (took 8.465613989 seconds)
loading group "problem"... done (took 1.84827622 seconds)
loading group "array"... done (took 19.739120205 seconds)
loading group "misc"... done (took 1.626733165 seconds)
loading group "sort"... done (took 3.132052921 seconds)
loading group "collection"... done (took 16.321210199 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.487382995 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122945616 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114414217 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118929307 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.145902355 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114409742 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12380272 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083478714 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.778728743 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148309922 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118845137 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.416176913 seconds)
done (took 5.095816679 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17286061 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084814735 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081272882 seconds)
  done (took 1.299510769 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064906261 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123203444 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066167892 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066886687 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06616015 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066082114 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066123189 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069740512 seconds)
  done (took 1.658464693 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075019403 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068527657 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06830847 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068487185 seconds)
  done (took 1.414880081 seconds)
done (took 5.755879383 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.765656931 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201890398 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183522651 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.397388898 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129807201 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153763438 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.640167168 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.325151315 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182686267 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081717067 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104570105 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.316584822 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106898301 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.632508398 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074404811 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090367137 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137673587 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.410950651 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.06737919 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082110049 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088658076 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127442338 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085421168 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074283866 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142685823 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067674193 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.130474322 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079949285 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066304603 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207230405 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172400144 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.653639437 seconds)
  done (took 10.156090675 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097194427 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098088863 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068798998 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136595219 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096603235 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069875885 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071023627 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06706439 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086534427 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128178112 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088778636 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101017097 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065227348 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068848442 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08435751 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203662739 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081330012 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081288266 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070442462 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075304108 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.11910508 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07826603 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077993372 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077630909 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128589203 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.178362329 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096109814 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097111479 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066824657 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080519542 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115134015 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125958818 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065287145 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066230493 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12431089 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093972282 seconds)
  done (took 4.606402059 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.288758844 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.14129406 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091006658 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.132726937 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065168374 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106777942 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065541766 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081010233 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.199843061 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.368353587 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.575644518 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110957406 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103538779 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067404608 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068641331 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06662197 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.34983303 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108304863 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104174763 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081139732 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069903902 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068420814 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.341477722 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067142584 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063887467 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067847352 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057818119 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123188501 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068027125 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.920399668 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124007345 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065963404 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099899259 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161676905 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.082759669 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085865757 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.27258612 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068215997 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064336767 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.150794748 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070212899 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066705236 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084010814 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104245396 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112117793 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.091951467 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065577049 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161937127 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067145988 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064727229 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079877248 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.998082601 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15393202 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076605422 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063641134 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.245819338 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085771227 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069499367 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064346767 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.20652783 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134432832 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063774879 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067213783 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066355724 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067734631 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068890654 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.3734519 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068086456 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.038699017 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067561045 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076788983 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068933965 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069406342 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075989239 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072499402 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085161738 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065788294 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075233613 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066024498 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065782934 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066498454 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083964509 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.357973511 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066030672 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068090435 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063050571 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.069107988 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085688067 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096347152 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066282807 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065078074 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.200061068 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069382289 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066258404 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105189581 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066478738 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084224499 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069244991 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113474314 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066537353 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.1246264 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06733212 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096844186 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070057011 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09860598 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081687388 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068348315 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.398183471 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064991238 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065125474 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068925867 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065302406 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067336881 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065627623 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078601553 seconds)
  done (took 21.307328659 seconds)
done (took 38.491804707 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.269026729 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074920139 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075152398 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075736335 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074959492 seconds)
  done (took 1.795572719 seconds)
done (took 3.002222742 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119756503 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098213289 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064714338 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095057187 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064286501 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099551105 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098970421 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080449234 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098829644 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063782673 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095379385 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064173121 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063695603 seconds)
  done (took 2.334281704 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083960061 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082836679 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069392158 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082601232 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063899887 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082398639 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080127393 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088050422 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080750037 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072333865 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063444275 seconds)
  done (took 2.05226592 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083118142 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083358292 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069500219 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08210673 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06550333 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081001825 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080502171 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084862218 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080930992 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073654708 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063316665 seconds)
  done (took 2.046382009 seconds)
done (took 7.628242733 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078635863 seconds)
  done (took 1.266169163 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.586312078 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.034118485 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081491096 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111845427 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182821862 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119056177 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.278468759 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086573368 seconds)
  done (took 8.852112279 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101882898 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070978823 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068823638 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069914175 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071963788 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068013736 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071475589 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070893346 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068226658 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072288444 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067954833 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068725427 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070302534 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069189116 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069457873 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071759016 seconds)
  done (took 2.41634718 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092142738 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090547305 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073822771 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074798012 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07179026 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072711549 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074054121 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073605637 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070187673 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071644522 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074429167 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073584604 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071723751 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064862095 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073957719 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075330615 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070624408 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074262773 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074903229 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075327904 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074477123 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064239271 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07141454 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074005258 seconds)
  done (took 3.078195528 seconds)
done (took 16.809992576 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116764014 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071342886 seconds)
  done (took 1.382079179 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083604481 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083856893 seconds)
  done (took 1.369817961 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084404604 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065251648 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092514035 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079053576 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066224598 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065663514 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089417658 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066130613 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065708913 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065855613 seconds)
  done (took 1.943404045 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070718466 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078903742 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071723022 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081599628 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074072209 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064216395 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072955133 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067782762 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078440613 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062734311 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071451219 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082488994 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071468298 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084183875 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072378878 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068825675 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071113302 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067530332 seconds)
  done (took 2.520222954 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06795417 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069123503 seconds)
  done (took 1.347374228 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069691328 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065549823 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068127842 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066836858 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063516188 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062404106 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063394091 seconds)
  done (took 1.664481544 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.392307467 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110224807 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.297557976 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070499113 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081701524 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247214597 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065145163 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070116708 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070081732 seconds)
  done (took 2.653928568 seconds)
done (took 14.092891721 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080747689 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085744666 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095021846 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.362158458 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091335503 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06563077 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113741241 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192158711 seconds)
done (took 2.308219487 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.215696593 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.613412986 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.386228097 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.196533593 seconds)
  done (took 2.409798922 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.330597724 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086095124 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058656972 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066399465 seconds)
  done (took 1.766021144 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067820282 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070056943 seconds)
  done (took 1.35659265 seconds)
done (took 6.971565532 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068079025 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065424123 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084834664 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063497034 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065151294 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065199156 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063536096 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.062973354 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064278184 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065293889 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067921863 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.065831867 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065488581 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065848073 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063237042 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063117203 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065588188 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063246209 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066656801 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063298598 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063317228 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065493014 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063057709 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06337348 seconds)
  done (took 2.82460332 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084313678 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06697918 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071955858 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071652572 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06970285 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070855069 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070756515 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06631709 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071086832 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068152692 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069266561 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069986129 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067676727 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069669579 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067661232 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069982461 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071020918 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06618141 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067846119 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069936765 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070977294 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066224508 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069608796 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07093126 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069400223 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069162781 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067836275 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066170035 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070778966 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069237176 seconds)
  done (took 3.319959334 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071055832 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063287819 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063908871 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070677151 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06340148 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064782156 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063155874 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063581189 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064261749 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063650176 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064496652 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06337779 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063327833 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064326423 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063789694 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066943698 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078734151 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063930405 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063355486 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064179445 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066564254 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063486235 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063611625 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.173961794 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063547559 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.0627752 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063732741 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062926446 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063758258 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062927619 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066334524 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066581469 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062923508 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069741259 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06661716 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062804738 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066913732 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062811615 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064180954 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063382462 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063048299 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062780041 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063484519 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069842771 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063627054 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064667476 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063383764 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064041222 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064053786 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065815272 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062591788 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062880894 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065052025 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064501388 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067045746 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062762182 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06379142 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062993736 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06388128 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062932246 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062839575 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062792113 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065310142 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063660301 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077366734 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069685522 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062886891 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064695656 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063859979 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065802639 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064681721 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076482806 seconds)
  done (took 6.022128211 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092317384 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085973622 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06519108 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064789674 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061914699 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063850362 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067530623 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063678236 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065116178 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069883789 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064295862 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06506414 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064834347 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076379131 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064166126 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065300578 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069926836 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061637262 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063724766 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06758604 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064164827 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067178676 seconds)
  done (took 2.737623173 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156790078 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070182686 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104911917 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073328293 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067795292 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072519424 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069717698 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069529675 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069768999 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067945429 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067661127 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069511155 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067442001 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067672835 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067860592 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067928055 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069793813 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068045896 seconds)
  done (took 2.600928638 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078446693 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066449078 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086468757 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066240069 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065752832 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067935738 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070541767 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074300241 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067864318 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065903206 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074095546 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068008465 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067822639 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065617918 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067922894 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065557323 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067889697 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066135496 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074061855 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070418675 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07080609 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074089243 seconds)
  done (took 2.776698215 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080195922 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067381081 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081857406 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068550411 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061938014 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063939607 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069828239 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065654902 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.06969239 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067497544 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065765423 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064367124 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069247826 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065710631 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069138647 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066098687 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067209424 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065687149 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067178535 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062152886 seconds)
  done (took 2.594546974 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088504317 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067483668 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067692151 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075720898 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067459532 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067359154 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07491435 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066970164 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066899263 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088811848 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067621725 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067039279 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074997499 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072218058 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066830226 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075055475 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075137622 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074842405 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067059401 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067196238 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086921325 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066923243 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074555336 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067285612 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066895479 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066757655 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06704316 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07195048 seconds)
  done (took 3.24461862 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068084202 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066648812 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063836291 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063288291 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063468956 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062914761 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063709654 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063312036 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065725219 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063362911 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065678434 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065622099 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065670548 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066110837 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065718295 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065497365 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065971159 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063545 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063276702 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063402938 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065614681 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065816945 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065509066 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063448657 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063141897 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06556476 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063360834 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063171507 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065870152 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063480095 seconds)
  done (took 3.180173097 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078419871 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073639326 seconds)
  done (took 1.393036859 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06508902 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081084502 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06325395 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069987289 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070471715 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066368144 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073233784 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069769827 seconds)
  done (took 1.794659056 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082539546 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077210735 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068192945 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079790244 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076623279 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082643929 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132239723 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066945693 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07298891 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064294877 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079899141 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065171833 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071966182 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066170646 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071361679 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072352194 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063904784 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07210574 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068320268 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06474849 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067401098 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074757463 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068557673 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061574288 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067179025 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088093024 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077648064 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065931868 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069312739 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073459058 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071572172 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060615877 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066437328 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066662946 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064575879 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07605006 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081244283 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069304723 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074521914 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067261073 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076954285 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061665654 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070800077 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07275701 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076182525 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066571653 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067200515 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061658953 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06413523 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068644889 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061888746 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066408059 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061150837 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075662531 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069600409 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076774323 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065243703 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067796621 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069157981 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069687395 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073017023 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068246271 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068680585 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066122322 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076308385 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070602412 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075279273 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061546826 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061119576 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064202796 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075641317 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088699364 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072429611 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066991602 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067475615 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064578234 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069331209 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067337983 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071924636 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072901504 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066462403 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071987697 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073782989 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066632966 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069225734 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074402846 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064496215 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.06916031 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06473327 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082484844 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065112248 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065116314 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064422916 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076691407 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069517052 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066098496 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.0644048 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073284001 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060220071 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066348843 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066102872 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065994684 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075339646 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069758188 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070402048 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073594324 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.0723048 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065553742 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068042775 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062079737 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065998746 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064528986 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072435003 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059369175 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068019159 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065859023 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065736208 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.201402721 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067613745 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068243027 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075320147 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073290143 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066105746 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064430465 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070150589 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06709658 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070405216 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074627531 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065952323 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062289437 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062326808 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070527554 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067117235 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071159421 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07199356 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069576106 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061846186 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065725838 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071781036 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075815862 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067852235 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067981602 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072811336 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068898635 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066619056 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073670413 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070073346 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066637284 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072960304 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067924445 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062868968 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07019152 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069700608 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065784913 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070275393 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070059768 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069218357 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067743623 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065915648 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074660797 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067912191 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066468616 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066680265 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066048329 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077742835 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069012369 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062349173 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064053017 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076843459 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065163086 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066749833 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065640211 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068850931 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067434604 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065750494 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066946037 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068953687 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077291933 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07166194 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067720051 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072643144 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077854185 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066435273 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069164438 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066430947 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067839736 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067463005 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07539802 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071868965 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071510385 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068968137 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063509339 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0719802 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074395029 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065439641 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064564135 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065611222 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070578586 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071997798 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07047199 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067443944 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064530572 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066881942 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069282788 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068993988 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066212564 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065524832 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072902021 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064720211 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073572757 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06737184 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076667772 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069806523 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061708156 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069436435 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06443489 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072264915 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061700873 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064505271 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066521465 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067065949 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064940745 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067439406 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059471044 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072013938 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072682031 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065613369 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064570147 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065339048 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072282155 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066914258 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068935133 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068238951 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070974369 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07505596 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.0642123 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068296856 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.205061867 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068687622 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062451618 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072922962 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066122081 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066491134 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066123183 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065369677 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070567964 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076653257 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074475814 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061652512 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069976498 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066053448 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066775866 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063294925 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071859713 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070731342 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068512792 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074524021 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06859406 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067372182 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071051191 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067034996 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068382275 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068611136 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069962257 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067807575 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070261373 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067082755 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070309495 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066487146 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064811725 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069146129 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067202296 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067345068 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072339462 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.06698269 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067433648 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069501257 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067863723 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06787581 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067172354 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066470084 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070765205 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067599503 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067565202 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069783683 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06260582 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074127949 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066789591 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074293733 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067651156 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063587767 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074376329 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068978693 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072802806 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06807168 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067283948 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068651404 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066027345 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070015231 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074247344 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064805317 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078002768 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074859642 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067550122 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069938041 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068113333 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068706065 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066008752 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067169224 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067280342 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066314484 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06630469 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070743261 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068662244 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066457988 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067839326 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066705775 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066577274 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067173028 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061354843 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065667693 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065791925 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06651704 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076199514 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067041982 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065887206 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06514043 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067292737 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065112648 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063426137 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074646542 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075612069 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066821093 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073630023 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065366356 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06762447 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076550089 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060496295 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064278061 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063946248 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064098705 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073297427 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066637468 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075130701 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065997694 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064989551 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062935982 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066334568 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.0637732 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059511196 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062881558 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068463064 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064428651 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06412188 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065088007 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067770742 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065975694 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074329871 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064535997 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066463233 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065359689 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.194749918 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068046076 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066832969 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070164267 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067968856 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064878708 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063936579 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066458858 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068296693 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068314964 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06681716 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068366061 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076565242 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067055326 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070516923 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070443054 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062306759 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070208684 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066859145 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067166202 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066838103 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070742425 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070373786 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06806268 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07582433 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067071477 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067939596 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06758965 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064765359 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067393952 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066776368 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067634943 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065977752 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068270289 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075404353 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06545526 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070294958 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067582707 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067556865 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073179346 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067904887 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069809934 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074019574 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067003645 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068809494 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074911643 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070702593 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070131009 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068544247 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067964897 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072939526 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066340195 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073847109 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067863639 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068276203 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068226032 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064766169 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067194752 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066850338 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065648321 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073748954 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068156063 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065943346 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065872146 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064871174 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067478476 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070414476 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074601976 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069371056 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069881115 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062047242 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064437888 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067292909 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064590265 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068006845 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068625075 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071932921 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068569524 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066458896 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065119597 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075029381 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072057583 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069340084 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064140239 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069897642 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067061505 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068703871 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067704018 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066653718 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068150826 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070531411 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068437992 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066026554 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07351932 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070217687 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067547827 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068523812 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06781646 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067324694 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061981873 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067456029 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06886122 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071715068 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06871207 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066610164 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077273667 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064583062 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066449553 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069320017 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065599362 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070415551 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061326223 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067507428 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066025694 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066269745 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06090564 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064703916 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063618117 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06732956 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064882396 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060666989 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075408747 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073771316 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068150724 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064229771 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064312426 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060807682 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060498566 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064331327 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066288186 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066769374 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.074525324 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063935916 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064050472 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060411571 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064874911 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067721844 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068124029 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06236819 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060504807 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064292525 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067766101 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070360391 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063272677 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.064327838 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068093194 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067105631 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062647221 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067776651 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06219894 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.068394 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076976963 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.065305136 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065979185 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.070806785 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072399803 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.065420466 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060148595 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.065402808 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.067930452 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06498476 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.065766251 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.065696327 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079387174 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068630287 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064365957 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.063763479 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.066813645 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.063486438 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.071757049 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064309193 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064478741 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.068645912 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06612776 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072720582 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067192356 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070966539 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.066458016 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.066640533 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062871871 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064157084 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06288391 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06328798 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.065320078 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.065111241 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06790884 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.070773449 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.063494547 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.073657597 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.072630604 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066024448 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061609473 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064004204 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.063263804 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059601191 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065615705 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061655878 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.062159878 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.061860497 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06350278 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06503576 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068224252 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.064850714 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064648871 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06363218 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058837481 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.066796317 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.065692736 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064959182 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062053581 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.064187628 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.064593757 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.067756801 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066549259 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062248468 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066452197 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066180504 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065265043 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.059998866 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07099879 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06387411 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066323563 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064509112 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064000327 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064678508 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.067527042 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068097524 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064933775 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.066619747 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068537868 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065535042 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.061643078 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062036585 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.068162763 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.061988154 seconds)
  done (took 42.290976466 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110375276 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066191144 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064718825 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065390412 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077090476 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066110007 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064441012 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065605096 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065779436 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067644459 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064729636 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06427827 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072797852 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079776166 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076246205 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068723658 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064307969 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065256945 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064151261 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065324301 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072952955 seconds)
  done (took 2.962625557 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077901597 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.072670719 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075210086 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077518185 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069337654 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072367823 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074807477 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072537067 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077403078 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068612098 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086647041 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072534052 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068849002 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068987719 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069045967 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07223523 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077464779 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069188535 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.072067107 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073946569 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072276924 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073681818 seconds)
  done (took 2.965654073 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069954139 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067841401 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068659127 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063007376 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067424874 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062487734 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071142717 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064700259 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070549155 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065917193 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065858566 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065809205 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068050424 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062007708 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067138514 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065320812 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109831246 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07003417 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066498017 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06787506 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062636662 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068889041 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063049355 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062982489 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066210231 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070478242 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067684145 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065050618 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067213939 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065896689 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067153421 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064887194 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068562366 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067546125 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066017957 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066197625 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066693853 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066980516 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062196974 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065361444 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067545829 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062788216 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067430788 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068332646 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064870591 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06449984 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068598044 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067088362 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062101612 seconds)
  done (took 4.649121757 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083161902 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109664006 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068695455 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.0898823 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081059698 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075972882 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070091651 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090664921 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064381298 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065703179 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082605131 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080853286 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066807599 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071524701 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07341368 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066632411 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067946715 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06573228 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070380819 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065972008 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070735536 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073521049 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081388398 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079699957 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070293084 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06555968 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065855181 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070850557 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079207825 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071128562 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071488319 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072271789 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.08207981 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.06887364 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066092709 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068535198 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082944961 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066918141 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069553966 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064260496 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068674949 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071086686 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072925447 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082535188 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067011747 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071911705 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066479619 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063576611 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079001954 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06871475 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074740917 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081068126 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070055223 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066707103 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071082779 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081156286 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066152473 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064784986 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069516183 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078828346 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064653031 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070466369 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080465572 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068680096 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074243681 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080450381 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071402905 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070342138 seconds)
  done (took 6.461514111 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077800835 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.073209187 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081471826 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080598696 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072760689 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073365697 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073072697 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072913476 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073282983 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077676843 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073404952 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.094425589 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069018532 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07590372 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073361211 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073666486 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073668394 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073393745 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073322941 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073396191 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073201083 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081186318 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073250565 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080492559 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.099212777 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068521572 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073042271 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072942956 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081493673 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073343743 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080688037 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073285069 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073033721 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080838375 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080220048 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072830926 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065904592 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072930487 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072898131 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072823903 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068652638 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080847246 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072993828 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068150389 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07370441 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072689061 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080503844 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080279963 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075563928 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077648302 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073050644 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080636046 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073215137 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073272174 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080776006 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106302451 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080463567 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081135768 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073133435 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08052356 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080615498 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087218016 seconds)
  done (took 6.130512889 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086336329 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076173632 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077016742 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062189509 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064580159 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070835693 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064661465 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065111381 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075007795 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075080275 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077453223 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070518143 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073571197 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077644237 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070260627 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073533213 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070731927 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070933962 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074886212 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070607734 seconds)
  done (took 2.826891347 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077772723 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084805253 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06750781 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072801431 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070480356 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072289765 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069225 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070032288 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06793054 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069826827 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076377955 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076651527 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068004756 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072434368 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076642332 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072275956 seconds)
  done (took 2.535810696 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078995436 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074822845 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08096699 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067272479 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064698533 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063482032 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066696981 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062081634 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063104457 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078720641 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066555071 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069191463 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066676406 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065507631 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064047335 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069369698 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063192986 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064017101 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066640652 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078779518 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077112423 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06524976 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067273226 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066663815 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066658454 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071830837 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066119397 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064459797 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064538161 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066597011 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067131678 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070119655 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063675914 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064378343 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065457748 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063677579 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066272083 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066854665 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06898265 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066062033 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064040429 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065700361 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066256 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066783385 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062376923 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066116926 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062178933 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068155993 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063757104 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066152803 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065520972 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068231388 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066596822 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07241227 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068677026 seconds)
  done (took 5.077079287 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081375163 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069602184 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062323061 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064734477 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069477921 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067934661 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070169091 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067929358 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06824071 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064934109 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068602396 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068799728 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068287086 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069798072 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068340224 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069888222 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062487251 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068014693 seconds)
  done (took 2.61587371 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073027534 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066453316 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074252454 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066863817 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066083443 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06917779 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062356279 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065127769 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065059733 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066337362 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065975889 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068483824 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064983605 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068526447 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066005007 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066238073 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068568011 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065111248 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066258388 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06251952 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068463211 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064805994 seconds)
  done (took 2.846859103 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094564522 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082475752 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139230549 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07939894 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084174075 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071858491 seconds)
  done (took 1.931234424 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092459665 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079982632 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067524279 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089133976 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073669906 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067444957 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067934854 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067894278 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076179667 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076281342 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067959462 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076681664 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076271452 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075654009 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07364189 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073143768 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067876861 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067792593 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066799603 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084602892 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067989193 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076669354 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067964116 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067479943 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068110391 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075474319 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076023603 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076351621 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067489944 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07608347 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073374733 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067636703 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076687494 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076535647 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069139148 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075914596 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067440605 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084263092 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073033239 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075771968 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06940135 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073800438 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076028063 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072166158 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076055614 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067654068 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072396754 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067500289 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067932544 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085891895 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073289209 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075135429 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073842602 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076215823 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07668114 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086074112 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076413689 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075560238 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073812267 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079062169 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075945106 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073615536 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075668461 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076596981 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07446469 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075512609 seconds)
  done (took 6.27862722 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085013201 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086841368 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068261338 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076625851 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075750042 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067622722 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06784519 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067697105 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067699812 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067229693 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108234225 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068166389 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075726375 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075921307 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0683255 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067859969 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068467353 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07547959 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067378659 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086646906 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067721354 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075446722 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076038037 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075352757 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076574925 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073782958 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067952101 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067941476 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06762473 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067405838 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072782637 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068347033 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075805832 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067556755 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075385266 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068119372 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067567561 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072578186 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067734139 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073571634 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076136125 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084399117 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067730043 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067596831 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076059853 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068068171 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067519268 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067355569 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067440121 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067267106 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076236095 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076120158 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076228605 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075358692 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067696881 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067677501 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067619367 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067616337 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067733099 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07336512 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075446613 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067713858 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086320842 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067609801 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067820197 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075665776 seconds)
  done (took 6.184994299 seconds)
done (took 129.462002609 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.185925727 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165669116 seconds)
  done (took 1.72777212 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071883741 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098691622 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07794631 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129408279 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067377879 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101788711 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100323637 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077966631 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066030779 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.06643562 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066411272 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069249416 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131659278 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066752878 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066998628 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069187653 seconds)
  done (took 2.719287652 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100122015 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157948849 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099840897 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065843146 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097179043 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073208672 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065065759 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075357438 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071181005 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065261553 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073370802 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070788243 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065684153 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071117043 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071407442 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073352304 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065130379 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072967665 seconds)
  done (took 2.829640385 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103552539 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091900354 seconds)
  done (took 1.595335186 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.162766304 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106576925 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.152147609 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.346837717 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.168032744 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.231486044 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129114698 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.129903569 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.121713296 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.124811899 seconds)
  done (took 3.066384873 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100073476 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.153098724 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.257148372 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116290093 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072514224 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095559104 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116458172 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078580001 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081151088 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.08075719 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080762565 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076704297 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099629426 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074297315 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073610733 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076549445 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102578252 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072690958 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074614245 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077046753 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099886663 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066121912 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074244865 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072531749 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077655502 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077897775 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066143266 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065826736 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077586307 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074400775 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077475523 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094238735 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07801639 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107609858 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070648521 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108861013 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076451947 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074144013 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074314179 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074261048 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07959527 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079225096 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073023599 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07639469 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065652499 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077340735 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065908796 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065673946 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07879922 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067279975 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077975563 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077253396 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10726988 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067520881 seconds)
  done (took 6.030546981 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104686056 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105050648 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07221455 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111032033 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101425652 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071599942 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102022285 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093686733 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103362198 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07034654 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068902531 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070822404 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083115644 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083608778 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113510563 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104792313 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073953132 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071029497 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104485751 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103335977 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069082221 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095832751 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090210668 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102401123 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068066919 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070963226 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068463869 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070665742 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077450797 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079149837 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07002872 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081726017 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085223154 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079011077 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067494074 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06835008 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068569493 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079777079 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080142121 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079723444 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078228082 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067998477 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068488409 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069985935 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07055036 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068470741 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079934796 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08114429 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079557483 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069777185 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071063778 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068611042 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070496274 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080980508 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078266945 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081840108 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080779525 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069060485 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06889051 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072196105 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081277544 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079534893 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079660674 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069927299 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079023922 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068632238 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080331497 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084680579 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068366723 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069806829 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068629249 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069730449 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070263866 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078481352 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078562337 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071038248 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070061534 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068297143 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080167788 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078925294 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068152456 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076911874 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067057593 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069174349 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070062191 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070506161 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078004014 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080599951 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070728571 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068865926 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06959852 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06912384 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067293348 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077336187 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080363924 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078745931 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078299875 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069510044 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078760767 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078837332 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069738025 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080840049 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068311144 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.200418261 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071194112 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079441932 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07911742 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08083852 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070299949 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068625098 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079012367 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082339028 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068930455 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080391534 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082530382 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.081039376 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069635966 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082830296 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069337908 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080804767 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070882853 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080911891 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06998433 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081133116 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069479545 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069221981 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069339826 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080559703 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070667748 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069344322 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070758126 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070716734 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081091071 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084281875 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071731372 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.083071961 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080158912 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070832812 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079595222 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069643293 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080315572 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070473518 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071197526 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068214422 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083836642 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068948546 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069372759 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070548541 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081930824 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069438971 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080971399 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079349464 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068843151 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083132297 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081387914 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078533638 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081405674 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070441048 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069205853 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069664624 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069989217 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079303399 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080436262 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07125444 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06989579 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080234944 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080209177 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068387704 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079554537 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078848233 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079104706 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069102671 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070036917 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080829483 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081176913 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078571177 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078428016 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078745615 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068977218 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077706171 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078819894 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068552955 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08536324 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068307773 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083063637 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080013219 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077417012 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079644177 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.08197944 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081037992 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080754416 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083567648 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068717651 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068189997 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080441703 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068999127 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069713424 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078586672 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070281518 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069696331 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083065541 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068162851 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078973778 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067798632 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078519477 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067171384 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069528294 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082838127 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.201052763 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07221816 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080172012 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070934264 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07909849 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082593017 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079805058 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069064407 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07070226 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080387554 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080128534 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069668985 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069332862 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071281869 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079939844 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07899741 seconds)
  done (took 18.837450273 seconds)
done (took 38.208487665 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.20899719 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151137632 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.199451994 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.1189056 seconds)
  done (took 2.174185948 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122721171 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101840406 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095304838 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06521745 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102163952 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065313083 seconds)
  done (took 1.988165745 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.314096007 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211875145 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183158888 seconds)
  done (took 2.136648942 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199506489 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190094715 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.395716027 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.254364757 seconds)
  done (took 2.578590294 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144608328 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089449029 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066981569 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083150407 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134686057 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.16123798 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101867418 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126576181 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078150424 seconds)
  done (took 2.475740675 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147439392 seconds)
done (took 12.932272578 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.257706721 seconds)
    (2/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.210672218 seconds)
    (3/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.106959344 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.120872481 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.102382607 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082039296 seconds)
    (7/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066814967 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077641734 seconds)
    (9/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.185799911 seconds)
    (10/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.182245936 seconds)
    (11/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.220216911 seconds)
    (12/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076781143 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.079196204 seconds)
    (14/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.196478889 seconds)
    (15/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.189451482 seconds)
    (16/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.109412839 seconds)
    (17/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075768633 seconds)
    (18/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.197435347 seconds)
    (19/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.074208674 seconds)
    (20/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.111390343 seconds)
    (21/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.197542649 seconds)
    (22/309) benchmarking ("sort", Float32, false)...
    done (took 0.126725865 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.08979385 seconds)
    (24/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072812231 seconds)
    (25/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.189675562 seconds)
    (26/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083866822 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.088938892 seconds)
    (28/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.07115739 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.128539346 seconds)
    (30/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072986627 seconds)
    (31/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.182433001 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.102259499 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087647705 seconds)
    (34/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.177199746 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066466601 seconds)
    (36/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.175860977 seconds)
    (37/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.205654995 seconds)
    (38/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076445585 seconds)
    (39/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.197621993 seconds)
    (40/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.176021152 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072076646 seconds)
    (42/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.09791265 seconds)
    (43/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.111964094 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.089036525 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133803428 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069007442 seconds)
    (47/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.179290259 seconds)
    (48/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.166438536 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.089160986 seconds)
    (50/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052578972 seconds)
    (51/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068371742 seconds)
    (52/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053899696 seconds)
    (53/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.107607973 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06494627 seconds)
    (55/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071332146 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072261998 seconds)
    (57/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07678891 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072124768 seconds)
    (59/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.149454161 seconds)
    (60/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071779106 seconds)
    (61/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.185745532 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066864932 seconds)
    (63/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.109134107 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067435487 seconds)
    (65/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.110468301 seconds)
    (66/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070708521 seconds)
    (67/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.148525633 seconds)
    (68/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05346576 seconds)
    (69/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074973587 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.140509839 seconds)
    (71/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.06856196 seconds)
    (72/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.092224173 seconds)
    (73/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.073428973 seconds)
    (74/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065838681 seconds)
    (75/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.158519289 seconds)
    (76/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072940634 seconds)
    (77/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.065392294 seconds)
    (78/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.071813178 seconds)
    (79/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071731206 seconds)
    (80/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.07716046 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.066071981 seconds)
    (82/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078375827 seconds)
    (83/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071263968 seconds)
    (84/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052557337 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.261320224 seconds)
    (86/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080304519 seconds)
    (87/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.176362366 seconds)
    (88/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.412403827 seconds)
    (89/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.141063769 seconds)
    (90/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052094525 seconds)
    (91/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076392257 seconds)
    (92/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051680261 seconds)
    (93/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.106766196 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.10599529 seconds)
    (95/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.098934792 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091324331 seconds)
    (97/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.109537565 seconds)
    (98/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071704123 seconds)
    (99/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052849581 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093616351 seconds)
    (101/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.053068497 seconds)
    (102/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.05171519 seconds)
    (103/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.0733341 seconds)
    (104/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.111258193 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138013281 seconds)
    (106/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077509461 seconds)
    (107/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.17509758 seconds)
    (108/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074510802 seconds)
    (109/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.187058652 seconds)
    (110/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077048138 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.086316501 seconds)
    (112/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.150984146 seconds)
    (113/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.159230141 seconds)
    (114/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.06571321 seconds)
    (115/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075938038 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.101390542 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135375639 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086811599 seconds)
    (119/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.152453467 seconds)
    (120/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088113364 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 0.134103889 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073694034 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072665821 seconds)
    (124/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.100022888 seconds)
    (125/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075244354 seconds)
    (126/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066399655 seconds)
    (127/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052126392 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089024462 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070569743 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071849884 seconds)
    (131/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053836456 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122582535 seconds)
    (133/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071913949 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065055609 seconds)
    (135/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072400512 seconds)
    (136/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070122124 seconds)
    (137/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054473519 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.123295665 seconds)
    (139/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065564867 seconds)
    (140/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051763569 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065235677 seconds)
    (142/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062200773 seconds)
    (143/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072105655 seconds)
    (144/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051728521 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.141092391 seconds)
    (146/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052083496 seconds)
    (147/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.150432884 seconds)
    (148/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.095175564 seconds)
    (149/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060720639 seconds)
    (150/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076908993 seconds)
    (151/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.105447172 seconds)
    (152/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.161302312 seconds)
    (153/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072969026 seconds)
    (154/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050984882 seconds)
    (155/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051211766 seconds)
    (156/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.136892957 seconds)
    (157/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087932094 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.076037935 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065179628 seconds)
    (160/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051771143 seconds)
    (161/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051657786 seconds)
    (162/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074934167 seconds)
    (163/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051017929 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066904656 seconds)
    (165/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.098445224 seconds)
    (166/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070324979 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090965211 seconds)
    (168/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051643993 seconds)
    (169/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075091045 seconds)
    (170/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072027218 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065436997 seconds)
    (172/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068102792 seconds)
    (173/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.172977 seconds)
    (174/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075661834 seconds)
    (175/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073614381 seconds)
    (176/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064206715 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065063917 seconds)
    (178/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.06516197 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.091742273 seconds)
    (180/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053778828 seconds)
    (181/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.104287553 seconds)
    (182/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071417729 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07170584 seconds)
    (184/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071593961 seconds)
    (185/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072936127 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065160581 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07343154 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088252946 seconds)
    (189/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065122217 seconds)
    (190/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.05311074 seconds)
    (191/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065694953 seconds)
    (192/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061484174 seconds)
    (193/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.174920418 seconds)
    (194/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.144870105 seconds)
    (195/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087436452 seconds)
    (196/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050806621 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087519735 seconds)
    (198/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.232027818 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06502216 seconds)
    (200/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.152020485 seconds)
    (201/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168903816 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.137626153 seconds)
    (203/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081328901 seconds)
    (204/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070187017 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.166608457 seconds)
    (206/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.188010978 seconds)
    (207/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.186462667 seconds)
    (208/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.052163585 seconds)
    (209/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067281047 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075384952 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073760885 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092915371 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065761142 seconds)
    (214/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.06118127 seconds)
    (215/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07351992 seconds)
    (216/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068310086 seconds)
    (217/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073089509 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089632821 seconds)
    (219/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064539872 seconds)
    (220/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066072606 seconds)
    (221/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.053504884 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070891895 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089859846 seconds)
    (224/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051855423 seconds)
    (225/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.165325511 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090533955 seconds)
    (227/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118816119 seconds)
    (228/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072642801 seconds)
    (229/309) benchmarking ("sort", Float64, false)...
    done (took 0.125588871 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.06435605 seconds)
    (231/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080849623 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.107770483 seconds)
    (233/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061104561 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.117877294 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.131867436 seconds)
    (236/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068211657 seconds)
    (237/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078697544 seconds)
    (238/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07653885 seconds)
    (239/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051367171 seconds)
    (240/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052383187 seconds)
    (241/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052318396 seconds)
    (242/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.052346696 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135999742 seconds)
    (244/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.06718125 seconds)
    (245/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.05198709 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.133910353 seconds)
    (247/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.06079672 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065354771 seconds)
    (249/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053152834 seconds)
    (250/309) benchmarking ("sort", Int8, false)...
    done (took 0.139894572 seconds)
    (251/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052140678 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064972173 seconds)
    (253/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071979942 seconds)
    (254/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051180711 seconds)
    (255/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078388615 seconds)
    (256/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052517315 seconds)
    (257/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051312966 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093145108 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065696115 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072147686 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072844656 seconds)
    (262/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072823311 seconds)
    (263/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051269866 seconds)
    (264/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07134752 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05161254 seconds)
    (266/309) benchmarking ("sort", BigInt, false)...
    done (took 0.183058505 seconds)
    (267/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064658419 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089861949 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065254605 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085984093 seconds)
    (271/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072974761 seconds)
    (272/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174357991 seconds)
    (273/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087702529 seconds)
    (274/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052508287 seconds)
    (275/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06520352 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06575016 seconds)
    (277/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065300862 seconds)
    (278/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052586846 seconds)
    (279/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052113365 seconds)
    (280/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064652428 seconds)
    (281/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066979317 seconds)
    (282/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051259703 seconds)
    (283/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051331149 seconds)
    (284/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067962552 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072341751 seconds)
    (286/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066790504 seconds)
    (287/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.07796219 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063887808 seconds)
    (289/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063021251 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.091248826 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063843772 seconds)
    (292/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051866688 seconds)
    (293/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064722338 seconds)
    (294/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051502022 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072425629 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066032072 seconds)
    (297/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051793397 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070882307 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.101254442 seconds)
    (300/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065935468 seconds)
    (301/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051618489 seconds)
    (302/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072025817 seconds)
    (303/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051178922 seconds)
    (304/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085822792 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070286949 seconds)
    (306/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052158299 seconds)
    (307/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051177206 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.085774911 seconds)
    (309/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065321158 seconds)
  done (took 30.499959284 seconds)
done (took 31.944311276 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087322305 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092886826 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074422836 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093523212 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080663939 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076378743 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072172637 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077845362 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079927966 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080892723 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077826291 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054488247 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073595023 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073602315 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073583346 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090383624 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077939606 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072441317 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072472831 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064715152 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072383859 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065571089 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067517654 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054748015 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077416186 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071572724 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072169293 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073540118 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065417736 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066188204 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068725352 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073389072 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065456065 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07771362 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072297052 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072712555 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074305538 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075976039 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067258884 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065751549 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073641596 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065661587 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072670164 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073291294 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071434334 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070953985 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072772172 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077754591 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091014418 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068313863 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073707632 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075151774 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076023531 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072066872 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069102919 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072501234 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070430739 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090402811 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.0729101 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067657821 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073820246 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073140793 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070702864 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072452052 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072406812 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075036376 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074857281 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070389568 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074641472 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070652444 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065203915 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072494229 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06839154 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065240297 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074988509 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076257075 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063806342 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070929303 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071810326 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070846913 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064640928 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067540645 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066519278 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071213708 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06688361 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054489524 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068811862 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071378826 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064268895 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072652386 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070828122 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.0715742 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066481312 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075110672 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064908916 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070557035 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065604966 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064987101 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066797314 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068812134 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064896813 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06662766 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07371407 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066290132 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071122315 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078346415 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065045651 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071247884 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064029856 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064406058 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078697902 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074193527 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065305919 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067542749 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064134123 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071875793 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064102679 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064867204 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065043202 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065218323 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070738946 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065311413 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066861686 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071854118 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07672816 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064816227 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067695487 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066577399 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064529367 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070029251 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064472258 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.200343045 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069784278 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062446431 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068010512 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065710707 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072170701 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068422016 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072527452 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066805529 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073158569 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070316902 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070970844 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070335621 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064773118 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058580965 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068649632 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068076189 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067552288 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065508714 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067019208 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066008997 seconds)
done (took 12.44162323 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069421278 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143209457 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098580437 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095281907 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086123697 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066586672 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076356959 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101591821 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067708542 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102519829 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087441749 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084844739 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112519804 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064360001 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066073757 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069577542 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066951768 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081587647 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.10095462 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08647303 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115745862 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065450119 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095201809 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089731521 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086785689 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101120063 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066563242 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069654942 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069305616 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090913549 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086040601 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069733601 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066250516 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101011428 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092032215 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08275975 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06640196 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082402578 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066194822 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065828682 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066855814 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097187272 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079739367 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080166767 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069663924 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069107939 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067228961 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083181701 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.08869376 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078229176 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086298444 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102933462 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068263785 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.06562996 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.0647483 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085438989 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065086243 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06850242 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066362224 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067965722 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065758432 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069337045 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080825694 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082176927 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069788669 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080120525 seconds)
  done (took 6.825498264 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085860526 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090478245 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08269314 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08347349 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065791393 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066651961 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066633845 seconds)
  done (took 2.074595581 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069486386 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087656645 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088736674 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089022767 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08465921 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087059577 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075403737 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066493086 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080533425 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067535705 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087169627 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101997492 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066746704 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072504667 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090427941 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066398665 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090078977 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066302832 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069361131 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.0893294 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06805403 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081819644 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07001354 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06666427 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080282671 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067171497 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113159813 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070584059 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067726547 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069330317 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064132382 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106668241 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080296773 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075711599 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066154251 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080709912 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080695251 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064728696 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082584492 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071644816 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079761553 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066614019 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067134528 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064685735 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070498854 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076402545 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067190919 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066743443 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068604507 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085923004 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066830163 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079659031 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069549727 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068943998 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067518733 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070041986 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075963986 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067243737 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086011843 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06778257 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082642325 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082854444 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080436227 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082768198 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068911008 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080178372 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079771854 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068828991 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067728692 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069573704 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082316838 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064713854 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068054894 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.0765822 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068355334 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089479776 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088679085 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067651222 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075176279 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066776696 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066775229 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066346056 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088766643 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06875106 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066203504 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070163144 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068889945 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064644534 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065574455 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069750249 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064622267 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068149009 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069130753 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069553727 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068917533 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082653519 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068706315 seconds)
  done (took 8.782088397 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071493483 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067517103 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070098696 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067482993 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068167941 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068437969 seconds)
  done (took 1.963649045 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096796217 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069410646 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080642036 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07309279 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104843042 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086575504 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086737831 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078870081 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083677403 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078515244 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086928994 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088052888 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092318229 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07323799 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086456417 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07229138 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086957557 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075573946 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078556214 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073223156 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086694714 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072716479 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073360564 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081721593 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076122727 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071888356 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067252228 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079072632 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078329775 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079416519 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072441577 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075594719 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070820271 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078347987 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086876508 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071170899 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071918736 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077485713 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072463477 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075594171 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088055657 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072690383 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075006691 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077050169 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078274537 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070499348 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076964168 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075673339 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085869997 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07738435 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076863832 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071153672 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07507922 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076888084 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07025047 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077739241 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07669721 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086165948 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07208424 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070383098 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06867605 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075213969 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077632211 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075264434 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078592741 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076547231 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070191376 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07253896 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072485241 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072062536 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077026733 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069604249 seconds)
  done (took 7.117678417 seconds)
done (took 28.284924819 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.544146857 seconds)
  done (took 2.059696423 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.610019124 seconds)
  done (took 2.151533807 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.956029176 seconds)
  done (took 8.494344336 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.398355487 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.472376929 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.687909093 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131589536 seconds)
  done (took 3.26914891 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.674334386 seconds)
  done (took 2.226104808 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.214283131 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196816971 seconds)
  done (took 1.970707306 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.395017074 seconds)
  done (took 1.934994057 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.115332554 seconds)
  done (took 2.65772399 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.271485956 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.170738721 seconds)
  done (took 1.989150421 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.462878021 seconds)
  done (took 2.006741749 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.982283676 seconds)
  done (took 6.527699079 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.208431985 seconds)
  done (took 1.80758301 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.245257854 seconds)
  done (took 1.794054483 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.710357389 seconds)
  done (took 3.262910022 seconds)
done (took 43.699888389 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082263957 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081239034 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08061231 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078392264 seconds)
  done (took 1.860297351 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078891696 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072115245 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075851687 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072559645 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076383296 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072238283 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073859428 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076568848 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07220324 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072722214 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072164123 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072305122 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074324839 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073818342 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070584987 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07455693 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075445578 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072034796 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075389649 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072124333 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070393633 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074394981 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074203621 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07153813 seconds)
  done (took 3.322355971 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080884773 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072695072 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074735618 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071783892 seconds)
  done (took 1.863474252 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080058596 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094735731 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089380783 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077610474 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091773375 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085453947 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068878641 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068384211 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07278761 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076918662 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06778609 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095502765 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087344441 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076487598 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078681188 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06544286 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067820181 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08667661 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076988638 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077497277 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069637651 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07680844 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067445945 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087542594 seconds)
  done (took 3.445942737 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080329615 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102854637 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077165099 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087000644 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089768323 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064975207 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074118553 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.08900967 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121969865 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065265708 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070039938 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065171249 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072360041 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065364674 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.0756697 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104217613 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.10725742 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068242371 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095060063 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065306825 seconds)
  done (took 3.209944803 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075331651 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071010991 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065656025 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067735714 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076885043 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072965255 seconds)
  done (took 1.993469386 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070311473 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067662716 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067037286 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06657924 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071766403 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067005812 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065784585 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067362039 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067369527 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066565266 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066378579 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06507653 seconds)
  done (took 2.367602575 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.1764971 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068542881 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069119827 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065798178 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070871581 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065940237 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079369493 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067367698 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089993195 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066091766 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066086349 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068156108 seconds)
  done (took 2.514241865 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210922141 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07798926 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23661234 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13624669 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111019733 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114851611 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104343368 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113128981 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142771232 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10161619 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167217647 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165411091 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106655202 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136937025 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088808271 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097502319 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155742336 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161578104 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10301002 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165136154 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143423208 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124223819 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146166166 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100700184 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105847659 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120883571 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070912241 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079357571 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169651348 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130705939 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14714857 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110423973 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093262582 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175495585 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170585175 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142239696 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133012368 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083380438 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101547269 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132175999 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19919496 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088403354 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161422882 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246661223 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083281517 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133619966 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119891743 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119432243 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106802141 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089492678 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146485695 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183770652 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138226124 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087013837 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112258543 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114109277 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116170152 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103445243 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181711407 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161245482 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127191608 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071033855 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09989082 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153780799 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131147404 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108848947 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126353969 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093022519 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132422541 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153750526 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117683607 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143338376 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127841843 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087930704 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118638038 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13903802 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127524765 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169227542 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124021185 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072151721 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124753057 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102816702 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081364625 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140742548 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07495858 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174171844 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097601204 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105501576 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112278066 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10774799 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107889066 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159869944 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142949927 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.246494856 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065676475 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1039646 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119889449 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148975994 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088297637 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108542012 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116173654 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077609618 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139918935 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074570493 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123700486 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075009629 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124823341 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133137479 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075625095 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121541747 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101003713 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099989472 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133514751 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159881355 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088705476 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082168645 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166617808 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121690607 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103885049 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143651798 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155400386 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098694535 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102141517 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149233125 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178969362 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089223935 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162393462 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107242002 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083245928 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087200071 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123443066 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111584421 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12205431 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082129214 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118708931 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167500094 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074474206 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095306261 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133136412 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078516146 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079944253 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102688281 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099294972 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094614169 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099199138 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10379016 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136257308 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121768096 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104111363 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27190202 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099935525 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170649151 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088844492 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100380907 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104397253 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069992213 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136940922 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157325552 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079252034 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164477509 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123799927 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105728431 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118521051 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082529264 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140210557 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078229801 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070124073 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14435563 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110472264 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10998421 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.15034821 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104804675 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.12764269 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120013502 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134975401 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132044814 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.12850547 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105703624 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088151834 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111891732 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125186761 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072872876 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090777319 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079537846 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103313584 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095119166 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082815395 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14207882 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124380786 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099866534 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111144731 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096112556 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146608534 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076163929 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129087217 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118352474 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092859219 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150200825 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151035754 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130541097 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098531215 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143016486 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069234778 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07307634 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.235045717 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125534315 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083076236 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082652134 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118032129 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146529544 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129549867 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13929923 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110554564 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12175711 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155501404 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.06932821 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115166198 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149726055 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122239185 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10438142 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089877884 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098359303 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141161377 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107391866 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181431414 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114535475 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125844898 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151972129 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099185739 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07938376 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1076563 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135257875 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104458477 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144805256 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099445611 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087538641 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109914687 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073672723 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099570296 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126846461 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119758818 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135022768 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114163589 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13254675 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076753325 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116357257 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120168855 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122496108 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063895726 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119121009 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160367967 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092799455 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117492368 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152177629 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078666326 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123196561 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.324657745 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146529146 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084502271 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110272698 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119184655 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128750854 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119997636 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140605153 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108372139 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134702979 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10876232 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085478272 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087140199 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096997515 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10508024 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094233487 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107855988 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11529733 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094862668 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131992848 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103806814 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109989004 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117641918 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096235805 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089529771 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096679708 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173920223 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119755782 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171171015 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098645987 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144080563 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163663241 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074594536 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078463224 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077330204 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139087383 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083370649 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130350429 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097795209 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105393647 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123467256 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141463677 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094332651 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068224846 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108730353 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134646853 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112095346 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097429139 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103221312 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161476624 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.09956814 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078925587 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115576828 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104204412 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101505025 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.317758214 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063173147 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097454125 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076285434 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08111321 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128006598 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15174829 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080945458 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10258978 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119062789 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110897769 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12787083 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101651437 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099383391 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113759161 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150577458 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129009662 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089724538 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112645581 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129671029 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156928841 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104939634 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094787233 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170911778 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168901101 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160541574 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088065221 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114009702 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113822827 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108674216 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139317329 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082470019 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163356036 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081414268 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135379302 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103650871 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089948834 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129381739 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098767794 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088088541 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148109701 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117189063 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082384765 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077419573 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117240377 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119861317 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10586857 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074838359 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137460185 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072166351 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131590039 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167059636 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080182547 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.251866967 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100349213 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080062364 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108185477 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103634286 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09020744 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098621251 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173318205 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087834979 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14990545 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141604374 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11417735 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135885392 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099550983 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635066148 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077279903 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151613838 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116326589 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173598517 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097234693 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117642953 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108784047 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123970545 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14484452 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104588556 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175007098 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131608275 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116087036 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079175741 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102417039 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102624451 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088502921 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105009552 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113381124 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11587118 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093424091 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115916175 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122764182 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082274939 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095029616 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155204006 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11660979 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143743637 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13978174 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084498984 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11674018 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137696114 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079440682 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121374746 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150743752 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104659934 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243534207 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082791989 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102025395 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17003838 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072976581 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164079288 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119740074 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109454589 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112750317 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114292643 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132076482 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107353919 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121040471 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09385347 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110394641 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112871781 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08193456 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076565743 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104231404 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112448538 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.09759308 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099165522 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097811803 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151796172 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071255465 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09481664 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103897302 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146163833 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174002737 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087335557 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082491895 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118026744 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112770154 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113420207 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119838251 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078987864 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081749025 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081724353 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076707667 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107970338 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111644621 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104159334 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111004924 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16404913 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082210717 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.22494921 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094724825 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104532181 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069212639 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078052132 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09556222 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096947096 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10769538 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099917277 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168631536 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093696486 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088675412 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091335898 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071947484 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227065486 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132684232 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110899037 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11922621 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097428365 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062582181 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108787546 seconds)
  done (took 58.794217352 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.11115714 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082763105 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097059215 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149393672 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122337148 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211660953 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157138007 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199006125 seconds)
  done (took 2.798042629 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070860946 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094365312 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099218209 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082576899 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066799208 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068472209 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.224255534 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080358442 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066306938 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.08809159 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079132333 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068961 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.418336583 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065571705 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067552229 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.0630516 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067025146 seconds)
  done (took 3.426779391 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.371198404 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.599483348 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.370658816 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072914412 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.847360308 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091620344 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.040094181 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.129891426 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072306681 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.525696465 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.70861963 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123697457 seconds)
  done (took 18.621764659 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078004425 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068781023 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083896807 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08333548 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072300498 seconds)
  done (took 2.053134408 seconds)
done (took 107.858684026 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081709809 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.396289448 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053201838 seconds)
  done (took 2.144749425 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085591104 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084176076 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084536875 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08185899 seconds)
  done (took 2.010758518 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07643824 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076017013 seconds)
  done (took 1.818917634 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.222414001 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138049784 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086104 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084559769 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077334238 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078079778 seconds)
  done (took 1.919147719 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074269516 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075409205 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072881962 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075945382 seconds)
  done (took 1.969741633 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077694524 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052727128 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055112107 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055234902 seconds)
  done (took 1.914932818 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089038748 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077983168 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077988699 seconds)
  done (took 1.919882316 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103766466 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084509681 seconds)
  done (took 1.862961239 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08352872 seconds)
  done (took 1.760163754 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.102023114 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.115763955 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127799499 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108645313 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135621593 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110560992 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085052827 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086100133 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077012327 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086968775 seconds)
  done (took 2.710709627 seconds)
done (took 22.225087077 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080168941 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.372396858 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360393387 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088858447 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667219027 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356117854 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.005468022 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091712121 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112850794 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067064761 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083871043 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648572974 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.996499936 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323576851 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.981892582 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.416308403 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650765706 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06797693 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067627989 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067504429 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.988709093 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067416761 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067480505 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067908526 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649170326 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370563144 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0677194 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.412910069 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067718124 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06946319 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354375414 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067316097 seconds)
  done (took 16.41114704 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072520974 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117622739 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07395659 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083887508 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070911791 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069362013 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070988122 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068619351 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118537587 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067715003 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084169877 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067396105 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071695495 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068285037 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086682116 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067842585 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068600912 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068421576 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067959874 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068506537 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086170536 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067306546 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067472275 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068187519 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067456209 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.07900196 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067639452 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067897451 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067845205 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069685692 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07104248 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068369293 seconds)
  done (took 4.06166008 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117924817 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123866409 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07375716 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103194473 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112241969 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070058441 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142496058 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092167525 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127021043 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067596902 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084546357 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06773329 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100297721 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068618893 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087541817 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068241305 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069297876 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068782012 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06804535 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068086621 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086608019 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067868028 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068240827 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068506542 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068400419 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080960707 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068353544 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.0682762 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068277471 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069889427 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070972927 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068477478 seconds)
  done (took 4.317145946 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074535447 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074675434 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082740009 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083053506 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069316347 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071710878 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072472503 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069205358 seconds)
  done (took 2.28985238 seconds)
done (took 28.754139568 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081612642 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070712014 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072607275 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080333426 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072895166 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078190993 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067147178 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074053613 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071636425 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072474025 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074779004 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067205658 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070633063 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06673434 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073009876 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067526817 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079137289 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07139716 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078619755 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079209364 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070090303 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07313246 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074186311 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078700522 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078832007 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078570505 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076911986 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072502896 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068928875 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070005152 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076203288 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083270048 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067999675 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079024999 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067782469 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067522199 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071222643 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067749259 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078504432 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075887692 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069156157 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075574782 seconds)
  done (took 4.75878894 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089983677 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090176696 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084064737 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06189009 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066408898 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064451495 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088047678 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059272895 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059310406 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08685073 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055689802 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059074794 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062359611 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053963143 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059127219 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056881725 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061309242 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055493696 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.05901015 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059078348 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057648135 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053985408 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060289089 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062458946 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058571272 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061752528 seconds)
  done (took 3.382960568 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077064343 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08369391 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087595535 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125602849 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103278951 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076400626 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.07714554 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091384373 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084385784 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066147618 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070377391 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09266353 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087426439 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073087576 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066685414 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083623658 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081350205 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068486746 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072717399 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089954192 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083319036 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082964641 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092048195 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.079904355 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066433635 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069464054 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070685167 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080478824 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07151789 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075860088 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070821766 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070234882 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069411372 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078166934 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070429742 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068610013 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089839668 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076816208 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077378219 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067610715 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070452386 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068280184 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089072776 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.121745189 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06662802 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073645301 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074770242 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076147197 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067010967 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085491294 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077868808 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067027153 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070148803 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066453769 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067319242 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080291885 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068904481 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069634786 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075774034 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070036563 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08493628 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070632502 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082250028 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066991715 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074511241 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066178254 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067818145 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066556509 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091666574 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069021371 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107621473 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068608794 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068103515 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075866298 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074615511 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073428541 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067493394 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082283658 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076940635 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070806781 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075476041 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071025586 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070336687 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087459461 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069403368 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068605011 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068241848 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073530289 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069823743 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06879146 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079711259 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067142408 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070469447 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083638104 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067046662 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068641539 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07314119 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.0719042 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066840671 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077709729 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071802568 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067875532 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076228512 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067272731 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070378653 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077528291 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073768489 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06610022 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072501652 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073433483 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068093967 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068561693 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.06969763 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068555387 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075351761 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073075082 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071307503 seconds)
  done (took 10.543233446 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165333452 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153255505 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.06990223 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14387406 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075972272 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079239574 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147062122 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093615329 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067393234 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068051574 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068592421 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109261492 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105600604 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115159179 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078659494 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067272319 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082671688 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113348574 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148690141 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142143989 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.0833145 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076171353 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069697556 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068934231 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070057966 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077497239 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085172851 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076538548 seconds)
  done (took 4.429287079 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083715265 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.097784998 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07414741 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088332689 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090675927 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067538694 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069513227 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069370029 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079810267 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078374012 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067128874 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07333564 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074373173 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071102784 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068609609 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074485952 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074613244 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069163777 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070721798 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072864686 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077079328 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080341255 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071330661 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067015273 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073837102 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066485251 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064159092 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084490102 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067612522 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089605773 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065294233 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074342251 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081322606 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068124602 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067381545 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067205678 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067454227 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066855507 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068850991 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065870184 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065781655 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057178998 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066291713 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079319072 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073344727 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05656979 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072044259 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072571738 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072450366 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065077761 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070134104 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070048219 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070672638 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074354856 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07189603 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072438003 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.06814896 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065149854 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075315272 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066944907 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064272204 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065640057 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071557587 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065507061 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075045211 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071683207 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066241198 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066927615 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.06869243 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073561542 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066861639 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070010868 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064556511 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.06894061 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072098471 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069093017 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068184191 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065710656 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067112947 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067491623 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055216483 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066784727 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053394099 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070025533 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065552212 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065433763 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067343689 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071935822 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.07953311 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068705923 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072799562 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068126636 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066683639 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070547177 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060525492 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069663521 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082323299 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082227304 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067386768 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065704634 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081425012 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071843959 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066341162 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055960686 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074693785 seconds)
  done (took 9.150705667 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091747059 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070234026 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083351206 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090066586 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086219733 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074682862 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076323487 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068995236 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081629437 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073291909 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076186944 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068098157 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076626039 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076622321 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069773789 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07656195 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071818801 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082340494 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081951984 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068036992 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075475583 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079905354 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089070868 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.079852454 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.077856013 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.079797494 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088579067 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071972361 seconds)
  done (took 3.919913323 seconds)
done (took 37.86936738 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.764606222 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.016370449 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.760569117 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.173102489 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.84535885 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.084920888 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.769981779 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.766647669 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.896298345 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.795152706 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.990793752 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.812253056 seconds)
done (took 65.369933052 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.85252553 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.893436153 seconds)
    (2/2) benchmarking "String"...
    done (took 2.033064944 seconds)
  done (took 5.618993526 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.054305045 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.360241034 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.001330849 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.755373253 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.759713983 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.058078256 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.571643138 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.283406247 seconds)
  done (took 30.485330808 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.871217181 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.985290529 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.43637658 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.496837892 seconds)
  done (took 15.531622321 seconds)
done (took 63.315876109 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.791701916 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.769691711 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.779725048 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.738541727 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.814423602 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.776443564 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.912803315 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.782669341 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.75423458 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.749181253 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.754955148 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.189367192 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.760987451 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.963771181 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.755362919 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.768420501 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.80349873 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.159230874 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.910382933 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.762302337 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.77629476 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.801965674 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.759110045 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.766425332 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.810128711 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.754813536 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.202245025 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.761770306 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.380273491 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.756360166 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.782342321 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.138402957 seconds)
  done (took 203.080948889 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.756646123 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.819660921 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.894269039 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.759959432 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.243430536 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.935950743 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.886512392 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.300840459 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.761834184 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.768584615 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.989031315 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.762749042 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.017912047 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.747942604 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.787963261 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.846622064 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.010086414 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.032012902 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.790517802 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.933775002 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.766107508 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.869554441 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.803023905 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.974692054 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.76690705 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.825500258 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.908022709 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.773081617 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.946918348 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.977683293 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.770011917 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.775601375 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.981320467 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.636760575 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.766043569 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.778029073 seconds)
  done (took 170.062422418 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.923052859 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.763391792 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.758882281 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.760300522 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.77126552 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.757495492 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.881242313 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.884206304 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.219718573 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.814997896 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.80685576 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.578090873 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.758203504 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.827217161 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.769109135 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.757997138 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.778742269 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.786597662 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.7617777 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.759792449 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.884939268 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.769784181 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.915175954 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.764111041 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.761278841 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.765858999 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.13075805 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.763857321 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.76588178 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.022805407 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.758326048 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.760164833 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.639293005 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.414839391 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.764433267 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.844416845 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.758761063 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.770334688 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.759965831 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.981814543 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.75735545 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.76153866 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.769602405 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.932351398 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.756780751 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.761067935 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.887194837 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.252733917 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.757891622 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.760781891 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.765371449 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.910454686 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.42099931 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.76235845 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.761192514 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.766188247 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.761350267 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.763032089 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.767930039 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.740599092 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.833357422 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.763341871 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.767062418 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.764490309 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.766785521 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.761759241 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.932157081 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.760195738 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.076349308 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.816201993 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.982438817 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.882418683 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.766281479 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.82940198 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.854666242 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.759548085 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.762613435 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.762782832 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.764355524 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.842610595 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.758459049 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.888173253 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.769545945 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.762775301 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.812779165 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.762545956 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.831298101 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.760580491 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.63405548 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.762747017 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.762036076 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.068643396 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.82777503 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.759719295 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.761844089 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.761606937 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.892653067 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.88343094 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.526511312 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.764174019 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.730707097 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.776796892 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.961594868 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.77848077 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.946792101 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.778458245 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.858900497 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.779542852 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.778092345 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.775126863 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.809145503 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.777220992 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.833408191 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.772925875 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.14916293 seconds)
  done (took 400.428501627 seconds)
done (took 777.246464477 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.482245708 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.440320139 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.54195912 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.462347755 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.438588177 seconds)
  done (took 14.079798781 seconds)
done (took 15.793284289 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.866356021 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.87387765 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.805801454 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.867671409 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.798937248 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.868274448 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.852006165 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.80878489 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.834996913 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.80288395 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.83880963 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.801659761 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.796153252 seconds)
  done (took 25.529325236 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.014802965 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.02110089 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.848747236 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.023572487 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.827758464 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.013110626 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.944609597 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.933621005 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.933134898 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.800679107 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.789475465 seconds)
  done (took 22.869502894 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.016589401 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.016815168 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.85172776 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.025984835 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.821985328 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.020530343 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.941883407 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.937985665 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.92907859 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.791813145 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.79166168 seconds)
  done (took 22.856648145 seconds)
done (took 72.970725147 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.790133472 seconds)
  done (took 3.50365063 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.809684064 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.944107438 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.792512708 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.789239088 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.787034771 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.786899607 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.785474703 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.786965474 seconds)
  done (took 16.200796694 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.792779069 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.785359029 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.784222039 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.784018299 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.787510605 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.784409392 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.789668522 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.787857614 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.782517473 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.787923788 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.784535187 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.785795 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.78950728 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.786172898 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.785296144 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.786840796 seconds)
  done (took 30.300375657 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.792850019 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.78673794 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.783804333 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.787546401 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.783187442 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.791093578 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.782544558 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.778579207 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.779835511 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.780038271 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.777948839 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.784403626 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.779921625 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.77856729 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.780186871 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.783145523 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.77689956 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.784223454 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.784482336 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.777339072 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.778448568 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.777858502 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.785130299 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.780441899 seconds)
  done (took 44.490793125 seconds)
done (took 96.203019918 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.679785295 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.200451426 seconds)
  done (took 8.596002107 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.787170041 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.785306657 seconds)
  done (took 5.326336308 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.787113519 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.787876172 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.786011335 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.7841302 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.786947256 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.78574288 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.786961544 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.78384005 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.788539693 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.78250007 seconds)
  done (took 19.575143778 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.785854104 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.782138222 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.782100608 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.781441518 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.787101833 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.781189749 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.787197274 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.784354838 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.783296895 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.780256713 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.785095259 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.78356658 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.785857271 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.781317036 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.785375289 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.784047814 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.78353431 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.783660722 seconds)
  done (took 33.821710638 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.786489269 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.785976458 seconds)
  done (took 5.287993056 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.78851859 seconds)
    (2/7) benchmarking "second"...
    done (took 1.783209406 seconds)
    (3/7) benchmarking "month"...
    done (took 1.781361129 seconds)
    (4/7) benchmarking "year"...
    done (took 1.784218455 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.783669021 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.779697643 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.786528659 seconds)
  done (took 14.201012652 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.787383228 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.955103518 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.025134491 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.450190633 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.783363816 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.78875204 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.73211207 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.790268409 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.794693394 seconds)
  done (took 19.820570901 seconds)
done (took 108.344540802 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.579117195 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.778860362 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.168625974 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.838035469 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.834802787 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.122032431 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.782501946 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.009177502 seconds)
done (took 42.824347081 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.807616339 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.34154462 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.363097889 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.527414635 seconds)
  done (took 12.94420261 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.76281248 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.327248142 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.810280303 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.378837186 seconds)
  done (took 20.039076199 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.143280777 seconds)
    (2/2) benchmarking "read"...
    done (took 2.137482087 seconds)
  done (took 5.994376105 seconds)
done (took 47.498241705 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.778328861 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.781798745 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.779818062 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.782647971 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.782022548 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.781540833 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.778877458 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.778158235 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.7854933 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.780417228 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.783618461 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.781413024 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.77995678 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.782001334 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.781709885 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.776169765 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78205055 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.778934039 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.77871234 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.779529012 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.777957604 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.779525555 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.77927288 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.779741691 seconds)
  done (took 44.439005622 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.779675556 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.777740621 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.778662004 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.779946957 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.778203034 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.781067001 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.787263587 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.77965954 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.781605967 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.780047817 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.777789794 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.780863703 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.782127702 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.777510713 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.779291918 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.777441214 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.780164863 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.785246249 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.782068037 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.777150779 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.781344182 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.78089903 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.777482968 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.783742359 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.778226088 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.777608668 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.780532153 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.779897463 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.780689695 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.777752986 seconds)
  done (took 55.112891189 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.785421851 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.790801242 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.781338476 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.784566393 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.78102043 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.781621043 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.780563927 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.779984489 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.781084765 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.784239561 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.781354902 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.781177554 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.781663795 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.782070769 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.782633689 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.781754264 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.78180359 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.782535606 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.782073197 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.78204923 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.78206542 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.781721567 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.78139956 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.782066371 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.782127639 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.785068444 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.783214494 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.782174353 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.783009334 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.78244517 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.783733268 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.783730029 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.78277125 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.782856285 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.782876085 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.782572287 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.787593457 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.792328672 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.782713387 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.783652336 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.78365623 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.783469752 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.786635984 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.784074664 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.781668597 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.783438228 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.782928504 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.783453657 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.78769329 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.784256745 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.783128034 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.783106642 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.782105 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.783572139 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.783197317 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.784711465 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.783194901 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.783285692 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.783615077 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.785400228 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.784190523 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.783919429 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.783585901 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.783092553 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.785555266 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.782206786 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.784531398 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.783863919 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.783555781 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.784121447 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.783616878 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.784577941 seconds)
  done (took 130.115212386 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.784436836 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.781495162 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.783925142 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.782601179 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.782489844 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.784662361 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.782584386 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.785227162 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782633806 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.7849215 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785365573 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.782617895 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782231303 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.78538446 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.784508744 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.782488879 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.784816753 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.783403858 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.784498087 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.78539131 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.785071086 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.784141063 seconds)
  done (took 40.958209788 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.786392383 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.786026832 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.784549008 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.7865364 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.783574189 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.786547022 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.787244249 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.786399784 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.786221611 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.783729192 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.7837413 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787084008 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.782647134 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784252247 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.78429726 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.783680119 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.78663947 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.78396057 seconds)
  done (took 33.849345002 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.783886207 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.783589974 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.787048253 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.785059761 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.784740186 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.786785872 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.784977196 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.787607008 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.787582952 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.784942729 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.787448026 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.78901833 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.786757796 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.784509463 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.786530476 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.784195394 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.788125698 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788517362 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.786661662 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.786271663 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.784855861 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.789152099 seconds)
  done (took 41.014702122 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.788836467 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.78725013 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.785368211 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.785693039 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.785316343 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.788199691 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.788391875 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.786629759 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.788121658 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.789051599 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.785760277 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.789322303 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.785979933 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.786608898 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.786807957 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.786044179 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.789758912 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.787467737 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.790007495 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.786653231 seconds)
  done (took 37.463603021 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.78944929 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.789801785 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.788805685 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.78923058 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.790012148 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.790380908 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.78974451 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.789667044 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.789250134 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.79159863 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.789700127 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.790215366 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.790637449 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.790971356 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.79113145 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.790575559 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.790406867 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.790818069 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.789479554 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.790323745 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.790121427 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.790048107 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.790183774 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.79050436 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.79049828 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.791943893 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.791578842 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.792105155 seconds)
  done (took 51.847604136 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.791156787 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.790280176 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.787845607 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.78866406 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.788545054 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.787892267 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.788253617 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.788023198 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.78998045 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.786966454 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.791879855 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.792299621 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.791391832 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.791695392 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.791637326 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.791667715 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.791840447 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.789950633 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.789288761 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.789329332 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.791169392 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79123427 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.791610809 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.789260701 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.789549626 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.791840363 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.788258707 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.790799188 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.79193549 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.789117735 seconds)
  done (took 55.423602518 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.810648315 seconds)
    (2/2) benchmarking "in"...
    done (took 1.810154505 seconds)
  done (took 5.341148819 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.789830737 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.792185231 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.792022125 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.790238992 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.78922181 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.793237203 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.792191844 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.789936201 seconds)
  done (took 16.048935703 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.790827381 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.79424802 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.793706086 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.792803105 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.793663377 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.793512101 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.796722078 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.799430487 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.791383636 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.791798648 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.798725341 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.800144029 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.793437423 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.797233717 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.790912383 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.792799414 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.791209067 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.791651222 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.79193699 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.792901077 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.791737504 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.792366286 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.793488056 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.788687258 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.797418671 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.80044095 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.793608103 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.791214204 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.791424565 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.793993498 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.793609219 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.787768202 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.791694762 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.791714443 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.791220655 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.792572495 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.797688383 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.791314464 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.795900566 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.792356603 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.790953204 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.793125047 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.792612412 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.791108574 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.792451983 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.79081052 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.792901051 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.788701354 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.789542887 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.793778491 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.796367123 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.78943576 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.790571698 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.790175067 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.787359713 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.792720786 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.786727259 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.790312697 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.803983197 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.795374249 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.798002996 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.794610617 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.785534165 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.792069977 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.794234992 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.810691904 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.790682548 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.782074416 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.7820789 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.787514145 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.792060555 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.7978696 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.794718086 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.785018357 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.790864666 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.784947599 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.784890514 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.784149392 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.791668074 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.787117178 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.785644247 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.785836505 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.794311664 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.809879343 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.784112628 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.786692097 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.786580002 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.785443514 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.785143919 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.796463261 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.787054808 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.789213455 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.783796429 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.785257566 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.786580392 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.784899802 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.782648804 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.784940463 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.782340938 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.78375038 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.785107043 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.788266844 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.795294119 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.78570531 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.786289983 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.791414629 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.786304785 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.785392853 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.793581087 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.785621369 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.786411843 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.786496107 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.792232426 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.783006135 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.789166921 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.794862083 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.786018275 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.78552165 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.785920364 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.786160569 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.797115572 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.816515867 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.786465324 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.786001969 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.790973345 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.806739483 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.787145643 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.789664342 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.787598187 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.782835888 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.785628213 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.787761852 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.785934303 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.787418565 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.788096203 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.78925639 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.791269934 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.787608035 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.787354434 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.788083875 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.788006891 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.789966178 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.78688917 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.789030265 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.786622229 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.787182833 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.794350457 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.789409768 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.787517384 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.786275463 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.785322671 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.786665103 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.78764851 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.794678473 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.788056104 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.787664989 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.785894977 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.787966216 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.788434919 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.786816301 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.786728827 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.788728386 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.79152981 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.788219551 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.792542438 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.786957488 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.786123568 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.786831572 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.788841243 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.790009805 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.788276018 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.786059153 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.790892373 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.79622072 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.786897569 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.790662611 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.786992472 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.785990967 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.786187045 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.78593803 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.787922815 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.800396605 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.782579388 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.788177826 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.782751621 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.783315779 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.78513453 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.781103804 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.781531263 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.781945191 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.784720933 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.791204797 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.795257619 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.79044664 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.781317091 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.78433456 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.782162517 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.790356883 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.782389089 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.780536568 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.778474041 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.780849434 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.778815861 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.782620449 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.780890186 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.781562329 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.779443613 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.78045903 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.780172859 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.782852182 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.778908146 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.780626078 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.780231886 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.777449985 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.780677292 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.780766317 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.779731391 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.777077751 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.779778283 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.779354579 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.783094965 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.781022211 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.785857884 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.777352343 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.782273899 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.782672878 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.781961093 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.778852678 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.779806967 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.782225075 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.780009494 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.787529908 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.779635464 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.779790926 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.786763935 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.779874526 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.780496121 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.783242269 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.780438093 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.777046336 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.784088773 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.790668415 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.782853858 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.783583502 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.784637043 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.782628371 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.783893944 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.790152846 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.786382675 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.783073096 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.783351246 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.78615784 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.781640216 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.785542548 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.785973148 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.786400671 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.78537387 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.785348457 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.783815841 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.789106745 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.784062633 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.782631448 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.78282678 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.786328465 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.792338944 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.78741974 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.782271551 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.784433499 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.783456819 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.788607366 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.79191995 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.783419555 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.783038577 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.795308087 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.792863787 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.788023171 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.788709858 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.782651361 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.787683656 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.783052811 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.784942251 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.780609652 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.783986789 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.781266902 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.781014661 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.778488867 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.782704655 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.785847952 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.781996318 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.780979655 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.784640527 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.78187644 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.781245512 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.781942642 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.780398787 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.779915327 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.778294436 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.779277998 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.787265546 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.779092508 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.777164867 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.777694554 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.783993014 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.778751216 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.78180962 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.775450586 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.776526173 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.775505411 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.77839718 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.776789249 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.783393547 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.785591133 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.779925232 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.78766775 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.778207954 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.787176063 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.777321424 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.778746656 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.785629026 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.774046976 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.775126733 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.781433803 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.776217973 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.782679833 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.77736506 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.776448746 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.78081293 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.777380119 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.776866632 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.775987436 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.776377751 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.775643935 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.780620075 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.784711006 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.776744377 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.780634427 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.777882917 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.774900301 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.777326159 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.775100986 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.774903234 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.779206777 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.776335214 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.784836479 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.775489557 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.775422036 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.775162134 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.775192944 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.775050599 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.773194143 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.772409497 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.779384034 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.773853854 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.777652162 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.774694776 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.786502562 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.773319643 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.780189306 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.774611734 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.773012901 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.775266174 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.772384738 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.774040941 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.772697454 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.77157184 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.772853295 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.773995788 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.776615155 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.774592546 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.774953602 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.774459453 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.774276876 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.774017913 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.783185053 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.798204502 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.775035179 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.778362006 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.774566546 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.773414104 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.777693735 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.772563301 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.771359816 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.774853764 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.785449684 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.780083218 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.770045461 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.772471226 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.772322349 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.775206345 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.771837934 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.771607392 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.772422996 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.77151383 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.773274982 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.775550857 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.774684397 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.772039428 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.771920893 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.772626307 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.773447616 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.782910213 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.770906718 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.773339884 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.770863473 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.77180117 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.77518068 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.771220978 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.772500742 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.771624863 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.770237775 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.772465532 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.781047978 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.77854084 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.774172107 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.770931121 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.770762642 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.772199706 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.777826587 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.772201027 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.771525625 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.771789896 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.772134562 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.775238141 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.771942238 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.770351412 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.772078843 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.772358335 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.771415056 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.779500565 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.77947137 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.770479022 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.769176023 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.771239379 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.770794076 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.77238851 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.771344247 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.778304732 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.773465141 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.782865785 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.782801391 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.774237282 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.770764959 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.773177133 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.779606467 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.769277039 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.774673528 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.771599874 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.772089133 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.770218947 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.773820744 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.771077122 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.779336586 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.770266225 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.769580976 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.77734689 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.771674838 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.778101756 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.772916167 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.773968512 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.770759544 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.769334741 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.77121426 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.771511114 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.777613406 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.772171345 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.770583576 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.772965188 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.776034929 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.77132235 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.775037142 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.77162906 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.771186699 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.767838355 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.772954607 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.77264529 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.770748891 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.767764186 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.769732147 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.771044415 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.77653288 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.776568458 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.767699751 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.772577836 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.770009972 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.777323975 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.770528716 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.772236395 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.767706751 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.76799376 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.771294213 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.773775506 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.77137756 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.774962687 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.770000501 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.771995017 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.771688901 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.777435677 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.773225843 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.779889089 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.778514526 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.769491323 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.773774877 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.771646794 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.774835409 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.772459035 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.771213062 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.772077785 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.777374479 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.771723798 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.771241301 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.77017932 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.773875526 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.785811855 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.774276441 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.771378546 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.772008435 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.775267799 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.772499909 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.772695761 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.770581873 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.773401817 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.7745081 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.778473772 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.773592152 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.783066465 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.773861684 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.773404407 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.775313345 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.775779554 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.781679044 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.775933841 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.773899692 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.774531817 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.777364947 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.787856079 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.7784559 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.781276345 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.801124173 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.775501292 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.775517583 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.77563721 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.775681017 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.774747754 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.775097097 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.774411658 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.774881732 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.779979885 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.774672566 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.774865245 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.778801848 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.776210043 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.773391522 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.776651513 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.774381803 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.77616126 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.771455591 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.775094516 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.774510949 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.779590767 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.775088059 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.775834609 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.774222328 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.785683101 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.785088184 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.774949127 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.775728122 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.772415746 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.777406284 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.777583468 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.78681942 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.781358029 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.776048506 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.775357469 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.776149892 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.775443616 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.774610538 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.776118166 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.774836734 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.775111917 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.772356184 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.793132588 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.783201714 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.779434725 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.774181335 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.774510684 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.774609014 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.776679712 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.775214059 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.773548502 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.776014897 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.774253486 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.781776551 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.774673678 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.775387565 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.777555597 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.782347875 seconds)
  done (took 1063.537269415 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.773017942 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.772786939 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.774068876 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.772881742 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.772475868 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.773497374 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.775972477 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.773534222 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.773430666 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.77368512 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.774263332 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.776906039 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.773820126 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.773729943 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.772529042 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.773693573 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.773235708 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.776776601 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.773136348 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.773661824 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.772753425 seconds)
  done (took 38.955418594 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.776376103 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.778134763 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.774359153 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.775060432 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.773602653 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.776931781 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.775547334 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776204998 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.77770918 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77533436 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.777540969 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.777484377 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.778596459 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.773471392 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.775287463 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.777526707 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.776187262 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.773747017 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.778025766 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.775695772 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.777387399 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.773506864 seconds)
  done (took 40.780405187 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.781941375 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.777983818 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.778188741 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.775765888 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.778852384 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.775676531 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.780605543 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.778931221 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.777335104 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.778442394 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.777677678 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.781134105 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.783510535 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.783347684 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.780290013 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.778847091 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.922717444 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.780874896 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.779851474 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.779814741 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.776127833 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.783723841 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.776838583 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.777979321 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.779453944 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.779805769 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.779284851 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.77981184 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.780782485 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.780588592 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.782916249 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.779794985 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.778504644 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.782593993 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.781283228 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.779662378 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.782356067 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.781075841 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.778121488 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.78414738 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.789139365 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.798900614 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.781854222 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.784953959 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.781948503 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.782644551 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.783542149 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.789976316 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.778464073 seconds)
  done (took 89.117704508 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.780205164 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.783578024 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.778792452 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.780385187 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.780233853 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.78242695 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.784556149 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.780669035 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.779254358 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.778707419 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.781321125 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.778848397 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.781914362 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.781661096 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.781176742 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.7776427 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.778961778 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.779012718 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.781225717 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.779637672 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.780120442 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.783521436 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.782035395 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.782069239 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.782920133 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.778453435 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.779980701 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.783120616 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.780913998 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.780525714 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.783083655 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.781675905 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.782926078 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.780108864 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.779706062 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.78401642 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.78283563 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.781111436 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.784125779 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.780597038 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.783050958 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.783164444 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.784407661 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.783879301 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.780770333 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.780256726 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.780584533 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.780346112 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.781587141 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.782916379 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.783426496 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.780893363 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.783503954 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.780214872 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.783400269 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.785316676 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.780872219 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.782409621 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.783564548 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.780775309 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.779939977 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.78423105 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.78463054 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.783551407 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.784285591 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.781650513 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.780617491 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.783472901 seconds)
  done (took 122.865157869 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.785132014 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.784879052 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.78520649 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.784894887 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.785430101 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.78565962 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.785656768 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.786385557 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.783738303 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.785442234 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.785899121 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.785945137 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.785163456 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.78627162 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.787104005 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.786440558 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.786074695 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.786071882 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.785168572 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.785635718 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.78647121 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.78626209 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.785520579 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.786444816 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.786881306 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.784583316 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.785662732 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.785961658 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.786465763 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.786011254 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.786563733 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.78671052 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.785831887 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.786922839 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.788241873 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.785780937 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.786596688 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.787296612 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.787421523 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.786738978 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.78749783 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.787493962 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.786095093 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.786506244 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.786346542 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.78737581 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.785970093 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.787426807 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.787326554 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.78625633 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.786429684 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.787767572 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.78721255 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.787021224 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.786255861 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.787845424 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.788030443 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.78704172 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.787894186 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.788481876 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.788231827 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.787226495 seconds)
  done (took 112.476410383 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.78686621 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.787954153 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.78390644 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.7837284 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.787616693 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.784319544 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.787207631 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.787525691 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.788445223 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.788455192 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787590199 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.786229121 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.784847502 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789343491 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.784671807 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784432509 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.78624079 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.787089587 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.788618601 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.787113641 seconds)
  done (took 37.448874741 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.785838885 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.789173041 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.78532575 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.786175951 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.789564458 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.786234394 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.788622369 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.789989826 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.785666335 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789518455 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.789563481 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.789947026 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.786760255 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.78695122 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.788591018 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.788023351 seconds)
  done (took 30.323355369 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.785399359 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.790007495 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.790044754 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.78974588 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.786210264 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.787919811 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.788706051 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.78816809 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.786828844 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.789503735 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.788824671 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.790734426 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.790954269 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.790252905 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.788057496 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.790798035 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.788329325 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.788406804 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.789743046 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.791320354 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.788278732 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.7891881 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.791526435 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.789798802 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.790137457 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.788186152 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.787911653 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.787688991 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.790039009 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.791533185 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.787896491 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.788758961 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.787166345 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.787889643 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.792247175 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.788593269 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.791400616 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.790643513 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.791883293 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.791932781 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.790790259 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.788330121 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.792574966 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.791075915 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.789175912 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.791954415 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.788494103 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.789174714 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.788107453 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.789413659 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.791535129 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.792055567 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.792689847 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.791446027 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.791444877 seconds)
  done (took 100.151233919 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.792216354 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.790981483 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.789934714 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.791754505 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.793831598 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.790839281 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.792200954 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.789381438 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.789512341 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.793007072 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.792045908 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.792894449 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.790029856 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.7922719 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.791833923 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.793406394 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.790212816 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.790345057 seconds)
  done (took 33.974119926 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.790588996 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.790605567 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.793118414 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.790035536 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.790022603 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.7926375 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.79138519 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.793248903 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.792985426 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.791244045 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.790988521 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.793846964 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794354217 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.794096221 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.792422737 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.791019976 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.793720164 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.794205654 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.791632541 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.79074677 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.793512622 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.793474998 seconds)
  done (took 41.152662125 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.794220782 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.793651745 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.806593383 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.81365086 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.813831639 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.825596565 seconds)
  done (took 12.57019473 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792085519 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795016342 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.792031346 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.796285874 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794493554 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790818875 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791032265 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79182355 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794379486 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791771334 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791978565 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794225279 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795435476 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792765445 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795644175 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.7945175 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793458818 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791988896 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793380783 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796475732 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79153714 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794384813 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792750683 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791978272 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791468982 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792253844 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795057204 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792184783 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791897955 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795492233 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79675723 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793350859 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79563987 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793228991 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797372428 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796415308 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793881915 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795680037 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796398132 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793366466 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.796701936 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.796729592 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795518397 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793124968 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795997512 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793421595 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794518539 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793766038 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793950859 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797881697 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797102267 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79509719 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798063077 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796579715 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797943886 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796653806 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794743155 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793699622 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.796356051 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793300178 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.795053837 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795948836 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794375969 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794745837 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796819603 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793681095 seconds)
  done (took 120.158062743 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793844771 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.795873983 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794499052 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.796503108 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795224872 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795367027 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795238007 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795094031 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79464884 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79629672 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.798118189 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.796553788 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795689322 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795585204 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.795018735 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.795927022 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.796812929 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.795731843 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79527376 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.799388196 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79509477 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794786001 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795265018 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794898432 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.797569242 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798015722 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.795004347 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796188733 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796035428 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795232101 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.795228433 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79596201 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.797204075 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.797391123 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798425135 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.797058249 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795708285 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.796323266 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.795718598 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.799774397 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.797127965 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800164217 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794614857 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796514842 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797149363 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797277351 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.797807146 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79566732 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796737363 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.798153721 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797516447 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796880961 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.798025943 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.796419493 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797517585 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.797214187 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.796426781 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798497733 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797802225 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.800173522 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.796831574 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79674107 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.800237615 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.799205368 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797245253 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.797949493 seconds)
  done (took 120.307688553 seconds)
done (took 2477.141332108 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.809808609 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.859263614 seconds)
  done (took 15.397611858 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.964872103 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.917094624 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.803012811 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.836714977 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.800653375 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.816349957 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.8010992 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.799792254 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.801275217 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.802130566 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.803113297 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.988353883 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.821313546 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.799748169 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.80301629 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.895969651 seconds)
  done (took 51.376138852 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.805857696 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.808031541 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.817219253 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.808265594 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.806025395 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.82566377 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.840937125 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.81012788 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.866441015 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.816666817 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.934667793 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.814888883 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.808495801 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.857223821 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.816850878 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.820895972 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.89488434 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.881557476 seconds)
  done (took 34.768538114 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.885883541 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.803017804 seconds)
  done (took 10.430989687 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.833071506 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.832122054 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.821348117 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.804494766 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.828538909 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.80919969 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.840209098 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.841969475 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.83450602 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.808337598 seconds)
  done (took 69.992381357 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.81209117 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.808389501 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.808448501 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.808684778 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.798340826 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.801353627 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.805557519 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.800998502 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.498628153 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.84086173 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.811319283 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.815549596 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.806781549 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.80913141 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.804982867 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.831498053 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.935759114 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.807305304 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.803982144 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.812338109 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.807574615 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.869195685 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.821636142 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.8075392 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.838449129 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.492658803 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.814443249 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.817224903 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.931242518 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.806595251 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.806953441 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.808980356 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.809975977 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.204763195 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.108694724 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.803997471 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.815157636 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.820380972 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.805948427 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.932728655 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.807630481 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.817818043 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.792681393 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.107980857 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.900945014 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.851003212 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.162504963 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.810321623 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.813469049 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.838272005 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.810868923 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.808649922 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.823864622 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.327541228 seconds)
  done (took 129.358761778 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.804035726 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.111832709 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.957688058 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.803171583 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.075214879 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.006361363 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.744711142 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.853592714 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.803316515 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.007149961 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.967015945 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.909639621 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.801977399 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.803504565 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.801453689 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.799853561 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.963875212 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.869979968 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.803571936 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.801593677 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.831662623 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.013296672 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.931751674 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.803822782 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.827663217 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.015271478 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.925459775 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.913425084 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.09296263 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.803693099 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.871163267 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.802996321 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.805930734 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.800813784 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.961180704 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.899028137 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.893681684 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.80355678 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.804152713 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.803374059 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.469246019 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.000966376 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.902552887 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.947968991 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.001902014 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.007594797 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.450040822 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.803874773 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.440056926 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.968791767 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.020686709 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.015645362 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.928521136 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.805222124 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.038390885 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.804954906 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.803997854 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.041222368 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.949113301 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.909957253 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.806385888 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.805965338 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.804865188 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.048869423 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.805720404 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.902701021 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.805640292 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.801959903 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.909206835 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.912750846 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.945715494 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.017821497 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.839144776 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.718428223 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.318628629 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.02226512 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.879596842 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.041939318 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.807506406 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.803832679 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.892555809 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.568836708 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.967269216 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.054642273 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.027343996 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.842554769 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.402349721 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.806504682 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.002476027 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.991823452 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.001240554 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.015828461 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.958297698 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.00570268 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.806438475 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.806227556 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.046233595 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.941521755 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.806676473 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.164085123 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.040086602 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.380077686 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.831223462 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.103229906 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.940246558 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.173147336 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.434422446 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.807838543 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.982888851 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.848574517 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.809466605 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.809149598 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.998270426 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.616953939 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.810097994 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.342567326 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.873158934 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.81010934 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.009992514 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.807509322 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.017982708 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.808991669 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.044415291 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.094666082 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.843862878 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.981649912 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.015803022 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.599578587 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.056446176 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.053171914 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.926918204 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.030917222 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.396643909 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.80746883 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.084894958 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.808526233 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.81001837 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.977056802 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.809737668 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.956554468 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.811821618 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.037437029 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.83758449 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.964274483 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.810313658 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.043118121 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.845534126 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.863155134 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.810128642 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.941829391 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.813527129 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.787817484 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.964945385 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.810550389 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.808590244 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.246675096 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.81022133 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.95804008 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.041881519 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.834425214 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.87937209 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.337523707 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.811260324 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.897279692 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.836501394 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.250496727 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.811035294 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.967954238 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.754729645 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.247586329 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.811700612 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.050407059 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.994047309 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.810993112 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.809774757 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.551991205 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.494238595 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.811094245 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.970167515 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.91678492 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.458237212 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.014811152 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.811523721 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.940889274 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.813225062 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.891921866 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.157579646 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.809296202 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.81039105 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.813570137 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.811120042 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.811664762 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.025429661 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.846328864 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.323056905 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.948326253 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.031408179 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.122711169 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.031111775 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.854337081 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.814741983 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.075148661 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.812033969 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.877504316 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.811671639 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.837719982 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.043982334 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.814677632 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.0259814 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.063079342 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.716778135 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.868826996 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.816609857 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.812112076 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.812229196 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.962655194 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.906061537 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.813018843 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.812666418 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.927077994 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.939381416 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.003479769 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.3985795 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.991225749 seconds)
  done (took 884.359095807 seconds)
done (took 1197.411970266 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.814494978 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.811988073 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.799234272 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.815387596 seconds)
  done (took 28.988540512 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.825091749 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.820973331 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.821756528 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.820779115 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.822483128 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.820968233 seconds)
  done (took 12.68242176 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.931075983 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.81134126 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.815540034 seconds)
  done (took 21.307226432 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.888166331 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.226059084 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.923182598 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.266548588 seconds)
  done (took 10.056713543 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.824646116 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.823976876 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.822043108 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.824211514 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.82507972 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.825361889 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.822676772 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.823768079 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.823681861 seconds)
  done (took 18.170412522 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.258108887 seconds)
done (took 97.211721003 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.807270433 seconds)
    (2/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.197004801 seconds)
    (3/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.87033365 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.049387335 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.925979775 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.958653946 seconds)
    (7/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.930181915 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.85834492 seconds)
    (9/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.785755454 seconds)
    (10/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.117842983 seconds)
    (11/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.329261434 seconds)
    (12/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.77504701 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.931781787 seconds)
    (14/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.847693628 seconds)
    (15/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.22462592 seconds)
    (16/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.845829778 seconds)
    (17/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.902415029 seconds)
    (18/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.870057987 seconds)
    (19/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.803558163 seconds)
    (20/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.796727655 seconds)
    (21/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.214823214 seconds)
    (22/309) benchmarking ("sort", Float32, false)...
    done (took 5.594686168 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.829440464 seconds)
    (24/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.85285052 seconds)
    (25/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.895784794 seconds)
    (26/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.642995056 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.120558409 seconds)
    (28/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.983848655 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.873386032 seconds)
    (30/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.93146666 seconds)
    (31/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.254464212 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.473437246 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.704504953 seconds)
    (34/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.904225657 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.909074851 seconds)
    (36/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.086911372 seconds)
    (37/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.677463091 seconds)
    (38/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.925121545 seconds)
    (39/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.40422932 seconds)
    (40/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.819412994 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.948520346 seconds)
    (42/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.948480262 seconds)
    (43/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.960238395 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.205491226 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.820753283 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.885978599 seconds)
    (47/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.177943204 seconds)
    (48/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.068745998 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.055925479 seconds)
    (50/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.057554326 seconds)
    (51/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.884163038 seconds)
    (52/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.803795257 seconds)
    (53/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.174589936 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.062381258 seconds)
    (55/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.947109703 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.929623893 seconds)
    (57/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.905242503 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.080299756 seconds)
    (59/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.971152515 seconds)
    (60/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.164696382 seconds)
    (61/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.408997538 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.819347219 seconds)
    (63/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.182124915 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.87828223 seconds)
    (65/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.022362167 seconds)
    (66/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.918762542 seconds)
    (67/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.693960549 seconds)
    (68/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.886116616 seconds)
    (69/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 3.573062976 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.925061075 seconds)
    (71/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.407899728 seconds)
    (72/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.819484805 seconds)
    (73/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 3.495640925 seconds)
    (74/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.957461687 seconds)
    (75/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.052681886 seconds)
    (76/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.74164412 seconds)
    (77/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.889993338 seconds)
    (78/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 3.397623315 seconds)
    (79/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.065710112 seconds)
    (80/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.953631023 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.53788833 seconds)
    (82/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.949468956 seconds)
    (83/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.941057839 seconds)
    (84/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.836163384 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.417665478 seconds)
    (86/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.440152556 seconds)
    (87/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.191207073 seconds)
    (88/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.120280827 seconds)
    (89/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.824893873 seconds)
    (90/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.194903 seconds)
    (91/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.831699717 seconds)
    (92/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.118959239 seconds)
    (93/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.015767153 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.81300694 seconds)
    (95/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.986271691 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.508310186 seconds)
    (97/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.13419589 seconds)
    (98/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.040507221 seconds)
    (99/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.253017195 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.469919478 seconds)
    (101/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.184594714 seconds)
    (102/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.173689587 seconds)
    (103/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.850139237 seconds)
    (104/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.95770975 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.82321547 seconds)
    (106/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.823083653 seconds)
    (107/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.8817666 seconds)
    (108/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.846218978 seconds)
    (109/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.807482657 seconds)
    (110/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 8.283987811 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.058194675 seconds)
    (112/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.91733264 seconds)
    (113/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.004573532 seconds)
    (114/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.094886425 seconds)
    (115/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.882539767 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.901555478 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.823410939 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.708387575 seconds)
    (119/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.901212257 seconds)
    (120/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.842561772 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 2.270848859 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.847370756 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.103846349 seconds)
    (124/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.158900465 seconds)
    (125/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.275711081 seconds)
    (126/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.948470885 seconds)
    (127/309) benchmarking ("map", identity, Float64, false)...
    done (took 3.758641059 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.21026837 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.039419896 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.104802248 seconds)
    (131/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.809527565 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.650606263 seconds)
    (133/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.959456141 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.14869223 seconds)
    (135/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.905552714 seconds)
    (136/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.84276025 seconds)
    (137/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.02682958 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.027962309 seconds)
    (139/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.365885829 seconds)
    (140/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.080494984 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.045814563 seconds)
    (142/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.073167244 seconds)
    (143/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.855799126 seconds)
    (144/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.96667006 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.846069164 seconds)
    (146/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.16182933 seconds)
    (147/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.11177247 seconds)
    (148/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.790446706 seconds)
    (149/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.328894181 seconds)
    (150/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.824146669 seconds)
    (151/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.87560129 seconds)
    (152/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.461257811 seconds)
    (153/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.845544754 seconds)
    (154/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.13491676 seconds)
    (155/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.009807177 seconds)
    (156/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.824695708 seconds)
    (157/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.8263553 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.165965497 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.157709117 seconds)
    (160/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.933769721 seconds)
    (161/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.995167557 seconds)
    (162/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.911274561 seconds)
    (163/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.922159028 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.824388162 seconds)
    (165/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 3.610492888 seconds)
    (166/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.851964158 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.626153852 seconds)
    (168/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.717976895 seconds)
    (169/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.825618965 seconds)
    (170/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.86530642 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.119038725 seconds)
    (172/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.89244123 seconds)
    (173/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.826198267 seconds)
    (174/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.908043125 seconds)
    (175/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.849517125 seconds)
    (176/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.03512031 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.125590476 seconds)
    (178/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.973124904 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.872991347 seconds)
    (180/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.812277797 seconds)
    (181/309) benchmarking ("map", identity, Bool, true)...
    done (took 3.347111772 seconds)
    (182/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.914055422 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.853223699 seconds)
    (184/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.231467211 seconds)
    (185/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.850376194 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.202557466 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.869379081 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.472755129 seconds)
    (189/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.833387653 seconds)
    (190/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.833063542 seconds)
    (191/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.914141278 seconds)
    (192/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.175827889 seconds)
    (193/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.125151629 seconds)
    (194/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.374022022 seconds)
    (195/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.152149835 seconds)
    (196/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.107178104 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.750168577 seconds)
    (198/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.476827156 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.990972649 seconds)
    (200/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.925042068 seconds)
    (201/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.827299426 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.923578708 seconds)
    (203/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.648732759 seconds)
    (204/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.962482777 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.826934303 seconds)
    (206/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.872209949 seconds)
    (207/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.436787267 seconds)
    (208/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.93128153 seconds)
    (209/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.953778316 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.618254068 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.027592499 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.877755564 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.426538813 seconds)
    (214/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.00209196 seconds)
    (215/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.860750032 seconds)
    (216/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.830896609 seconds)
    (217/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.974019724 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.019238431 seconds)
    (219/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.950241015 seconds)
    (220/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.417076185 seconds)
    (221/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.301480781 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.857142403 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.630780882 seconds)
    (224/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.002086879 seconds)
    (225/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.703723968 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.207593763 seconds)
    (227/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.832224331 seconds)
    (228/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.853996139 seconds)
    (229/309) benchmarking ("sort", Float64, false)...
    done (took 5.662076727 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.87067623 seconds)
    (231/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.392737257 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.824169469 seconds)
    (233/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.350380398 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.852205431 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.82948763 seconds)
    (236/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.919936102 seconds)
    (237/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.511859621 seconds)
    (238/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.84769987 seconds)
    (239/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.822275861 seconds)
    (240/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.123798367 seconds)
    (241/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.138974263 seconds)
    (242/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.813332401 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.830584161 seconds)
    (244/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.928136143 seconds)
    (245/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.047959335 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.943935007 seconds)
    (247/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.001265791 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.20959693 seconds)
    (249/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.34776577 seconds)
    (250/309) benchmarking ("sort", Int8, false)...
    done (took 4.830634434 seconds)
    (251/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.966670666 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.926730624 seconds)
    (253/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.857955222 seconds)
    (254/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.137002026 seconds)
    (255/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.512438465 seconds)
    (256/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.424821808 seconds)
    (257/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.027042599 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.880590585 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.1621234 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.861846178 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.217223039 seconds)
    (262/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.840372337 seconds)
    (263/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.890787974 seconds)
    (264/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.92154945 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.121165019 seconds)
    (266/309) benchmarking ("sort", BigInt, false)...
    done (took 6.832029105 seconds)
    (267/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.748485537 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.112946155 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.490259742 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.844302549 seconds)
    (271/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.853046261 seconds)
    (272/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.831880746 seconds)
    (273/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.914122223 seconds)
    (274/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.718796068 seconds)
    (275/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.045479932 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.127345271 seconds)
    (277/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.234613219 seconds)
    (278/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.4238577 seconds)
    (279/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.968147677 seconds)
    (280/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.172251198 seconds)
    (281/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.990765302 seconds)
    (282/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.207041738 seconds)
    (283/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.004711394 seconds)
    (284/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.896290763 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.924984557 seconds)
    (286/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.91497865 seconds)
    (287/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.343052539 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.922110872 seconds)
    (289/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.819072122 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.8724709 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.951155241 seconds)
    (292/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.882892939 seconds)
    (293/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.966497909 seconds)
    (294/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.134166593 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.615533633 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.153454735 seconds)
    (297/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.032480965 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.878530375 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.907063126 seconds)
    (300/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.834771595 seconds)
    (301/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.031777871 seconds)
    (302/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.863179354 seconds)
    (303/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.19332949 seconds)
    (304/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.852139411 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.855451083 seconds)
    (306/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.349580867 seconds)
    (307/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.045546835 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.758779813 seconds)
    (309/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.84165105 seconds)
  done (took 1002.968109624 seconds)
done (took 1004.798378057 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.868729831 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.862572943 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.846710233 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.868031185 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.958131298 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.879193189 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.858232457 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.848947121 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.895523232 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.89542277 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.846388199 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.87699461 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.848709868 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.845560159 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.845915992 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.860408417 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.160813777 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.86837849 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.863579035 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.856739487 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.862935052 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.846302971 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.897369851 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.878802324 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.851916707 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.850391728 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.849650001 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.866335341 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.958614153 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.848770127 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.850019716 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.858752688 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.163108033 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.869120359 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.842450218 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.866835361 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.860376015 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.86197578 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.852350624 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.881628773 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.296306151 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.852105806 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.848306398 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.849241879 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.849071517 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.852139396 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.848230792 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.855297485 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.863681338 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.861824531 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.29391216 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.866316128 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.852555408 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.856536709 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.860304681 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.849612844 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.852503237 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.863254153 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.867577536 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.867051092 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.151181995 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.874294421 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.850778269 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.86535347 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.859715299 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.330900611 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.84749732 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.85498599 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.29987869 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.861498948 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.330965595 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.860108664 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.851939798 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.864284341 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.883114868 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.163745557 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.867603571 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.849111353 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.857555933 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.848861688 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.859885737 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.862664474 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.854768421 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.851064828 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.863197781 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.88214122 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.860562173 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.851242621 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.860789541 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.869745951 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.856633438 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.862203346 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.853919499 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.845355346 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.860550086 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.854622194 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.854658789 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.853024501 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.855481312 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.861517408 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.297534961 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.870775813 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.848142441 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.847903583 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.850922433 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.865621903 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.2980762 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.85548575 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.874286862 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.900551522 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.854744183 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.154361518 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.875536267 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.867830296 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.861420714 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.856162024 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.847145895 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.154381633 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.316843472 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.869301746 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.856360768 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.850355498 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.866844265 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.855018069 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.848330899 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.164436975 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.874712863 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.866718581 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.973827769 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.864343649 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.884393779 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.84983086 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.855801711 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.881766824 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.868697739 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.882791829 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.856673019 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.867661677 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.869114424 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.848725234 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.864467996 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.864212708 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.854894692 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.860216583 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.846968269 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.881517335 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.865334223 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.864675922 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.873516336 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.974554368 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.850821934 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.155990392 seconds)
done (took 291.026095774 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.918555708 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.841791246 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.945923184 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.848714784 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.931416832 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.951846401 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.846884896 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.850424388 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.846282079 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.229199612 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.846519003 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.847486505 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.851171326 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.847803329 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.932461346 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.85352402 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.847694528 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.220731439 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.851215595 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.92009109 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.852730838 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.847682025 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.855948258 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.262956728 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.843237659 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.846026672 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.930121271 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.849609063 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.198173097 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.847800134 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.848530377 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.226398038 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.954160097 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.880371188 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.861279912 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.856844556 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.948584009 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.854322079 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.943989479 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.930033415 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.952947874 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.881607634 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.849466173 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.850368529 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.854404547 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.852205274 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.847722871 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.879063537 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.846697497 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.850019909 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.194346433 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.865271239 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.860763844 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.850283889 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.850139321 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.873376524 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.850480157 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.852472759 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.94131194 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.853313508 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.922987352 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.233203263 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.265272433 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.852907789 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.843680854 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.849851685 seconds)
  done (took 183.271494431 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.918961536 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.925037216 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.918983468 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.855434126 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.324863682 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.92433019 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.854802293 seconds)
  done (took 15.502202642 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.857133033 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.852158016 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.911005592 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.903341557 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.854171007 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.003065303 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.85193234 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.863411014 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.85959189 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.906368388 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.855844271 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.853734824 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.850953349 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.853598509 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.902338051 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.864285903 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.967821117 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.855197692 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.85567039 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.0094326 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.851159048 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.85983977 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.919553108 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.865150295 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.854311247 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.86150603 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.436960276 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.854311899 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.852352278 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.853431247 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.850334453 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.895250907 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.853745206 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.851363343 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.850801202 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.970760763 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.853856699 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.851465794 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.853159551 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.850936264 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.853306334 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.854846378 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.853269198 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.851157218 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.854214812 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.879141104 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.854296652 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.85423747 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.853769877 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.853913158 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.905664765 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.853914315 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.852636429 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.85107585 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.911234217 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.860429498 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.856186886 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.852347807 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.85596931 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.853052399 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.012791728 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.902725204 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.856436473 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.904212493 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.856714736 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.85563208 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.856126515 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.855880202 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.910307511 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.855590782 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.904906409 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.853311283 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.015980725 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.879503142 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.85692033 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.858363388 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.858503647 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.855589554 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.850819846 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.861950481 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.852571624 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.856085489 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.8624535 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.852423636 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.853205133 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.969335342 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.967074194 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.854363222 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.868388778 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.865153499 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.853464357 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.910660978 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.856397158 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.853725019 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.909337752 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.971183635 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.923523446 seconds)
  done (took 204.359703243 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.86137623 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.863717407 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.856721128 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.872154101 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.857662924 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.857540611 seconds)
  done (took 12.952544117 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.859401581 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.857360646 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.858559783 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.857209937 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.85785055 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.85885574 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.858327493 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.858846566 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.862127733 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.858486754 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.859478925 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.859759968 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.859027619 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.858212078 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.859384617 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.857950383 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.860008225 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.854601396 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.858253737 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.858724622 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.013047213 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.859448525 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.859694044 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.860089187 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.862529711 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.85883627 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.868944339 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.8603161 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.859524232 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.86451097 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.862449135 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.859768968 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.859137277 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.864849498 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.864459509 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.860068496 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.863277997 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.8592507 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.856651124 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.860072649 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.860231773 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.859376504 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.859552976 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.860397044 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.86209657 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.86409957 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.864680988 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.867293879 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.858956528 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.860322169 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.860092162 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.861008119 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.85998952 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.860036106 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.861664575 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.863811598 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.864347545 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.860334223 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.859630014 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.861494983 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.860696718 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.860850894 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.863056041 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.864645393 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.859225031 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.863286143 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.861615265 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.864490444 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.861661061 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.859016605 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.861409138 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.857809521 seconds)
  done (took 136.903014582 seconds)
done (took 554.777128391 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.151249456 seconds)
  done (took 8.938428077 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.984391996 seconds)
  done (took 8.878391728 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.594345595 seconds)
  done (took 10.382645618 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.871239031 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.868467181 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.864065891 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.853040698 seconds)
  done (took 29.254977924 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.974727965 seconds)
  done (took 8.762723384 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.867718878 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.851816467 seconds)
  done (took 15.543619211 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.948016127 seconds)
  done (took 8.736023254 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.953587991 seconds)
  done (took 8.759024609 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.862346387 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.894943208 seconds)
  done (took 15.560644317 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.840487242 seconds)
  done (took 8.62883631 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.677880334 seconds)
  done (took 11.475626576 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.863001988 seconds)
  done (took 8.665200514 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.913294951 seconds)
  done (took 8.702200057 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.874841616 seconds)
  done (took 8.6641465 seconds)
done (took 162.739967509 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.858420695 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.854530332 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.855014344 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.851096253 seconds)
  done (took 29.207928188 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.894769574 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.895720633 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.897333386 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.907488931 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.898866874 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.89492286 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.888630971 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.888431335 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.906169296 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.899371487 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.899013235 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.897736744 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.895497671 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.887861725 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.898969183 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.897582177 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.90771798 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.898352429 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.889181642 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.899259674 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.862389369 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.907622735 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.899434534 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.863714218 seconds)
  done (took 47.265613111 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.062857201 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.935485495 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.016732408 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.915889404 seconds)
  done (took 9.719405066 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.914687695 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.91693188 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.928426449 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.966567864 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.994507653 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.92583066 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.890476846 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.884063566 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.870674854 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.91610724 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.991835597 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.933352162 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.001491797 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.862809524 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.0509161 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.865014873 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.863603695 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.915850305 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.967625919 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.981444541 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.865218104 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.91580198 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.919360652 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.933779174 seconds)
  done (took 48.067470499 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.86294349 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.871934756 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.869495706 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.863956519 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.865052146 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.863585796 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.869758725 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.864848367 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.884446456 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.864936549 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.862956451 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.864171463 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.861997209 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.863267864 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.862762915 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.876325329 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.878540723 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.864574711 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.867625913 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.871140372 seconds)
  done (took 39.146862023 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.858403442 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.804603552 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.209925686 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.116318592 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.858594913 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.85880803 seconds)
  done (took 32.499194778 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.876690153 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.870285447 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.864044694 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.919856308 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.998293553 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.869807359 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.866363966 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.876131336 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.909008021 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.925361817 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.879850537 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.891489196 seconds)
  done (took 24.539822224 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.86097939 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.859549401 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.85802762 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.87601982 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.876140463 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.872481753 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.873124712 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.858999807 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.876763268 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.881851721 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.873177035 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.87715389 seconds)
  done (took 44.24031587 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949021689 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.904938093 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.910184947 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.550761731 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.240780219 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.071327811 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.47047238 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.2164975 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.86595142 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135878647 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.989581079 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96233714 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.118606252 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.300428595 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.892041855 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.332139536 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.163077805 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076265716 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889968096 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.593037346 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926771281 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.986468938 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.702087814 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.920376026 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.074145895 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.993038289 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.124166789 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.862849319 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002680937 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.898426235 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873368583 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.863276241 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.1382963 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253878993 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967461409 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873996575 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.482324429 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.577073534 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.848245538 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.654149293 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.677997646 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.995755849 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87531792 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86351716 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.799076871 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.049035795 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239749664 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.869547877 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.575010032 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.864774912 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.87514477 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959363463 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.867651965 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.679322452 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782505612 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.866800272 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.862270478 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87150269 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.43985586 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.041487939 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.998903569 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.833843102 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.957726229 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.684964216 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257686275 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.013525646 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.869388165 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.869196178 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799791063 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.59321491 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.920292898 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.196553979 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.883652588 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.516246103 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167020609 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.091860757 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.804138155 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14007655 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.334233671 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.833061704 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094908712 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86604529 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801365889 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.813110823 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.800530239 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.135473104 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906211734 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.640385296 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910372583 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.205506749 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.878670293 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886331488 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890664813 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.089877742 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.750950854 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.867260619 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.818947903 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.007990215 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887084287 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.206402694 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803543108 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.869008249 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125496176 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.079174742 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.891599241 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.367721793 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037518942 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.375139607 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.915445354 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.967283421 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.910168036 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.139929181 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924982827 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.047639354 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919610835 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.868745329 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173031916 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.401318182 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.00079555 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.083674952 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.992629646 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.204646873 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894442573 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951808368 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.877447494 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.869057717 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.682126151 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.420418664 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.869490715 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.871628167 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.894182221 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.910496744 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.869901428 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818301619 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.485446665 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.006205224 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.87997972 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.09321575 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.390564042 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174656584 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804277941 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.200352726 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.922367924 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.090128543 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.524656911 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.953304405 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.131688428 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.893376967 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.915055904 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.910337803 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889675264 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968882795 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891500164 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.966394629 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.158563924 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.874036343 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.874243333 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.706272466 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.905200798 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870979297 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.876296499 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.620221937 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1496227 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.895952632 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.872236243 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.759066233 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.884891615 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934830872 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.876857568 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.881013538 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.408814229 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.582332596 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.879178865 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.453372691 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094779817 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881227333 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.675837128 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.984860137 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.960922518 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.148066937 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932377246 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.806018162 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.582703672 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.564682039 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872683131 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.806936041 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.872129148 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881589624 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.882219049 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.070562016 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.148193993 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.915711205 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.607047435 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.913950865 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881113377 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.877908739 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.871913595 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.381615701 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.049260517 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.0039001 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.912636888 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016735618 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.887515515 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.80626222 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.875871301 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.878740563 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.872916424 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.87332366 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905352761 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.611137256 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253350157 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.134380344 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.483166017 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888507703 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.641774915 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.9317709 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.871931181 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.809847158 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.983473653 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.017596217 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885339433 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.886370268 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.618052882 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.569895768 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.442019944 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191923385 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.181123844 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315232257 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.037813136 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.898487127 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.227847286 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.810012029 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.431285999 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.932953008 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.232396819 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820094797 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962575431 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.528844574 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228836504 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88607234 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.103164909 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.267990198 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.70393943 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.025705374 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.085934551 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910873845 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.973301785 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.831852831 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.159861685 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020029458 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.658203263 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087324803 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.218009634 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.646409321 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.008341618 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.877430043 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.571976604 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961774298 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.588794012 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.049268146 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.00670109 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.897681932 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368571389 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.882587812 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.101918424 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.228401845 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.995227396 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.998832059 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81540981 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.889018433 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.887910161 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.879678289 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.87579236 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.732849961 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.130833441 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888802342 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.810621243 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.934771983 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.16436516 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.779119044 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.883316787 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87834368 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181220771 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.363553275 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04426545 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.918433425 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.390541293 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882191829 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.812386207 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.812123227 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.57185817 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.883617069 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.854430592 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.087064259 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.979723002 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.825603935 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.899102124 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.956712955 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.13595169 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.892790334 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.152623603 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.152857381 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.576507386 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903879181 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.979534568 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.646036538 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.997402157 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.879047164 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.116180383 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.63260557 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.107459512 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.929139421 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.834638261 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.878203636 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.094804668 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.879680839 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.873063357 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11827172 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.599338002 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.886192697 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333475391 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954302833 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.864911409 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.937354758 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.96938174 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891717876 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961107872 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890399336 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.891638808 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.892568802 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928396781 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.879449178 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.013817559 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.894374441 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974037361 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.066821932 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.403316866 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.884153063 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157000048 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250139119 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.208033616 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.94032881 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.880646698 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880244495 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816430574 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028562679 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.107225758 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.155329792 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.014089321 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.995220567 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905971983 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.641780569 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.042965757 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120737348 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.157032908 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.775971278 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.335553597 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.919511417 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.883455099 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893446433 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.096362293 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.097589021 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190266704 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.022967686 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.91568261 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.251963849 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159793745 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.883864688 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.882952175 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.4725712 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.892168321 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.698632723 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.925447925 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.873302475 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165235627 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892957326 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.268827881 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.905698131 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.03772956 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.657215794 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.66936515 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.173768784 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.877303802 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.945518804 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.159209335 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.271254337 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197827172 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95144348 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.898093578 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.995908012 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0317051 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.76671312 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.883225667 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.884670812 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.933519397 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.595232038 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.894441154 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160628288 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.196065758 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.883206449 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.764156168 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904041082 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.894622398 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.107497131 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153216747 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.13959319 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89472138 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.890207024 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.701921077 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.159239419 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.946883198 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.82004469 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.885584759 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985931582 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.131788167 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905639654 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.338302425 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.595723042 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160633376 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.889365971 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908399532 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.993144051 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.247946729 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.207442782 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.420174848 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.09436153 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.472125962 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.411286535 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.185706315 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.890052949 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.997790807 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186367878 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.889582663 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.912516798 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922149939 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.156272103 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.196952033 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.04143485 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.618913156 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.855151703 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.228479053 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.441932119 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826236214 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.89331502 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.946388723 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.887416606 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.016808108 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89595643 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.773627922 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.991587184 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.670225282 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.160302235 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.891163151 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.881540495 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.681213073 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.128027794 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918779841 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031955834 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.888976473 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.562358411 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.239658725 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.143903185 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.920496433 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.893920349 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.891917526 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.888787333 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.875814311 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.084540219 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.08294366 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162961716 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.950236357 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.922279133 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.892331272 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.105847878 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103872507 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.889514607 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.033277392 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.916093574 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929186236 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.795364033 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.398747042 seconds)
  done (took 1678.37487318 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.907545146 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.918371152 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.911975842 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.951533808 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.908858363 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.987847952 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.060612839 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.996586497 seconds)
  done (took 57.465126032 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.888527708 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.089235693 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.899082012 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.889760301 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.896101108 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.890744097 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.064371981 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.897056951 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.897861356 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.901016775 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.896636272 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.886351592 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.226470034 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.911434633 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.892060568 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.895152165 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.896898322 seconds)
  done (took 74.763992826 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.921675069 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.953289487 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.921819203 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.906676878 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.84692653 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.909559403 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.695706192 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.903655647 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.893453831 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.113810195 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.528127562 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.895095258 seconds)
  done (took 90.314148956 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.899633236 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.896516692 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.896488284 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.897555435 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.897406058 seconds)
  done (took 11.314300101 seconds)
done (took 2188.763688868 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.147606707 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.112013308 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.13257495 seconds)
  done (took 6.068728403 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.04299643 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.090649331 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.21087973 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.213639689 seconds)
  done (took 10.38547665 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.180120454 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.280527489 seconds)
  done (took 6.285149783 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.289633872 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.897376387 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.276049843 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.891243493 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.894527647 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.89447903 seconds)
  done (took 22.510454172 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.897848997 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.900415759 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.898893925 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.902982474 seconds)
  done (took 9.426376901 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.880321631 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.578020929 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.875783126 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.893308587 seconds)
  done (took 21.054176589 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.64409116 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.655614192 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.649314177 seconds)
  done (took 9.77472154 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.463210052 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.797399196 seconds)
  done (took 9.087210802 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.155418539 seconds)
  done (took 3.981651106 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.030595651 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.208005958 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.374641188 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.41349088 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.54214869 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.580855398 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.204181306 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.133960521 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.300400394 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.333150553 seconds)
  done (took 24.950488083 seconds)
done (took 138.958394075 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.299454668 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.897965068 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.09448422 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.274304593 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.116731114 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.099468293 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.109817312 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.256289277 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.732979069 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.734433872 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.225088404 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.114884153 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.061582525 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.131017952 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.061288328 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.261541491 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.114932648 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.289766049 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.924787556 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.12142086 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.111212482 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.866888042 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.070085713 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.876838756 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.114432301 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.046421054 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.446814721 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.260513318 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.080515065 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.453990803 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.045663045 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.276362702 seconds)
  done (took 170.399893746 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.804693457 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.893884617 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.894161344 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.894650631 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.339993366 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.894211987 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.897272823 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.894536672 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.174875496 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.174348638 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.908290308 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.369564438 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.914741427 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.894232153 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.910967825 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.906882828 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.309922626 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.898873141 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.916392721 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.921274981 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.927788089 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.265726794 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.925444303 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.312748678 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.325634846 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.925011835 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.895785373 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.927151349 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.902040612 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.904079159 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.907897111 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.895005824 seconds)
  done (took 209.758741631 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.898099086 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.896593869 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.897265035 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.89663368 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.898684701 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.89465308 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.898834867 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.894868999 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.4621043 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.454949118 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.906576156 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.911864795 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.906210349 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.896142261 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.910529449 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.896949177 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.901334948 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.904742362 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.903449157 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.906299906 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.912311619 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.705526751 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.910356264 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.705479443 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.903297251 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.905868777 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.89677413 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.90642248 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.900257648 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.903939782 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.907216779 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.896531138 seconds)
  done (took 221.43724569 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.101931739 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.906696289 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.906258706 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.860864315 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.906648544 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.90566681 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.900883331 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.104155788 seconds)
  done (took 19.440115866 seconds)
done (took 622.873431458 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.323538302 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.157109159 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.07758151 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.932002904 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.139865413 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.959456537 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.930237886 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.987740226 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.649308219 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.990066186 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.614269225 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.939307135 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.713480311 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.945358981 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.052915951 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.981545827 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.496189626 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.580165927 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.102430604 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.973953654 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.090071903 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.886545412 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.997422167 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.675884517 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.723860707 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.931228684 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.105881682 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.502055088 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.935339743 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.093046039 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.663337392 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.287718017 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.931723791 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.922034598 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.974977406 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.957519022 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.277795529 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.929874107 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.047415376 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.694106447 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.960707443 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.530786311 seconds)
  done (took 104.500965734 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.898034812 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.896049799 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.895484677 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.8970479 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.897945517 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.895971269 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.895929991 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.895930949 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.898282854 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.896823106 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.895572434 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.898793722 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.896578045 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.897280101 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.897138183 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.896693576 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.897766159 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.900219794 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.897160272 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.896079285 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.89743585 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.897424404 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.897990307 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.897924097 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.899341635 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.897103231 seconds)
  done (took 51.172319429 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.910518635 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.051095651 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.128390005 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.92275934 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.909209775 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.912980483 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.927787051 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.91199794 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.911402089 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.913762313 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.004113355 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.914331778 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.928812108 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.13300608 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.921696266 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.912323796 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.913099142 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.911658601 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.060011586 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.924955951 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.930711109 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.914316953 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.929062211 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.923659852 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.913329772 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.914061767 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.916551735 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.381570595 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.918667934 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.005233578 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.953025319 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.930748782 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.347980481 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.138625057 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.95938576 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.917483796 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.912296135 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.009000819 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.915090501 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.912167802 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.930261936 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.914510231 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.13355386 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.403623784 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.921902416 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.913811583 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.39227615 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.013815101 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.95281715 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.920303433 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.139737391 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.924375424 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.914207321 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.91444008 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.950614501 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.920998691 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.915119748 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.272106975 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.921978142 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.932440974 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.917101886 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.915082856 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.065505812 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.918760308 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.057539883 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.92072568 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.922660186 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.91512616 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.132912095 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.925525601 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.412837782 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.91972314 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.911373254 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.003014212 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.051968398 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.408412971 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.919089814 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.067911515 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.359844592 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.929682867 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.91524456 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.370325726 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.934043977 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.915322088 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.913001955 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.911783295 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.909473402 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.954266967 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.926364273 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.347988304 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.409858679 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.277920049 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.932759476 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.923916761 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.91136402 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.269230035 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.916946797 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.912607644 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.122986017 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.41878323 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.924400158 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.925549936 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.402280914 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.921491102 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.929511059 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.916197316 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.132494501 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.922614879 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.955354723 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.912655796 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.920003284 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.914132906 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.93096008 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.917073285 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.912662614 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.383337242 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.018076302 seconds)
  done (took 236.818593265 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.908266601 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.914050805 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.906981631 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.905247503 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.9058996 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.911065308 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.906337578 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.905990024 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.913322314 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.90634051 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.905996601 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.903856366 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.906244497 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.908653423 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.407775423 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.916024525 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.522936157 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.909166519 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.910941815 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.908526165 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.590463534 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.917015216 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.911110776 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.932898536 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.91103523 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.912783309 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.914363828 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.955377077 seconds)
  done (took 169.169531315 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.9173521 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.102154834 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.930833824 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.953338209 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.922596202 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.914487651 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.9402233 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.936496454 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.919854002 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.914323527 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.914056485 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.978532842 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.928149613 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.046679467 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.947149543 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.946606477 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.02104296 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.922197149 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.915804273 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.914787156 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.9443046 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.912331633 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.977802148 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.043662495 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.932882241 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.035080786 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.922184095 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.9181156 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.91813552 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.035956313 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.93095936 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.978892355 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.942929163 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.933951358 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.036563339 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.031834266 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.023421164 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.946313892 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.920278697 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.916006534 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.916342628 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.90589621 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.03615784 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.936296336 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.917962609 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.025585654 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.935131968 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.919642913 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.929672574 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.917395066 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.932054829 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.93513439 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.983478925 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.047655052 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.95233389 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.951904708 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.94443674 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.214785812 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.926661785 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.018720411 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.910570772 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.036035264 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.936713066 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.908537614 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.919144648 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.924242373 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.948573537 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.948483512 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.023300153 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.927108608 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.019880508 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.953031171 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.924043389 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.920411626 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.923500004 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.036353209 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.036256789 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.952751637 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.955907661 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.949049841 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.914469844 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.920948938 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.909507189 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.93791285 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.920986854 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.036072694 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.037115891 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.926196574 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.922652062 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.922232983 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.92156637 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.946170856 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.044093051 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.953907031 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.016332939 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.987106327 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.992409722 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.93217598 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.935193725 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.922545511 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.984828404 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.933931605 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.933102714 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.267379414 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.993674348 seconds)
  done (took 207.848123577 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.389939747 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.973920248 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.975260193 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.215274561 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.338428551 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.711449378 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.966317848 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.96938579 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.994461065 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.129394168 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.027941067 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.984474647 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.954883978 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.941949772 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.969042459 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.990767672 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.971539067 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.258700435 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.090241594 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.105197384 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.951419505 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.255482385 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.287654211 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.354095791 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.002086076 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.29071673 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.660548135 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.212194381 seconds)
  done (took 62.826336682 seconds)
done (took 834.16821213 seconds)
SAVING RESULT...
DONE!
