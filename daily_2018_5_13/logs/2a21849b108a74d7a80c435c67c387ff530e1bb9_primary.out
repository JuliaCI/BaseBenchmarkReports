cset: moving following pidspec: 19000
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.538437691 seconds)
loading group "string"... done (took 0.534861723 seconds)
loading group "linalg"... done (took 9.159747529 seconds)
loading group "parallel"... done (took 0.18131411 seconds)
loading group "find"... done (took 1.330922086 seconds)
loading group "tuple"... done (took 1.98572522 seconds)
loading group "dates"... done (took 1.392646353 seconds)
loading group "micro"... done (took 0.203994407 seconds)
loading group "io"... done (took 0.520799456 seconds)
loading group "scalar"... done (took 53.386319649 seconds)
loading group "sparse"... done (took 14.161124917 seconds)
loading group "broadcast"... done (took 1.332030714 seconds)
loading group "union"... done (took 10.360678085 seconds)
loading group "simd"... done (took 3.074880483 seconds)
loading group "random"... done (took 11.684781351 seconds)
loading group "problem"... done (took 2.270485926 seconds)
loading group "array"... done (took 24.595519882 seconds)
loading group "misc"... done (took 1.157836374 seconds)
loading group "sort"... done (took 3.821278097 seconds)
loading group "collection"... done (took 19.638723248 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.630795937 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.17972365 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.208365875 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.295689787 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.244505204 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.159974578 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.140970509 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.264515916 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.708467452 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.21132147 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.133611887 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.517789747 seconds)
done (took 6.521293314 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.255352084 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.184565375 seconds)
    (2/2) benchmarking "String"...
    done (took 0.170471311 seconds)
  done (took 1.121853687 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076917559 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.156838769 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108441412 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.09506659 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094892844 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109731252 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093337982 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108948309 seconds)
  done (took 1.537830836 seconds)
done (took 3.763472317 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.516031757 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.876256095 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.536460782 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.164865588 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.307430783 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.306509822 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.341562255 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.205076033 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.093339689 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.092953517 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.179822647 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.40400982 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.444992483 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.98244801 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.091056772 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.115924214 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.122093091 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.78433137 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080109016 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.113561894 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.527402339 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.199594195 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.099713728 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.125980858 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.188509762 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135721392 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.165210675 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103430521 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.666631492 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.13495932 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.187263604 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098857013 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.16354268 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.196221682 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.212384561 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.093879742 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.691909301 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201351956 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095139447 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.10001359 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.676529052 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.120891176 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.190810436 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103313943 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.093627269 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.186015961 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.09374665 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.077315598 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.117384988 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086867724 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.168498406 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.449475789 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108698229 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.177865381 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093670005 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.698218656 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098293662 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.276572644 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125152385 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.095340629 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.092337756 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.091283027 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.161377776 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.094969745 seconds)
  done (took 20.434034894 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.152702836 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.170704886 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078944251 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.157801762 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.125604211 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.081556835 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.102985372 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079674747 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.111081263 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.248251884 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.140963525 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.158990854 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093109585 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.08920097 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.128605563 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250786443 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108681464 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.123923481 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089199972 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.091053975 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.143352065 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.099006884 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109640102 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095729819 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170835648 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206753462 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109872923 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124125783 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.088837063 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098271754 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141743338 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.147471955 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093639859 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088346092 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.192851066 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.108232403 seconds)
  done (took 5.386081557 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.208920588 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.125642906 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.221684771 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.16614706 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.15045698 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.175095804 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.150337493 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.292258666 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.295440398 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16331969 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.109123807 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132967422 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097028007 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099066063 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082668987 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078751666 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.427497135 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.139595566 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.177588857 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.138303124 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109166627 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082812283 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.386361015 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086045004 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.099144975 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08774978 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067682322 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.204294522 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104751062 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.091083239 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.108478137 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.091607921 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134701927 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.200461884 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084271764 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132169719 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12350283 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087631673 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.101189316 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.221793855 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096295249 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.159809437 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078912935 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.109362822 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136650592 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.125586156 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.104597607 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.111281293 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.225077927 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.088366957 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.105563574 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.08315001 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196381034 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.127809225 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.081519994 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.289246703 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.120398199 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.089007462 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.083147109 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.263608306 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.116877206 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082071125 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.098634256 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089473391 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079141368 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.438708032 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110579312 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.963494204 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083821907 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.163298666 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087675865 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.108365616 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088929297 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08649007 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.120827212 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.08337752 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079419301 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.098557312 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.082032474 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08611742 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111333832 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.088583743 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080625378 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16416207 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.101307968 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.10110266 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127907335 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.088583719 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.098826544 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115443 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10003123 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.086792253 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.17556852 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.091185876 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.095729329 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106079059 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144906714 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.0851273 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.207533456 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.098913861 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.111556628 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100577068 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115775536 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.120466136 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.083256046 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080416746 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102605205 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081431048 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080886024 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161657304 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.084109702 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08349869 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.084232998 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113630405 seconds)
  done (took 23.447864276 seconds)
done (took 50.034284696 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.464378608 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08813605 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086736204 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107618659 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.088468638 seconds)
  done (took 1.679597852 seconds)
done (took 2.496701888 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.337035647 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.208542768 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101656173 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.205070868 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088488982 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.210483953 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.196786063 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.096981234 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.223420607 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.087474166 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.202068609 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086272041 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.107168001 seconds)
  done (took 2.997525898 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10068691 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.1061985 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09768203 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117831344 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080483295 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097228844 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114231444 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109135001 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095801626 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.107931175 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081551026 seconds)
  done (took 1.927843902 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096856386 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103164708 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086963716 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114113835 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08085186 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.094071811 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112253769 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106836962 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09475113 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109425427 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082001528 seconds)
  done (took 1.903559083 seconds)
done (took 7.645711878 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.167230314 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 26.864656725 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.174697664 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.298950028 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.359995908 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.261003588 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.692501197 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.162379827 seconds)
  done (took 31.960805761 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.117221769 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.158796512 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.095908215 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.094796682 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.094830172 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.11327661 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.093693085 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.09240101 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.116197638 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.091808506 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.092600579 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.111562119 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095776579 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.09034565 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.08998074 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.112843347 seconds)
  done (took 2.546605431 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.146255169 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117635042 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.11614232 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.097918462 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.092170869 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.116898278 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099233414 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.094914971 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.112338018 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.093644756 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.100080354 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.115087444 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096803967 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.090811725 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.11385977 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.123497766 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.091894846 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.11393393 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.121443262 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.095747255 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.116510607 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094920009 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.094500832 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.1150535 seconds)
  done (took 3.481406264 seconds)
done (took 38.808838313 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157849235 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.103313526 seconds)
  done (took 1.083262099 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.145278704 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.163214492 seconds)
  done (took 1.136238588 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113891768 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.088282952 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138838929 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.104202196 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.088882303 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.107491221 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116532455 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.106302871 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.090374535 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.089774116 seconds)
  done (took 1.876003802 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.09437426 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093448909 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.122323351 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.143969851 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.11595526 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094609294 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.09388367 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.092055516 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.114704887 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.0892478 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.097925235 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.126867505 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.094931473 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127511773 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.096345668 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.09616531 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116766762 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.094685627 seconds)
  done (took 2.738552916 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.08989631 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.091061615 seconds)
  done (took 1.012066312 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092938166 seconds)
    (2/7) benchmarking "second"...
    done (took 0.08877207 seconds)
    (3/7) benchmarking "month"...
    done (took 0.090984432 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109939043 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.089468618 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.088137944 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.106103582 seconds)
  done (took 1.497510486 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.521030612 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.271939165 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.384898875 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.106892517 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.147587212 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.347271208 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.144622195 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.104034447 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101950447 seconds)
  done (took 2.998293001 seconds)
done (took 13.171424664 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.09581749 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.224422277 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.651992648 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.113097025 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.206611782 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.167144797 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.303675328 seconds)
done (took 2.601616541 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.357871211 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.155610211 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087601014 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.087791876 seconds)
  done (took 1.522454811 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08442758 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098322142 seconds)
  done (took 1.024221959 seconds)
done (took 3.387102812 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091545844 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.088186586 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.132077965 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.087804421 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.087127567 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088014561 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.107645135 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.087489907 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.087505653 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087390813 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.110269111 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.089109042 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.086981897 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.105092147 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089068612 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087500369 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08680005 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106097385 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.088261347 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08627807 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103772659 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089978542 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.086290727 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.086129811 seconds)
  done (took 3.121873494 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.114070782 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.089121285 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.109826029 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094715494 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.09308737 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.108971808 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094945837 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.08927108 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.092084729 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.108846141 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092382855 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.091549687 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.108259219 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.092686621 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090833784 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.110660746 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093764228 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088417978 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108497793 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093411342 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.092895672 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108317058 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.093390296 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091770246 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.110147708 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092970488 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.090034356 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.106410045 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09446711 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092533226 seconds)
  done (took 3.782149636 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.10042158 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087971426 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.09082142 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.119369086 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088109291 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091337648 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.105494221 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.090418867 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.092693953 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.090470625 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.11188127 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.092607222 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.088292005 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.111145076 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.095579954 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.094228408 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.09996047 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.108226285 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.089246263 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.092874676 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.11258051 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.08971318 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.091166637 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.09123926 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.110215351 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.089389619 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091421557 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.10983648 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094842713 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091745666 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.094440978 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.113707368 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09386604 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.102460634 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.114568464 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093096957 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097212336 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.10615975 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094841176 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088730769 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.088785003 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.111131528 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.091489143 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.099584235 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.109370818 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.094353343 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090145783 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.093247377 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.111050691 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098084214 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.088791901 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.105146142 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095749821 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094217055 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.094224732 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.106973835 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09381867 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.089219148 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.110646619 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.092668739 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.088770469 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088457452 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.116169248 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.094330467 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.107255341 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.116991866 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.090144944 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.094231267 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.110574737 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.098867846 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096327025 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.103511249 seconds)
  done (took 7.923953444 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.104489544 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099360235 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.090171601 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.109990261 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090056576 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.08956561 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112729028 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091382049 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090060781 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114390305 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091628792 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090681641 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089483591 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109382343 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090696264 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089595924 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115327112 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090775642 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090137756 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108835656 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091398834 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095524004 seconds)
  done (took 2.998147077 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.236041277 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098488068 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141663881 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122759282 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10793397 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121352963 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.097270142 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095075566 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112103763 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101820414 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099157759 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112842123 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108282162 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098476649 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117862865 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100415716 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093520778 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.120539198 seconds)
  done (took 2.94003424 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105589064 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094026832 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.132715969 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094139935 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.091515766 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092086275 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.116432827 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11400187 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.091799296 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.112043908 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.100475881 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091778935 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.111835108 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093031835 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092553444 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.113308945 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.09466751 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091611875 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118789867 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098728393 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09695105 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118495904 seconds)
  done (took 3.120220593 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108255835 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092355889 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.129422548 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096218783 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08961384 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.091178162 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.118159748 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091407672 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.097904294 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.110923905 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092433632 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091383304 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.126692429 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092087893 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.096914252 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110645435 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093038223 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091536686 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110936175 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092493553 seconds)
  done (took 2.876506018 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.181859736 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129705528 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112914932 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119513124 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131382587 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112958479 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118883617 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.132266673 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111797363 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.14221087 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113547472 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111215008 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.139610526 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117583549 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108414113 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.141271534 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119778621 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.140315971 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114134799 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111146565 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.13958603 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111483771 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136287466 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111053907 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106675483 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128618865 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111079437 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112826211 seconds)
  done (took 4.325681552 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093196119 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091986119 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089594518 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.109793451 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091768276 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091253039 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.089355076 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.110081099 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092467831 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086593741 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.106740512 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093384888 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09275828 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090494271 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.110669826 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092806924 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091000327 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.107591265 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092131469 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087796754 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091165044 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110974172 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092934325 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090443504 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089991377 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.112236634 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09199185 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090590025 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109961078 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092345321 seconds)
  done (took 3.744015045 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.100424341 seconds)
    (2/2) benchmarking "in"...
    done (took 0.097774242 seconds)
  done (took 1.060780556 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.100602021 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107443238 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090697402 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.11019323 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100010645 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091359879 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120261111 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098824473 seconds)
  done (took 1.681148743 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.151313961 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.170552587 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.097389562 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.105184975 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.170150607 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.163165169 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141576192 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.097016232 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.113583569 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.089194247 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.165581042 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08838675 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.094788847 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.112100399 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.099071224 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10361225 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.092704623 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.125194794 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.100434297 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.094055673 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.118837365 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.103012472 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097613999 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.122488955 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.090265437 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.098295974 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.119194281 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.107546972 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091864627 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.118765451 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.09587799 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.091727063 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.11746477 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099885387 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.093653276 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.171451506 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.105752304 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112148686 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.099530575 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097940287 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.147456965 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095357894 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.095066971 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.094252299 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.120585998 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099536559 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.098254271 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.113373755 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.090256031 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.091731843 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.112569739 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094025037 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092326245 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115529084 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.098313648 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.103754479 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.114834092 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.093919619 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.092585722 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.109704354 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.097450776 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.092052961 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.117126674 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.09947361 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095875311 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093435135 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113446379 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.089163545 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093851474 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.113880821 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.097242221 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111570339 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.117315502 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.10013333 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098715848 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.114680713 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09554807 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099808372 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115609748 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.099612 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098438527 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.142066576 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100613884 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092722848 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.111056228 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.103965638 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.095817984 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.096854704 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.109810198 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.107511615 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.096174421 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.113654264 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.090807375 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.094537171 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.112927966 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.09912558 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.089257144 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.116231113 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093811658 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099942144 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099261525 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116189773 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.099806403 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100295355 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.120998914 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.097276932 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.165179556 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.095945163 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.092754857 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.115143674 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100976332 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.091151992 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.11568718 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094029462 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094915603 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.092852813 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.119727324 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.098280209 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.09585044 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.118619403 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.101224088 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.098897151 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.116777111 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095023122 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.093346449 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.116654267 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104939893 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.099153345 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.115196752 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.095469239 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.09412024 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.096555081 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.119034261 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.095878824 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096565417 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114931981 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094022221 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.093064184 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.117874662 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.099406616 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.091828811 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.114641482 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.10037074 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.093720554 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.115939834 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.10081424 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.093410146 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.088959588 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.119040322 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.093089697 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.093985799 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.123052947 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.094738844 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097599513 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.114092384 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104672695 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.094319816 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.119696188 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099558361 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.101403017 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118920462 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.091606871 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.095388012 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.09759517 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.120618847 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.095634047 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094109466 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.113508226 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.103632937 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.091407053 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.117532144 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.091889123 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.094677345 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.119506506 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097805715 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098638167 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.092985294 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.156672321 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10805855 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100220695 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.118529029 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.099293652 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.099368709 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.117283197 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101376671 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099996709 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.120382835 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.099698185 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.095966708 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.121093433 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.096693955 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.093569495 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094452998 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11969547 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.090951956 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095624281 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.109874541 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.10156464 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.097744688 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.1202412 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102499394 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097484456 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.115642976 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106106639 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.092233852 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.117632417 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.09234233 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.101484398 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104336645 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.122152629 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102832159 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.100974095 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116413992 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096398246 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098728329 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.11313028 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093917648 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.090283329 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.105618951 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.093593993 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101533767 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.096478178 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.114125037 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.09578703 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099359594 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.121533092 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.098086469 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.090526651 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.12015043 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.104355064 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.094649931 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.119137006 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.097184592 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.097215365 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.125748568 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.092160257 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.095249526 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.120301648 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102356131 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.089048577 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091767165 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.114869077 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.105501418 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098974171 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.11831553 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098389606 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105227579 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.116256336 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.096952909 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.095187956 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099437282 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.113486011 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097238844 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.100390799 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.116816141 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.095689703 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098428479 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.118950666 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.097138327 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092531649 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.114172296 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.09804986 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.095763267 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108723111 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.097725815 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088909369 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084752251 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.110200745 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.086466289 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.092154861 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.11481358 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102621605 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.095825717 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.118047547 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101479482 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101413787 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.11619895 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104282924 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109441721 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.113464573 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.093857189 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.097210265 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11877217 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.097753431 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.096149924 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.115028102 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104220322 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.097189353 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104223848 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.108666973 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.091285196 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.09646381 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.118046834 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.098149958 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.096617838 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.116298404 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090016028 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.094284859 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.107359272 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099739439 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086901423 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111189027 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094137495 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092982674 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089566583 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.111549197 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089110642 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085382566 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.109923074 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.097542491 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.09232937 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.114361555 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.094310728 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091026742 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.10860678 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089668284 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.097354418 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.110616956 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.099429136 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.090658282 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086027795 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.106940669 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.097449983 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093465711 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.115736071 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089692554 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.095346619 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.115926301 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.095718259 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.091435698 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.099482918 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119670877 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.097808819 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098931429 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.106804716 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.09144057 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097714687 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.10940838 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.094974842 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.093189255 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.106150684 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098085534 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.096216801 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.113459251 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.093361053 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087257869 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.090550461 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.116705438 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.095019396 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.093022723 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.112575398 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096003804 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08798428 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112541712 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.098405514 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.093568919 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096550753 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11461364 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.095551592 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089331785 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.117146163 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.091084468 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086791312 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.106172117 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.091839468 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.096807288 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.105675085 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099238633 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.095678905 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089578742 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.111169753 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.096005998 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089828346 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115902309 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097391601 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091154856 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.119553839 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.092277739 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091748179 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.113775791 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.098132106 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087797093 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091491596 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112597788 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098292919 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092173575 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.116958611 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094829528 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096723328 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.112614361 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.097406279 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.097450798 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.116816856 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.090674591 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.098319062 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097216796 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.112642647 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.091603602 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093451115 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.110767914 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.092886404 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.097362082 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.109988661 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101137375 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.096814785 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.110305886 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093225596 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.097061786 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112432649 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099503155 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090392119 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095586322 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.110008674 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.096846809 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092681785 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.117831818 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091921135 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.088442861 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.116326078 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.097570425 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095259955 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.116596044 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.100018613 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087515232 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087006846 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.114432763 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.091291096 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100934627 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117359952 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.092914161 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092100423 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.113637538 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.092712246 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097448646 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.108564675 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092518363 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.094990799 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114593702 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094104225 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.0888981 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.094480928 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.1142955 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096079607 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092419502 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.109721842 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093844957 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.09888052 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.112483736 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091053808 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.090930376 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.117867944 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.09521733 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.09184571 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.107465878 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102604807 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.096601772 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118220651 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.094516316 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.095153636 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.091335906 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.115057782 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.098835069 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.092694419 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114935519 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.094463492 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097360933 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119823259 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088853791 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.090750522 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122866415 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097575919 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.097456832 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.111642136 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.095087413 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098076967 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117447047 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.095942915 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.0884865 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089336998 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.112061685 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089449058 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.09287092 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120910068 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094519388 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091483517 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117041239 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097555461 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.09388492 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.092098045 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.108854806 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100490415 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.090914435 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.117897489 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089362953 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087486974 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.111964396 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09985094 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093823042 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.113865244 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.094416621 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.093999597 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.088516969 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.11142863 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.098893757 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095598384 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.117949675 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09472073 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.093484152 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.113450825 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10376947 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.09315175 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.093145728 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12354244 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.098811173 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094920682 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.115721714 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098737121 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.097571732 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.114202392 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.100566356 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091996839 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.113624667 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.100586634 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.099214083 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124582372 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095132197 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088098127 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.118243877 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.093293701 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08889987 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.118484502 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101212153 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.099084122 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.1144652 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093446808 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101574901 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099556495 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11593565 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.092839847 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091640179 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.120018826 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092756023 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.09508723 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.111414787 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.101087447 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.098727421 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117376784 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.102808451 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.089226529 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12218001 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.100288408 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102783127 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.094498321 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.111383886 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.08960588 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.094179559 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.121948475 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.102867581 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.096132596 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098545651 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.117957473 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097618309 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094435113 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.114680843 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.102713093 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.098399861 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.112755502 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.097662811 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093497607 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116691589 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.095608847 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.098323431 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.119268718 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.098504426 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103001422 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.097789737 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.115805109 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.092853878 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095339532 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.115675378 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098159288 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097664299 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.111457087 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.090183183 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099618529 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.119052699 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097124481 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100532899 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099395229 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.115303211 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099465624 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101429555 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.120499628 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.096546164 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095875449 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.116412568 seconds)
  done (took 62.225354695 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.15571434 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104656171 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.115402233 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095313652 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113127565 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116820515 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094913582 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095667049 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.115161369 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106064306 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09451052 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113329803 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112782113 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115451434 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135397557 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108722859 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114393498 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097809773 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094159561 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095056882 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13352511 seconds)
  done (took 3.240241674 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.123696789 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.108714599 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128244466 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11045715 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100964765 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.130314409 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109850771 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.132490683 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11304929 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102555308 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133290591 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111567676 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.127625625 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.113496139 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110737571 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.134612677 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119808042 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110643469 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.134474681 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.1155887 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.126532043 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.110140089 seconds)
  done (took 3.518334971 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.113192107 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.099727471 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.100085729 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.116184558 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.099103112 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.093588782 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.12356476 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.097560739 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.103711554 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.115552837 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.09393042 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.096403249 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.100660383 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.11578437 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092744642 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.094296558 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.1257955 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.099755351 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.099571935 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.113467598 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.110636115 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.094215756 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.113880084 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.093352472 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.10795147 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.099665426 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.115500576 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.100021312 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090558363 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.11918114 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.097631849 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.095711128 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.116213814 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.093540832 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091618518 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.098095488 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.122502293 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.096270094 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.094984857 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.117751179 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.096797571 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.100035798 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.120702687 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.097178576 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.095601849 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094875763 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.121068217 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.095065693 seconds)
  done (took 5.901332411 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.136847301 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163921124 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.09898024 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125861333 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.132156658 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.106371528 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.097806599 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.131405127 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.096912604 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.120568507 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113133391 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.109344022 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122771936 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.10381627 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.100488538 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.122480824 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100825839 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.097045252 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.126140398 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.099977957 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.102426262 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.122918869 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.109854355 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.131523283 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.103515792 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.097883639 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120010408 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105750181 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.107618722 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.126639919 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.103763018 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.103762395 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.132038366 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102259683 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.33433042 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.122421569 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.111873253 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.119697613 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.10300557 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.09727455 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.100267027 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125366682 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.101032842 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.133005993 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101726666 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.099914187 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.121099967 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099466943 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.108811921 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.121849976 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.107965089 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.110507937 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.124437131 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.101079375 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103213512 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.133267099 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.099690309 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.097811351 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.123982828 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.108149087 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.09653509 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.124187648 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.109004101 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.120656503 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.106966706 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.109795967 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.122474466 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103422032 seconds)
  done (took 8.939206629 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.141204965 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.103393586 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134213809 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113426903 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103105895 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.12534435 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104345881 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.102379463 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.127302766 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108767989 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124027081 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.202279189 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.123204497 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.109683581 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102941775 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.127396647 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.104185162 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10254699 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.126690236 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104502256 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.102440023 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.133497753 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104126234 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.13390927 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116229384 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.099903713 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.125955097 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103986641 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111733165 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128864323 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11533936 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.125772324 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10702328 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111914069 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.138667686 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.103523449 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.097050112 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126398116 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.104339486 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.103364099 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.122956385 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113387864 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.123829227 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.101253328 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104411668 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12448173 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114787707 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.114781625 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.131231002 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110304827 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.12457457 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114642693 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10429468 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.12525597 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.1137612 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.140088056 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11825227 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112292447 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126141929 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113822336 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133947573 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.123645503 seconds)
  done (took 8.224945933 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105542529 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097023503 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.095251227 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.117741491 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.098012006 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095445191 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096142928 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.118837861 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097206461 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09685854 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118548988 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097027854 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09672946 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096490404 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117427468 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09675977 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095363633 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.116020571 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098356281 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095860257 seconds)
  done (took 2.977457419 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.116086224 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115600407 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.119222807 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106415238 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.099074197 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.124826747 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.100843405 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099924525 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097320634 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122278861 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108913258 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.127777605 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100816842 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104943996 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.128530343 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105450608 seconds)
  done (took 2.710455905 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.128827004 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115813259 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.197694974 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103305948 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.122136503 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.107501807 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.099802018 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100194213 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.122867776 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.105888272 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.103357635 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.123646288 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10014357 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.099914276 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.123717838 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.103255575 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.096973628 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.124638933 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103055966 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.193805224 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106652225 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.100974058 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.099829159 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.127674112 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.101270107 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.101708948 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.128955703 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.098997512 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.100825589 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.122335449 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102611624 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.105740059 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.121766142 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.104980706 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100191136 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.122078692 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101824365 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.100983581 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.124060982 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.101508394 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102156021 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.10052251 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.123990284 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102905745 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.096983553 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.122845648 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.097881613 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.10481505 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.122742619 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.102729912 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.100911797 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.126707015 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106847123 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.108165603 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.128716762 seconds)
  done (took 7.13431819 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.121708127 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101825997 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133648637 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10136001 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.100709727 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.100180029 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.124275309 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.101236329 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100416739 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.120806216 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102338274 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.101229185 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.121090032 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102603476 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101013581 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099881788 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.121604907 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.100526042 seconds)
  done (took 2.888157921 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.115126881 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098849007 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.104065673 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.122154265 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.099924408 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100240437 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.120449499 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100304593 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098957758 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09856458 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122051717 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.10127252 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09855639 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.122725267 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101231655 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097811939 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.120826619 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100832452 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099445975 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097380737 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.122759009 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100154811 seconds)
  done (took 3.280631042 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.122275332 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.188524993 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.112542834 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.196659702 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099585524 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.098593431 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.130858906 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.10025815 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.115100474 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.120934246 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.099142312 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.098118811 seconds)
  done (took 2.422066725 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140026169 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137778249 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122799452 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102050815 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109379281 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126574614 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105694853 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104205682 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136298644 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115984252 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125863219 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11449524 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11144534 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134841639 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109879392 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129896081 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108074121 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104095993 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120793594 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125262958 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104678354 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135191857 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104931949 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103651797 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126875699 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113565117 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133600691 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118048802 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103990445 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135826394 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110559768 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103873996 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135680805 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116792106 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123384082 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113465309 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103970883 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142489194 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109986864 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135081188 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102427394 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109252143 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134823942 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111554602 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112128945 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129348368 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110084422 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124949637 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107088124 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126219967 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133103061 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113060435 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132450109 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113907371 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112693071 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151649979 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116973486 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135106409 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110332253 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139857005 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11535678 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109668205 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136106464 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11586654 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132039693 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11483254 seconds)
  done (took 8.857240422 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154104877 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100564932 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127419737 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117682528 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133556961 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106760852 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103804627 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125555576 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106857221 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101362878 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173679607 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105688956 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114408808 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138144689 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104791457 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126102649 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106244149 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11278926 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122936992 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128886164 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125599593 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115219814 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112862548 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135604789 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117645152 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131105386 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106537392 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104601987 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127302612 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106665628 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110470967 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127259222 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114433846 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10105899 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137003075 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105303661 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126903139 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112976937 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104565878 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131806309 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1158477 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142902257 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107186399 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105905281 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139677833 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106814871 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106107105 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122257808 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107724774 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100671936 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139845078 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117642615 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137977442 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114778663 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104949344 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127902352 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105911914 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104490499 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126994215 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111957336 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135598018 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107212091 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127741157 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12770459 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106812044 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135539373 seconds)
  done (took 8.802453823 seconds)
done (took 169.537405981 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.159727949 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.192261522 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.147996945 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.179130779 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.095740865 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.128984055 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.151126501 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.150425556 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093423552 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.118033161 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.09482879 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.096685832 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.183196106 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.095697774 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.093868908 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.118435663 seconds)
  done (took 3.039295654 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.198578574 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.318839478 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.116012433 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120984064 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10416177 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.101287305 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.121662741 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101940627 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098944385 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.130914067 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.103241469 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097129276 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.130071539 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098693256 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099687565 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.124085884 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108616877 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101479948 seconds)
  done (took 3.226851392 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.127910208 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142572552 seconds)
  done (took 1.225705927 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.141218097 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.201030763 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.279760351 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.173708306 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122892215 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.141321116 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.153354664 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13446163 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.18181699 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.138864406 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.116439398 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099981608 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14830814 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.106479636 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.112496714 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.123020457 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127654667 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.132119568 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.111511748 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.102072852 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.142709119 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106517465 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105461483 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.132514634 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.17184855 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.135114786 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106151743 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.104795099 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12417631 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111665571 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.106453059 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.139725589 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.113402856 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179128168 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105083865 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.17499887 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.10999517 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.123612853 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.111705967 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.101357347 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.126699295 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.104135444 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.138745877 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.101710002 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104757703 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.131251116 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105622822 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.104203854 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.131863563 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.112474999 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.108663709 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.131817449 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.170036645 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.111909459 seconds)
  done (took 7.991359132 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.869855194 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.143721909 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100478106 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.993854484 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.152687769 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116708033 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.850351509 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.146354467 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234379375 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.881997641 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117534613 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.113684819 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.260721249 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.2530822 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.248705834 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.380614488 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.694021682 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.136011137 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129684488 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164645463 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110175967 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147429172 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.122903809 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.438691209 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.10192695 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100961574 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130310804 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.114011208 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182556306 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100425705 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.124753951 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17761966 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.289729296 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.212058451 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099968893 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122443684 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100199655 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.189461462 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273456182 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221113809 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.162935156 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120715429 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09981102 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128018523 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12257622 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097699072 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.185563317 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.194173011 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.191782002 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105271684 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.112531783 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.134018179 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.108146614 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.182181142 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.096769057 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.361616851 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.380891445 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.102495861 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108424174 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.138145479 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271291593 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100116639 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23957453 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.148706411 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217374554 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100215753 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.809636417 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.187930832 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09995165 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12775667 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109443607 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105841051 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.1304683 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159150932 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.405486232 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.112817023 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.128007839 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101038622 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.236606454 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.100034971 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120713155 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161879335 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122148995 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11059665 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113427705 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134624325 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.189874574 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.248254319 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.136561643 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109546303 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.126646402 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114641013 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100390751 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.23575243 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.230590077 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.178734961 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.23361806 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110110421 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.185627243 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.184586159 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113998642 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.190613201 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107646419 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13740292 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109436031 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226230986 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.158029098 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.10175361 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104983545 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.133530807 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.136894873 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127664582 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.110918185 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.190337025 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.466435817 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.163294159 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.120704064 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105379187 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109666704 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181948812 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107164721 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27048594 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132229136 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.18673281 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.109694213 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097041586 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130349094 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.160954877 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13475891 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109502538 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130971909 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112505845 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.272860968 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225691436 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114316989 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243885852 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.193729682 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.10835635 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195367342 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109298238 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192594046 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131307128 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110326353 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101313994 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.803005955 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138026006 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109334942 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105581365 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.205044362 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099765141 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125922193 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101740328 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097324884 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.806769337 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125452143 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100248562 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102400483 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128789575 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.110455967 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10881235 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.129994066 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.158867779 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.270930963 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114790456 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128869865 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101967147 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.178785387 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.103655071 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101489557 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.100765521 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.123659791 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110217595 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125861013 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104686046 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.19208538 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.155889126 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.253707302 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.532646667 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102599705 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100506592 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242700906 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123512623 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.318739124 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10941489 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.23689005 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.188778693 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097690092 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.375878475 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166795724 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.208197325 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104618062 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.191793853 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098235943 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130889483 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.158427155 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123720987 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.1083776 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.18033937 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.116162501 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.136724699 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.190034818 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101977417 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252663078 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098457623 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.192791492 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101981877 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13131019 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.327714433 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101597493 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14201022 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.15922392 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12981901 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10258543 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.694398423 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101562045 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134551907 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110843802 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.236754122 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.188388739 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109441623 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133376872 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115116051 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.185015972 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.233979549 seconds)
  done (took 46.424903093 seconds)
done (took 62.851784334 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.299707555 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.25591257 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.305678292 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.216457906 seconds)
  done (took 2.12450078 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.302099165 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.166014806 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.236834604 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.099806489 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.251255577 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.099307434 seconds)
  done (took 2.134735125 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.515614768 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.393304348 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.348151936 seconds)
  done (took 2.236203254 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.256043025 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.240942144 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.349997895 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.416858884 seconds)
  done (took 2.362020982 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.30828068 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13455829 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.127985437 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.216530337 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.283958918 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.260745592 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.154229996 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.206931919 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.154572669 seconds)
  done (took 2.881152039 seconds)
done (took 12.71319882 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.143047317 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.305317982 seconds)
    (3/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.328372512 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.199200676 seconds)
    (5/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.274309008 seconds)
    (6/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.116931945 seconds)
    (7/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.113222574 seconds)
    (8/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.202060178 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.107304046 seconds)
    (10/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.207178057 seconds)
    (11/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.221172048 seconds)
    (12/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.344590375 seconds)
    (13/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.362930545 seconds)
    (14/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.107970435 seconds)
    (15/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.247149379 seconds)
    (16/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.19536883 seconds)
    (17/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.112911415 seconds)
    (18/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.203887917 seconds)
    (19/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.134189794 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.21914352 seconds)
    (21/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.224658901 seconds)
    (22/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.303439392 seconds)
    (23/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.220674552 seconds)
    (24/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.270108012 seconds)
    (25/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.112843614 seconds)
    (26/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.220131367 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.11734929 seconds)
    (28/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.248511781 seconds)
    (29/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.179691953 seconds)
    (30/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.100161456 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.1624554 seconds)
    (32/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.293124028 seconds)
    (33/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.17529377 seconds)
    (34/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.277947808 seconds)
    (35/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.232775092 seconds)
    (36/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.157289394 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.152806953 seconds)
    (38/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.310015653 seconds)
    (39/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.111264692 seconds)
    (40/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.179884822 seconds)
    (41/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.082153592 seconds)
    (42/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.217752432 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.108622375 seconds)
    (44/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.091162404 seconds)
    (45/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.172860809 seconds)
    (46/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.107603638 seconds)
    (47/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.176939099 seconds)
    (48/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.087332711 seconds)
    (49/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.265019771 seconds)
    (50/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.144718293 seconds)
    (51/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.110944472 seconds)
    (52/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.109632945 seconds)
    (53/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.197061101 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.163323795 seconds)
    (55/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.139826027 seconds)
    (56/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.147333282 seconds)
    (57/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.154159776 seconds)
    (58/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.107909681 seconds)
    (59/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.106613136 seconds)
    (60/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.095001342 seconds)
    (61/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.106219715 seconds)
    (62/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.186349164 seconds)
    (63/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.109089513 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.139578373 seconds)
    (65/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.082197119 seconds)
    (66/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.134162831 seconds)
    (67/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.145547187 seconds)
    (68/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.107580106 seconds)
    (69/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.124488226 seconds)
    (70/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.10854541 seconds)
    (71/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.1103572 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.130063644 seconds)
    (73/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.179302696 seconds)
    (74/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.084090366 seconds)
    (75/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.204058597 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.109363979 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.126257619 seconds)
    (78/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.106045387 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.138381741 seconds)
    (80/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.107539338 seconds)
    (81/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.136493943 seconds)
    (82/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.117761907 seconds)
    (83/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.193517317 seconds)
    (84/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.108131383 seconds)
    (85/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.1766981 seconds)
    (86/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.083694287 seconds)
    (87/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.150187301 seconds)
    (88/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.176884957 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.107459307 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.133142348 seconds)
    (91/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.110409772 seconds)
    (92/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.082060097 seconds)
    (93/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.153083029 seconds)
    (94/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.168553707 seconds)
    (95/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.08274317 seconds)
    (96/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.086719705 seconds)
    (97/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.13311249 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.10140784 seconds)
    (99/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.093255115 seconds)
    (100/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.13075793 seconds)
    (101/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.085818801 seconds)
    (102/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.101654254 seconds)
    (103/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.107671868 seconds)
    (104/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.201438128 seconds)
    (105/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.199546728 seconds)
    (106/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.203371616 seconds)
    (107/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.140028039 seconds)
    (108/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.144162958 seconds)
    (109/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.142055006 seconds)
    (110/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.18647194 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.132750021 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.109608646 seconds)
    (113/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.094019748 seconds)
    (114/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.081879674 seconds)
    (115/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.133976345 seconds)
    (116/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.107805804 seconds)
    (117/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.084372409 seconds)
    (118/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.222999479 seconds)
    (119/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.179307954 seconds)
    (120/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.177674792 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.134231921 seconds)
    (122/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.108063927 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.108179158 seconds)
    (124/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.109734626 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.109953495 seconds)
    (126/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.107564989 seconds)
    (127/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.210759645 seconds)
    (128/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.084949932 seconds)
    (129/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.083298765 seconds)
    (130/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.084112877 seconds)
    (131/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.200942511 seconds)
    (132/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.104290336 seconds)
    (133/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.08292221 seconds)
    (134/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.083354451 seconds)
    (135/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.133679997 seconds)
    (136/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.084759613 seconds)
    (137/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.090102458 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.125595971 seconds)
    (139/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.154521246 seconds)
    (140/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.085134736 seconds)
    (141/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.108644107 seconds)
    (142/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.082852833 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.133927948 seconds)
    (144/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.085318742 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.10792168 seconds)
    (146/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.106512993 seconds)
    (147/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.105525974 seconds)
    (148/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.101920437 seconds)
    (149/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.14586953 seconds)
    (150/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.115424346 seconds)
    (151/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.085466318 seconds)
    (152/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.109176528 seconds)
    (153/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.086633902 seconds)
    (154/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.107508267 seconds)
    (155/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.085639553 seconds)
    (156/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.090066546 seconds)
    (157/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.083978757 seconds)
    (158/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.107178881 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.12656835 seconds)
    (160/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.083681231 seconds)
    (161/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.10812451 seconds)
    (162/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.08812182 seconds)
    (163/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.211012718 seconds)
    (164/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.083830648 seconds)
    (165/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.083909604 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.107285586 seconds)
    (167/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.127095061 seconds)
    (168/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.108032311 seconds)
    (169/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.088673471 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.154509493 seconds)
    (171/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.085860695 seconds)
    (172/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.090665499 seconds)
    (173/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.084754288 seconds)
    (174/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.082862447 seconds)
    (175/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.109071685 seconds)
    (176/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.09132252 seconds)
    (177/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.085410119 seconds)
    (178/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.08473873 seconds)
    (179/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.088562665 seconds)
    (180/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.084218659 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.136002584 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.125130176 seconds)
    (183/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.082783205 seconds)
    (184/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.10808405 seconds)
    (185/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.089799953 seconds)
    (186/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.084302469 seconds)
    (187/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.084481346 seconds)
    (188/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.083828492 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.132984452 seconds)
    (190/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.085287965 seconds)
    (191/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.083670453 seconds)
    (192/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.084279737 seconds)
  done (took 27.666625231 seconds)
done (took 28.65757216 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.224965155 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.130785475 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111289176 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.11033583 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.210410683 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118007489 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.14498551 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.11656415 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.115340567 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.132067468 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.103126786 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.119435509 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.109864115 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.209187429 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.11324051 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.129801362 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.10313422 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116659584 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.146748584 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.120912542 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.205994481 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105179562 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.115558284 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.129892019 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.18391644 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128758861 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110658059 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.10993896 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.142131031 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.113110231 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.109522169 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.101641458 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.146124906 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.119592495 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101485902 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.135293039 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102459472 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089340148 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.132845527 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.11594671 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.117867576 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.131393201 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112747572 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.103056269 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.109266816 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.135688453 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102308126 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.113793275 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.126714694 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111048664 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104390117 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.147832351 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.108954252 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.101093935 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.124429254 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.104401503 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.116736497 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.126365186 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124107392 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102839847 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.102952778 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.129284122 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.112576918 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10196938 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.134744818 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.103705096 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.111245221 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.134857826 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109711352 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105411512 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102390831 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.135201268 seconds)
done (took 9.926384826 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.116708187 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.159353051 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.207677637 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.213943459 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.132927174 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.145208967 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.124042715 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.132072289 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.14805214 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.128105991 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.161865541 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131621609 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.215812919 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.116147363 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.118305365 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.140179799 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.118296226 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.115469228 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.222377461 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.150780019 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.136578397 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.114725295 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.164018872 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.126849811 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.108449907 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.168542393 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.109320542 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.136010875 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.111547753 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.116950985 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.153157078 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.111963384 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.108918568 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.155936846 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.122694228 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.116304151 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.146833154 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.113474752 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.108171827 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.134706979 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.120109895 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.150708282 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.110124741 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119859985 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.138504407 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.118448242 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.117730818 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.142459005 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.113641768 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.112681868 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.137529919 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.139621355 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.115416423 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.144320665 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.116907419 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.115422687 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.141963006 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.117886045 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.108794084 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.145266224 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.109271943 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.110437762 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.139241707 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.135923384 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.135346515 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.118889718 seconds)
  done (took 9.859890346 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.136371662 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138476987 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.143326135 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119654626 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112441903 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.126937582 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.1017551 seconds)
  done (took 1.917033013 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.110461165 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.190411388 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.215615057 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.216165599 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.182345431 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.223495589 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.147320785 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103005731 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133307213 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.138435183 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.191191497 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.245751016 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.108924579 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.144803251 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.188986687 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.127823331 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.190189225 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.128197794 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.114780188 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.217195275 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116455883 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.129870974 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.142948357 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103192473 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.213281532 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104344274 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.271246132 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119683619 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.134469494 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.117864451 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113518688 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.209373435 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.209493578 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.117693674 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.1069068 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.216933355 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.208039931 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116117169 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.228271581 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.108563921 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.211015583 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.11835568 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118310646 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.14015929 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119306535 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.19692426 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.123647822 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115321114 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.139176765 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.196563073 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.138608353 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.18870744 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.13565062 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119335557 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.113527936 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.141329609 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126624171 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114711046 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.22675895 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116411871 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.21727067 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.212227582 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.191318038 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.216832202 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12421557 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.217989269 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.208903371 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118491646 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111335209 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.141108028 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.193647019 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.137801077 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116113242 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.20230133 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123732022 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.213146407 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.189568506 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.137354646 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.120531349 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.10716246 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.137665247 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.108571389 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.178061742 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.142223247 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112053992 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12061726 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.145161307 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113830939 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.108167411 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.15547685 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.116076653 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.139804477 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.124609441 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.1140319 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146222071 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.193297745 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.142033583 seconds)
  done (took 15.949016463 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.115026558 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.106002954 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108463818 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.132845122 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105505997 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.105216181 seconds)
  done (took 1.722520847 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.151085401 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11579203 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.151099246 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117241083 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.167778059 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.227149871 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.233827272 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112054621 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.159001043 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129376547 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.226246502 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.201220317 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.236522412 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118797521 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.233182167 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.123073544 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.235243681 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113335989 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.154812507 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11354488 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.118145954 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.149111963 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114646108 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.218902803 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.121231476 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.146394359 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.117958429 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.128166162 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.150271094 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.114177336 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.119592179 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.14767108 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.112213009 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.112541864 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.235361995 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.110673643 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140118428 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.126322077 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.116960325 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.151563257 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.202972921 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.143103577 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126009936 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.152250037 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.114681263 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.110796665 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.152511145 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115117751 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.230492445 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.125742008 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.124445687 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.145583669 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.122115805 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.12439006 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.139623761 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114442597 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.123823111 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.236596938 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.118412342 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.140767741 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.116742118 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.118891639 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.143122495 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.123625632 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.142448338 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.132268939 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.112071194 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.142620646 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11882166 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.116745401 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.151001079 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121051716 seconds)
  done (took 11.535107909 seconds)
done (took 42.011546573 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.491289359 seconds)
  done (took 2.539162958 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.929308496 seconds)
  done (took 1.979704903 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.723006189 seconds)
  done (took 18.806980172 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.55127641 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.619564618 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.068667885 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.162489631 seconds)
  done (took 3.453700242 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.994810784 seconds)
  done (took 2.068267354 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.301678408 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.267214514 seconds)
  done (took 1.625603798 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.748618437 seconds)
  done (took 1.821152303 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.575930016 seconds)
  done (took 2.63516777 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.376081095 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176817919 seconds)
  done (took 1.625050796 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.62991163 seconds)
  done (took 1.704143567 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.040631859 seconds)
  done (took 21.113415946 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.256442665 seconds)
  done (took 1.334760276 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.294253307 seconds)
  done (took 1.372632739 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.559608576 seconds)
  done (took 4.638463472 seconds)
done (took 67.781227389 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.1238214 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.11847834 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.117472059 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.144291427 seconds)
  done (took 1.568608051 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.132205154 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119249362 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.122101225 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.14963254 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125371754 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.118280603 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.146294414 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122149197 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.117368692 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.148925842 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119601267 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117385149 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.149315484 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119720395 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.11681881 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.148423142 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123429366 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119465557 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.145151781 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.123974629 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120455348 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.146353014 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.127438747 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121809033 seconds)
  done (took 4.177720602 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.122960912 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.10900223 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.109413528 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.135467343 seconds)
  done (took 1.559188622 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.135758851 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131314814 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.155499561 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.130742036 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131067962 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.158390535 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118312306 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115461942 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.144252978 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.132860603 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.135904469 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.158257673 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132548876 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120466485 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.159171696 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113992206 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120013294 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.159612031 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126639782 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126617761 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.149841714 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.128794015 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.123438519 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.155822332 seconds)
  done (took 4.340463382 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.19762014 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.126975216 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.170711737 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16120623 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.171980915 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.11414426 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.137620333 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.151584527 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.121010927 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.115865602 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.146936933 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.161098744 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.147643936 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.122169991 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114858756 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.147980387 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.128677617 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.121199163 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.187152972 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.119830519 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.147714672 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.132124759 seconds)
  done (took 4.224527776 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.128595229 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.109898334 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.104443428 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.145853292 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122143326 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.111179685 seconds)
  done (took 1.805559562 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.116646013 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103798007 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103056671 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.131494324 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108750445 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103606603 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.101622666 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.13220091 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.104517634 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103715772 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129383269 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103779279 seconds)
  done (took 2.431555334 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.357140176 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.112626061 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.135626853 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.110874687 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.114873636 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.106122636 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.152667626 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.108841387 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.276098689 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.108197626 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.150489306 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.19896235 seconds)
  done (took 3.020518291 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213965071 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143861391 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.306410032 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368115867 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169197756 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190158952 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.270505177 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19941215 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.205106912 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140031936 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244252667 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155315718 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177429135 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173008923 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164674941 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.161404877 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195173051 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188306225 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175565061 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196585691 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1857423 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189464383 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186486746 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177063195 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1351124 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18636139 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122139091 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124699725 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195739067 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163580541 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205541177 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172535556 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138521223 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220698638 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255933631 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179621832 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.289886712 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159435909 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.196558375 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.18991623 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260771289 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137087453 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22093147 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180294938 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12697153 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20511672 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152859628 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.201429143 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.127777231 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138671543 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212846854 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201344381 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.205455014 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139136225 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314512148 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169510466 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168894469 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171767745 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212060265 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212529991 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16738525 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120300443 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212000999 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210871421 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176413677 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.168708886 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.163572984 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157578884 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164129385 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.222052651 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20691189 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156331536 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.227210667 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154674403 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160670121 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197615424 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180148459 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201846703 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155890058 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.144036323 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153867607 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13124374 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154233421 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.192751799 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117537532 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228323264 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155559632 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.346512926 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190703658 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182818526 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158903533 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18683931 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155953114 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173880093 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.109717983 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142454698 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.190730546 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152612473 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160149046 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153303863 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166184414 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126498606 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175869686 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.120440772 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178938682 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.140725285 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162585466 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186120427 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127220887 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193366041 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146064691 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.181312313 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16679829 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211016469 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128578219 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159820838 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186057083 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184087831 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.128983986 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.206669743 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208816761 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.151753599 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133326268 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19302611 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214595813 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143689212 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213972209 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137042889 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131617491 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.17843832 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157469384 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188973699 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.148500788 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156137522 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.148587512 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22562507 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.124070536 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164500917 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165422154 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161295028 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124110161 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13514352 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162776002 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.137940204 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.171469575 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.132000621 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177834795 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155643045 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179442092 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162985144 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158661263 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180843277 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158661998 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.15960385 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170342022 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.122535414 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.172408485 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215453082 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126250391 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232497166 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.191981428 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214690559 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162090391 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156452702 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181017242 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123628296 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.147724805 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159115711 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181988778 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16063861 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.208361573 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214192318 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.172859912 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.1809242 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14468735 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199503192 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.202285782 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152041238 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.170759817 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156040563 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190333514 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.11983405 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120163516 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.153209047 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135084969 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126297178 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162151329 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203255117 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168426457 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209101902 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15734728 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167029016 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1786786 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.157177462 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159171764 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.193696624 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136334826 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.208920143 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205578867 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16555816 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165068617 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160849752 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.116860526 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154139741 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.130301344 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192038509 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132914879 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131623925 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170285172 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208160495 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176800151 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175600408 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22314316 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172096853 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.221890521 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.117581742 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.187419869 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174576831 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185893271 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.181608757 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143187757 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.188581192 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204927034 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143974913 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216988226 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156804333 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188782733 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188123305 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.185422518 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128396595 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175066836 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159715218 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163796948 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169622451 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170973134 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131825059 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150590944 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.16680863 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122574652 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215871228 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139189293 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201150633 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.18134571 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177944871 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122772142 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173635261 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156488531 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172933534 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.113895092 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198466785 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18196397 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172658119 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153158211 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205301794 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126637815 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.348591923 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220480992 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177940218 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160875916 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140036608 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186101112 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166763114 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191778839 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17998249 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168887845 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175852259 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186733029 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.141635251 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127114189 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180877366 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147955444 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.179401753 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.129016802 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.184139236 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138658352 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218232517 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136842507 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189055336 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157102799 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.17466314 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.149450078 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166955518 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195348536 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186324827 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173073904 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.183687749 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.164747959 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222687294 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120505066 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156622695 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.129831513 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209892661 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127686966 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188002734 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.182619962 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223637791 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193550868 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159383896 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167867197 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.123697004 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18361488 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151679263 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220107355 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139792891 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.165813246 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190946405 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.16766796 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129457067 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188884143 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278829502 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177078786 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171653761 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.150536407 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.272631366 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161244724 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131015966 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190170227 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170943846 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.160080731 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181830037 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166198453 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169914369 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160179878 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165877272 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209636656 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199333857 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195570052 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202458427 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.147770667 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187741883 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16065029 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206479618 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141421138 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.170436166 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163715542 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209269311 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.181457843 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.16022891 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157008473 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184536217 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1560113 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204857286 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134374784 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222440748 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126016888 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192435917 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136342249 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120270885 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189524321 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.202457873 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137047842 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209687721 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157492075 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160990381 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12583763 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142530178 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18627428 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136731443 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.159013642 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18381212 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.159690268 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161390269 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210005979 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128117966 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184610366 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151060674 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126852298 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171058247 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140165909 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159546486 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.16969938 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21872536 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136833639 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206396019 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169513653 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196018816 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157328993 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171095947 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663683707 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.124211786 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214024547 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143804168 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217387858 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176830202 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167398093 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18343692 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154171976 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190098188 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153396603 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.262212643 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167753764 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.182844667 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135428937 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139391665 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170152351 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.130813615 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181476515 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156906621 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137045267 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.164778776 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.153922336 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172550277 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.143725342 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167278443 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182401891 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176733657 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184390591 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214155725 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134292903 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193356437 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201907133 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134508276 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.161714974 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206187918 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137631558 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181972799 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.130036459 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.165926136 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179832937 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.120501326 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189922281 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157749098 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193679035 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154634863 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.167072263 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160141001 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17197137 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15748394 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155918407 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.152896788 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185244187 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137551695 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.123212776 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188520001 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159149399 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.186607987 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124200901 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.172101998 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216544245 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.121221387 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161719608 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276515775 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194147118 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216813533 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.150414423 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131686047 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172390565 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153633929 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.184799644 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158178609 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.155126648 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134425433 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.128619882 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.1996084 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.160222043 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188403311 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175778553 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191702149 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19040482 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.163023179 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.282323429 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169879917 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156608505 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.153121902 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.134064708 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139275087 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161169911 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139692853 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217810462 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184188619 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.184565143 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.143434314 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159770432 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.123845756 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127998503 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196172551 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150681497 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189492144 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142196831 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.143346288 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143230984 seconds)
  done (took 84.491224399 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175397834 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.153090937 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.174758264 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.22345464 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199542155 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.292825481 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.233110847 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256760485 seconds)
  done (took 2.880517569 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.129562301 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.161197422 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.147660895 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.148506282 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.118873783 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.464429891 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.159204681 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.127434015 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.166609422 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.164461491 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.145965455 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.630516555 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.124094308 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.147723545 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.131956757 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.120248428 seconds)
  done (took 4.250716622 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.394558435 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.579243295 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.03273312 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.28119279 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.234998952 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.184422963 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.774590041 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.198392847 seconds)
  done (took 12.853292112 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.15642666 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135911394 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.817266711 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.268385841 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.152017811 seconds)
  done (took 2.710421855 seconds)
done (took 131.382651654 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.130328611 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12181075 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.120875375 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.156637612 seconds)
  done (took 1.689364603 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.192757332 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.096554171 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.098228151 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.124195275 seconds)
  done (took 1.684023797 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.458413466 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.099211734 seconds)
  done (took 1.758458705 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.157271653 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.145498491 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.167285085 seconds)
  done (took 1.655453512 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.151061769 seconds)
  done (took 1.325617169 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.136144639 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.121075174 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.244947071 seconds)
  done (took 1.683347428 seconds)
done (took 10.975438258 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.130831619 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.412906428 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.436355776 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135925853 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.711431081 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.430670777 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.054130152 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.179353104 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177715875 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.139952447 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137349851 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.690593685 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.040206108 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.362326364 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.993261552 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.386038532 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.695343106 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112920817 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.150474929 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114089069 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.034485141 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.140226308 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113748179 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11337112 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.719268157 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.428892666 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110842036 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.399650195 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112626649 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115090957 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.429395153 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.119351338 seconds)
  done (took 17.49652201 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.128217025 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175929637 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150234313 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114823508 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114354642 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.140784619 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.129859129 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124835814 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.210954271 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110795442 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.163000822 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.118447476 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.116541227 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.140279458 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143045807 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110938282 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.141644993 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120978083 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120513588 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.140708574 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140415364 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110672619 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.138694306 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122654324 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111355379 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133771719 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.147221315 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123097464 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111219943 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.150478826 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116801595 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112373088 seconds)
  done (took 5.424413713 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.167678715 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180972876 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.152763754 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.148049541 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.188270207 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.119918431 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.22398653 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.155570063 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203977999 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11911477 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133869176 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.139308175 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.159688692 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.111917098 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.167389278 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112839538 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115604229 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.145174996 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122251871 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113891685 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.166257643 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111779988 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113415527 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.144748741 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113720911 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135814778 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.142696837 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125097946 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111210204 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.148063875 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118194544 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11220935 seconds)
  done (took 5.715817233 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.135796303 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128041286 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134452778 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.168802368 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.122695912 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126794282 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.157863642 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123309218 seconds)
  done (took 2.28911867 seconds)
done (took 32.103552928 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.141619963 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.126574211 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.126147611 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.153492979 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.196204297 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.144999574 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.126456365 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.113404777 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.120298169 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.164667306 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.111613322 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.113690943 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.158558746 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.117834249 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.228615927 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.12432421 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.232932922 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.199321799 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.142622628 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.129392487 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.115240615 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.237168066 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.118985284 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.11352238 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.23624328 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.115805659 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.223022427 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.1172568 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.116550111 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.146874952 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.198286555 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.151355143 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.114606739 seconds)
  done (took 6.151808677 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.22380551 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.118741817 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.153013813 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.121164649 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.118393152 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.150639642 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.218310908 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.14994421 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.126319884 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.119844524 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.119454272 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.232509045 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.124504916 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.144144231 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121267917 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.11542306 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.252403131 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.118652164 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.111585603 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.128386511 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.114513277 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.120096584 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.262775804 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.113252074 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.119928861 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.151884465 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.122465648 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.123165523 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.14778164 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.121504989 seconds)
  done (took 5.56546637 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.137568622 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134786431 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.136771516 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.221718174 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.148093778 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.165157196 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.143684637 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.135517724 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.17694269 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.115150228 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129295155 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.183592834 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131673863 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124091732 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.151994706 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134372794 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136692892 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.145558366 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122893116 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132264232 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.165460679 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.133964433 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141622485 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.153511645 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.114416002 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121033526 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.154134544 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134556313 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122166589 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.156614911 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.11844309 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.118594247 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.115271794 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.182530575 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.118683096 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.157338439 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141819633 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126648715 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.158174006 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.150258887 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118994116 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.146470729 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.14552708 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170054263 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.144260508 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.136032763 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125962925 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.158745245 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.118993447 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132999703 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.185602192 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.12278352 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.135371301 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.143105438 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.115130334 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122778592 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.114285212 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.149777285 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.13021644 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.118461284 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.168341291 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123215796 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.124726812 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.145317334 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.130709167 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.112966795 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.112993148 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.150743479 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142347843 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121188775 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.183035549 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.114445632 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126862148 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.158252134 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.125742293 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.125348213 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.14281603 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131748585 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125251323 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.148334263 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.134160549 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.11729106 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117524096 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.164510002 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.136622027 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128170268 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.15857102 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128474188 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117312899 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.149046016 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13273984 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115903141 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.150418648 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.129429512 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.114975375 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.146736291 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.12970518 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126132465 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112012503 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.173080894 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.119592706 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113856072 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.171942363 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.121963421 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120415747 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.155722486 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.159266256 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.113977967 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.157950938 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.129927163 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114962375 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.153153902 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.120489597 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.114141354 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.162958457 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.132544984 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122371581 seconds)
  done (took 17.316119689 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.33583434 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.321924099 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.190276522 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.321858997 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.159855455 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.219013602 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.320113701 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.318402519 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114628855 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.185685073 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.168377214 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.286037901 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.149163723 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.144111848 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.323811447 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.374970601 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.177226109 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.153761094 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.186349451 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.129916534 seconds)
  done (took 5.79328884 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.146517025 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.152240043 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.171312897 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.146923306 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.12279231 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.162172732 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115803706 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135819795 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.156023978 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126805677 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.117825298 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.163328264 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125447885 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.127880219 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.16226065 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.154631122 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.123387422 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.151053844 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.138883024 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119954481 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.140355409 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143722089 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124018155 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.171064621 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.131424888 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.127424045 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.14618748 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122788882 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.119235333 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.150630567 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121821999 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135617523 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.152134326 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.115703674 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128240328 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.13177695 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.15006552 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.119478805 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.120565324 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.149606783 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.136080043 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.125391825 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.150346174 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.110430115 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.134125432 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.117711842 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.125764195 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.163071457 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.112762771 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.131407656 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.159476443 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127809385 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.122704209 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.165011199 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.120865916 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131821347 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.15795416 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.128425804 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.120788669 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.144281643 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.120046021 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.120016483 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.120915858 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.158309517 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128189426 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13722144 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.165781527 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.115650228 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.119320525 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.152514906 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.120569973 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.129913769 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.171777318 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.122581643 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.119315107 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.15950032 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.121410497 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.10000771 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.124707293 seconds)
  done (took 11.941112853 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.150865025 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.120243482 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.133973318 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.184320931 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.123988842 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.121853113 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.151851447 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.137133358 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.124538703 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.160311248 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.12688751 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.129172876 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.170241215 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.12666921 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.118607837 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.164606705 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.123861035 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.155026543 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.165471104 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.145744967 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124510686 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.155017821 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.1298226 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.127819449 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.179018046 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.128063044 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143975869 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.156352427 seconds)
  done (took 5.207684943 seconds)
done (took 53.167316159 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.36707969 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.534354819 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.311707759 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.322516234 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.36283738 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.315993213 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.312618064 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.327239676 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.811661025 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.287245311 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.313679409 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.309925757 seconds)
done (took 29.786953319 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.344313995 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.83185654 seconds)
    (2/2) benchmarking "String"...
    done (took 1.621524309 seconds)
  done (took 4.657982274 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.30834991 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.308939275 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.533400953 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.306857061 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.307622097 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.32300609 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.315036261 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.322484276 seconds)
  done (took 16.619219607 seconds)
done (took 27.129251736 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.342957805 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.478272363 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.563064378 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.310241048 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.316466334 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.310734177 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.314025565 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.323866517 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.314302884 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.308750781 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.694500746 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.564456321 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.315143625 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.680740993 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.309295744 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.33073639 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.303507044 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.540205566 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.305525821 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.339329858 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.283347011 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.307461371 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.339524609 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.309720056 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.311006717 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.317471589 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.334851674 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.304842821 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.482570188 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.340420873 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.339990366 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.304329404 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.319680679 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.309257611 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.306440256 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.326793097 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.46950035 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.30835821 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.284464463 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.319904356 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.479307868 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.311908671 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.320357605 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.311552027 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.305148818 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.341121566 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.292632906 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.412815139 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.327721585 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.326091084 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.349744042 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.689893016 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.314689944 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.324771755 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.306065369 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.509630349 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.310984044 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.347379048 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.330696099 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.325932473 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.307688252 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.302165786 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.358734339 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.302486453 seconds)
  done (took 150.298175713 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.308988706 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.306723141 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.307975024 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.371940983 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.307077266 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.3126319 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.308994779 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.306873492 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.310873265 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.334328106 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.307764252 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.3074531 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.307763467 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.253749689 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.314541543 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.330202044 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.305393681 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.303205665 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.315968867 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.308857521 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.308308075 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.307784953 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.318611332 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.3077624 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.337643083 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.371464435 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.317098503 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.314528526 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.312102518 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.306983952 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.336992118 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.354529911 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.852345236 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.168956637 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.31092287 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.310038265 seconds)
  done (took 83.969255711 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.308803125 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.306006615 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.306809259 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.333847707 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.307574972 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.816234501 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.815271226 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.01722296 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.311695334 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.463205142 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.307897677 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.48821158 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.301529381 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.397582898 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.314933076 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.301049483 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.323507795 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.332952392 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.30321227 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.309996124 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.819446628 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.317215265 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.388188408 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.475828236 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.318272555 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.340508492 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.701967802 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.306963902 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.336556146 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.63062604 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.348324631 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.304143672 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.607419098 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.387714257 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.301779771 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.418871282 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.307217167 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.337623126 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.309252817 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.58527449 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.311410757 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.310820341 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.308007621 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.30987012 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.906111395 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.309276356 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.813028098 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.307279763 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.182611212 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.303113881 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.313502323 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.185402011 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.817541651 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.30805562 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.306624711 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.31242508 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.311892201 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.309383988 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.340467126 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.183948551 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.400015837 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.309490334 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.312044783 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.336323299 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.308277038 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.438723159 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.303439617 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.408222503 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.367635873 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.541685841 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.811367315 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.310617027 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.404475774 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.427486939 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.310611358 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.311507526 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.309550128 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.309417595 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.417323525 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.30913822 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.672987963 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.473238131 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.321179422 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.422552169 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.40492553 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.311248425 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.619809697 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.311140188 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.310969437 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.008069968 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.402433592 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.312027472 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.311165638 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.311635534 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.67953248 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.806500166 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.468481555 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.314289724 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.360744899 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.313465222 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.694684324 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.800616967 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.918612335 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.312243416 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.311538673 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.420489167 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.477947408 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.323923939 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.314047899 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.420030931 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.314318194 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.372077492 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.312226483 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.712535748 seconds)
  done (took 376.057298244 seconds)
done (took 611.524292976 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.181376146 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.128689729 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.284952839 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.141707459 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.115021595 seconds)
  done (took 12.057278456 seconds)
done (took 13.263490841 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.491673184 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.49173772 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.367012379 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.492390616 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.343606128 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.5079586 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.476885069 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.333742341 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.423287958 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.391077156 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.42081639 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.364703439 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.346126349 seconds)
  done (took 19.656314872 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.603275034 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.318006411 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.379077984 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.557776324 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.359872562 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.5718251 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.630304967 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.323761232 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.461806322 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.331860995 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.332015243 seconds)
  done (took 19.075659103 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.579416146 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.321542334 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.372557692 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.569571698 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.353495222 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.579073179 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.615040534 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.319574963 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.462570995 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.333204751 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.331638138 seconds)
  done (took 19.043240996 seconds)
done (took 58.97959314 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.24981935 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 17.225944159 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.345771041 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.406047228 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.328649321 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.34211735 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.409812429 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.333511954 seconds)
  done (took 28.849518941 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.329388595 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.330895259 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.326459811 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.326633961 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.328201855 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.330159151 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.329484475 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.327018641 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.32747655 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.324584042 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.32906986 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.32794202 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.326941426 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.327605746 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.327906945 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.328602582 seconds)
  done (took 22.456368957 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.329753535 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.328847312 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.326504212 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.328410535 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.327831837 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.32797626 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.329155867 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.326695576 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.328193865 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.328324266 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.325992856 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.328000641 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.328182317 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.328687211 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.328568143 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.329274559 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.32832004 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.330013916 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.33227098 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.326648137 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.328520931 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.326656676 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.328109882 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.330817418 seconds)
  done (took 33.091612137 seconds)
done (took 85.602843624 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.317952409 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.324248664 seconds)
  done (took 5.852162823 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.392396763 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.390350053 seconds)
  done (took 3.996136363 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.33172989 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.33020502 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.330194547 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.329240642 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.329246804 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.329257103 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.330321183 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.329863491 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.329335635 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.329222646 seconds)
  done (took 14.509920004 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.333645494 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.329414362 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.32903174 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.334623758 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.331847595 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.330371026 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.33136387 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.330491711 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.332073546 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.330100821 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.332108561 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.328954554 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.331738869 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.332217416 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.330793689 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.331432237 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.331416183 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.330482947 seconds)
  done (took 25.174159061 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.345833688 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.356042655 seconds)
  done (took 3.914720267 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.471477171 seconds)
    (2/7) benchmarking "second"...
    done (took 1.371855798 seconds)
    (3/7) benchmarking "month"...
    done (took 1.446040552 seconds)
    (4/7) benchmarking "year"...
    done (took 1.437075057 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.3724596 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.352292796 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.37153607 seconds)
  done (took 11.033609756 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.337169084 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.543538731 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.671375312 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.871464399 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.334521276 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.336158407 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.15493165 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.334769453 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.336065228 seconds)
  done (took 15.132543245 seconds)
done (took 80.821054073 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.319989201 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.345625341 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.34786863 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.345618925 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.629642739 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.358720883 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.322195099 seconds)
done (took 16.882455868 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.305008103 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.30483821 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.306592382 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.323423227 seconds)
  done (took 10.452388389 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.325386457 seconds)
    (2/2) benchmarking "read"...
    done (took 1.644705443 seconds)
  done (took 5.182659081 seconds)
done (took 16.845621219 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.335827426 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.333031786 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.33220312 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.335155375 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.333446126 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.333845187 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.33624762 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.330251011 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.328777273 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.330298022 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.331312222 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.330825123 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.327686966 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.329004464 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.327634085 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.328241658 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.327778729 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.326725432 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.325935479 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.329184899 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.327422212 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.331479862 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.324021335 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.326417739 seconds)
  done (took 33.135798239 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.329147497 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.329321839 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.327613762 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.328972118 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.326997907 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.325887543 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.326749124 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.326308557 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.32710524 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.326869812 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.325915614 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.326643219 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.322739339 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.319826706 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.324171236 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.322257588 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.32287446 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.321830672 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.324452631 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.324852896 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.320615487 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.318446629 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.317248398 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.320292613 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.319241591 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.317945159 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.322733418 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.313315265 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.319317046 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.313851837 seconds)
  done (took 40.902736425 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.324170753 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.321595735 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.319586354 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.319475135 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.315171973 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.316016248 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.315118886 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.314084736 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.314356531 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.314905208 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.316776592 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.316594576 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.313005829 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.313962792 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.31298456 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.313227217 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.313573334 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.31228419 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.315049496 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.308855297 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.307235897 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.306214349 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.307612214 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.310840247 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.310569913 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.309534093 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.310068537 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.305553563 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.305800858 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.306548593 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.306382945 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.30539664 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.306595516 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.311823124 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.304088456 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.302080941 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.31012006 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.307357488 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.302495674 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.303255501 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.304288979 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.306063851 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.303222451 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.303300768 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.301971953 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.300392688 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.303008974 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.300198222 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.301917492 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.303676626 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.297917901 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.299142498 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.298884848 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.299774966 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.29839895 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.30067569 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.3024589 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.296732776 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.295587704 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.298648654 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.297976736 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.297409771 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.298573722 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.29904601 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.301772939 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.294873655 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.293826593 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.292499121 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.294497223 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.296093913 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.29518199 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.293126943 seconds)
  done (took 95.224504391 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.290873343 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.289318859 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.288868037 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.291905003 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.289410429 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.292284149 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.291672688 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29455889 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288475929 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.2894717 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290574499 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.286428605 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287957055 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.291388118 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.290866996 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.285795396 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.288868008 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.286531916 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.288854676 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.288479651 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.290423281 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.287064865 seconds)
  done (took 29.55357539 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288503428 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.288797318 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.285420196 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.288525848 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.286186995 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.285588838 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.283480203 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.288981728 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284647511 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.280995721 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285360471 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284653154 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.285500534 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283591748 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.284131591 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.287685394 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.280431852 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.282976876 seconds)
  done (took 24.312553412 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.282366396 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.281376763 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.283132845 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.281307917 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.283964087 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.281946777 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280652893 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.28371251 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.282821703 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.281521981 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.283012508 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280396127 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.281649894 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281062579 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279810163 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.279494139 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.279585263 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278820453 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.282075441 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281261478 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.276825749 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.278945764 seconds)
  done (took 29.358557952 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.280700926 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.27796405 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.277710922 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.278324842 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.278488903 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.277291544 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.27512764 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.275527593 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.27808209 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.278115577 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.27545428 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.275924002 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.279631427 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.273975484 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.275108253 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.276760986 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.275794383 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.273790351 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.274872639 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.274802953 seconds)
  done (took 26.704356036 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.277040162 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277725177 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.276859138 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274426427 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276704763 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.276328605 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277204893 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.277593255 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.275176262 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275808466 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.275656013 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.27492112 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275603876 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.275988909 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.274739598 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277957171 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.27722994 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.275393374 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.276329723 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273495655 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.273542059 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.274671192 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.274582102 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.276506348 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.275008977 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.275456496 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275102812 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.276198491 seconds)
  done (took 36.893522751 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.276031814 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.27391728 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.277544452 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.272881723 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.269871303 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.269930409 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.271786373 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.27103769 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.272755514 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.272941466 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.273067758 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.272133819 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.273095678 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.272074259 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.272521277 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.272315481 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275756363 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.273088744 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.268811832 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272365586 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.270768557 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274649859 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.273675101 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.272632778 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272413217 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.276074584 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.273478664 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.274175124 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.273406265 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.271033605 seconds)
  done (took 39.352632144 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.320696222 seconds)
    (2/2) benchmarking "in"...
    done (took 1.322535711 seconds)
  done (took 3.808945135 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.270612251 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270840208 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.273473267 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.270294675 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.269781122 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.272298277 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.271583863 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.270842195 seconds)
  done (took 11.337859656 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.267629493 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.274284909 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.27280092 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.274176434 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.274305618 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.2696747 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.276240109 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.276892193 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.268529764 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.269092266 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.272527802 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.270586081 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.271146395 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271144612 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.270376114 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272574059 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.276876651 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.274067159 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.273304089 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.276855802 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.275245394 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.271706197 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27279518 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.273302575 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.268385357 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.278252371 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.274646674 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.278803164 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.269473634 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.276796646 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.269293495 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.274026636 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.274662561 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.275792211 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.276200801 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.273879435 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.279245032 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.27529681 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.274246266 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.275656405 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.271799949 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.270248667 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.270695514 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.269835644 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.27175752 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.27706193 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.27470161 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.273644361 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.267928349 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.273415021 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.277829532 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.268435328 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.272145097 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.273942497 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.270890005 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.275837896 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.277120062 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.270119838 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.273813973 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.276887176 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.28054055 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.275814341 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.270554094 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.27522008 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.276590728 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.285352725 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.2787207 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.274830817 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.273371271 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.274548991 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.276137108 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.281988975 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.277552682 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.274774917 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.27487899 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.274487201 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.268097919 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.277075414 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.275445625 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.277066634 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.275980957 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.275209595 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.276969007 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.282745455 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.271717801 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.275015977 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.27445484 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.274358698 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.27120279 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.278918844 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.277427488 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.274961337 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.266871515 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.269590995 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.272725358 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.276689586 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.271450223 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.272160008 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.27722355 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.277501083 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.277256676 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271749631 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.275179452 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.276096309 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.275217683 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.277252614 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.276440768 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.268923599 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.277558976 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.27899991 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.276303378 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.274468386 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.275747141 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.274742113 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.274907775 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.27803896 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.279901685 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.272460285 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.279077288 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.275853453 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.278720773 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.285905015 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.277646541 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.278855883 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.276954237 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.282236197 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.277822529 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.275597461 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.279172549 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.275595897 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.277126617 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.273634829 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.278779589 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.274617076 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.27826338 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.271841746 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.275739154 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.277753985 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.278834698 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.273314717 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.275347822 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.276849572 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.275581176 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.276679306 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.279192235 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.275961502 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.281668544 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.277773202 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.27708364 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.275767378 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.28020921 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.278606712 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.27518499 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.278769743 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.273010506 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.281537757 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.274258424 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.280912687 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.281834461 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.279234553 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.279061745 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.275120175 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.278360152 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.282871929 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.278841748 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.276744781 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.276889794 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.279897531 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.278423765 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.276106057 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.279136689 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.275103356 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.279380109 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.286179574 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.279829671 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.279743049 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.276839743 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.284080881 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.281152107 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.279824705 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.276899868 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.279077402 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.279976055 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.282087831 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.284224823 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.279497634 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.282092562 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.277571546 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.276606824 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.28313126 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.280636468 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.286378401 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287406706 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.284660081 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.277939807 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.284025934 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.274633528 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.2819658 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.280485214 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.281253486 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.278669635 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.282093642 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.279600186 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.278813608 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.276044765 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.281367361 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.274216812 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.279775522 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.279769051 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.277138117 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.278147694 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.272882768 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271648171 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.27865026 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.277510833 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.277184217 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.272903727 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.277614931 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.27103075 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.27155094 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.27784169 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.27940954 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.277832113 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.278041303 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.27466929 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.276357734 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.272093988 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.271731375 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.275385642 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27425256 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.270857325 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.280212707 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.2746589 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.273812741 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27960931 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.274385691 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.272575002 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.275470609 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.27827997 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.279086503 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.273341595 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.281341841 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.278690821 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.277335096 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.275988296 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.270495103 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.278323505 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.276073643 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.277768855 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.272190478 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.277169337 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.274660783 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.275429117 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.274507103 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.273215407 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.274751345 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.274615135 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.280368823 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.277544473 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273110613 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.278041321 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.277548405 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.27873297 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.276022774 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.285475448 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.279779652 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.275473112 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.275615817 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.276755233 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.283661182 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.274632334 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.28009056 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.275239673 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.286901485 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.285993006 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.27961402 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.277753606 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.280040067 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27857871 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.276965602 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.278152842 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.275950404 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.276889763 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.277162486 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.276941278 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.283393208 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.277858396 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.280976918 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.280384117 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.277245005 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.283260742 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.279543706 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.274290895 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.281924003 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.279223432 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.280830938 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.27539687 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.28033734 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.276429706 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.278921689 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.274870445 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.277106999 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.285336249 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.279598703 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.277257487 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.275724044 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.277124412 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.276336557 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.277977749 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.283918131 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.275974083 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.283580772 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.278708096 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.283180403 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.279639985 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.286265193 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.284556235 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.28104197 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.285868477 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.280633478 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.274635339 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.275909582 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.283348311 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.282149178 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.284039888 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.277191316 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.283256613 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.281751324 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.283164014 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.280316253 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.283280233 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.283332866 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.27928473 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.286215315 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.282264144 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.280675331 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.280803909 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.281832723 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.281339546 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.280621304 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.276913891 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279734724 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.282336957 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.280196576 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.27868135 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.279566756 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.28439211 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.283016105 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.282375085 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.282802146 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.284271324 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.283718151 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.283250654 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284627516 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.284611106 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.285601267 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.284538621 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.284670584 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.286704663 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.280198346 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.286172545 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.284014176 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.279153055 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.277757151 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.280824756 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.286913258 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.279880544 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.291575092 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.284382723 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.281684509 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.280579739 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.284130766 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.279754262 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.28603855 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.297812227 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.280911912 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.287987523 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.283330422 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.280670376 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.288075863 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.283203578 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.281000594 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.282033013 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.285052478 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.290810222 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.280158857 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.283758941 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.281533147 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.287199955 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.286719956 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.286212009 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.286688347 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.288299161 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.281727961 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.288116083 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.28510145 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.288087754 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.283987023 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.284131112 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.283221514 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.29130705 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.288559374 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.283504317 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.286357079 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.284893523 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.282933189 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.283626699 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.287387331 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.284136699 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.286932613 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.281913219 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285310307 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.284830195 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.285366202 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.282057624 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.288832399 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.282266207 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.282949481 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.288010235 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.285764957 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.28686461 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.284759702 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.288575689 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.28422006 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.28157873 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.288842373 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.282734941 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.289220935 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.283827015 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.286853878 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.283655643 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.285445398 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.285732026 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.286322038 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.280859913 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.284413213 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.291466916 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.288522022 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.289943407 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.288921975 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.291887197 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.285017083 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.288540456 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.2879873 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.285397696 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.28482872 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.288524139 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.285398519 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.285241503 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.28550709 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.288325418 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.289949396 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.287903822 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.284296562 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.29453862 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.290757624 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.291593228 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.285662291 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.286608285 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.285828921 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.290675284 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.289260862 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.283784088 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.291629204 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.288132238 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.291026868 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.288096964 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.287712793 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.287115568 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.292950548 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.290504108 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.286837807 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.29075013 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.28641867 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.291489827 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.289466262 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.288833545 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.283939815 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.286259492 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.28856242 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.288192009 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.290128102 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286779322 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.28598876 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.287102037 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.293408406 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.291610825 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.290053244 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.289665534 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.283911788 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.290714579 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.285732871 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.288211953 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.287907566 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.284967452 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.291904939 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.292062824 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.28565965 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.291324529 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.29317903 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.289415141 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.284791387 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.289943063 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.290836084 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.2936673 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.291996983 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.289779725 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.287885326 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.292293444 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.290312031 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.289885638 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.288820911 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.301249737 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.297708357 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.287492555 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.291077352 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.290761283 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.294846471 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.292884142 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.293123882 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.289490143 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.292778337 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.297285735 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.29384195 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.295796541 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.291771024 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.291487991 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.298099728 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.290888836 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.291087335 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.293118628 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.295773293 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.29489145 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.291131117 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.30194806 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.296192585 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.295549736 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.310769555 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.296489264 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.289896189 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.29413058 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.287814705 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.293416271 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.288830871 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.294149559 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.295907511 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.296080573 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.294753779 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.289618679 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.296123066 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.293355049 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.301908657 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.293863104 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.291468943 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.290837317 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.296544991 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.295447988 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.300076826 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.295822222 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.296296029 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.296478578 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.29242576 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.301570705 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.303060623 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.297831937 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.29465123 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.296287418 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.293935848 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.294541016 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.295724219 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.299833479 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.296850995 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.293457521 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.293116533 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.298950444 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.297677077 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.291331597 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.292733005 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.294541079 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.299852219 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.304230988 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.306596909 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.299957199 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.295145554 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.300021747 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.300558737 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.293466025 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.299131641 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.297516196 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.292545178 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.294298117 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.30189786 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.299417825 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.296885015 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.293986831 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.301781847 seconds)
  done (took 765.467085992 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.298756849 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.297964414 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298317944 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.297505962 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.29653365 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.294880244 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.298979657 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.297025963 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.296940582 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.298353215 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.297736166 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.297598665 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.295539764 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.298604124 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.298317858 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.298497146 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.297309521 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.295946352 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.297513196 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.298681154 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.297926394 seconds)
  done (took 28.435638341 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.299725016 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.295131856 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.297240237 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.298772407 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29927948 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.301149973 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.299692602 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.300477393 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.299739558 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.297668937 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.300362981 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299736208 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.298271924 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.299475148 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299456235 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.301547713 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.299071578 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.297653716 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.300188284 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.300205084 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.301255065 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.300969725 seconds)
  done (took 29.771700653 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.300164691 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.301116158 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.29662882 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.300224188 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.300791666 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.299758106 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.302026209 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.301710784 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.301449701 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.295150134 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.296302503 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.296572965 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.300550511 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.306851515 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.300440601 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.302839945 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.303030005 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.301937395 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.301569555 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.302366096 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.303183042 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.303965341 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.300760535 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.29573083 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.302753187 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.300347984 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.302684103 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.302978848 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.297426155 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.305386921 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.303464089 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.295743486 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.300060186 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.299340832 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.298409057 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.305367525 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.303692053 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.303236214 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.299392747 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.306217333 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.317322825 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.302771289 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.304692852 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.304823583 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.30477949 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.299650616 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.310318418 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.301550327 seconds)
  done (took 63.675774772 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.305629421 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.3054116 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.303102062 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.303128252 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.302125656 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.304686033 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.30289155 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.305719405 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.302529066 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.304293931 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.306384754 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.303717513 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.303416587 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.305330244 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.305387094 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.302887148 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.30420167 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.303957855 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.305984486 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.304119384 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.303154668 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.305600117 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.306473907 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.303552683 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.304308534 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.303983134 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.304560497 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.307517622 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.306144706 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.303317938 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.305794363 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.305209172 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.30772311 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.303724972 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.303724847 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.306525812 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.306998034 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.30580533 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.306281067 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.302699627 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.3048849 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.305577894 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.305892056 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.305967215 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.306151675 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.305876541 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.305141019 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.304726335 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.305025265 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.30661351 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.306263191 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.305369477 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.30602704 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.304028739 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.307866882 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.307835243 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.305787117 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.306072164 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.309148358 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.307610551 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.305615806 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.306736574 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.306150774 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.308574596 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.308510657 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.306621782 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.30685329 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.308223014 seconds)
  done (took 89.959363094 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.310089189 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.309378724 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.310898756 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.30980649 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.310435925 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.310840968 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.310385465 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.311694342 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.310156591 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.310808049 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.311139887 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.307656625 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.309595963 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.309019467 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.307860471 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.309360085 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.308434217 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.313735103 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.310375146 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.312079217 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.311940067 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.311400984 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.311806938 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.312661023 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.312117498 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.31128494 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.307982803 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.312087615 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.311301454 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.310830069 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.310996835 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.309782901 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.310994246 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.311696093 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.311040131 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.31141052 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.311399822 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.313301636 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.31268328 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.31150711 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.311366397 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.310385909 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.310644927 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.310155382 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.312025238 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.31074441 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.310692446 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.311752082 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.311360185 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.312010459 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.314914403 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.314302007 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.313233686 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.312546049 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.31130698 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.314848799 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.311050434 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.312442816 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.312310427 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.309725186 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.314505931 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.313016 seconds)
  done (took 82.492901839 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.312735677 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.313561046 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.31144262 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.311102276 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.314093942 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.31167626 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.313452711 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.312154574 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.310799727 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.31442483 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313264801 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.311073535 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311243673 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.314843578 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.311638215 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31491531 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.312754536 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.313309179 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.314432105 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.312417735 seconds)
  done (took 27.451855333 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.31495615 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.315893858 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.312920975 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.311798142 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.315291413 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.312273169 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.313410128 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313896058 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313880587 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315278784 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.315199861 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.316715231 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.313495714 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.313482949 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.314651284 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.312747187 seconds)
  done (took 22.224695092 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.316267765 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.313335858 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.314255216 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.316013641 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.310154979 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.315036484 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.314657065 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.312478085 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.313306573 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.316326844 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.315840672 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.31734102 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.316344278 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.316127292 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.314230963 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.316483684 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.314065538 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.312096441 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.314938336 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.313283813 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.314611166 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.31281792 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.314668371 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.315220905 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.314938016 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.314370367 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.312883973 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.314618559 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.314253875 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.315555662 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.314938331 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.31564191 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.315168184 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.315486621 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.316829757 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.315839805 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.316155434 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.316349858 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.316364424 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.318485716 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.318419767 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.316785326 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.317412671 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.316136715 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.317733513 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.315329064 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.317586836 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.316477093 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.312896863 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.316791912 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.314803571 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.318266485 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.318177093 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.318113905 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.315517445 seconds)
  done (took 73.547838201 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.318389076 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.319174352 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.314849951 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.3174094 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.319244386 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.318958695 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.318699267 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.3199237 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.316367159 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.317864792 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.3171296 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.31842205 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.315610169 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.318259762 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.317880223 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.320613712 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.31991251 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.317453456 seconds)
  done (took 24.928110906 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.318427521 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.316032903 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.319326607 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.317604729 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.317911903 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.317216767 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.318631283 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.318110362 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.319000658 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.319343667 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.31700451 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.319541515 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.318763997 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.320469789 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.32194709 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.318850701 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.319358098 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.318506165 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.317976088 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.317098645 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.318038318 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.320263859 seconds)
  done (took 30.212181271 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.312752003 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.311322452 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.311182721 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.330451484 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.326863783 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.315656031 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.315921059 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.315135851 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.333323932 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.351880384 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.346260426 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.326143723 seconds)
  done (took 17.100076157 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320395052 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321076198 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.320091159 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320159591 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320295427 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321117994 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320053182 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321228964 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320075385 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321986967 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321830497 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322514162 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322185684 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320133957 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32148784 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321239019 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320318213 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319098894 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32051556 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32431085 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321057381 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322827934 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32142884 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321697498 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321067984 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323659926 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323096929 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321215747 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320381071 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321757086 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321980335 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321771819 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32332195 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321556239 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323901396 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322654225 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32380213 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32465181 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325221188 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321947984 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.323710155 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324667152 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325080137 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323033931 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32264492 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322640127 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32141675 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323444794 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320365382 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323693525 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323136483 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321599621 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32525279 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325874996 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32429972 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323760348 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324349251 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323118008 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323527514 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320233798 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323977166 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324178609 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323659519 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325157524 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325874651 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323149092 seconds)
  done (took 88.486117887 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324024783 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.323022371 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323599618 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32709696 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325358451 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321915085 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325264996 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323608853 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324978038 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325412428 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324356652 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324835347 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3258738 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323662313 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327543771 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326680179 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324942716 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326573103 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326748397 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3272828 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324407575 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326164567 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324410885 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324753413 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325564173 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324942973 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324438353 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32623474 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325558211 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325403427 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325621939 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323585527 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325208217 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.327968047 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327102295 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324596418 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326852553 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326358442 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32562267 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327508248 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324439566 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326758667 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32494798 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325160566 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324043681 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325406273 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327292039 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327785743 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32701251 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325912915 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328275866 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327345045 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328085621 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32748836 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326313862 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326775031 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327626168 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32602228 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328370509 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327954307 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327658478 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327821228 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328752996 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327414719 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32879336 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327833143 seconds)
  done (took 88.728322753 seconds)
done (took 1804.279455909 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.48474762 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.442521227 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.320752872 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.336139299 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.318880476 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.31939499 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.336549146 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.320732306 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.324151428 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.324956526 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.324454035 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.515504303 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.378462223 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.319262044 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.325519613 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.423105286 seconds)
  done (took 27.026175911 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.348107201 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.330263693 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.437052515 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.328173517 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.353603718 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.509482138 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.384867106 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.331167962 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.490101211 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.344989121 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.331585202 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.34878236 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.327234018 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.32321329 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.344225892 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.508782088 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.567531563 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.320557922 seconds)
  done (took 29.14209567 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.747819539 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.330688885 seconds)
  done (took 5.292827104 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.349290844 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.3276543 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.328028679 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.327552503 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.319605336 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.318152296 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.328093094 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.327746347 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.325456331 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.44730553 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.330886444 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.341004674 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.325624268 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.325166222 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.331896864 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.370734266 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.472713536 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.335536021 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.333112882 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.336236672 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.328438655 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.417980299 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.368147419 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.332940099 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.447032879 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.329252883 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.331242593 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.334487155 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.453986013 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.335941047 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.326228219 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.32913314 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.330729982 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.332648007 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.79496068 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.327193344 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.333013731 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.35271487 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.33306977 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.473293805 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.331621321 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.333450012 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.328223935 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.78944174 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.448754656 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.44416736 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.325354078 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.329652837 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.326618071 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.398401577 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.331521882 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.332029285 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.387675454 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.148373421 seconds)
  done (took 84.987923166 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.357009811 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.322703375 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.501692349 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.345246798 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.323202269 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.319541036 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.319744906 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.598306372 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.359846801 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.339320318 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.604335821 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.880373524 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.327641763 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.396901282 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.294531047 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.419868101 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.326237783 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.323423366 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.326678079 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.326313322 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.869999822 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.325369444 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.323121596 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.453502436 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.361015052 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.83038915 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.320890663 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.318749232 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.339274524 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.321096009 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.840128138 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.330808464 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.425651128 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.321270368 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.595244019 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.693091702 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.657582563 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.330446117 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.343319633 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.325817727 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.332431031 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.816488619 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.672568201 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.323196233 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.324047436 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.819037357 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.321768175 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.340404266 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.33466315 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.582400871 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.327807368 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.330006332 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.326366219 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.322532121 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.324899873 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.373479654 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.332246605 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.835527478 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.32871877 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.323025217 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.350569647 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.330036078 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.333716974 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.327077193 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.341043622 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.680225894 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.520037027 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.328786486 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.679680615 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.835710434 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.329214248 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.900057613 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.329115607 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.329137708 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.576536838 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.329435255 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.336322151 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.829983984 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.336058772 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.325396509 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.661350134 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.328098989 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.621049948 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.342353274 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.326588596 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.896758 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.332763811 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.348293708 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.32575916 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.324079594 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.324509816 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.329598755 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.602341837 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.357211224 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.329616494 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.330362689 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.357613513 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.330641372 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.341439291 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.337916169 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.904805652 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.341623139 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.331377458 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.333875666 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.328548132 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.327927686 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.331962944 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.331983314 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.602862711 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.330751593 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.347352468 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.333831925 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.329546473 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.339036968 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.414984632 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.338720169 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.631222174 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.328914981 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.329636927 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.336184135 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.334870356 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.374098056 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.329906663 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.336561835 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.195970152 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.60077346 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.345983854 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.327302709 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.333561938 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.332633516 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.328025748 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.332083149 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.422098032 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.334122889 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.114088491 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.334582232 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.347123393 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.330227098 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.339752302 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.332165953 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.338146419 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.333443948 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.624804378 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.603790031 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.516671181 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.330115134 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.344153093 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.088643863 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.338775419 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.511402963 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.35086001 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.331945831 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.592665388 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.588999957 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.332758607 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.330949682 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.335103592 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.597584021 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.334300956 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.639246701 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.877640675 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.334036958 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.342149079 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.121835875 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.042981181 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.336639674 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.339041195 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.617966343 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.347593787 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.334692953 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.336702956 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.335475226 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.32962869 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.334210705 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.337387385 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.335242876 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.337342451 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.640892895 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.526948334 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.348734645 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.336591399 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.83775022 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.370080129 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.339445853 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.34232539 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.339787929 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.335081115 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.335140759 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.342242629 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.337139517 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.335960343 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.344569102 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.854839798 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.344315409 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.338822123 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.527191755 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.028591752 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.337393904 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.335631673 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.332216584 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.264397919 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.862319722 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.359972058 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.635099017 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.341581914 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.376184175 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.335834412 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.349867035 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.859673502 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.335470437 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.335715303 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.995478129 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.334902011 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.844685834 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.33534549 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.337230433 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.9228709 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.337801164 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.342221879 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.332888155 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.33445094 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.652534359 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.337903267 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.392602572 seconds)
  done (took 497.645866059 seconds)
done (took 645.305291326 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.339512565 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.33808618 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.321072322 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.3395975 seconds)
  done (took 10.565374261 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.379408149 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.346058329 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.352327896 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.343680598 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.35539642 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.342971245 seconds)
  done (took 9.350046083 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.339037545 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.340057651 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.337492282 seconds)
  done (took 8.244778807 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.555053684 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.352258535 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.706577362 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.335287628 seconds)
  done (took 9.177935383 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.352990762 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.35467377 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.350545455 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.356200635 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.381146561 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.382933421 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.3585643 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.357078091 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.378557059 seconds)
  done (took 13.501235052 seconds)
done (took 52.068630509 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.37357028 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.446276635 seconds)
    (3/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.376608774 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.411670251 seconds)
    (5/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.494443871 seconds)
    (6/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.374910243 seconds)
    (7/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.348351025 seconds)
    (8/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.48208886 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.374950263 seconds)
    (10/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.384757624 seconds)
    (11/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.107573002 seconds)
    (12/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.322321822 seconds)
    (13/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.3198539 seconds)
    (14/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.511732406 seconds)
    (15/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.513305386 seconds)
    (16/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.445425572 seconds)
    (17/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.377613085 seconds)
    (18/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.322915955 seconds)
    (19/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.366368776 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.485700235 seconds)
    (21/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.497120738 seconds)
    (22/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.438852031 seconds)
    (23/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.323486876 seconds)
    (24/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.335713192 seconds)
    (25/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.466559384 seconds)
    (26/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.326443493 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.386113925 seconds)
    (28/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.333581396 seconds)
    (29/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.345520653 seconds)
    (30/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.526016265 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.606494338 seconds)
    (32/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.453940355 seconds)
    (33/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.42149752 seconds)
    (34/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.490941923 seconds)
    (35/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.483984805 seconds)
    (36/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.564923866 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.417453671 seconds)
    (38/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.569533737 seconds)
    (39/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.380273365 seconds)
    (40/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.326995899 seconds)
    (41/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.321013913 seconds)
    (42/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.370570962 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.376693333 seconds)
    (44/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.325226577 seconds)
    (45/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.472181916 seconds)
    (46/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.374347423 seconds)
    (47/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.472354828 seconds)
    (48/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.563593879 seconds)
    (49/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.325286128 seconds)
    (50/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.42705792 seconds)
    (51/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.029470627 seconds)
    (52/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.381117172 seconds)
    (53/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.192593006 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.484966721 seconds)
    (55/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.353638304 seconds)
    (56/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.391607789 seconds)
    (57/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.595884279 seconds)
    (58/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.338599996 seconds)
    (59/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.0554597 seconds)
    (60/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.327264819 seconds)
    (61/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.411721512 seconds)
    (62/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.331325161 seconds)
    (63/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.325577796 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.497111432 seconds)
    (65/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.325918245 seconds)
    (66/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.398659291 seconds)
    (67/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.426139844 seconds)
    (68/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.389333951 seconds)
    (69/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.456015429 seconds)
    (70/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.380087212 seconds)
    (71/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.352805818 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.436210849 seconds)
    (73/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.239582839 seconds)
    (74/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.326088092 seconds)
    (75/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.297004227 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.614337837 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.439638158 seconds)
    (78/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.326462526 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.462216362 seconds)
    (80/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.510006999 seconds)
    (81/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.392995479 seconds)
    (82/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.391203408 seconds)
    (83/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.184379187 seconds)
    (84/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.344703856 seconds)
    (85/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.165769527 seconds)
    (86/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.348005379 seconds)
    (87/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.429525387 seconds)
    (88/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.331437432 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.503389927 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.457860456 seconds)
    (91/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.385540163 seconds)
    (92/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.445383107 seconds)
    (93/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.424292971 seconds)
    (94/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.488310942 seconds)
    (95/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.323642551 seconds)
    (96/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.560036134 seconds)
    (97/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.385637955 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.40984213 seconds)
    (99/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.305513245 seconds)
    (100/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.48126459 seconds)
    (101/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.333708383 seconds)
    (102/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.465559975 seconds)
    (103/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.377026204 seconds)
    (104/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.339258374 seconds)
    (105/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.086231186 seconds)
    (106/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.499858851 seconds)
    (107/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.374693656 seconds)
    (108/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.379865792 seconds)
    (109/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.386664527 seconds)
    (110/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.332403201 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.450023853 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.455170273 seconds)
    (113/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.328856558 seconds)
    (114/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.375056463 seconds)
    (115/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.347852406 seconds)
    (116/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.463152217 seconds)
    (117/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.326310631 seconds)
    (118/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.521886256 seconds)
    (119/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.107470296 seconds)
    (120/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.050879318 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.499776116 seconds)
    (122/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.382515847 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.470277131 seconds)
    (124/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.187478902 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.489606909 seconds)
    (126/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.386904905 seconds)
    (127/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.330802585 seconds)
    (128/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.206505233 seconds)
    (129/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.503183912 seconds)
    (130/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.041782103 seconds)
    (131/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.534792382 seconds)
    (132/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.348410145 seconds)
    (133/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.220613439 seconds)
    (134/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.14490523 seconds)
    (135/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.347154538 seconds)
    (136/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.342539303 seconds)
    (137/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.340479555 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.472049905 seconds)
    (139/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.438873093 seconds)
    (140/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.330119108 seconds)
    (141/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.372306251 seconds)
    (142/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.486482424 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.501697629 seconds)
    (144/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.326627378 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.38409902 seconds)
    (146/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.166722961 seconds)
    (147/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.447106936 seconds)
    (148/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.462745463 seconds)
    (149/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.419786808 seconds)
    (150/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.354520592 seconds)
    (151/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.347922411 seconds)
    (152/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.352014514 seconds)
    (153/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.328383871 seconds)
    (154/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.157376438 seconds)
    (155/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.535902076 seconds)
    (156/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.617956415 seconds)
    (157/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.489988702 seconds)
    (158/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.375831357 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.412862736 seconds)
    (160/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.434457784 seconds)
    (161/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.387453723 seconds)
    (162/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.473278285 seconds)
    (163/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.460951403 seconds)
    (164/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.575305745 seconds)
    (165/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.998813835 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.389401774 seconds)
    (167/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.457789861 seconds)
    (168/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.348480941 seconds)
    (169/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.535786473 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.47200017 seconds)
    (171/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.334004488 seconds)
    (172/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.623625227 seconds)
    (173/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.335307795 seconds)
    (174/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.245713586 seconds)
    (175/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.089416767 seconds)
    (176/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.689402619 seconds)
    (177/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.150081871 seconds)
    (178/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.34577767 seconds)
    (179/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.479054426 seconds)
    (180/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.34257132 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.611648015 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.548787008 seconds)
    (183/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.417852453 seconds)
    (184/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.451557958 seconds)
    (185/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.575874992 seconds)
    (186/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.537141325 seconds)
    (187/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.635249875 seconds)
    (188/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.490898856 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.457987 seconds)
    (190/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.532775346 seconds)
    (191/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.005858176 seconds)
    (192/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.335802929 seconds)
  done (took 341.994066898 seconds)
done (took 343.223972538 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377452369 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.439720842 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.358769742 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.358536594 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.361938103 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.351702047 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.373726883 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.361901305 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.372331911 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.371178155 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.353428007 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.366646896 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.374299337 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.370812427 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.395402736 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.361648046 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.360771031 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.369575377 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.373309261 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.373648894 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363762983 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363497742 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.380462839 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.360821772 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.370333548 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.370471951 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.367618627 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.360166402 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.361752428 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.371363157 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.361760196 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.36110036 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.375225665 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.371502418 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362193087 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.36988198 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364699268 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.441309944 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.38020939 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.370640059 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.368124554 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.375923101 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.36896396 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.367965155 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.374275979 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.382767306 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.371076979 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.378723768 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.364830437 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.358608933 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37784626 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.375935338 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.368993504 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.361831888 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.350602549 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.3743813 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.370398523 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.38183394 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.369478188 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.364444818 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.397619672 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381126941 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.372459603 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371874755 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.367501957 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.376762983 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.373712616 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.374869218 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.367840421 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.365329376 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366632616 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.368643179 seconds)
done (took 107.988652354 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.494200102 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.363860806 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.505127919 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.372129885 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.531010382 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.50035974 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.370382699 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.368817901 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.367947343 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.192213203 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.370215681 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.370989825 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.364171165 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.37044373 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.498586682 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.373002899 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.370335332 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.084686059 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.371871937 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.510064263 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.365399819 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.369763321 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.369869755 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.197535682 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.36362583 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.36106818 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.512814632 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.373178687 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.084825649 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.360299355 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.364099775 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.085824056 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.514900482 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.390935889 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.382447657 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.38014024 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.530461609 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.374816982 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.49726181 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.499566717 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.508785825 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.41035759 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.361267492 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.365569376 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.373135463 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.372735528 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.373299975 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.398075263 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.365467081 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.373724984 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.087895923 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.380332127 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.381747689 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.372471778 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.372618286 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.392240498 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.373527669 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.373005279 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.517231808 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.374266819 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.497562623 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.196242149 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.198033169 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.37253603 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.365810566 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.375057052 seconds)
  done (took 110.905193893 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.436661897 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.443465764 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.475785536 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.365527745 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.418967721 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.476992897 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.3649382 seconds)
  done (took 11.230290509 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.376814306 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.375330633 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.41755433 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.416016703 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.374952378 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.525654893 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.374716181 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.378890938 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.373929235 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.419610541 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.374732171 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.374654668 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.380299342 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.366268826 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.418719996 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.381048911 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.486663683 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.370820243 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.375659047 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.525003145 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.375024008 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.38235738 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.420017271 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.378576137 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.37503024 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.377007345 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.13562587 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.3759541 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.375574255 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.376337624 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.373653648 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.425273201 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.376039551 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.368660441 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.375681651 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.488434552 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.376210379 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.373475336 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.377401099 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.373913971 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.38008521 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.375962264 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.376834736 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.374464646 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.379606764 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.393829912 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.377921433 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.376407933 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.376692143 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.379683228 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.423446796 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.375995567 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.378211302 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.375497602 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.426218054 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.38859036 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.377880211 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.378373491 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.380676159 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.375428629 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.527703565 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.419335685 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.380675228 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.419759259 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.376699485 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.377146585 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.381519892 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.377458847 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.461630861 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.378101722 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.41780765 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.376600143 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.554769233 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.396516218 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.381731747 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.375542628 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.376862753 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.377334134 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.367014503 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.379239904 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.378684635 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.37284361 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.380656622 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.376812505 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.380471918 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.531887107 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.482056993 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.379154725 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.387901817 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.381627281 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.375107107 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.427392525 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.378771814 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.37816695 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.424046231 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.489904046 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.427525188 seconds)
  done (took 141.547498296 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.388580296 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.388009315 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.377132204 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.400773849 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.375824526 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.37444274 seconds)
  done (took 9.559294493 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.377063502 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.37944704 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.380142998 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.378950571 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.377844828 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.383697022 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.386720795 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.37776896 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.382548719 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.384448216 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.384916305 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.390076788 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.39237672 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.382657205 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.383895125 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.380496131 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.38528663 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.378276188 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.37972662 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.382110463 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.376229914 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.380815953 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.382555931 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.379143272 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.388077842 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.383069212 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.396753962 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.385505904 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.380218754 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.382909706 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.385055497 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.384645569 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.378925805 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.379915828 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.390750016 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.37893269 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.384852145 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.390626413 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.383921274 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.383482097 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.38897699 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.383981117 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.385681914 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.391386899 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.37873059 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.381890912 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.394458667 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.3984759 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.389240422 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.392669692 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.390059432 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.385715758 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.385874173 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.392619807 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.381145653 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.383202417 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.394154668 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.388978027 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.384368722 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.379465017 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.385514009 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.388756692 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.37941739 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.39117848 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.384962901 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.390404358 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.382848891 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.389277992 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.383379189 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.385301362 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.392232354 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.386213092 seconds)
  done (took 101.971171433 seconds)
done (took 376.457022161 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.6429963 seconds)
  done (took 3.900617005 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.383714189 seconds)
  done (took 3.643197703 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.972259533 seconds)
  done (took 23.23314548 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.408126859 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.472318847 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.375827862 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.366687214 seconds)
  done (took 10.880388463 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.682204576 seconds)
  done (took 3.940361893 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.385864185 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.374894467 seconds)
  done (took 6.019687621 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.582654028 seconds)
  done (took 3.843221818 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.581850028 seconds)
  done (took 3.840907753 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.393797272 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.391515971 seconds)
  done (took 6.050583246 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.356955254 seconds)
  done (took 3.616471257 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.020437992 seconds)
  done (took 21.279926154 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.393074271 seconds)
  done (took 3.656980129 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.428726127 seconds)
  done (took 3.688269131 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.934675319 seconds)
  done (took 6.194753861 seconds)
done (took 105.047789999 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.372773419 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.372181014 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.374953137 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.370610637 seconds)
  done (took 10.749708656 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.442868213 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.439636644 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.446406609 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.4401026 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.439130825 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.440404604 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.411753759 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.430845377 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.442795623 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.44122724 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.447298956 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.441182286 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.441315867 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.430242205 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.440477624 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.446881782 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.440009278 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.447986036 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.428219922 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.440305935 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.392026446 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.440213331 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.441585786 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.391219184 seconds)
  done (took 35.705038106 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.899333764 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.454753125 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.534169988 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.434972585 seconds)
  done (took 7.583930854 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.469667737 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.471677075 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.487841093 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.523581576 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.559142852 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.488855236 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.414939866 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.41416497 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.399735601 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.473544762 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.52394742 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.457721202 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.574365199 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.388500284 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.677754511 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.388296981 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.39067033 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.469751687 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.525246853 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.552195358 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.391914644 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.469862145 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.477599455 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.456185075 seconds)
  done (took 36.707121705 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.397576732 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.405855976 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.389635305 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.404243903 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.387827247 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.390917089 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.390243671 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.396233357 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.38974525 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.387674405 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.388573218 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.402404265 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.391025774 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.39038062 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.396128861 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.390601861 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.392302653 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.395841977 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.396636695 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.391537115 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.392413628 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.397342887 seconds)
  done (took 31.928298946 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.381307425 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.379086047 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.731128406 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.636288002 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.380801497 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.380150885 seconds)
  done (took 14.153509793 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.453359074 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.597041368 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.386088897 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.736784573 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.822327681 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.385594626 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.387040023 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.635884995 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.930752074 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.921834464 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.440915898 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.450983847 seconds)
  done (took 20.41317652 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.390322806 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.379664762 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.39143174 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.395833769 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.442464706 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.393699043 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.396630254 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.380562231 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.442352107 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.442239297 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.393891035 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.439696805 seconds)
  done (took 22.153416572 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475621385 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387576279 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.390185526 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402317272 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387345461 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.231134737 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.403595243 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.084271446 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.38543392 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662778992 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393703969 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4782289 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.641933747 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395390059 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389446455 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.369799138 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.618199636 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897408563 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391341715 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388161134 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442486528 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.39465175 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402508188 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.599476437 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.233666374 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388644306 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.789881656 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388071053 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.681214292 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65616735 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.655788634 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39168546 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666340019 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026834713 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483011508 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.600643101 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394551073 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38586713 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.385029372 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.397037858 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391874622 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394217287 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.655165403 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393871878 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.391372486 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39159835 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10280305 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.391563525 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.388582837 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.391814393 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.659350355 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488101528 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.396315535 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391169876 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456796307 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386601795 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.394472066 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.518166869 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952733811 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390844432 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393847307 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.394868267 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.409802896 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390153999 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020283148 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.397885758 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.395726554 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395723736 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392076953 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.391164327 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415640518 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394031428 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.408550416 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394286964 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118175425 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406507138 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396288334 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96724445 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401738299 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.394625056 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62594036 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393293445 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396502008 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.39077667 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.393038301 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096760005 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400790028 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.366827222 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435880889 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.097838883 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.598428533 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415301028 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426565604 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.614150387 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.368997429 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393680748 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.401250912 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394974563 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409975382 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.104486866 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389782758 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.394452934 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652313551 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.606010977 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394955085 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.380692749 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873718668 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394685311 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.421815553 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.40990731 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.605578193 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.001139437 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.66340943 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406920672 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42751531 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395881599 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154514622 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397035031 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.40182938 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.413233894 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666989824 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.19052336 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398558744 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466569483 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400157229 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396762959 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396778469 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399303278 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.397487277 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.605780777 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40023972 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.663754687 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.40029438 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398052261 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.389247699 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392408436 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.399586841 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.62217322 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400066232 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672780044 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398896893 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397405371 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393772292 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.61451588 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.394507989 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.401519403 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657808439 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398550603 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412559363 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.665785666 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428636218 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505804446 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427134935 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.409169601 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.651654659 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.401055566 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.402647251 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397268584 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401675967 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400605771 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.406320942 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398432045 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00213237 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373417179 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398684621 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.398969688 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.412137019 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46946022 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.405726789 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610352044 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.39937905 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3972758 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.417253449 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.398927937 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62416081 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.665859136 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.400784889 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.489603859 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.87810655 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.004705079 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41462588 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.401642897 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.399961089 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.400078609 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402640228 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40024017 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401737556 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.613799304 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672962002 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.420011683 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.007877268 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40036289 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.400735739 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.405978367 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.667892431 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.406834011 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40204601 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.404268636 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41278109 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409792177 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.669635226 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53763544 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.41477717 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400320971 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.919703247 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.405402156 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398961526 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403435985 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434277919 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401355393 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259434397 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.659666319 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396092378 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666081257 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403403084 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.418706649 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.399134069 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417495779 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4081189 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.42733387 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411404781 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.613476644 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.406246913 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405168302 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961949866 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153625747 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958464422 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405448038 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.416773425 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402398224 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.121160481 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397797927 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403605537 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639767129 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.109601034 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398535677 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877656788 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.399282905 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159308276 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673040374 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.638357034 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419804319 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.404351341 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673147168 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.615971149 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43589115 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403335443 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405739903 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.376745446 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961650827 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411877906 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.482172002 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114178089 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397892362 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.426970817 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.473283609 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.405928214 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805244243 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.405942453 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406633306 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405022934 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403761358 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252620347 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.402755447 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40654553 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047474958 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.413220236 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.887623252 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402986197 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.617858201 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.67059089 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.669070143 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.414054564 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.411155669 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.660562777 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.675399997 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408654801 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.410504979 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972261295 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.270861916 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.411440955 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406243353 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167354783 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418544211 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.702133339 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.408734594 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.415648247 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411652684 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.407911391 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406584467 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.406724466 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415107943 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387229229 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914688637 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.404892885 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400518201 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404713151 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409346194 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.661506977 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.421921773 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.016597679 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638465178 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402837251 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452499595 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.414879002 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408429301 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.384530266 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.407143746 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406954979 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479886244 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.625955402 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.410534043 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.380012109 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.449283992 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.616004061 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.408384976 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.408858728 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634549851 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.406572807 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.415632498 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.155401877 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436323767 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409881524 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411949158 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.419113832 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445987016 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475497688 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618371694 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.678784861 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.679943578 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798332344 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408627434 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410306963 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.425926815 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506209856 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420229656 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.420756671 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.178413163 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027369927 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157293431 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.02354166 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.681084839 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412836777 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417371112 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410142972 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54433941 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409043671 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684632855 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409746039 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.414332711 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428360116 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41141448 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423416085 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618533589 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684399653 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410477358 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410891883 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412393714 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.412968557 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.685222963 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.625276411 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932020938 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991209713 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414643729 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.414488342 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.127129386 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679638826 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411252642 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411765402 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413038256 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.420879549 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.411199779 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.414284539 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416038609 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54700297 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680394221 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069288051 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.675899058 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.449380794 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.931691078 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417065417 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.667775662 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412562755 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.625860336 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.030377188 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.155200803 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.67788583 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482043138 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625989838 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.410919097 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551148887 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.411473739 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.416344098 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413054263 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415211488 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.413252802 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.682800368 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.035073108 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680880221 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.418759897 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.413169182 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445375937 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.625936002 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.636134449 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.128521252 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.636654434 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.683644649 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.421991167 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.41429722 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.04308348 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.687284083 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41680293 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.415248135 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.641947518 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.413213653 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443005774 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.175662543 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.412477434 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003592438 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.303983494 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437122714 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419274307 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.154377854 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.033397881 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.427687872 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932330333 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415360929 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416943648 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691992601 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.423344948 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.420627165 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696811402 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.419186477 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.420076424 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63084072 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.0284185 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180944615 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.428678809 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418054879 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.420364276 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416114095 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458652924 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411021493 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419594669 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.830184386 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.414972804 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417478169 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426784272 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.420452968 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421371154 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.417063948 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417757136 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.420152734 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.39917008 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.393541764 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.421133387 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543676218 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.975729518 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414397775 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.094411191 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.741841948 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.672771001 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.424577602 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.393367464 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.423174538 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41995884 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41831645 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416881969 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.419594452 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006426958 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.428937854 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.691259109 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.423129562 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.629600056 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62943625 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.421440596 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636480807 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423826555 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.442878837 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.3976978 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41940897 seconds)
  done (took 994.897536366 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.451538233 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.432404234 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.438405206 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.480409632 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.410461148 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.423822854 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.431851637 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.4474062 seconds)
  done (took 20.808360926 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.421082181 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.418710014 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.423324193 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.418392975 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.423554678 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.904806496 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.41830591 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.419820803 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.435017626 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.421822373 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.418008533 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.102398209 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.442906312 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.423904767 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.401662237 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.421386409 seconds)
  done (took 33.20783635 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.568353722 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.617041283 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.429703359 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.480569992 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.413597355 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.410511528 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.671811348 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.428450542 seconds)
  done (took 27.314847961 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.428848973 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.428232029 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.42809476 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.429409441 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.428878533 seconds)
  done (took 8.436819518 seconds)
done (took 1265.320039588 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.427206721 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.427170391 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.429038396 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.426037242 seconds)
  done (took 7.002445733 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.397086774 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.393378078 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.397969372 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.408964163 seconds)
  done (took 9.889409846 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.130585764 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.028456972 seconds)
  done (took 5.451599383 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.924585919 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.924563294 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.945364949 seconds)
  done (took 7.091715321 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.71617578 seconds)
  done (took 3.013851001 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.363371464 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.415774764 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.096388552 seconds)
  done (took 8.169585461 seconds)
done (took 41.912933394 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.418147077 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.671161624 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.602004006 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.419719363 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.585274492 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.610296714 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.22184164 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.418779224 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.412537443 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.418721009 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.413686918 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.573748052 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.135461791 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.661482448 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.141982316 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.666104672 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.577885189 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.424394558 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.418527816 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.413845887 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.221650539 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.4248478 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.414041496 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.429519386 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.578214201 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.591905082 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.421037782 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.65883046 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.432542284 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.414702036 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.571896095 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.420319632 seconds)
  done (took 84.080675058 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.429382142 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.425301223 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.427536542 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.413729166 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.429373251 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.431714604 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.417899342 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.416372044 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.427517312 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.415506746 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.41461778 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.43054139 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.431958496 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.415803512 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.41780911 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.417063121 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.417547131 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.41443544 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.428003621 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.419660685 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.417795707 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.416280456 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.418745679 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.425859399 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.422141566 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.418038204 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.436049379 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.428281358 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.416696368 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.418269063 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.416937948 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.441242841 seconds)
  done (took 78.816534387 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.422152803 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.425914931 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.419052886 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.42114663 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.416447762 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.435178305 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.419317114 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.421975914 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.436901885 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.421904797 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.416071573 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.432623757 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.417409124 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.418961155 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.433925349 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.419225939 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.418596296 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.422957433 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.422127858 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.420267421 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.417829115 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.417316036 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.432101518 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.418702788 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.422037672 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.421676369 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.417962398 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.420499868 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.417331851 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.42319563 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.423634635 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.429091137 seconds)
  done (took 78.823857778 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.665079414 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.437686986 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.443577668 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.432581904 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.439147196 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.437611438 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.43077202 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.695061588 seconds)
  done (took 15.283406745 seconds)
done (took 258.301524919 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.435435538 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.943606908 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.454990091 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.427677879 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.44557242 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.453196197 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.652777525 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.451583322 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.654768787 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.445624788 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.44437128 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.428094996 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.246938875 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.582449469 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.323561052 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.426555129 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.32002737 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.437465243 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.013730052 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.717323462 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.455701583 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.425966527 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.308132805 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.334556225 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.406241998 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.525554649 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.525902787 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.654154553 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.58979882 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.512812212 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.959144165 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.438818519 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.441639269 seconds)
  done (took 66.186036565 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.431616236 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.437035758 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.437742704 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.439506651 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.434583846 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.441137212 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.431541668 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.440344332 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.439636377 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.442630626 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.440207562 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.438763307 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.439435451 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.437293266 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.437033913 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.419832661 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.433005455 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.439013934 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.431735207 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.416184456 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.4381949 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.440674057 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.438594384 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.439727729 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.441109783 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.442016609 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.439394087 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.439567324 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.43935635 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.438569131 seconds)
  done (took 44.408595919 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.443243203 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.011883161 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.16035988 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.441290417 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.432960271 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.440921157 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.72555161 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.444538284 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.439781336 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.439306675 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.924871166 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.447714319 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.466677653 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.168908813 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.433226848 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.445347074 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.442306084 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.434615695 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.032131284 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.44316386 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.722055986 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.443318747 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.728091798 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.444486106 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.438757683 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.435019261 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.440986552 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.278626877 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.455804104 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.9268389 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.231726586 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.718498213 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.198276928 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.225341018 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.230587612 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.445590228 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.444364434 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.924268739 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.43893713 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.437588852 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.72496105 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.439801693 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.180871701 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.110892665 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.449412512 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.445671319 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.288690578 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.950575559 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.683077084 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.444447123 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.217910814 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.440045472 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.446825972 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.439271792 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.684072955 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.441297988 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.438288761 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.288720586 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.453515394 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.725441422 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.448783367 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.437661021 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.025541283 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.439380649 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.009716652 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.440613875 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.448137956 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.437785366 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.173688091 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.44509538 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.131399497 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.449753698 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.446150825 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.920402868 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.028478338 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.339668984 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.440807812 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.023199647 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.230226442 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.739280358 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.444025506 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.262195539 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.743682895 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.441302304 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.450589345 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.44962362 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.445221412 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.510473338 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.724156824 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.064355216 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.123329757 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.286488195 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.742205408 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.448809858 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.440161335 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.285523975 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.459346099 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.447695585 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.177090715 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.12913146 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.452694419 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.448709896 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.11890897 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.454399749 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.729045539 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.448378667 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.221276653 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.442219241 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.526953388 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.448741629 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.447180523 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.446213159 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.729725647 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.445832086 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.451788785 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.118741633 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.942842822 seconds)
  done (took 200.433592135 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.436459589 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.430640634 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.435366586 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.429745541 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.436948258 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.443291486 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.437384137 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.437240732 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.442340676 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.437556988 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.435859327 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.444128051 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.442816206 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.437786473 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.443650501 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.432824364 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.43700355 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.45834712 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.432045561 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.437561734 seconds)
  done (took 46.077407002 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.450759868 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.011428882 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.971568777 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.452540612 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.44870082 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.444786712 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.501575454 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.447958504 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.448377699 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.745092447 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.615632815 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.45273685 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.447101518 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.449704212 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.974292202 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.429822598 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.74445956 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.001364958 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.451498871 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.003565899 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.425173919 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.449241864 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.443441707 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.004726618 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.748404753 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.727682363 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.498283002 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.010747928 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.444370309 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.448776601 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.005405976 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.446315711 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.443152692 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.999030439 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.449888997 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.465877324 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.448153391 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.502631967 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.504304293 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.748341755 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.008207864 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.735273944 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.458761038 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.622042512 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.448629738 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.431373931 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.016036227 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.450500225 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.427810554 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.450796788 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.458718784 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.989693448 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.443348783 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.989951736 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.447998911 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.452382763 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.008020683 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.986182767 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.979200344 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.61470988 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.446651777 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.734364748 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.447372619 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.01739273 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.450192986 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.453658927 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.456069556 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.621933349 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.011608545 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.732904068 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.74566379 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.744522221 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.452933922 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.510908909 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.456896295 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.749084578 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.50743103 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.833173071 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.750063636 seconds)
  done (took 130.561657742 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.709016402 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.558132108 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.815519987 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.043923029 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.951088564 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.576653549 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.556660536 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.693487532 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.455359593 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.532332149 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.096506162 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.547372479 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.167847722 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.536719039 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.54998376 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.577447301 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.847202958 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.43321058 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.097357687 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.060926388 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.44502526 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.546787407 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.01584106 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.656046168 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.44112823 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.999703728 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.40420729 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.96789399 seconds)
  done (took 54.59960215 seconds)
done (took 543.566305985 seconds)
SAVING RESULT...
DONE!
