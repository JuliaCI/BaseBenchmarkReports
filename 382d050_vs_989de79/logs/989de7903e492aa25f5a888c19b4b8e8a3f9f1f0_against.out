cset: moving following pidspec: 3296
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.544698155 seconds)
loading group "string"... done (took 0.524276792 seconds)
loading group "linalg"... done (took 9.124284413 seconds)
loading group "parallel"... done (took 0.184175648 seconds)
loading group "find"... done (took 1.336382082 seconds)
loading group "tuple"... done (took 1.959261196 seconds)
loading group "dates"... done (took 1.390060764 seconds)
loading group "micro"... done (took 0.200031885 seconds)
loading group "io"... done (took 0.517415208 seconds)
loading group "scalar"... done (took 53.649011876 seconds)
loading group "sparse"... done (took 14.424401341 seconds)
loading group "broadcast"... done (took 1.359572348 seconds)
loading group "union"... done (took 10.683956069 seconds)
loading group "simd"... done (took 3.205189154 seconds)
loading group "random"... done (took 12.088885233 seconds)
loading group "problem"... done (took 2.248949911 seconds)
loading group "array"... done (took 24.596728217 seconds)
loading group "misc"... done (took 1.152591076 seconds)
loading group "sort"... done (took 3.828265285 seconds)
loading group "collection"... done (took 19.531229961 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.625308447 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.128607535 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.269285009 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.287131069 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.243747788 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165158805 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143773185 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.266625952 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.672957386 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.216328039 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.136918474 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.504122799 seconds)
done (took 6.498641291 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.258199867 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.184739712 seconds)
    (2/2) benchmarking "String"...
    done (took 0.172229712 seconds)
  done (took 1.141397541 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076101668 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.154424228 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107158376 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.092814992 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.091727977 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108528425 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09261872 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108236034 seconds)
  done (took 1.543493653 seconds)
done (took 3.806138226 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.55276253 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.923640641 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.519585825 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.145495674 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.319858442 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.303121275 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.321692257 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.206231008 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.108785913 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.093185446 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.17902959 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.411803426 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.452582941 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.991357174 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.094925976 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.100953616 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.134610185 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.806226529 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081836766 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.128970142 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.503257358 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.201434143 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.099883205 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.126844417 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.186000468 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136582569 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.162605841 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.104006577 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.689426061 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.135562765 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.192781845 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098609807 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.161412964 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.196649258 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.211287051 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.092738616 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.710171895 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.204268693 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.091734796 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101664981 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685209519 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.122939523 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.188527009 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103219744 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.091140876 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.18808407 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.098865668 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079875736 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.119848594 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086787796 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.167081966 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.460207214 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10685846 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.173539722 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093805915 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.71943833 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.102178467 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.280640933 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126296664 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.094156402 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.091113633 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.087447733 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.166097664 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.09775558 seconds)
  done (took 20.636351385 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.14664041 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.165186387 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076703856 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.156066022 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.126610188 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.082346833 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.103491508 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077637577 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125681839 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.224035901 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.141346866 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.153421024 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092319703 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091121544 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.127070822 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248907584 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109626961 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.122795707 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089008361 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089235184 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141077194 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095905266 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106633195 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094785602 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170163843 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204742261 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110884427 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12540225 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092425056 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098699024 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143727657 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.150989513 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093759305 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08984957 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.188434464 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.10890536 seconds)
  done (took 5.37064968 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.199743185 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.12522251 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.21409886 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.163409112 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144864736 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.170976603 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.151149907 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.281146752 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.227059208 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163058884 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132817311 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.106798757 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078941191 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098059245 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078361659 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.487726288 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.185752399 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.13122341 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.156475364 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106614443 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084415349 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.386361763 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102122799 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081932038 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105117259 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.068981839 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.201310684 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086763212 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.106616888 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087384535 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.112751767 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116146477 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.219823066 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.120617996 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12427443 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105890716 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079877365 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.219699978 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.093321171 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.140606637 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076666754 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.127475803 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117275503 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132855975 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084117477 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.112721646 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.223086296 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082289048 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.105011713 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.070634104 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.143635276 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.201757994 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.144913706 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.083107936 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.293425004 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098294344 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10753126 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.082549686 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.251736239 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.117137465 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083613702 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.100535039 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089498558 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079546782 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.444782257 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.11012889 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.934231671 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081744139 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.16125513 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084859317 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106672772 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086924502 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087165157 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.122947781 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.083436581 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.08014455 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.100250058 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081494119 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.086317716 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114338601 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085352725 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080269677 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16672939 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.102203828 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101679679 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128961117 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.088765283 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.099344359 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115803374 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.104418226 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08388434 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084544673 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.169046933 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086683314 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.102607381 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.095785883 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100502279 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128518239 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080838828 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.211923957 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.084079391 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.111775762 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.105423746 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131393277 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.106220469 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081741676 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106638942 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080962315 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081954071 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165204922 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.085147423 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084134984 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.085136868 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.115464146 seconds)
  done (took 23.390078363 seconds)
done (took 50.179211191 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.46276612 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.087286853 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.087415106 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107830334 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.0870517 seconds)
  done (took 1.695531118 seconds)
done (took 2.533955642 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.336307188 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.196864391 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099358957 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.192426284 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085487052 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.198774113 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.185335611 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093641683 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.212162403 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083001006 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.192787901 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083109005 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.102973897 seconds)
  done (took 2.925444537 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103258571 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.109105472 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102020937 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121010636 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083207063 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101780468 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118826678 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110236928 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100330144 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.1155431 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087264382 seconds)
  done (took 1.990513832 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100279099 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107732335 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099492716 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121451254 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086911667 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098899181 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118673549 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.112381356 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100744147 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.11663016 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086599009 seconds)
  done (took 1.989589751 seconds)
done (took 7.741514307 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.101366912 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.743314278 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.148390011 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.213253237 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.36670385 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.24258335 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.580666862 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.156827543 seconds)
  done (took 14.55029444 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.17612599 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.111638342 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.094139387 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.098116557 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.095268435 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.114060668 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098292896 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.098789086 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.114044993 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.094050957 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.098016449 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.11654647 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097146696 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.094059348 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.097291396 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.116945438 seconds)
  done (took 2.615124187 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.147051366 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.128928762 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.116369724 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.101569004 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.095849147 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.120010733 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101431634 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.096694096 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.11523969 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096733992 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.1047125 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.118878992 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098456115 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.094475874 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.118392596 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116496134 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.096703941 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.11828576 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.113792645 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.118045888 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.102553472 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098547113 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.115942656 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.102080364 seconds)
  done (took 3.5655591 seconds)
done (took 21.572617405 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.151407193 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.105470313 seconds)
  done (took 1.100393766 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.143311566 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.168152929 seconds)
  done (took 1.160440774 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112416486 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.090922625 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.144267504 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.105758823 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.092211152 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.109950878 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120366878 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.111008282 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094289007 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.093143421 seconds)
  done (took 1.925127679 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.093417874 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095307859 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.12655449 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.143430207 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.122178822 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097434844 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.097402017 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.094297329 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.118643853 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.093080001 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.09691522 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.130510649 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.098875458 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.130733711 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.09974941 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.100194928 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.120221533 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097795456 seconds)
  done (took 2.80781568 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.09016087 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.094433876 seconds)
  done (took 1.038567815 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095772189 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093060839 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093286335 seconds)
    (4/7) benchmarking "year"...
    done (took 0.114104691 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092211318 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.09160621 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.112030845 seconds)
  done (took 1.546131374 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.514803352 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.279739115 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.38625924 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.109314515 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.148386541 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.360293898 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.148026056 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.102530371 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103381162 seconds)
  done (took 3.04386334 seconds)
done (took 13.470835978 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093645504 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.224237666 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.646058849 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.113833808 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.215675861 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.170283003 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.297536662 seconds)
done (took 2.62149986 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.353311042 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.153529542 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.089840693 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092647745 seconds)
  done (took 1.544121958 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082391943 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100406447 seconds)
  done (took 1.046871434 seconds)
done (took 3.453323497 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088783115 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.09070951 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.089801191 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.108654241 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.092424694 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.091823516 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.145042311 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.090831772 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.090055022 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.090222562 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.111651237 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.090674701 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089645458 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110864474 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09201516 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.09023856 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091245482 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.109715726 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08916802 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.089893833 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109041748 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092593471 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090113187 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.089993723 seconds)
  done (took 3.223296578 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.113359634 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092677697 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.113325286 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.095267426 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.095805025 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.113840919 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.096673817 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092300937 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.114124986 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.094954696 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094878445 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.093862422 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.11135583 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095199733 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091789724 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.114433802 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.096016233 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091497694 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111872461 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.097101098 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.095531616 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112706177 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.097073837 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09474325 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.115839781 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096533568 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.092729301 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.111179909 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096509875 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.096292647 seconds)
  done (took 3.893836519 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.100165739 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087388092 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08993984 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.119937971 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089122714 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091264238 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.106845977 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091162004 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.093325238 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.090411867 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.114871715 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.092701203 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.088404795 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.112161302 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.094422686 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.094427739 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.099964966 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.110837027 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.089684635 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.09166321 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.114230788 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.089945238 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090489496 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.09049882 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.112800587 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.089320041 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.092002173 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.111365131 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093575455 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091091255 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.093560927 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.114391921 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09319178 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.10306314 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.114878938 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.092830755 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.096501565 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.108068856 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094684841 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.089437422 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.088208143 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.111818713 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.089493415 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.098138254 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.111933295 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.094172956 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.088558411 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.093666207 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.113900332 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097085766 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.088717755 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.108906602 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095356984 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093428661 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.095098671 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.108456203 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.093992422 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.089573711 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.112700736 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.093234187 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.087842546 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.087763532 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.118348657 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.093446769 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.106674806 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.119099492 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089462469 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.094670959 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.112782796 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.098246373 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.094076423 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.122004206 seconds)
  done (took 7.984490544 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.103995454 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102258057 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.091983323 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.113418412 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092066269 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091842331 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.118188112 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094818542 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093288909 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117991546 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093518339 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092662237 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092478616 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113430203 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091995856 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.092699233 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117913143 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094674771 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.092627483 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112358462 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093922108 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096974088 seconds)
  done (took 3.073438768 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.235344056 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097268097 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142858522 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.125674577 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111636269 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.125057791 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.098190304 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097657323 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115708274 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103055173 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100612371 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116393947 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112773732 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101555011 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.12035614 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099442862 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113796155 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10348477 seconds)
  done (took 2.994356382 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.102382847 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092598078 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.135351727 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096106837 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.096190561 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.093515634 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.120578574 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116019014 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.114472301 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.096357758 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.102297764 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094268561 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.117443953 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095076929 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094889822 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.117745555 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.095324152 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094541217 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122733246 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101576613 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099038531 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.121971947 seconds)
  done (took 3.196284254 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105914399 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.090181845 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.128652738 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095061032 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090664662 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.091972976 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.117994785 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094738282 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.098929662 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.114926195 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095843497 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.093778679 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.128874177 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094884412 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.098729422 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115664185 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.096371986 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093938413 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114155776 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093898441 seconds)
  done (took 2.93005871 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.174094183 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128054114 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110037118 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118630433 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133605779 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.113040074 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117737415 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.132219608 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11076802 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142317981 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112292238 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110814155 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.139364756 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116945776 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131456358 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119567182 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119329976 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.13988655 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113409478 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108012319 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.140504596 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107302976 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134317632 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109003003 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106494882 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128220463 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107168741 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131154929 seconds)
  done (took 4.335200292 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091295847 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090668293 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090686865 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.114572553 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095081381 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.093361384 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.094344963 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.112935172 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09179673 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092339802 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.113204571 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093813035 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09322357 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.09127191 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113672484 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.089964616 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090647767 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.108211699 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089750414 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090214729 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.089243381 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110088479 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.09131946 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090087355 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110737855 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.094472012 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0945382 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092359765 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114693068 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093699523 seconds)
  done (took 3.798439104 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.102273035 seconds)
    (2/2) benchmarking "in"...
    done (took 0.097817607 seconds)
  done (took 1.083058109 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.09887469 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105719682 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090637317 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109942918 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099019576 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09319616 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.121961115 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103119027 seconds)
  done (took 1.706497327 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.14469611 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.165776888 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.097395267 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.103903989 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.172031762 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.163708564 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.140861496 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100061475 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.116135268 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.089347721 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.166652082 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.088025432 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.096689537 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113268549 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.096997682 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102566505 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.116619608 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.106855972 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.101980311 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096549309 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.121203879 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100449756 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.115000328 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103643104 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.090345379 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097924161 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.119667993 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.10383963 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091859531 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.118974544 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.093877535 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092391597 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.114941584 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.096676246 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.091138548 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.165928882 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099861523 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108000297 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093939626 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096112967 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.146486349 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092952894 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.09294706 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.109521701 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096018948 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.09572969 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.114463826 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093115887 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083831167 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08851605 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.115475405 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090696248 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092751226 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.118051432 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.095906939 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098841934 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.115346849 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089429631 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087504781 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.109317688 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.093627617 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088524169 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11924972 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099027608 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09536167 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.114931949 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092656299 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.09178399 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.114523778 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094741882 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095172235 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.130189627 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093872784 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.095888232 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114667325 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.093673618 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089156227 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097911474 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112356637 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093865117 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.095217023 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.141672497 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095483995 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087090318 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.111950744 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.102120362 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096396643 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.117065544 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085604355 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10027139 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.113555075 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.092647512 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.08591122 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111934827 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.090695336 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.096096697 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.087808661 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.119511678 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.09418315 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099899891 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.120538032 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093297396 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095352021 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122926533 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102515958 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.095226248 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.165844083 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091612211 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.110766904 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095986999 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099666083 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086501449 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.115807503 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090773977 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088962407 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.108055756 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.097720895 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092313331 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.1130881 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.097355255 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094680928 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.114039878 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094373341 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.090622825 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088683328 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.118794764 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100770547 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092965813 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.115971908 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093114927 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093184429 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.112147199 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.096760622 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089593597 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.12113145 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094093601 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.095279614 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.116369371 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.09998843 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092575712 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088732896 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.114515775 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092596426 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.10983078 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.096498378 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.093405876 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087829672 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.107425115 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.095221674 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088122899 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.117918689 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106175426 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.091247999 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.120366797 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.093595198 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101785775 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.111841971 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.098131103 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094473849 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.116882366 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098747437 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084720629 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089459746 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.116814462 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095121325 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088461457 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.115819936 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.092964049 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.099167738 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.108141362 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097610974 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084789446 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.10735111 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.098024446 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.093086932 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.096531488 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.112830444 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.133782812 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105378408 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.121622036 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.09184487 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.09430799 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.116210365 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093170998 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.095254217 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.117702666 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.097985851 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092273042 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.110876737 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098549817 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088218929 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.114575588 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092296817 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093989801 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084972924 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.113482625 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084915391 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.096633693 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.114929447 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.098025666 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.097237451 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.114096323 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092165401 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099882562 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.109106101 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.096625887 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084924372 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.116169738 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103900446 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.098420382 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097303976 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.114729024 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090934094 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.092180257 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.122454024 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094129305 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.09257421 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.112662505 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.085918265 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085126435 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.119672111 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097639068 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089344918 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.090347222 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115460393 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095688661 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.090213452 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.106417314 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.098248586 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095629242 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.10914503 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0940619 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088742061 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.110751147 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100649716 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085740247 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.110327668 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095235707 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.096803763 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.111059593 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093505544 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.094723444 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.11541015 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.09697813 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.094493122 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089228691 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.122654744 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091833661 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.091921889 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.108999087 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.095826058 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085631239 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.111878095 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094598042 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089900696 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.10718508 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098662174 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099641824 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.09718943 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111556025 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.096354949 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.097531368 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.118346397 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090888489 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.097930927 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.10837767 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086786652 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090627781 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.108558138 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095850654 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088181235 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.096673749 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.111466376 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091937022 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.095848838 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116793519 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.090070491 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.097599627 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.124742116 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08664955 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.086039117 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113675707 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09216908 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.08990457 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.114189708 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094718428 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094866334 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.119976508 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097187793 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.09096173 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.114732546 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100543135 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089199332 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.117708174 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.099697796 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.098636288 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.107775907 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098905496 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.09026969 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097596706 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.107538869 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.100596514 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090936976 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113180965 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090052295 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091514875 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.110287062 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086598828 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.089233906 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.119116833 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092860803 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.097000144 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.111589505 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091989761 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.088424128 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107457984 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.100105323 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.09136446 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.098777328 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.114182989 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087120407 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086344288 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.116275546 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093698638 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.099122172 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.106503957 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.096909446 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098619043 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.096736541 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.114692962 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.101903452 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101872169 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.122733211 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099246432 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.086907211 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.11900415 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.105200917 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096385173 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.121947522 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099540822 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.089005691 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.12312056 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.107102255 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.102035558 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.118520912 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.093347101 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100410228 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.105963368 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.124569305 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.104254436 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100891884 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.121401773 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.092925839 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099825285 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.125990883 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.099881166 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103931095 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118822014 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099432179 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089750237 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.099507036 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.117530656 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087659838 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.086185118 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.113564319 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.100643388 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087233824 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.11718357 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.099551112 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089760026 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.091312978 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.118928834 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089803373 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096122441 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.119170156 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091792649 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101304508 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.114791613 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092139873 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.097657699 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.118642448 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.088563171 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091549629 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111194754 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102450319 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091595279 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.097549087 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11452499 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099437087 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.096366873 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.121465506 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.099648959 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.099047465 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.108310047 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101679467 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097861383 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.11608801 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.092196966 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092586953 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088344478 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.114497773 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.09998394 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090711841 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.125774496 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100257158 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.091837054 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113350105 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.100111204 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091905137 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121892575 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091522143 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095088193 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.10804476 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.098995847 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093078224 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.120342634 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092007501 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.088474971 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09798119 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.122491489 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099284515 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.095304022 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.122618397 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088558647 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088086037 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.119449696 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092811631 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104350339 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117826142 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093829782 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093720188 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.11668018 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096696604 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100252822 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.088539587 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.114226962 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095517283 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095218634 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.114978799 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090925649 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098957687 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.112956568 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097112052 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.09303357 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.108938319 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.094357448 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101277571 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.111997421 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091995741 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091644767 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099396407 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.115175935 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091597237 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088014157 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121603422 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.096636439 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100325964 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.112055113 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.095054007 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.090970772 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.118001292 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103338646 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.091715045 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114819119 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.093486359 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099153285 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120933491 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08834761 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091329097 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.124216605 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101725448 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.098671893 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.095638567 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.114907813 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101662242 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101219427 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.117571911 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089311722 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089077472 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.115820586 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089581369 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.095909533 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120588843 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094971248 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091365941 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.118726912 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101064715 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097372051 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.095714529 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.109412471 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103097287 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091303429 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.124620442 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089332804 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088532868 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.121404703 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10106829 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094135798 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.093468589 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.116857877 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.09746045 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.088814038 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.118083021 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.099934908 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098143719 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.122116188 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095155537 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092074408 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.117514747 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105934347 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.095459122 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.092671652 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12520079 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.101023373 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113452404 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.096088193 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09958144 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.100886778 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.119734269 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10091228 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091123089 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.114854855 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102429722 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.101097986 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12658059 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094713221 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088229126 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.121333936 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.093418824 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.088429858 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.118025043 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103728348 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.101419456 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.114214216 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093390331 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104575425 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.119906339 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096369396 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.092448732 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091726593 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.121474815 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092928164 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.098900341 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.112934086 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103086256 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.100748352 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.12287517 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.104909212 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088330716 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121458893 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.098960233 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103863457 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.115973438 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.091372767 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.089884069 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.096861744 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.123375662 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.102134735 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.098687939 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.119169966 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.10115713 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.096004027 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11497474 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.094900345 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.102400568 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.099971461 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.117748407 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.09784845 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093106702 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117233446 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097699834 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.100599656 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.125108995 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.097566344 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104370628 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.121505246 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.094898483 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.092471639 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.115080102 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.0988526 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.096458729 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099681969 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.114175936 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.090518618 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099316952 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.12208213 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096415703 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103468129 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.123744733 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.094863271 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.097692113 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.123370426 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101308627 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.096836088 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095038342 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.1196232 seconds)
  done (took 62.047518587 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148134816 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102931043 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118253245 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098241995 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115780259 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118742644 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096761886 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098155478 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.120320839 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108420787 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097122314 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117025524 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113430324 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116913117 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137767035 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107933501 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118683366 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098994142 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097551671 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117985842 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11452286 seconds)
  done (took 3.297782006 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116340099 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112250369 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129273158 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111460564 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103308022 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.129759865 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108934348 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12992228 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112129623 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104671037 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.132160855 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108705741 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.126696204 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107125008 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10528143 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12764246 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111931937 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104765947 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130755755 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109136164 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.125179872 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109834869 seconds)
  done (took 3.493997024 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.107660861 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10125846 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.099839454 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.117867151 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101938949 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.09635564 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.125041949 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099402987 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.10563817 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.116061822 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.092391013 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095520804 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.100023859 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.119244038 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093334059 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098067782 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.128027833 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101291853 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.101536274 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.11767332 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.110159322 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.097595327 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.118504316 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.092032907 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.109178901 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.122636261 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.099404814 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101610996 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089584607 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.121984466 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.09789424 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.09502418 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.11791369 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.091877533 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090656749 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.121325998 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103993747 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.097906757 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.096628631 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.117770475 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.098560695 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.101442781 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.120672376 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.098654484 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.097711309 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.116703611 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10191191 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.097661523 seconds)
  done (took 5.982761578 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.128481733 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.165747797 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.100190176 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.139615441 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134759294 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107708224 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.099965767 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.139074663 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.099371288 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123676841 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113829274 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.112051605 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125228784 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105074521 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.102752979 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125064901 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105244239 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100373007 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127398683 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101424139 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.105914524 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.126425193 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111586797 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.130787595 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10472933 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101678307 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123391019 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10701589 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.110256739 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.128099242 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105766045 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104726186 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.375464017 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.101780563 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10107699 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.125540651 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.11325173 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.123672831 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.1049809 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099953317 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.122979279 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.106582342 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103746981 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.13480377 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104607818 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.102312736 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.12311131 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100749246 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.110365173 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.124015419 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.108099325 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.11107808 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125221664 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.101706435 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104046874 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.133335761 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.101597397 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.120936448 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.104754938 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.110431571 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.120974078 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104899777 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.112129966 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.123137327 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.109114935 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.111677964 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.125605162 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103930234 seconds)
  done (took 9.105291895 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.136877329 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.104876642 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134243045 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114580019 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104754337 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.126724555 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104898799 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.104608435 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.127662373 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110177776 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123969789 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.202870098 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.12362517 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112293351 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104235534 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.127833823 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106608806 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105061318 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127216387 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106157146 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.104019566 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.135092859 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104930077 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133901809 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118574753 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101993346 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.126524173 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106051657 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112409708 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.127766591 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116698868 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.125114054 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107380194 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112701913 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.138776009 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106809619 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099178298 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128659762 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106367298 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126809297 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104521928 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114109012 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.125746529 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.102718525 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106390769 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12685788 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114452077 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.116262936 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.1334483 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111323144 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.126722635 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116197951 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106198728 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.127742871 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114093349 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.142541501 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116576586 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113635228 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127231882 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114568465 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134400382 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.122303274 seconds)
  done (took 8.314722922 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101171124 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099396649 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097192532 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.119943541 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100342133 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099891841 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098448873 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.122254877 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099412015 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098558138 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12055727 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099933772 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099528622 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097844102 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.12046947 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099232853 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099384465 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119426562 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100139525 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098492155 seconds)
  done (took 3.042589748 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110005837 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116928776 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.121777345 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107769321 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.100343643 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.126745587 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102076601 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100584993 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100596347 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124512728 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109018728 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.129717801 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102432563 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107129163 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.129469497 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108359931 seconds)
  done (took 2.750699572 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.121243881 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117732596 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.192606878 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103268414 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.123501051 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109793884 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101003996 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.125456456 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102312322 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.10731932 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104312644 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.126930545 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102471675 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102905724 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.123674563 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104632385 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099822729 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127263049 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103685637 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.191324951 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106478465 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103841842 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.123670665 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107344279 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104229697 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.126762 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109664997 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101435789 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.103083486 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.124904468 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104826901 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.10730391 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.123728023 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107271817 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103157216 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.124535677 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103018789 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.100963216 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.126275599 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104420325 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103266076 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124606532 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.10324443 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10394292 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.099355698 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.124727011 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101246251 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.107252243 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.126005591 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104632 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10239237 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.131827401 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108050142 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.108756974 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.131396998 seconds)
  done (took 7.24392427 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113811064 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10282711 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136293409 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101366538 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102320119 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102869074 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125625351 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104668316 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10308676 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.122761653 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104278874 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103503502 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124730296 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105846177 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103189689 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.123732953 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.10058591 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102800862 seconds)
  done (took 2.9386574 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.109581714 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102804849 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.104703828 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.123994294 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103196863 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101260899 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123223329 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102364727 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100463273 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100639131 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.125429215 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102503047 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100334856 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.122909547 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101469644 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100696519 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.122291577 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103396449 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101712181 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100109686 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123712008 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101861033 seconds)
  done (took 3.33797187 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113220916 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.184793402 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.110044188 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.195605822 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.100819215 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097185207 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.132400717 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.101207761 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.114632032 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.123145035 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.099129124 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.09756956 seconds)
  done (took 2.430690735 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133186572 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14035952 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124805593 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105127425 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110361497 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127771806 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108073061 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104851242 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136298741 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117792643 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127275129 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115552873 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113578036 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136650748 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111281526 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13215388 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108489002 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106668838 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12294297 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123061875 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106259475 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136998842 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107607817 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105748504 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129321144 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114529614 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135244126 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120045608 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106334965 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136472388 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110325356 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128093416 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116863506 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118271361 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126420329 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115837912 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105515549 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144709424 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111144089 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137292659 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103651059 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110291018 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135882895 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113307872 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135636296 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108466879 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111657855 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127760157 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108473834 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148278595 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113327876 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113582504 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132507005 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116453366 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135329083 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129705229 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118409879 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138376721 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11108141 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139859194 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115582463 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131665308 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118095742 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116348799 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133954025 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115963503 seconds)
  done (took 8.969810498 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146244358 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102579846 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129061382 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119140284 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136657432 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109153004 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10761223 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128429521 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108017353 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104874528 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.174310619 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108164454 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139077817 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116003275 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106728193 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128909938 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108559854 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115190812 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125746832 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128716678 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127641668 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11801041 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11475908 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138145876 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118585881 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133438743 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10908873 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107872168 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129492106 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108777301 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111665386 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129640596 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116937549 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102685057 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138917743 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107882162 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12809946 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114892703 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106778888 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134212243 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116793948 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142388816 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108035896 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107800813 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140772999 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108501834 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10718396 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127445371 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107769253 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104189577 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141776903 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120243481 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140778876 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116775813 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107788555 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130315546 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108745008 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106906003 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130270923 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112783955 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137138617 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109468112 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127979601 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130265183 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107706499 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136536556 seconds)
  done (took 8.94666002 seconds)
done (took 170.982524291 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.151355287 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.191487653 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.146593323 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.180325023 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.095422192 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.130386123 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.150499773 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.148590685 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092549565 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.116949725 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094888664 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.097671098 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.186215959 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094993338 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.094486265 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.119840883 seconds)
  done (took 3.055766514 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.193365459 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.311018636 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112883524 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120388504 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103712958 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.100522412 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120698934 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101651721 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.0982738 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.129104804 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102087802 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096221556 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.128472522 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09810244 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099027835 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.123243299 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107660786 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.10130492 seconds)
  done (took 3.219348022 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120276642 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.143941865 seconds)
  done (took 1.242702249 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.132032516 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.199066757 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.277249767 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.171757121 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.12376403 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.139393247 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.151564554 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135278618 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.182756379 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.135210435 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.113726274 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098920407 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148997726 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105551471 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114285787 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.123313067 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127885281 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.134853492 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115321463 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101255804 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.142447434 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.10327041 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103704041 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.13617503 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.170953108 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.1336124 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103492361 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101126318 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123746395 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114236459 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105458451 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.138211936 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.112241183 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176125773 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104797425 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.170227898 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.107486423 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.122989546 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114816778 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.099247461 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.126334483 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.104234063 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.13584051 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.101476617 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102284766 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.128895257 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104575695 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.101810259 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.12921027 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.1102072 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.106253799 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.128943709 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.168397384 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.111238435 seconds)
  done (took 7.952225222 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.857331098 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141864472 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099283969 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.014578714 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.151893958 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115110237 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.86071736 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.145560566 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253471872 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.874876552 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115878685 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.134918085 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.238048992 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.233439404 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.008337931 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.32990485 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.713310102 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114461867 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.127078904 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165564796 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106950247 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.149782335 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120027141 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.421443513 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100552718 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.121968759 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.108532447 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110789517 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179071518 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.09956601 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.131465698 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.194516033 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.244460032 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207550561 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123733826 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099100996 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09816367 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.183755484 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268615242 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218426631 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.184184584 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096030919 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097981283 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130606991 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11871132 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.118029033 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159006533 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.189756427 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.190191196 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102375043 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.136660992 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110496156 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128598602 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.157022316 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.11926432 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.329594322 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.330039137 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097601709 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130504156 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.116091188 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266260737 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.121159308 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.232812844 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126567924 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214566566 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120669406 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81012902 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.161563181 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.121383244 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.10761179 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106522708 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12831541 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.106593501 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182514192 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.373284986 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.135619196 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104538504 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098306811 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.245736372 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.122894591 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09923058 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184105275 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100539782 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107061872 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137142677 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110811192 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.18926562 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.245147781 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.112020605 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131946398 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.10583689 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131197488 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.10255498 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.231237426 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231391141 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.153398929 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.235102292 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129980077 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.160069747 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.183430602 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128676989 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.165623936 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.130106516 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115812982 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12967012 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224829488 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.134120463 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122493332 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105233111 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.107784301 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160842782 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10155442 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130480607 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.163954883 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.455919416 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.184335785 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.096305029 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125649753 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109308492 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181145374 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107873822 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262209248 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130663836 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.162475197 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.1289056 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.098238398 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107293972 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.18354783 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130655828 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109818475 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107490658 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134379978 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.23181444 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.243169019 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114291989 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242520727 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.189887738 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.108529822 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.191573603 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108411011 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.18932653 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109009817 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131487783 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101550331 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.799308308 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134729481 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109914734 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104731363 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.207622174 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099345482 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.100106292 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124046164 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097738335 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.801716356 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102557687 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121654477 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102106345 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.106499062 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.131559712 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108069477 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.125874696 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159477078 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.262677048 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115905554 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107112162 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.123007959 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158139029 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.125265808 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101436044 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.099428838 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124049943 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110205809 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104001218 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12468113 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169441174 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.177006891 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.22996625 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.525071926 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123494334 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100921827 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238599359 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121926611 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.301041008 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108941394 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.232181633 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18793057 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097539511 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.32791639 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.187957787 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.208387626 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.103744402 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.191650764 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098341099 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130599275 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.158552186 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122951061 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108663733 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.178325259 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.114867198 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.135319961 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.020239299 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100351675 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250774871 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.097898362 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.188691812 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101239023 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131518254 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.302762445 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099486942 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139264969 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.157413081 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128659588 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10088399 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.602050452 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.100576184 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134459791 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109439339 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.232531262 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.187715277 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107789812 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133994435 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11373206 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.183574736 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.234600209 seconds)
  done (took 45.420603374 seconds)
done (took 61.85775594 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.301147185 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.262859788 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.311236475 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.212646954 seconds)
  done (took 2.157588105 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.271800859 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.167541071 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.236714724 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.099240029 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.24902279 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.099252488 seconds)
  done (took 2.127013035 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.497925346 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.375372763 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.308912723 seconds)
  done (took 2.190151649 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.26797587 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.252109549 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.353713 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.410781347 seconds)
  done (took 2.40881739 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.312643298 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.130921273 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.128255113 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.213355202 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.25824761 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.231469893 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.151024839 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200570337 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.154020725 seconds)
  done (took 2.835946007 seconds)
done (took 12.719236315 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.152565538 seconds)
    (2/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.113611952 seconds)
    (3/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.395969521 seconds)
    (4/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.277255319 seconds)
    (5/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.343995881 seconds)
    (6/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.15774215 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.167281859 seconds)
    (8/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.161062888 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.112094392 seconds)
    (10/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.190605176 seconds)
    (11/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.147124006 seconds)
    (12/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.259940794 seconds)
    (13/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.197032641 seconds)
    (14/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.349629335 seconds)
    (15/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.344792766 seconds)
    (16/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.191670339 seconds)
    (17/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.238051452 seconds)
    (18/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.104058666 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.164106273 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.131605369 seconds)
    (21/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.325438173 seconds)
    (22/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.228632491 seconds)
    (23/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.306779399 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.230776021 seconds)
    (25/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.187894798 seconds)
    (26/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.239507733 seconds)
    (27/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.112313149 seconds)
    (28/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.161991692 seconds)
    (29/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.262406892 seconds)
    (30/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.134603131 seconds)
    (31/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.107073049 seconds)
    (32/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.241393219 seconds)
    (33/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.138684662 seconds)
    (34/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.110999765 seconds)
    (35/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.199269113 seconds)
    (36/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.151881511 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.17128387 seconds)
    (38/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.110535684 seconds)
    (39/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.218206866 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.138962575 seconds)
    (41/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.186412321 seconds)
    (42/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.238935146 seconds)
    (43/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.214421137 seconds)
    (44/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.123269882 seconds)
    (45/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.152980775 seconds)
    (46/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.185171773 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.136787094 seconds)
    (48/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.083283558 seconds)
    (49/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.135177565 seconds)
    (50/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.16635765 seconds)
    (51/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.139837775 seconds)
    (52/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.104346614 seconds)
    (53/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.081498699 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.158142758 seconds)
    (55/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.083736861 seconds)
    (56/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.088575233 seconds)
    (57/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.106530595 seconds)
    (58/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.126436697 seconds)
    (59/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.101069112 seconds)
    (60/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.172296902 seconds)
    (61/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.243092376 seconds)
    (62/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.104568041 seconds)
    (63/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.146922551 seconds)
    (64/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.11248819 seconds)
    (65/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.151121192 seconds)
    (66/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.23684981 seconds)
    (67/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.135564947 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.126975764 seconds)
    (69/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.218764457 seconds)
    (70/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.185795753 seconds)
    (71/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.082954851 seconds)
    (72/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.204952405 seconds)
    (73/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.193973655 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.159771315 seconds)
    (75/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.14517119 seconds)
    (76/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.083345355 seconds)
    (77/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.214173306 seconds)
    (78/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.151342192 seconds)
    (79/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.083392943 seconds)
    (80/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.081710845 seconds)
    (81/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.107426474 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.127324851 seconds)
    (83/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.084073344 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.10475761 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.152021933 seconds)
    (86/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.209990454 seconds)
    (87/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.219001536 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.104555294 seconds)
    (89/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.084203055 seconds)
    (90/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.129889973 seconds)
    (91/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.154961561 seconds)
    (92/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.08218314 seconds)
    (93/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.083309129 seconds)
    (94/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.216008848 seconds)
    (95/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.094799383 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.099664487 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.134413086 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.106229159 seconds)
    (99/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.190706251 seconds)
    (100/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.108910781 seconds)
    (101/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.083203812 seconds)
    (102/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.084752115 seconds)
    (103/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.207965179 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.141407855 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127304585 seconds)
    (106/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.083687969 seconds)
    (107/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.107765909 seconds)
    (108/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.084256014 seconds)
    (109/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.082953903 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.103975423 seconds)
    (111/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.084002316 seconds)
    (112/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.108968145 seconds)
    (113/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.107487761 seconds)
    (114/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.084805278 seconds)
    (115/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.084134269 seconds)
    (116/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.107123987 seconds)
    (117/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.08395095 seconds)
    (118/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.107351233 seconds)
    (119/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.083849034 seconds)
    (120/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.168265776 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.111882745 seconds)
    (122/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.101067641 seconds)
    (123/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.232191654 seconds)
    (124/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.116451632 seconds)
    (125/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.192759756 seconds)
    (126/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.131384714 seconds)
    (127/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.090048792 seconds)
    (128/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.090870303 seconds)
    (129/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.082744909 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.130642176 seconds)
    (131/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.084195309 seconds)
    (132/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.11042885 seconds)
    (133/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.111898084 seconds)
    (134/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.108185736 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.127070759 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.126908296 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.130992668 seconds)
    (138/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.085601183 seconds)
    (139/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.084421353 seconds)
    (140/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.201699748 seconds)
    (141/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.087624991 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.104954234 seconds)
    (143/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.215105883 seconds)
    (144/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.085537658 seconds)
    (145/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.0993812 seconds)
    (146/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.11033341 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.131968405 seconds)
    (148/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.110138119 seconds)
    (149/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.188775736 seconds)
    (150/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.179985663 seconds)
    (151/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.089003254 seconds)
    (152/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.087079276 seconds)
    (153/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.10160366 seconds)
    (154/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.216763745 seconds)
    (155/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.13003284 seconds)
    (156/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.082279129 seconds)
    (157/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.110093359 seconds)
    (158/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.084865999 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.099825309 seconds)
    (160/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.133444945 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.111710504 seconds)
    (162/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.083746713 seconds)
    (163/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.099992943 seconds)
    (164/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.10858898 seconds)
    (165/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.113558448 seconds)
    (166/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.089225282 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.130810668 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.131404357 seconds)
    (169/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.085233527 seconds)
    (170/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.083477316 seconds)
    (171/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.10426414 seconds)
    (172/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.219265754 seconds)
    (173/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.085061877 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.103676891 seconds)
    (175/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.109418306 seconds)
    (176/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.110820849 seconds)
    (177/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.083029672 seconds)
    (178/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.112218629 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.150137677 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.105326587 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103765166 seconds)
    (182/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.108726376 seconds)
    (183/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.08488519 seconds)
    (184/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.083436428 seconds)
    (185/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.084197648 seconds)
    (186/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.083444944 seconds)
    (187/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.108428739 seconds)
    (188/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.084539955 seconds)
    (189/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.101089084 seconds)
    (190/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.104424418 seconds)
    (191/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.10776821 seconds)
    (192/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.084586484 seconds)
  done (took 28.065317875 seconds)
done (took 29.077239512 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.218089479 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.131222768 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.109170804 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.108628475 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.207400651 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.119397278 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.147143796 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113370336 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.117888934 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.135624285 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.102814711 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121212018 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.108412384 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.206539228 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111891001 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.128712675 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102437446 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117635724 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.14863518 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.122159255 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.208111859 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103806084 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.118175866 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.128195444 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.18175362 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.132704914 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109297429 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.109714809 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.144962297 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.112450198 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.108817928 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.126663592 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.123893117 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.122725446 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.125933783 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112443194 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101547289 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089784779 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.13750265 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113152991 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.120802517 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.136115675 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111834345 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.101536296 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.137311537 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.112155216 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102843002 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.138246261 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101828855 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.109354078 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103809927 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.14896259 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110273584 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.099602686 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.126131807 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103027501 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.118312105 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.127571192 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12245649 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101522832 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.126900672 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103110636 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.113040969 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126075733 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112502196 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101794956 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.110316368 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.138728404 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110611894 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104089604 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.126528285 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111948763 seconds)
done (took 9.962518699 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107747776 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.148545151 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.201936698 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.215446711 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.129266495 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.115443845 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.142770982 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126100009 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.140187164 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123434428 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.138750964 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.159322828 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.184289259 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.143789572 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116578875 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.113403719 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.139243438 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110613209 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.213619097 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126502547 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.153333812 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.119081665 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.130526463 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.145245234 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.1062696 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.127632459 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.13389819 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115589383 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.105228276 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.149498958 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127073478 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.105642333 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.133931351 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.126659989 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123729352 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.141948569 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.117545247 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.114225403 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.132612671 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106707005 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113585573 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.148457455 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106810135 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.14048608 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116504139 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.12243489 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.138071943 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120885238 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.106944594 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.112584664 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.13368588 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134670968 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.142018271 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.126297668 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.117556465 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.143184693 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121548151 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.120702668 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.133061544 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.122276237 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106138084 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.105024803 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.13496867 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.128944248 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.133851173 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122487962 seconds)
  done (took 9.720551321 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127203914 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136436312 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.142772754 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117111249 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110793302 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124959951 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100639425 seconds)
  done (took 1.927647781 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.103049419 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.191246103 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.211446997 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.212143613 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.210702668 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.196198502 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.1509132 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102350583 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.135979659 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.137900746 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.190591485 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.246791089 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.11314139 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.143571053 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.187928641 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.127868648 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.21595084 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.104045098 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116536477 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.214860109 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118329699 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.157072202 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.115067302 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.101510188 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.211012092 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.103270949 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.265773575 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.120259977 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.137547503 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116206046 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115975106 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.206546378 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.211821896 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.117171038 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.110026661 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.211833347 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.209928562 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116936428 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.226082305 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.108105676 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.212492823 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.118187977 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117635519 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.14403723 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118361327 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.198971661 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.122303329 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115867323 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.14131773 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.194681865 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.137654592 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.18871399 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.141114422 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116590441 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.11125165 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.144488062 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124602181 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.116805039 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.223610176 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117980744 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.212163627 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.212156025 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.186471611 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.21315648 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126652278 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.219251969 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.207864025 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115430575 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110371735 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.144708916 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.188159495 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.142064175 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114093128 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.202097038 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12089882 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.214831971 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.187810632 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141800762 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.114962425 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.105308137 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.141358042 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103708609 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.203418678 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116037804 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113250818 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.146251388 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115907823 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.115652436 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.133493864 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125736909 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.115548895 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.140181082 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.122173228 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115655692 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146554405 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.216008908 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113458263 seconds)
  done (took 15.93440459 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.108676919 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.103933494 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.10780715 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130939429 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.103968612 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.103696574 seconds)
  done (took 1.744111975 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.143263612 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117227065 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.15323013 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119857323 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.169343236 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.222531045 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.226281991 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110583047 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.160496434 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129280846 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.221677796 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.197888505 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.223397708 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120606425 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.226381107 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118693927 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.225158617 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.14078 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127748509 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113842052 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.143298343 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121611566 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115958161 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.213612295 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118011831 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.14667965 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112234874 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.127002771 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.152506067 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113045119 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.120859847 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.144853822 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.110684247 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.110580523 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.227207386 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.134882343 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11472841 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119872042 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.145091322 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.121120089 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.225098312 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117157119 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123931726 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.146762259 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112962227 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.109638542 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.148565267 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112321133 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.228935458 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121034068 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119404827 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.14665894 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119865526 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120094211 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.137747811 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112267527 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.144434856 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.201938918 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.146884695 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.111582526 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118146002 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.145842295 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113789108 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121455244 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.146990457 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121970641 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.110179209 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.146589176 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117496805 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.118862951 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.148799674 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119561511 seconds)
  done (took 11.407746446 seconds)
done (took 41.793511353 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.546301223 seconds)
  done (took 2.628469974 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.9127665 seconds)
  done (took 1.998671889 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.685026309 seconds)
  done (took 19.801496745 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.535254831 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.610783294 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.029007893 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.18080193 seconds)
  done (took 3.442100553 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.059069221 seconds)
  done (took 2.155755986 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.299757996 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.268295182 seconds)
  done (took 1.657077023 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.755834142 seconds)
  done (took 1.85977807 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.543045179 seconds)
  done (took 2.633950202 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.353232528 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.179239469 seconds)
  done (took 1.631123757 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.632690788 seconds)
  done (took 1.733868567 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.77937945 seconds)
  done (took 20.881890612 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.241962077 seconds)
  done (took 1.345757266 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.28451939 seconds)
  done (took 1.391178369 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.755031691 seconds)
  done (took 4.863097057 seconds)
done (took 69.115875327 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.115218749 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.117681324 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.116431979 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.141060393 seconds)
  done (took 1.585754748 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.124249169 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118651645 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.121365238 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.143908962 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123410482 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.118034188 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143270207 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120920299 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116084735 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.146153432 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118736129 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116467183 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.148192222 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.11796759 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114908084 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.146509367 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122546074 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.118227329 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.144657023 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119210164 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118196465 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.146048229 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121784672 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121437148 seconds)
  done (took 4.158699953 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.114778761 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.10885228 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.108235937 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132831018 seconds)
  done (took 1.577902054 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.127550811 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129623092 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.154856625 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127327069 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.1295296 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.156258175 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116769657 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.113743889 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143833125 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126991739 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.13284707 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156351037 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129575974 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119666366 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.155824627 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112717143 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118013699 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155660522 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125583044 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125897547 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.14501293 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123993018 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.123062259 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.153906835 seconds)
  done (took 4.313429433 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.194041102 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129135741 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.1684025 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16229726 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.170646496 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.115269625 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.138802161 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.14980216 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.121956469 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.117490676 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.146343605 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.162733528 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.149564252 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120239208 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11767521 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.148836575 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.129036133 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.123041889 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.186639447 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.120536833 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.149973111 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130143988 seconds)
  done (took 4.26321816 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.120997058 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107886348 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.103142557 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.135859309 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.119330479 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.109918062 seconds)
  done (took 1.815751927 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.10839143 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.102342969 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.102225849 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128777457 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108294288 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.102567052 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.100189021 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.131212235 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102651352 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.101609063 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.128890701 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104316311 seconds)
  done (took 2.438004646 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.335742855 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107519954 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.1352504 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111000221 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.114198107 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.105102382 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.146023165 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.107060365 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.269743352 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.102735362 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.144146328 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.195752885 seconds)
  done (took 2.99304768 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208040915 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145212188 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.300460216 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.375438848 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164074677 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190149407 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.269242769 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192935668 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.20905268 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137508825 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248233743 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155500212 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179533876 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17606027 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16572239 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.157995202 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198150983 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189848644 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175687959 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227009457 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156923017 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193256527 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180194934 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17675785 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13415684 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189843011 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118637138 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126261048 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196852414 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191130154 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171472471 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174018995 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142709156 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220033948 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261467577 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170751847 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.317934781 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133563357 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.19776683 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.184271363 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258065766 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164893934 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187938703 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181649413 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127527088 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205551122 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151006628 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.203276705 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.129564937 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169067401 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178583894 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201294817 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.205199334 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135900406 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315650935 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162858461 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.170764613 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170045647 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212543565 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216812014 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166158483 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.148734421 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182680398 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210176252 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20373903 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142465763 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.19259669 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125473003 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191013805 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194244607 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208504058 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157868766 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.227041213 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158845551 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155967475 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199944918 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177641076 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203788701 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158527258 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.146687547 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149397758 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159442892 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12660312 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196784384 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148778076 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198509267 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158337271 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.344415704 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185502249 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184685446 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157231272 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186436971 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185354234 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146492645 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.104814084 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171746051 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.162455137 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182972983 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131611845 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183979834 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137339414 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.127168953 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178578856 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.121363981 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185862044 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.128691528 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190385899 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158169147 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.156761688 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163698585 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173391869 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.153978184 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194924207 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182506958 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159775701 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130832494 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215769368 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156337448 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.158169416 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177625133 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.21209406 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.143155603 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162381177 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163894601 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214812666 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138780877 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214474483 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134733705 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161454986 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.140931813 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187204602 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156833055 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.180625329 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128014734 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.176736718 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196220553 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.154418402 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137495764 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195979199 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132603304 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12271706 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166661846 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133904321 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.167338699 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.144437405 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.132975325 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181265877 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156451231 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184614042 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180514706 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13362531 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203729963 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131967873 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.159020344 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171714591 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117227669 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.201875565 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182298764 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157100946 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227017632 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.163791012 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217264082 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187035872 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130572307 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174723791 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154940334 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119342897 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189814719 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154103605 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189136953 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.179528108 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215016086 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.195299709 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.148742292 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175566741 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165901659 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.204254193 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178641987 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.143165936 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155410346 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191781001 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.118864219 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.15186538 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.127154796 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135275842 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157520338 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13374738 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203662343 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162203443 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211660195 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186033193 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138176509 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211371331 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124590015 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188691581 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.163648441 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16600879 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.182517681 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209121141 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164177653 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167395632 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159306449 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.147461174 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124165816 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.159593887 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165390436 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134126299 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162015363 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139019569 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211612838 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199055714 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147468549 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223686636 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192368185 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19561452 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.145610576 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.166910678 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196428652 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157553177 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.183163057 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163563428 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.156663078 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207629143 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140005602 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215018228 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182496604 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16278768 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216910934 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.154890994 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157932115 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147808909 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185932832 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138584364 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191796121 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146593977 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127948543 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180731455 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.136030937 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15179544 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183048786 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169837601 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169655651 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.189169466 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195831154 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126587331 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139165404 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188270037 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142991302 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.136495424 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171350241 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21252443 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144724639 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184530128 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174941232 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158050595 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.315598618 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22001578 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203403014 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135792941 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139190305 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189977805 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160936052 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190451248 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207609688 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141750966 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204433233 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159330921 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.168889896 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131691961 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147035833 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179040781 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.14177327 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.160659985 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.157184109 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.16921693 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18235534 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166071884 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158785674 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188683321 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.147793257 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.171489062 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141152028 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222609736 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15622917 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201768771 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152896769 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.193898212 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189464081 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151246614 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126330164 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.128641916 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209415009 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126720778 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18859878 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.202510327 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218403153 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163140732 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189853959 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137051376 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.124410416 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18458735 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145531273 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219751523 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163513775 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.135337848 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220411593 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.130558205 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157726279 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160985541 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307431707 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144871025 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203314694 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.114362832 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.298117972 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129106273 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158943917 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164145603 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198828123 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.132722887 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.18295066 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18781794 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139685341 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192777458 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134594908 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212864928 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219706625 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167154242 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20047545 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.141451229 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189189289 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186530457 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178323461 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16902418 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.145938033 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160875894 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212044499 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.211437158 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.131380507 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185399643 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159133817 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154265036 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200010803 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16291509 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192274065 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154471766 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162947031 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16407797 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125373822 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156632311 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.205940822 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159578212 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178961764 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18825849 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132142188 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126753772 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17582141 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154711779 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167131771 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128334195 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211546392 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127677122 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191679175 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180081234 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157580891 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155998511 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143197109 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158787387 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139368768 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169604276 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130532828 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.168380769 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210944769 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.12917469 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209515735 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189822825 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163095898 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1849993 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141769819 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.697532303 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.128871852 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179560143 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177791557 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215999856 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149864783 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189509028 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159565865 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146221373 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195561009 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174967526 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.23968048 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189760951 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.157781874 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130903813 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170364926 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138490895 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.161673371 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152902568 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186489086 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139606204 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.133120074 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.186395545 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139734678 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.175004314 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138288212 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213737343 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147600655 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212682891 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209118196 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137276395 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160277081 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201191747 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130348461 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.192775814 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201110251 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140440526 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175613479 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133902357 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.136512474 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212132534 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.123012581 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186202391 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161901354 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184953661 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159901188 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.132298616 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19021337 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138589331 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188836351 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126207897 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.182045322 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15975098 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159889494 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126534877 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157156651 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188310337 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.152833258 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153991121 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.171648761 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21376679 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123704488 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131180829 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304356988 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187987192 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189972435 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.16961144 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134911074 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141981905 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18451098 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.15505084 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190457814 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.128895424 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156858208 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.129834365 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.16725915 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.17609362 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158752191 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205332516 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158506149 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221742979 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132022831 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.319883739 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136817509 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18778354 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.120742793 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.156934603 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143019397 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131720203 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169909138 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214833825 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180995106 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.181905112 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.145187111 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133815484 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.154053006 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130358992 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193822632 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152684984 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187250178 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145549703 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.10681922 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171937541 seconds)
  done (took 84.28380101 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.167795356 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.153730166 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.168681685 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.226837893 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.196503941 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.29922339 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.235201631 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.26524474 seconds)
  done (took 2.914947991 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.121731937 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.160266209 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.141693263 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.146143326 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.118126672 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.451122962 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.158143683 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.119719694 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.165782475 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.163616434 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.142927862 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.632124913 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.120379473 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.14605954 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.128765159 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.118711508 seconds)
  done (took 4.2314979 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.600426798 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.601374914 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.382135061 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.286863899 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.237217264 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.183032188 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.824200211 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.701226254 seconds)
  done (took 14.022370496 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.148766472 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137476124 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.321896076 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.267711513 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.154789064 seconds)
  done (took 2.24017183 seconds)
done (took 131.933283484 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.123808903 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122757777 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121940304 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.155162299 seconds)
  done (took 1.718712699 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.184518309 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.095143784 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.096353089 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121433135 seconds)
  done (took 1.70126017 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.456457116 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093838618 seconds)
  done (took 1.783112319 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.151016174 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.150716538 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.167107972 seconds)
  done (took 1.688251581 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.145718699 seconds)
  done (took 1.356806137 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.128745663 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.11990957 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.240830373 seconds)
  done (took 1.705045111 seconds)
done (took 11.16480095 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120566656 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.421244156 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.438347081 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134677247 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.710831069 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.426692511 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.029755614 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.178728694 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176806947 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.137515642 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132930141 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.688054866 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.049179016 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.367828592 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.001558447 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.482362095 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.693099293 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110626982 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.147009338 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112020683 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.007007102 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.138712923 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112595526 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110972306 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.718909072 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421471233 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108426041 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.495025299 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109722744 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113250018 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.428972302 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110840152 seconds)
  done (took 17.638350964 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117944174 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174089372 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149496816 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112200264 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111885637 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.139955699 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122064663 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122646212 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.206378965 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108577162 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.162053095 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.11005178 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114803572 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.137934676 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136388231 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109456923 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.141572128 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113054645 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117123179 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.139498649 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.134549087 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107778501 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.140066824 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114119945 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109480982 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.159768334 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110523952 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121606072 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.137427638 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114871321 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114334377 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110033765 seconds)
  done (took 5.34091638 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.159429566 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18028567 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149325076 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.148064737 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.191383638 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.113483475 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.22219989 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14786311 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205228402 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112630567 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13237802 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.139096992 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15114707 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.112901255 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.166245042 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110144322 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.112853047 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.141681059 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118702163 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112015217 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.162952714 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109355831 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111558837 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.14215505 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111016911 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133524684 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.139940942 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123562326 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108509556 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.144001882 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116032104 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109571361 seconds)
  done (took 5.657605041 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.125173525 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125911697 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132912663 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.166029839 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.123438064 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124400643 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.155821569 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121912545 seconds)
  done (took 2.29858046 seconds)
done (took 32.149383085 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.136372767 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.132666832 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134069289 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.155980035 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.194639198 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.14788602 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.129358607 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.118209815 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.155500289 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.133853378 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.110079093 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.116522822 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.162242906 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.121399531 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.225827362 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.125473492 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.234733688 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.197143215 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.147594401 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.125327479 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.119101327 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.231917341 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.121842917 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.147002245 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.20541172 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.112544736 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.216755215 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.120045478 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.150513972 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.113213462 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.225650938 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.122040748 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.117215732 seconds)
  done (took 6.209479976 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.212344282 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.11982499 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.150492703 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.119017395 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.120192071 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.148331094 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.215837892 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.14809918 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.118427145 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.118440661 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.117802532 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.2279923 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.125813999 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.145783131 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121046541 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.115071382 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.248190901 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.120097296 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.110048954 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.126509025 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.114756026 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.117884497 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.258708089 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.113956505 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.117961156 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.149296481 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.122289194 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.12310553 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.150485243 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.122921651 seconds)
  done (took 5.553669505 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.127315686 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132124432 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.135815049 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.216070239 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.145927378 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.162217507 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.141981365 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.135776205 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.174182427 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11301498 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.127401234 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.180395138 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129590749 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.122872881 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.147756049 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.133803338 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135283961 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.143398843 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121230382 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130305546 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.163082991 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.132267492 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139218016 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.154933664 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.111404279 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.118592495 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.15301991 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.128237924 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.119755694 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.156610517 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.11568269 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116162947 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.141828791 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.15050717 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.117599311 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.155724296 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140007888 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124131519 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.156821769 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.144370202 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.116418244 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.144833599 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140447661 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169470488 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.144537976 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126586424 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122985981 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.156558196 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.112262642 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130435767 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.186473581 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.118459773 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.132871691 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.143979449 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.111955059 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.121208646 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.112814522 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.147403192 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127997426 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.114979631 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.167582844 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120831563 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.122722529 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.145955158 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.124321407 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.111110316 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.141344858 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118719469 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.140026086 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.149136765 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.152330115 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.112658828 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123899511 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.155629927 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123586352 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.123736802 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.143527513 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124671075 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122680056 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.14923413 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126384696 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.114672285 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.146927763 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.131504919 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.133682185 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.156784369 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12736763 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124781736 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.145451879 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115751163 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129754802 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.112725742 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.150297149 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.126280496 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.11232632 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.14797311 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126368324 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12305457 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.141358673 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138973508 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.116529425 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.141825593 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.139582886 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.117609913 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.149108191 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.124930053 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.154428544 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.145631901 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125780954 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.126740214 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.112272463 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.152103344 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.117416362 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.111270157 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.163040855 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128645926 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.118900649 seconds)
  done (took 17.066943789 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.331961757 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.315067792 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.182248041 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.315783381 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.162043417 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.209114537 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.310382198 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.312571738 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112288463 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.181651845 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.166182243 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.281835519 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.1458763 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.140943703 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.314061614 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.365107861 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.17445741 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.150352582 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.181774331 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127004852 seconds)
  done (took 5.718315255 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.132759526 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149374638 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167876382 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.143122522 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.123868227 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.1598391 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.112457128 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135061057 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.155160815 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124817176 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.115545836 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.160738148 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126814439 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.130219235 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.15974881 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.155275842 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.121401132 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.148709489 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.137426769 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117566887 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.137632631 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141156509 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121683827 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.16735812 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.13232092 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.125211951 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.143499763 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119963067 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.120788824 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.152343108 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119166784 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.131059396 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.150560189 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109373607 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125604061 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.129092491 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.151030661 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.116813813 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.118032746 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.149242249 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130398185 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.126832552 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.1523413 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.104007778 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.132816236 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115728529 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.157539279 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.127014663 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.109661794 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.130573716 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.157617102 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.12714571 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.119897436 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.16692176 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.120604558 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.129360679 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.15638817 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.128428586 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.118816208 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.142985217 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.113422299 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.117860419 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.151512877 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.129060551 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127391416 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.163810087 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.131128556 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.113483974 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.147507209 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.120499669 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.11835215 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.128593066 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.137855996 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.122733259 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.119535974 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.158660805 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122392441 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.097906322 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.153701737 seconds)
  done (took 11.855430199 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.143346596 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.127202527 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.132249492 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.182381189 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.130608611 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.118805907 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.153086634 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134663778 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.126615043 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.163766275 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128061237 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.12657975 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.16745342 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.124520118 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121812825 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.161986309 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127553044 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.152291985 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.165489467 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.14175531 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.157439387 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.12134561 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126825893 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.1276134 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.177380706 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.125342739 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.170611651 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.129955728 seconds)
  done (took 5.206245943 seconds)
done (took 52.832121914 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.373330148 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.581662824 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.342678656 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.339778203 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.379557498 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.346193754 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.345594859 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.338894356 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.832601526 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.318041633 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.344204574 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.33989281 seconds)
done (took 30.119727467 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.359010224 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.871438116 seconds)
    (2/2) benchmarking "String"...
    done (took 1.618704591 seconds)
  done (took 4.725880535 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.3325494 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.333733405 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.554870271 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.329323865 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.342283502 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.349294554 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.347124837 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.337555142 seconds)
  done (took 16.82117273 seconds)
done (took 27.465330621 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.399905684 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.5332597 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.582673929 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.334876875 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.334552786 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.348473482 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.338407402 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.365004431 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.340809707 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.344915129 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.770111774 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.606489699 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.331413464 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.708482586 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.348961426 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.342017973 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.346692496 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.583415043 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.335656706 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.37199406 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.31392181 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.329310383 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.341981339 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.344841115 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.341673416 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.34842001 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.381905143 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.346478675 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.533426012 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.364817001 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.372968684 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.341359633 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.365890566 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.345074571 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.344375773 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.340462026 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.528712274 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.344637396 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.319633912 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.336186893 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.53482221 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.340599726 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.337318525 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.33716539 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.34129636 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.392058297 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.321184111 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.446350942 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.355811797 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.347322273 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.344321557 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.725572098 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.355852779 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.345972265 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.337075809 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.568918615 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.361159251 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.399452445 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.365123265 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.34036916 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.335012628 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.33464092 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.344086663 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.332785327 seconds)
  done (took 152.430530067 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.334773954 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.335115097 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.336211519 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.400168358 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.338162037 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.333305309 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.335203845 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.333230469 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.332941068 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.362996825 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.338386862 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.334534252 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.338050742 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.294739126 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.335910825 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.350843452 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.332127161 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.345334848 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.338255091 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.331992644 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.329088371 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.335012818 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.346314426 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.331128946 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.333041738 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.412591866 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.360043402 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.334618601 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.343652085 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.331709523 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.327435653 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.333490808 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.956925568 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.195023623 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.334556617 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.348789553 seconds)
  done (took 84.971051044 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.330146762 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.329976342 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.332416035 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.360987794 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.332550131 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.916815484 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.919922324 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.870624271 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.765948752 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.730660255 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.635701235 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.338290957 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.426446839 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.342312689 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.331604488 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.346758188 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.356569903 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.331527186 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.332430185 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.92024047 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.345826227 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.523060023 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.509545135 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.34201259 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.361142686 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.732745629 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.32749966 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.367827112 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.667267145 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.38256254 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.331387844 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.733829295 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.273029503 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.446841128 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.331794074 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.366329061 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.331255241 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.619714734 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.337157019 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.332666504 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.336606773 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.335700858 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.027754168 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.336864446 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.911496115 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.330657258 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.31852242 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.339005686 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.334193786 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.362967094 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.337757355 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.06274243 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.338199457 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.334443882 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.337412458 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.33480585 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.333406343 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.367552004 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.361051347 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.432310565 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.335280556 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.340454348 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.3679301 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.335067397 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.370221478 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.329894851 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.348568834 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.3957436 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.461779141 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.913792842 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.33395465 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.433246925 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.453345269 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.331940624 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.333119248 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.335472668 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.332258498 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.444510436 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.333222541 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.745828773 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.511046276 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.348808304 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.698504878 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.435075426 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.333452014 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.718875424 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.337061209 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.331549917 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.123880099 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.333913851 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.430708626 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.334285535 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.332789008 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.330507489 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.33458354 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.745118517 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.914589426 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.595392385 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.338348638 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.577561654 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.340294739 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.754452523 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.893276417 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.024196169 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.33756891 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.449024482 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.506444403 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.346101776 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.332188913 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.681142136 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.334896402 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.392811743 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.337942272 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.735487299 seconds)
  done (took 380.863535914 seconds)
done (took 619.493542193 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.218131733 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.15521567 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.314072661 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.170508955 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.151179439 seconds)
  done (took 12.235365373 seconds)
done (took 13.463751281 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.521084202 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.522339248 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.391418961 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.521977098 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.36342274 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.540704333 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.507942953 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.35882394 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.441695443 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.411442813 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.438353437 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.38293349 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.365241865 seconds)
  done (took 19.993738361 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.619346103 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.347953661 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.397128971 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.591427636 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.374776516 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.629436379 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.645610497 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.343807393 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.486748036 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.348843488 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.348462043 seconds)
  done (took 19.360784128 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.608076416 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.340771532 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.392961722 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.607481662 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.373476541 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.610199666 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.649232391 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.342643878 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.483948318 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.349390457 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.345751924 seconds)
  done (took 19.326347429 seconds)
done (took 59.909202222 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.370587869 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.430175968 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.364716081 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.348561953 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.342286778 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.346283929 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.350246347 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.3434622 seconds)
  done (took 12.116910583 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.345512875 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.343466957 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.341067305 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.343856356 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.34381493 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.343343688 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.343257991 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.346788801 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.342595616 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.342452831 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.34559781 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.34151638 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.343773358 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.339782266 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.346147016 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.345330906 seconds)
  done (took 22.726743295 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.350445961 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.345309625 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.345243698 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.34293696 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.347115312 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.346833153 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.34894741 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.345525353 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.34494916 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.345491427 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.345728618 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.346426938 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.347680431 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.341824549 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.343473771 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.347533954 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.344943264 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.345283559 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.351268143 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.347478445 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.348818162 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.3468421 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.34283685 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.34611007 seconds)
  done (took 33.535979429 seconds)
done (took 69.604155029 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.345727764 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.337815714 seconds)
  done (took 5.910796698 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.409174847 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.410046249 seconds)
  done (took 4.0476213 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.348727325 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.347604914 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.346466607 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.352755694 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.351107034 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.346170594 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.348097474 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.348605534 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.346414296 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.351348466 seconds)
  done (took 14.71465858 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.345715869 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.346918182 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.346459457 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.348588073 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.34717527 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.350362957 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.345703428 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.349170386 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.348561287 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.346177523 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.34746889 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.346939584 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.346296591 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.352375957 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.34922444 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.34727208 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.347132542 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.347774733 seconds)
  done (took 25.487251022 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.364228717 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.373569317 seconds)
  done (took 3.966971204 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.490408595 seconds)
    (2/7) benchmarking "second"...
    done (took 1.390831812 seconds)
    (3/7) benchmarking "month"...
    done (took 1.462501832 seconds)
    (4/7) benchmarking "year"...
    done (took 1.456251337 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.391716617 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.370973404 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.388782746 seconds)
  done (took 11.179126314 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.351398474 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.558252926 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.685979301 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.868588429 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.351332632 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.35489313 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.164988942 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.353624129 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.354901737 seconds)
  done (took 15.273488382 seconds)
done (took 81.807443924 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.334896051 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.387268757 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.351486974 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.362443653 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.644745695 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.34111468 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.339979989 seconds)
done (took 16.992215575 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.320061751 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.327159973 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.336818053 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.352155199 seconds)
  done (took 10.562000902 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.35032496 seconds)
    (2/2) benchmarking "read"...
    done (took 1.633167553 seconds)
  done (took 5.211729743 seconds)
done (took 17.001267763 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.351552334 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.348356072 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.349387639 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.350528501 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.354640328 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.350788808 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.348107221 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.349203407 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.347737573 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.348285576 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.347095603 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.350262793 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351870093 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.349003809 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.349613789 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.35062414 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.34994518 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.350578866 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.352465896 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.354962248 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.351407295 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.35067215 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.349816867 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.352259442 seconds)
  done (took 33.634648726 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.350296431 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.352398727 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.351751583 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.349219525 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.350383105 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.346929279 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.349242481 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.350653874 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.350815192 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.35814343 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.348879279 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.346014098 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.350545162 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.35084896 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.348870363 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.348828222 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.354637307 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.350288022 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351186006 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.349974271 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.353749609 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.353461739 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.350850734 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.350359938 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.359394221 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.347933536 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.35275117 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.354995718 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.355381196 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.352847053 seconds)
  done (took 41.771986693 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.361922166 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.358783598 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.353692924 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.35408178 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.356119553 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.350809294 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.356625333 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.353239263 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.355449675 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.355616123 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.35198597 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.354630307 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.353618673 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.353063563 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.353464867 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.355958734 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.354509727 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.349273133 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.350587888 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.352432784 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.354986222 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.348957511 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.352363161 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.348472152 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.351367765 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.351217703 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.350980604 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.350619867 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.354031452 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.352043741 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.352836693 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.352087095 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.351747538 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.35217382 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.354312257 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.350436193 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.35902028 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.356763766 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.353181601 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.350795568 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.35091139 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.35572156 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.353547424 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.353154685 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.355017883 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.352911181 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.35149014 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.355929053 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.355483391 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.356754141 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.356404453 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.354278912 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.354280448 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.352584293 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.354104578 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.353237366 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.352749976 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.356770344 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.354014678 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.353476921 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.352867865 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.35249842 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.354071583 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.352652584 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.353987321 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.354026284 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.354261386 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.359187285 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.356977144 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.35345557 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.352714784 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.351623316 seconds)
  done (took 98.702888718 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.352189001 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.360485943 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.352461554 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.353668029 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.353210357 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.35543294 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.354482599 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.353286896 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.354780103 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.357545646 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.354215092 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.358117103 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.354187569 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.35661198 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.353889194 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.354933651 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.358529786 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.357261075 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.353678321 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.357780446 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.359208854 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.356300928 seconds)
  done (took 31.05575312 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.36091466 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.357188337 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.357128252 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.356183057 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.36143608 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.358903601 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.354245248 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.362309709 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.356893614 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.354215134 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.356983198 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.35670409 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.359513881 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.352962225 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.354778074 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.365565762 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.353693548 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.361500956 seconds)
  done (took 25.683857975 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.359781529 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.357032524 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.35699621 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.355540145 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.36088807 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.356474436 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.358070799 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.359581306 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.356877897 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.357441274 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.359185288 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.357477571 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.358117166 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.354780695 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.362106618 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.355513505 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.356157836 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.354451757 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.359123168 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.358223119 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.353659611 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.355876073 seconds)
  done (took 31.099664518 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.357374872 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.354126689 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.35538868 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.359531221 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.357864858 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.35528343 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.356373883 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.357987333 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.358777219 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.35654578 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.361867845 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.355747328 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.359691439 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.358116762 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.361358014 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.355806833 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.357304507 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.355917507 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.358087652 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.358150392 seconds)
  done (took 28.387182397 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.356435124 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.359520985 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.360449823 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.359472864 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.361522058 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.354834132 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.357651223 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.356334949 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.357359242 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.357177283 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.355321791 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.362115148 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.355609342 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.359056752 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.354679896 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.359142646 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.3566142 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.355589572 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.357006104 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.360399434 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.358724875 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.358265635 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.360116531 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.357670777 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.359199556 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.360781388 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.363184221 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.357602268 seconds)
  done (took 39.264927249 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.357213753 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.358282815 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.359449178 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.35691195 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.356500836 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.356129665 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.35621128 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.356131808 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.359936798 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.356477793 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.356940656 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.358661975 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.369029696 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.360058973 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.360705457 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.35928835 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.36026949 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.358938612 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.359151285 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.358184124 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.35695935 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.358151221 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.360546683 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.360718065 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.359429939 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.357284939 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.358795629 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.361476795 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.358607268 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.358172051 seconds)
  done (took 41.999685063 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.380753484 seconds)
    (2/2) benchmarking "in"...
    done (took 1.379072183 seconds)
  done (took 3.996403885 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.36920621 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.359626277 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.358773064 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.35891149 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.356634391 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.361061454 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.35865435 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.357481772 seconds)
  done (took 12.116298812 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.351026865 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.360787256 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.360213499 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.357425854 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.357118022 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.350905143 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.361739029 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.362509606 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.348784213 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.352198238 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.354510347 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.356196111 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.353239406 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.35660656 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.351158444 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.354873494 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.358885241 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.356713559 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.355608278 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.35915261 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.355269389 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.354708685 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.356694344 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.360977134 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.35183657 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.359092821 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.361104037 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.358739821 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.354034645 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.357689067 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.35309398 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.359621156 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.359116224 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.35675346 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.357883343 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.362143675 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.362067323 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.355266224 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.358222773 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.362049917 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.360471559 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.360036038 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.352802827 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.3591659 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.355502617 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.360815872 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.362265555 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.358734337 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.355104615 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.356629268 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.367123115 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.354018525 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.364230556 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.359401993 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.360071254 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.366215116 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.370954215 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.360255885 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.358909961 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.364280369 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.369499595 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.36636625 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.358916072 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.366412323 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.368116326 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.371349167 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.363926622 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.368234574 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.362906186 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.361508589 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.363576972 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.36844282 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.370388871 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.368200588 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.365704852 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.365405808 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.355789013 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.363196184 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.366627778 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.363969514 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.364433021 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.361508744 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.36707502 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.374254836 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.35753344 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.36879711 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.365198369 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.364126199 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.35854775 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.364048794 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.368901129 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.367223301 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.35732015 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.356678178 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.363798097 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.3685425 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.358670447 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.362290728 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.362043951 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.367582111 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.361488941 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.358348673 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.36667556 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.367083301 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.363948484 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.363291077 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.365956082 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.35676149 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.364142396 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.369318828 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.357434226 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.354961597 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.358371261 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.360685109 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.356351604 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.361942058 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.364970643 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.356306289 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.360329136 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.364976026 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.361559631 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.370689219 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.364830475 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.361904759 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.362583905 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.36543778 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.362783011 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.360325604 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.368423676 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.36235452 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.36090238 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.354398577 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.361245297 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.355228694 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.363372949 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.356456425 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.36467618 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.360747171 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.361193687 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.358215385 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.357479778 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.356497834 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.357439994 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.360977873 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.366481373 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.35744728 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.363118068 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.359861027 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.358668736 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.360220803 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.366797635 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.363222164 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.356308138 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.364603177 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.356926668 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.366269761 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.35749577 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.364882134 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.363003518 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.363208757 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.364066526 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.360337339 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.359429498 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.363349821 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.363380781 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.359629851 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.364837203 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.366663844 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.365252872 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.356038993 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.368044022 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.35656605 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.359984891 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.366440007 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.366927548 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.364211795 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.363244163 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.365315843 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.364468705 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.366980172 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.362780212 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.363243281 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.364823089 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.366974823 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.368999382 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.368977916 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.366130559 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.358527215 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.357642609 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.363941426 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.360775539 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.373077732 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.370917566 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.3694948 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.360562333 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.36729777 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.359351508 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.368620139 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.364164624 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.368175859 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.366749996 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.367319698 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.357934992 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.366548533 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.361372353 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.366032772 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.359683863 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.367559111 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.367721966 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.365829763 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.368669117 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.359960027 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.360722468 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.372366266 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.365344569 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.368465605 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.358972548 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.36947013 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.361059184 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.360419974 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.369563563 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.366807559 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.367113585 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.371592163 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.361903644 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.366605816 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.366787959 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.362188096 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.371525658 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.36532323 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.365347609 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.372221825 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.367657915 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.363190603 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.370711367 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.36673756 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.363345395 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.365640529 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.376389411 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.371924921 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.367748067 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.374655401 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.370772772 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.369727193 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.36792697 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.360968016 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.373231213 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.370618223 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.373531442 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.3625493 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.374359056 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.365339989 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.369094577 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.364183164 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.3647156 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.362166351 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.36703058 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.37288342 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.370466634 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.364973099 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.368059559 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.372529423 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.37223407 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.364484724 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.377679746 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.3678657 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.364491055 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.365997252 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.365987215 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.373823692 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.364012379 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.370625028 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.363758778 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.375151105 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.378945077 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.371058048 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.371013241 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.372898289 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.370490643 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.370731565 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.368368758 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.363706985 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.369934938 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.370197326 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.369852002 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.378729262 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.366612915 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.372808192 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.367209443 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.370686752 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.379955318 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.373902455 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.372438773 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.374764513 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.375473035 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.376790004 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.369389444 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.376645859 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.369813692 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.374037461 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.3709978 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.366531333 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.374303731 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.370490676 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.373318894 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.36683045 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.374778741 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.372765718 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.370714335 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.379335945 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.369414763 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.381136795 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.375104811 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.375313733 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.375148799 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.379756619 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.37995887 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.375033978 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.38129615 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.37894522 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.366895191 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.368327589 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.374385324 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.380039378 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.380812045 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.368360633 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.378925673 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.372374788 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.376993648 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.37704937 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.374481804 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.375736363 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.378993142 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.376856356 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.373737486 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.372530535 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.372079819 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.378581371 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.372386793 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.379354814 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.367567378 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.373111251 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.377901394 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.372276918 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.372522148 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.375668344 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.380850924 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.372412793 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.378517285 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.378966148 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.374131221 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.377357912 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.375508155 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.376093662 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.380945868 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.375290548 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.383526335 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.379138679 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.382684107 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.37011452 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.377074444 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.374525929 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.371364121 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.368431426 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.371074599 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.375951296 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.368050825 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.376710019 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.379738453 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.370530097 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.36951309 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.378911512 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.377764017 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.378057585 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.393900826 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.375805802 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.379376645 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.375245035 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.371419306 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.378070358 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.377394328 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.370613446 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.373862923 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.375964128 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.38053765 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.374115603 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.379771843 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.372298208 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.376916284 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.37897647 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.376796621 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.376330456 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.378040095 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.370433057 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.376080777 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.378197753 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.380840038 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.373717395 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.372197936 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.371126794 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.379935487 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.377995012 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.37264401 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.378529509 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.383540624 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.372065575 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.370972902 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.378754998 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.368040169 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.379480412 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.37749176 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.381307455 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.373053757 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.375415688 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.3724426 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.381455502 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.374511697 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.376260857 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.381834391 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.384422243 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.379243287 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.373224922 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.382048522 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.374379834 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.373136051 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.386709768 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.375053174 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.383754696 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.37725601 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.379548965 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.376682692 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.384819197 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.384007689 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.382057941 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.37584848 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.374021236 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.382358462 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.38340352 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.382135172 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.380997141 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.381234615 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.375851891 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.381045108 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.380905894 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.375094221 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.373421519 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.38100317 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.378032385 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.379046195 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.38135143 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.382186569 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.386046973 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.378602237 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.376068086 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.382632109 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.386580837 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.383707058 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.376115086 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.380241002 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.377594095 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.386108463 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.384541229 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.375479603 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.382164084 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.380051904 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.384449576 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.381930016 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.382606176 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.37822531 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.388702639 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.390662292 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.376655973 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.382279665 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.381225526 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.39063609 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.390884978 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.384682396 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.374733115 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.377136298 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.379209189 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.379455582 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.385604908 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.385229373 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.382223048 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.382709511 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.388044818 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.386105646 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.389958335 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.386070379 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.380027891 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.392163709 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.379777873 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.385263294 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.384442958 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.378051503 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.398141897 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.38243376 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.378158901 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.382798303 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.389965197 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.384678969 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.376856475 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.379866515 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.378737833 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.384001846 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.383912004 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.374563787 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.378200381 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.385640299 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.382109662 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.383401038 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.378381898 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.390619399 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.388633559 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.378437148 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.379966315 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.381663549 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.387867518 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.384309531 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.386312908 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.377796818 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.381380861 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.389099534 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.384300499 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.386706192 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.379854176 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.375900476 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.385583588 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.376750578 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.379074919 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.379306103 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.385631009 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.37905308 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.376120473 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.385021476 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.384323478 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.381771475 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.393815329 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.380854722 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.374096038 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.377206202 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.369096254 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.376078759 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.374257066 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.375495902 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.376961691 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.377711445 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.375237512 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.368530373 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.372204479 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.372117583 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.380009254 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.376588815 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.369830411 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.363578665 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.371718859 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.369260012 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.371594314 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.368506291 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.369867916 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.371275371 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.35867249 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.370593848 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.37086442 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.367190207 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.368478051 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.365903464 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.362191084 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.362336457 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.362817835 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.368687966 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.364864 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.362229555 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.357780132 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.365021189 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.367567614 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.351168053 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.349117754 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.35359303 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.360412071 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.362051655 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.365970457 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.359431489 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.354845728 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.35849871 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.354500804 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.347204279 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.35774665 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.355515983 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.352473961 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.353044783 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.357053658 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.358146088 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.35579275 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.347433911 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.359309248 seconds)
  done (took 817.763305221 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.35607043 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.349704698 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.351474226 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.35126958 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.351450855 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.351023794 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.353123942 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.352461867 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.352930044 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.353807326 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.35042667 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.352669206 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.350567687 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.349649789 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.350102266 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.354086732 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.348370605 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.349730688 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.349068494 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.350635536 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.350067243 seconds)
  done (took 29.618747292 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.3487164 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.349729784 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.347260131 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.349134023 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.346404395 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.347937538 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.345976115 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.34868129 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.348469557 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.346173394 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.346578172 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.344215496 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.347595119 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.344850884 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.342567398 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.344381479 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.342121161 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.344687798 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.346891529 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.343138317 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.345131403 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.343495543 seconds)
  done (took 30.849112555 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.343366469 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.33950407 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.33595376 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.343281733 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.342311119 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.339374806 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.337908513 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.342598492 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.336742685 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.331786147 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.329304723 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.331544461 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.335658533 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.343510059 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.331849533 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.341370898 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.336158444 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.335367564 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.339590593 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.337321623 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.336728445 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.339175831 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.339548448 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.325881482 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.334801481 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.337037799 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.33796773 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.337171157 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.329933527 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.338418633 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.339961921 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.327343912 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.331197881 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.331508964 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.328182388 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.33979425 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.340015826 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.337887792 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.338046533 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.337758232 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.349006782 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.337969576 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.337252031 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.340191305 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.337876912 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.33272686 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.341748956 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.336731607 seconds)
  done (took 65.409713675 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.338416648 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.340059454 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.338529149 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.335324821 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.337675369 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.338951728 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.339660538 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.33693678 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.338529833 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.341387753 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.338570775 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.34018974 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.339408095 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.33817237 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.340129009 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.337328092 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.336514026 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.336862331 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.339346136 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.340661656 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.33873764 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.342495884 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.339366491 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.337529512 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.342081885 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.338801978 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.339064722 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.340188743 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.339456194 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.338538183 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.339775313 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.339662234 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.340169014 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.343532504 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.339202705 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.338712157 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.338569921 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.337389178 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.338064959 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.338158419 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.33719965 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.341113052 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.336036246 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.337029706 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.337091347 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.337942274 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.337662771 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.338861446 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.337192093 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.336523639 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.335633437 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.334141741 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.333930495 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.335551069 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.336906131 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.33747383 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.337745027 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.33619883 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.334421481 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.335253638 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.337469154 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.333304832 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.33375686 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.335787165 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.338333484 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.335761627 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.335775122 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.33331354 seconds)
  done (took 92.202784599 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.334004323 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.331050222 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.331898552 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.330001933 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.330474516 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.331955054 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.330704062 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.328397656 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.327907383 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.333169747 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.329022011 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.328478915 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.329590443 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.328484682 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.324973956 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.33049552 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.328206711 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.33053711 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.329332896 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.324391629 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.322562927 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.325994798 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.324814009 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.324882489 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.329525184 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.321926999 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.322514195 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.326244947 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.321219611 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.326198572 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.323781455 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.323729594 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.324891858 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.326837808 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.32187986 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.319982429 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.321359632 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.323473799 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.32296891 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.323429521 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.324436631 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.326192529 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.325704605 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.320756365 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.32732417 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.325856508 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.323012216 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.324324666 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.325878086 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.324603027 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.323397315 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.327919275 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.322464758 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.319458907 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.326767913 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.327753364 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.32329697 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.323557656 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.323718161 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.325541127 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.324361033 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.32519743 seconds)
  done (took 83.432981832 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.330405459 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.327968566 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.329016077 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.326848223 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.32735532 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.327293685 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.327764499 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.324626357 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.326500393 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.323844597 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.325404594 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.327275592 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.332953939 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.323360827 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.328554199 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.32363311 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.328101705 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.325747603 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.328772792 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.326272849 seconds)
  done (took 27.756388315 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.328297512 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.329039621 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.324503273 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.325935761 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.32644873 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.324723993 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.32904033 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.325198059 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.32591714 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.330204343 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.327842324 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.328922241 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.330135592 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.334035866 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.330956678 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.327488893 seconds)
  done (took 22.45598792 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.329244942 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.329659902 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.328453524 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.328937608 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.330903724 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.330913782 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.330124577 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.328291932 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.331903756 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.329831707 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.331661066 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.332419656 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.333614203 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.330254751 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.33209728 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.331911885 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.328814178 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.332762925 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.333101802 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.32873714 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.333353944 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.333858324 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.332833588 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.333575932 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.332282219 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.337216128 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.332469721 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.32915968 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.335367784 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.335885377 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.335368027 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.335098256 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.335786944 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.336232977 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.334933614 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.335973646 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.334691719 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.334888225 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.33278023 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.332578691 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.332839616 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.333704433 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.332788961 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.333421967 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.334332261 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.332798094 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.334589647 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.33266748 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.333382906 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.332360592 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.333390494 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.334009837 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.334721529 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.330347905 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.33231348 seconds)
  done (took 74.511561412 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.334359799 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.332732636 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.331128339 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.333070107 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.33349912 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.334387947 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.336165764 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.333156651 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.330449149 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.332197405 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.330684662 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.334058451 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.334760438 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.332064688 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.331109147 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.329573042 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.331904216 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.335225426 seconds)
  done (took 25.211707927 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.334366306 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.334204695 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.336351424 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.333372598 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.333354124 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.33565092 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.334778944 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.331254609 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.335421913 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.336537818 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.334049168 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.335917928 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.333021033 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.335458136 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.334059797 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.331956885 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.335724085 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.333491681 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.332530885 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.333554356 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.333365899 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.334791526 seconds)
  done (took 30.57514094 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.327690934 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.324418895 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.326023 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.341750318 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.339489594 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.3265574 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.326402414 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.325450433 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.34797354 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.367050294 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.363614484 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.339338071 seconds)
  done (took 17.276513377 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336633853 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338031954 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.337165877 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338102129 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33632868 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.334563772 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336369839 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336653753 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.337938171 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335949787 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335693594 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338815495 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.336857767 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336444348 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336197893 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338488746 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33793964 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336821312 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.336720411 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.33328617 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333425315 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.33625688 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.333556435 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336568837 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.336880342 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336961322 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335328791 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.335666362 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.336301794 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337538744 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336394795 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339467588 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.337658679 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334338969 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.337530586 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338808941 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339050907 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.336390854 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337890593 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.339331747 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.338892008 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339241324 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.336235831 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336134199 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336036612 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339067518 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339162387 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.338489952 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338857522 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340874692 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336074122 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33736086 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342032567 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339420402 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.337753121 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339005684 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338658298 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339138996 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341548218 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341611236 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339554733 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339529574 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338189691 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.340508623 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339878858 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.340530807 seconds)
  done (took 89.509721947 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342553512 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.339267907 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340911878 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341705154 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.340585789 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341212582 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.34244659 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.340521634 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338745215 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339690669 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341801593 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340099054 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339591986 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339679742 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.340341876 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342269795 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341855166 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339906078 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340287585 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342797159 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.340756236 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.340273537 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341363981 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.340053092 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.338082945 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338209942 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330855092 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337152544 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335976831 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331578106 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.333431401 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339876481 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.333801744 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.329680332 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331122251 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329218706 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331948572 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332660124 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330187878 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333586397 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.333371862 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332874177 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329562305 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330335881 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33003482 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328491726 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333389915 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328969566 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33142083 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326166823 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329641553 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326403253 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326697907 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328714108 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327607706 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332354951 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327518381 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327353271 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327971148 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33167475 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327881033 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333138914 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330086162 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329315125 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327096397 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332589334 seconds)
  done (took 89.316319203 seconds)
done (took 1884.835708801 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.487772657 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.442036037 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.316406052 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.343503302 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.318899534 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.319302049 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.33686456 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.320969632 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.317093455 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.323324112 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.314374059 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.515087552 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.351711934 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.319858565 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.31972712 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.41994068 seconds)
  done (took 26.97282876 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.350045876 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.331291678 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.431896424 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.334317029 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.349437535 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.515719638 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.386508328 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.330089997 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.48975416 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.346567704 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.321323879 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.355004668 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.325968808 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.325180955 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.351315512 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.510026179 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.571927458 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.32774423 seconds)
  done (took 29.166773621 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.751589462 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.346799124 seconds)
  done (took 5.317673072 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.351018691 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.325370744 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.325539509 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.326487312 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.330113082 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.317573948 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.325669986 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.336318346 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.320534985 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.448104303 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.331531633 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.337774012 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.330036184 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.32983264 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.335853358 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.369430055 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.469057238 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.335728534 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.336032795 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.330374135 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.328610572 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.423173355 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.369790991 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.33897406 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.450841804 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.326533425 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.333432318 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.33472735 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.451784439 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.337498197 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.32907335 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.329244166 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.330142321 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.322189816 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.793424127 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.322261662 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.368061145 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.337518189 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.337135553 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.470177669 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.330004084 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.337981324 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.324006379 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.790378775 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.474086858 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.443552391 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.325580212 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.338768371 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.333928086 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.395538851 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.330485162 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.332888367 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.385163525 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.146349275 seconds)
  done (took 85.05743767 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.358481124 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.324596232 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.492403245 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.346870882 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.323693818 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.34132928 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.329216849 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.597913187 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.365053669 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.334688339 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.611542689 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.840375948 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.327879512 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.370859692 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.85249176 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.332616271 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.32393395 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.325635183 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.326529381 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.331433841 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.831056397 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.324220864 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.33052873 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.38060676 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.363268111 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.796833017 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.332144134 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.328055032 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.330090627 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.325374678 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.798274219 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.333330135 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.396719134 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.325620837 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.599213346 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.696675629 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.66954916 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.328434839 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.373300239 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.326431398 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.356127811 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.791155153 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.677142927 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.329112223 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.325695728 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.7986591 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.331845893 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.327945307 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.335148332 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.549024975 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.329633675 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.327077723 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.339278037 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.331274096 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.333242728 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.337734081 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.414336105 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.825379442 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.327690436 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.331644661 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.347009303 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.328984883 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.332501683 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.327559461 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.332367483 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.682016991 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.523480509 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.332483171 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.677266178 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.789988244 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.329181927 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.873623755 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.330594522 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.343674661 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.533194408 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.328104167 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.350732108 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.837222522 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.378216536 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.329682335 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.659020582 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.330449129 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.631538462 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.350989308 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.330211723 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.862592389 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.341912497 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.38191288 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.32978984 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.331902351 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.335932869 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.334103078 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.608298137 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.393061942 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.329882824 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.329644624 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.35332017 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.333375141 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.351339993 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.330781016 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.866857695 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.333431931 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.329339145 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.330804363 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.32984404 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.338932849 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.329042036 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.331949326 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.574224769 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.334427427 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.343295584 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.331945427 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.330369766 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.336716748 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.379050851 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.337079337 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.626596062 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.333275648 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.331795222 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.333735342 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.330403744 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.352776544 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.332549533 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.33612418 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.200757626 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.571176586 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.350535006 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.333278781 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.331321617 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.331947339 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.337596833 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.337480268 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.366424201 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.33586483 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.084452098 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.358287992 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.356210913 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.332732838 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.332583094 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.334647566 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.3391627 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.331878144 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.629859551 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.607762143 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.515500541 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.333217066 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.333443162 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.078149608 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.345872193 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.473836348 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.349509738 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.334555843 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.553363841 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.535399884 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.334662624 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.331701933 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.335458435 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.558371016 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.333348359 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.65604771 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.832833453 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.337987616 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.339231565 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.085302461 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.048991089 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.334932478 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.334841645 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.621836271 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.352940958 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.335591461 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.333823117 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.335244271 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.337197283 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.33807844 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.345273685 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.337591706 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.336071822 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.612713392 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.513092262 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.351159538 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.338042799 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.803168587 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.405605095 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.337295452 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.345634498 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.334506323 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.334862816 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.33934802 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.342657448 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.382856489 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.336060355 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.337375971 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.829672259 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.335934479 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.340439197 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.490533641 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.999944264 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.33604753 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.337593629 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.336788927 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.943255372 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.862377691 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.407390387 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.633895463 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.338204057 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.377677746 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.338168902 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.347607026 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.828391443 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.341762757 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.337808188 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.974895746 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.338627021 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.746423151 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.336800847 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.337750292 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.884924031 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.344537856 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.344452089 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.352023533 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.34343923 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.631243675 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.343614619 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.341117826 seconds)
  done (took 496.082939623 seconds)
done (took 643.807986181 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.337589413 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.337807046 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.327628545 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.345898684 seconds)
  done (took 10.585812057 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.357544671 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.346288497 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.355157115 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.346871295 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.353771169 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.34760396 seconds)
  done (took 9.343890561 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.340952982 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.34339208 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.347907178 seconds)
  done (took 8.272572089 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.557786846 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.361978104 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.697658138 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.348960544 seconds)
  done (took 9.204227904 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.356379382 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.358529874 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.355344577 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.355523972 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.360499298 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.360917258 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.357014865 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.358714797 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.361505726 seconds)
  done (took 13.45977999 seconds)
done (took 52.104396299 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.382783325 seconds)
    (2/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.378168861 seconds)
    (3/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.325899881 seconds)
    (4/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.487502746 seconds)
    (5/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.457253434 seconds)
    (6/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.420008244 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.411284961 seconds)
    (8/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.513668862 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.375812197 seconds)
    (10/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.285750086 seconds)
    (11/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.35291904 seconds)
    (12/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.524409422 seconds)
    (13/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.192078843 seconds)
    (14/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.330410973 seconds)
    (15/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.348067183 seconds)
    (16/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.671724276 seconds)
    (17/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.348540103 seconds)
    (18/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.350921623 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.500540287 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.417537843 seconds)
    (21/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.373178717 seconds)
    (22/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.347028032 seconds)
    (23/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.171813767 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.470663801 seconds)
    (25/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.327750101 seconds)
    (26/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.327887312 seconds)
    (27/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.383202355 seconds)
    (28/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.344294538 seconds)
    (29/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.385863537 seconds)
    (30/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.376045416 seconds)
    (31/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.455058041 seconds)
    (32/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.473906813 seconds)
    (33/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.37394967 seconds)
    (34/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.378555545 seconds)
    (35/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.411831287 seconds)
    (36/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.450057472 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.425468042 seconds)
    (38/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.38389393 seconds)
    (39/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.325825396 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.409072579 seconds)
    (41/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.557441392 seconds)
    (42/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.333289405 seconds)
    (43/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.533634994 seconds)
    (44/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.326893788 seconds)
    (45/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.434324267 seconds)
    (46/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.594287197 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.570349362 seconds)
    (48/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.331523485 seconds)
    (49/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.389446226 seconds)
    (50/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.492368596 seconds)
    (51/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.352093475 seconds)
    (52/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.456467847 seconds)
    (53/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.447072733 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.489871594 seconds)
    (55/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.101480225 seconds)
    (56/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.568169138 seconds)
    (57/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.349846453 seconds)
    (58/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.365495685 seconds)
    (59/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.442266602 seconds)
    (60/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.608184796 seconds)
    (61/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.058778516 seconds)
    (62/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.347912675 seconds)
    (63/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.562958937 seconds)
    (64/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.471020841 seconds)
    (65/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.567966822 seconds)
    (66/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.053804012 seconds)
    (67/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.377098677 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.434406452 seconds)
    (69/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.420813971 seconds)
    (70/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.329910493 seconds)
    (71/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.329962258 seconds)
    (72/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.344669282 seconds)
    (73/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.329656514 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.475034141 seconds)
    (75/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.378680473 seconds)
    (76/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.491583853 seconds)
    (77/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.328085546 seconds)
    (78/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.520444388 seconds)
    (79/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.569005925 seconds)
    (80/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.430742174 seconds)
    (81/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.331938691 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.451121211 seconds)
    (83/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.3293023 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.460785096 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.431989872 seconds)
    (86/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.512388974 seconds)
    (87/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.230461658 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.467324869 seconds)
    (89/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.151311343 seconds)
    (90/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.459101204 seconds)
    (91/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.330542607 seconds)
    (92/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.502530855 seconds)
    (93/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.347795349 seconds)
    (94/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.481122613 seconds)
    (95/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.346487574 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.469169171 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.384813139 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.504484454 seconds)
    (99/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.349500455 seconds)
    (100/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.34837941 seconds)
    (101/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.167416858 seconds)
    (102/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.336596527 seconds)
    (103/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.476757753 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.454407546 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.423003979 seconds)
    (106/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.094706469 seconds)
    (107/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.345998802 seconds)
    (108/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.419282298 seconds)
    (109/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.433054885 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.501785458 seconds)
    (111/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.348251955 seconds)
    (112/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.331115768 seconds)
    (113/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.525628974 seconds)
    (114/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.338589603 seconds)
    (115/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.351641663 seconds)
    (116/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.333605907 seconds)
    (117/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.528555344 seconds)
    (118/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.464487789 seconds)
    (119/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.192358908 seconds)
    (120/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.39067426 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.389812382 seconds)
    (122/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.459260656 seconds)
    (123/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.194490412 seconds)
    (124/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.520150993 seconds)
    (125/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.499519848 seconds)
    (126/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.428334892 seconds)
    (127/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.60125003 seconds)
    (128/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.475864304 seconds)
    (129/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.451240142 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.507043687 seconds)
    (131/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.502205872 seconds)
    (132/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.394301045 seconds)
    (133/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.419801556 seconds)
    (134/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.337105475 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.482921426 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.442660975 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.570125289 seconds)
    (138/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.617105812 seconds)
    (139/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.34651478 seconds)
    (140/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.307859222 seconds)
    (141/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.059344528 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.458340769 seconds)
    (143/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.446119104 seconds)
    (144/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.331927312 seconds)
    (145/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.466642873 seconds)
    (146/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.416263831 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.444013474 seconds)
    (148/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.382832203 seconds)
    (149/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.236074452 seconds)
    (150/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.342986319 seconds)
    (151/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.495637118 seconds)
    (152/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.099292314 seconds)
    (153/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.473332361 seconds)
    (154/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.157012093 seconds)
    (155/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.441303941 seconds)
    (156/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.417249439 seconds)
    (157/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.334197407 seconds)
    (158/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.339297279 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.409503909 seconds)
    (160/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.500837458 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.387602223 seconds)
    (162/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.536850904 seconds)
    (163/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.437734849 seconds)
    (164/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.146904039 seconds)
    (165/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.43064769 seconds)
    (166/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.473994124 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.463447728 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.577949707 seconds)
    (169/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.333977694 seconds)
    (170/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.516359434 seconds)
    (171/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.353524976 seconds)
    (172/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.018194449 seconds)
    (173/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.534194871 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.457920646 seconds)
    (175/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.19840473 seconds)
    (176/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.398494654 seconds)
    (177/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.432171826 seconds)
    (178/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.418587087 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.543306703 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.480755932 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.458627264 seconds)
    (182/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.110914773 seconds)
    (183/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.464357699 seconds)
    (184/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.061087974 seconds)
    (185/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.161220759 seconds)
    (186/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.342698376 seconds)
    (187/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.018209153 seconds)
    (188/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.335688535 seconds)
    (189/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.536425245 seconds)
    (190/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.38274019 seconds)
    (191/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.401083667 seconds)
    (192/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.597729495 seconds)
  done (took 343.051830658 seconds)
done (took 344.293188171 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377170595 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.44042315 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.360796684 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.360365903 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.361782325 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.353584593 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.382078445 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.362071086 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.375567692 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.376795528 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.352236418 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.389502719 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.376082179 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.370078808 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.394601869 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.361541798 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.360880718 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.368605943 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.377645861 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.379206442 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363427936 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.361820159 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.386791426 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.363609491 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.369464276 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.369958293 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.369726404 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.365833655 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.371210083 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.380225768 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.355540046 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.386329466 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.378146614 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.375285284 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365208557 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.373613774 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.36451112 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.442385563 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.383295283 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.37503726 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.370309867 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.381762682 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.367910742 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.368936095 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.375032913 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.386710906 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.372145885 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.380150061 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.355462469 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.384321348 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380093828 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.375897376 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.368904471 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.367522276 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.370234381 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.385431271 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.380156614 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.385760643 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.376455356 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.367814532 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.398978514 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.379862686 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.376356504 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372017562 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.371737549 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.376730494 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.37277405 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.38029843 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.373209314 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.366337183 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366159125 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.371355064 seconds)
done (took 108.243725811 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.485987684 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.362910507 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.504091805 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.372575964 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.524055935 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.49225781 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.37317346 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.372016386 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.371095467 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.159755418 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.373457053 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.372702515 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.364669854 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.371468603 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.490530424 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.374406861 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.372977141 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.084109662 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.37268256 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.502049302 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.364373873 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.375192792 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.372989419 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.167714829 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.365065755 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.359554897 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.504057798 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.372984454 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.086706855 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.360969638 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.363526911 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.066284469 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.504141362 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.39302124 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.384444233 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.384255137 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.526416296 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.3768539 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.48567026 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.487560547 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.502735126 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.412543811 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.362420206 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.364784917 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.376250566 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.373600362 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.374903911 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.403044449 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.367836266 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.374926533 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.062136083 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.385882206 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.381759726 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.374660027 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.37643073 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.393242524 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.376615579 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.373260949 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.505777507 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.376817342 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.490250669 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.197869701 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.199132446 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.376103878 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.362582433 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.376185426 seconds)
  done (took 110.777065327 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.434476808 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.437336976 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.47267111 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.362122293 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.416116541 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.476791478 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.366932258 seconds)
  done (took 11.221115026 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.377527066 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.377495198 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.416209579 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.417753144 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.375595792 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.525484332 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.378170418 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.380935867 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.377338827 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.417267791 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.377872717 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.376224657 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.38517839 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.370525524 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.416103773 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.378985215 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.481678438 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.367255391 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.377035286 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.522322826 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.379244909 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.386195888 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.419992541 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.379679841 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.37604396 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.375900132 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.136049085 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.376510874 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.374322266 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.377847184 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.37868177 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.422887147 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.378485565 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.371229461 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.377098242 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.487964359 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.37881771 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.378690787 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.376272789 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.372267066 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.378477012 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.377471398 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.377751457 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.378728367 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.376708962 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.394205676 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.379043692 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.380624327 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.377660276 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.376643504 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.420048249 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.376124489 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.379189919 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.376558512 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.426493533 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.390391773 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.377233678 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.371319121 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.37811077 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.378872926 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.525169442 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.418831802 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.37692557 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.418845312 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.382518383 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.380632904 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.381042807 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.380296467 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.419716485 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.377509335 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.419104715 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.378385372 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.549298295 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.391632277 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.380081442 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.375548924 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.371128819 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.376637977 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.368794958 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.379502099 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.377008175 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.373728409 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.37580007 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.379536758 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.380450058 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.531712384 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.480185402 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.381276425 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.3865233 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.379607977 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.381605629 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.425558365 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.38177942 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.380307312 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.426556838 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.48707172 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.423842738 seconds)
  done (took 141.529199834 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.385512194 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.387403458 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.381096973 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.403740468 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.378765795 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.374185139 seconds)
  done (took 9.56751328 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.372563455 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.380483309 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.383655121 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.383616155 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.378956106 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.383309582 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.380709484 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.377391433 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.38596902 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.383067275 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.382866016 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.384751791 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.379866119 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.377548128 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.379675873 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.381131552 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.382542666 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.383388594 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.377163371 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.384430531 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.371523832 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.37933419 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.377725749 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.377702748 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.383299199 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.380079379 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.39810822 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.384389313 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.383675927 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.379395721 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.379877014 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.37962234 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.378379909 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.381857499 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.38640871 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.375498415 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.38681835 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.385337095 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.378767954 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.381522455 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.386405589 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.382974079 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.383892469 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.387638014 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.373792245 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.379899753 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.383812953 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.393654315 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.384956051 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.383716995 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.386796749 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.384607902 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.381207895 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.386137787 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.381264969 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.381982797 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.388482902 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.383059245 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.386159404 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.375761758 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.38551445 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.384751269 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.377897042 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.38474266 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.379022044 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.382702462 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.378605568 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.387013555 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.38338987 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.381282142 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.389422795 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.385788115 seconds)
  done (took 101.783847561 seconds)
done (took 376.131842572 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.808900881 seconds)
  done (took 4.066110011 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.413481317 seconds)
  done (took 3.674549092 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.847303583 seconds)
  done (took 23.117673769 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.423610387 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.490708508 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.395322037 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.37026376 seconds)
  done (took 10.938170328 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.699114607 seconds)
  done (took 3.964453441 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.384895219 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.381053491 seconds)
  done (took 6.027615429 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.595098897 seconds)
  done (took 3.854754105 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.572502658 seconds)
  done (took 3.830664597 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.379120278 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.392738433 seconds)
  done (took 6.040531764 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.35696135 seconds)
  done (took 3.613805358 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.318942201 seconds)
  done (took 20.583950142 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.385449851 seconds)
  done (took 3.650444103 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.394090182 seconds)
  done (took 3.652883229 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.955211952 seconds)
  done (took 6.212811963 seconds)
done (took 104.490501318 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.367509724 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.368596131 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.372535284 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.369899949 seconds)
  done (took 10.735483325 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.435206109 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.436149446 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.439935274 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.434711108 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.436831193 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.436819905 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.413502596 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.408249473 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.434238561 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.437637737 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.442885185 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.435610344 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.435549209 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.409330437 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.436202297 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.442961851 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.435630603 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.443528847 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.408765895 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.43612956 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.384446267 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.435680311 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.435382295 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.383390408 seconds)
  done (took 35.538489317 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.898188612 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.449124843 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.530411817 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.429509888 seconds)
  done (took 7.568023192 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.463645083 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.466173904 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.486082203 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.520413129 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.557657872 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.482908742 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.408967059 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.405092769 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.394149229 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.467589772 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.518067743 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.451705822 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.565997831 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.386037488 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.67080829 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.387562278 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.385524056 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.466646774 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.519558037 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.553849156 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.389240394 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.466061929 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.469493301 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.453510214 seconds)
  done (took 36.597153378 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.399488457 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.405487994 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.39180734 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.404802614 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.39168417 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.388288918 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.390200427 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.393419909 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.388762356 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.388831819 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.390691635 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.401048237 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.390987858 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.390243218 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.393070421 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.393758071 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.39100425 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.39517028 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.399561015 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.389726143 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.388041758 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.395394362 seconds)
  done (took 31.924719999 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.377819373 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.38178509 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.728039138 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.631295654 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.377338726 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.384383556 seconds)
  done (took 14.143190843 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.452735197 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.594110962 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.382252977 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.733822636 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.826273896 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.39098965 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.383911783 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.628313421 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.929745538 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.929106576 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.443670401 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.456377862 seconds)
  done (took 20.417632007 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.38158389 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.386368368 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.392941147 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.401269698 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.439861762 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.387510465 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.390323046 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.375685277 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.44470256 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.443159304 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.386283829 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.44101001 seconds)
  done (took 22.141170029 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475617144 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.386777203 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.388418435 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46161339 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388683879 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.229672723 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393317512 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.100052162 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.391745569 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662895837 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386894726 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483027947 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.63908654 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395991286 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.397874199 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.360777358 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.621784574 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897295336 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388011838 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388452268 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42917468 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395491273 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393934144 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.607789205 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.234824168 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390399541 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.651723191 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389466929 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.680179548 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658626438 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.660026085 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395472831 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669711081 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028866058 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487065083 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.59938993 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404588885 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390016739 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.376149897 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.390405149 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410125642 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397998905 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.656110906 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399287437 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.387943913 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39258696 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113098229 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.397844261 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.388453641 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394573201 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.658492034 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489004791 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.395743975 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389632332 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460176522 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388983434 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.399097872 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51196763 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955926282 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391397571 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413625497 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.396306819 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.383321063 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40588691 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072283815 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.400726592 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.396130954 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395717134 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392299224 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400562501 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419505485 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394370791 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.413566728 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393271595 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.194590456 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.39378385 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399917974 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960488796 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396518171 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.396484437 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620778201 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39318515 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393589038 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.390314982 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392040318 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142831164 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397006576 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.363718847 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429422384 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.097932945 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.602989682 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406996316 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420545608 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.612889021 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.362968527 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391621685 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.401515322 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403831468 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413079419 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.101619002 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392595951 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.400349604 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650212644 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.60154678 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401632971 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.384887527 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87865652 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395909195 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.421007527 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394592544 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.612732041 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.040455748 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666972296 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398292103 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433072428 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39424312 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206290708 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394970153 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.407124504 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.397267741 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672634248 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.232028925 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392143899 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466381957 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397059003 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.397695697 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411143323 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402290934 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394416769 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.59005457 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405143322 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.669016301 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.401727174 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397708168 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.406085819 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396555907 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.401022767 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.619807752 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400102983 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675775881 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393523728 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398422793 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396851132 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.616694081 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.404576804 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.406787953 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65470159 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398082718 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.427323863 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.670469033 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433982756 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508312338 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429668111 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.40945278 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.656239241 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.405558856 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.403762409 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41200918 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409521266 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40379273 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.408415891 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390281718 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053369447 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383407133 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400567191 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.405817177 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.411113293 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465370007 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.407618504 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612338857 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.40587599 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410159896 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.408003423 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.400116403 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63061651 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.67059976 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.407189025 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.483382599 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.880631478 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.053194186 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423184856 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.406109619 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.40197764 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.401378445 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406204441 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405369627 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404342668 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.618847829 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673077015 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404951122 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.064505866 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406240052 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.410747566 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.413946369 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670014275 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.414777731 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403801516 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.408460033 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408145465 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413762671 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.675744495 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544542466 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.419141014 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403222715 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.917615124 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.407638246 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.403048156 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.402348972 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436891989 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.415057929 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257381495 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.66473489 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404443563 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672399805 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.416331907 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.426755208 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.405953244 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404122593 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413582603 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.413320579 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415778839 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.617957954 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.417547449 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411821827 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960667185 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263438264 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01897223 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422155588 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.420715064 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.410908581 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.120987316 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402524226 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405030377 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642112259 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.113206665 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403124687 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885564525 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.421990364 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.167055922 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.682350561 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639510111 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419034617 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.403141372 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.685761536 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.621245733 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436368226 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406112896 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410471783 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.378665026 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968023286 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404595746 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.5114589 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122264191 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401410824 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.412536548 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.454221688 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.403441457 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796975522 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.402617882 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407651764 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.411492765 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.42319573 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253464701 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403415027 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408003224 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079372183 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.418510679 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.894348412 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407618975 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.617735325 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.675964555 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.663033296 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.413985697 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.405740377 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.667688658 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6748998 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417402199 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.413343068 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003105857 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.281476418 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.412993423 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408653089 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.228365744 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421152911 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.712345078 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.416148745 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.408824651 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416272181 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.411629096 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406275995 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.411137891 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.417111806 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387434002 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918226341 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.41512585 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400593316 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408469748 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413523625 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.660704895 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.422597871 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.060184013 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640108726 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40480897 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43989192 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.413799007 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405134537 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.390084598 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.412470597 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.411496677 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437149395 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.630912836 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.412037256 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.385402141 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.445210966 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.619103796 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407872223 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.414115105 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.659816452 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.410452834 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.425753731 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.217911427 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444256415 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.414780934 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41512656 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.410345598 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442575504 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476395207 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625444444 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.679759835 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.686724136 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807655694 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414100854 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418585792 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.4278233 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503623455 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412121989 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.419714637 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.204353986 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067742339 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231332347 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.068645416 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.687626376 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.417920047 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420115448 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413553804 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547524859 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414363445 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691754282 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411502292 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.411942755 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451029957 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415006351 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422434696 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629768573 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692211008 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416392553 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416095618 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4337165 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.415078388 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.687405539 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.627136299 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9252729 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997580739 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412177987 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.41821801 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.134586007 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68446892 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413279627 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419460001 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416445251 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.430386856 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.417361774 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.419931889 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423697642 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551153674 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.686406543 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066382437 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.684680362 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.45667571 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.937190421 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413370794 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.674905914 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.182435109 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.632421469 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.075743225 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.191412795 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683570922 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484100001 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.631366136 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.41579949 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555118296 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.426541309 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.423275421 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41708443 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421817948 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.417938534 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.688030897 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.079820299 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.685927505 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.422874151 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.422553682 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449322226 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.62975791 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.636998779 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173738083 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.639402997 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.68931704 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.42779857 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.420388834 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077369741 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.696111528 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421712499 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.420990878 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.646231509 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.414708806 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.446124775 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.938142512 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.420633798 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986023224 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.303194671 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437787786 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424866883 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.192949029 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082344676 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.424040154 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936682244 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417968281 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421419167 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.700046699 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.422535724 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.433038558 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.70056104 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.421784772 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.426650843 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639629501 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.082699962 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.198701995 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.433491745 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423800373 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.442480371 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413261655 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43824464 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418080339 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425672375 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.820058754 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417929616 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423044696 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432927379 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.427932391 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437604542 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.425507459 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42326338 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.426409732 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.416769365 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.402244972 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.436837442 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543402169 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976880231 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42574511 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.098976837 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.766235935 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.673446121 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.428166439 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.399355292 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.428174622 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419954239 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423976159 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418939556 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.41679559 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999660744 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.426201448 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.696709138 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.430204667 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.63072485 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630351931 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.436460822 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641942409 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427559242 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.449484956 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.396447463 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423951265 seconds)
  done (took 996.98465954 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.417938217 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.451497385 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.425667028 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.459727876 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.453567676 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.536845652 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.489399297 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.444845664 seconds)
  done (took 20.977529195 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.413997182 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.419101805 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.431445098 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.421739754 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.41809112 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.904050944 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.426720064 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.421388869 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.433286933 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.41517599 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.430576788 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.109828319 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.446029917 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.414952464 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.402574925 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.428677895 seconds)
  done (took 33.239532489 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.548150596 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.621631333 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.476555875 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.491269534 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.417752659 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.41473294 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.687865478 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.435613651 seconds)
  done (took 27.394159328 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.429837389 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.428569767 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.428185979 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.428249208 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.431846222 seconds)
  done (took 8.448418338 seconds)
done (took 1267.369826096 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.433209718 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.428245258 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.429502215 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.430744535 seconds)
  done (took 7.024063965 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.398276995 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.39843734 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.395394878 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.409000174 seconds)
  done (took 9.902497619 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.134455728 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.038023301 seconds)
  done (took 5.471166987 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.917569417 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.926861112 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.923170124 seconds)
  done (took 7.069375241 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.708255421 seconds)
  done (took 3.00900291 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.345399803 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.404127182 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.092399018 seconds)
  done (took 8.144464231 seconds)
done (took 41.922908374 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.419387397 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.6765084 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.571549523 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.429030272 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.575748471 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.572915145 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.153944773 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.428012404 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.415062084 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.436413214 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.415636269 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.573743642 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.143673752 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.663282366 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.1407316 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.758472686 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.577370301 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.42902287 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.418084702 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.415819166 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.153767656 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.431031188 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.41659377 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.423928386 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.580646019 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.561149643 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.427242818 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.756665192 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.433135978 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.419757325 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.567062847 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.423981123 seconds)
  done (took 84.112211453 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.423001721 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.427310758 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.417506335 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.436709793 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.418877462 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.434430908 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.419767189 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.416985988 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.418434702 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.432493109 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.418188606 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.436390887 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.419531736 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.419371998 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.417313165 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.417568577 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.42479527 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.418985751 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.419803578 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.42332394 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.418865542 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.432309129 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.422818727 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.432839233 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.419861571 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.421631174 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.435056829 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.443523893 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.421258723 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.418693592 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.437822703 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.435485778 seconds)
  done (took 78.908382389 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.424671771 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.424234034 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.434462976 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.425578644 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.420699474 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.424580882 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.4220649 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.434991416 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.429296732 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.426477275 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.418999394 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.42178315 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.42330108 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.420079646 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.423602115 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.419389684 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.422580617 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.43529146 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.436198082 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.420555261 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.422884975 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.428094522 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.421489186 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.438022878 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.443390773 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.420625971 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.418713579 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.433097931 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.422220182 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.419314474 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.42830425 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.427352272 seconds)
  done (took 78.942038896 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.663889541 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.43447179 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.439126875 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.429586491 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.442090164 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.43774808 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.430411688 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.668431897 seconds)
  done (took 15.254704322 seconds)
done (took 258.521288793 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.433298984 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.943483967 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.462769298 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.432136422 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.448038035 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.458768705 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.655978107 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.454037712 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.662014802 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.454310373 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.445779722 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.433081782 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.248349469 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.58463836 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.293708729 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.388972861 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.332934084 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.430123288 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.015169963 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.721032951 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.455970173 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.430978748 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.293532657 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.355381936 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.415084065 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.512257822 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.529593923 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.662018474 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.592148757 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.514022478 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.961007269 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.438645048 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.459424551 seconds)
  done (took 66.225879814 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.432997586 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.441429798 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.440549509 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.437142551 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.440608588 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.442148421 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.432776129 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.442488699 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.439840101 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.438532077 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.440901703 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.438450845 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.439743881 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.441465206 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.439463747 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.420286784 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.433191225 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.444127768 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.431654056 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.419374481 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.443085355 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.440758084 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.443038226 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.440784382 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.441812459 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.443542919 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.442888181 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.444913386 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.441237121 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.442768398 seconds)
  done (took 44.472407379 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.443380334 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.026484422 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.183526018 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.44493822 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.433319095 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.438088154 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.728260182 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.448061713 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.438207999 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.440081749 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.925815744 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.448947578 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.47021228 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.187528664 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.443015287 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.444131732 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.441779377 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.433034317 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.042492919 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.45028292 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.728576126 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.447491906 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.729851644 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.448899339 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.436977411 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.436824124 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.441031535 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.275637951 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.459528268 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.924858098 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.239668055 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.72694824 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.205774791 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.234971885 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.240462387 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.449108154 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.446629803 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.925868092 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.440101824 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.437582104 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.725969167 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.443151633 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.19080053 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.120963271 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.457345691 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.444302765 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.314979291 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.93410787 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.687322907 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.44642703 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.222596153 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.444472972 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.449059684 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.437837487 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.681554142 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.441894062 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.439024609 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.322116069 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.444300827 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.727603925 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.446186091 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.438128342 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.035250097 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.441784751 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.026526105 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.445412506 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.444205587 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.440656915 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.192685507 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.445380452 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.139979309 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.457577096 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.446964397 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.927479419 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.036141836 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.353671254 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.445941894 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.039050344 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.235860626 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.74842491 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.446665325 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.266728407 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.751322865 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.445816306 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.44976134 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.446148523 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.442400143 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.513511691 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.723534748 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.072070245 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.126715523 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.331845223 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.736546336 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.453352184 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.439761095 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.323450366 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.452431141 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.44390927 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.191835455 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.136684273 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.461022022 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.445821445 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.122236368 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.461088024 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.729823956 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.448505802 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.228582252 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.443811726 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.512328066 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.443341378 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.444854044 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.43854366 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.731236859 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.448834735 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.448360795 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.11853951 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.956997756 seconds)
  done (took 200.945831415 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.434281977 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.430380381 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.434554657 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.432908877 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.436609296 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.441224905 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.431939778 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.43808677 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.441956018 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.433525078 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.432414349 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.441811124 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.442048171 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.434787726 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.438453302 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.433212045 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.438159561 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.459797577 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.435134352 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.438484317 seconds)
  done (took 46.067306314 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.452464958 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.015017979 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.982924045 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.454981253 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.446221574 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.438930807 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.500583262 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.455260939 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.445736795 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.748545513 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.623620422 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.454857929 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.447032249 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.449784598 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.977251995 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.432854412 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.750737355 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.021458765 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.452346012 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.021186129 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.434220582 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.44931219 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.440124462 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.014296278 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.764834784 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.737220728 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.505836547 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.023180234 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.456958078 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.451023017 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.01752855 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.455598684 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.44539839 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.009587725 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.455444666 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.464750327 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.449331949 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.501602698 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.505139447 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.755104681 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.02707454 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.747333339 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.46774482 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.610930197 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.449201714 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.429364862 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.035122005 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.456593659 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.428688989 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.454104648 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.453920111 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.995792179 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.452725224 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.996609272 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.460582164 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.451922555 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.021758778 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.998274155 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.986834536 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.62316695 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.447698244 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.73430438 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.458468902 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.034104157 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.460072094 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.452802087 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.450758022 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.618148133 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.027161924 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.742158618 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.760246395 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.761802283 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.460165625 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.515291522 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.454835735 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.756271063 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.517854033 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.848614103 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.756221294 seconds)
  done (took 131.031629788 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.716599654 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.561382128 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.831336065 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.054582427 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.975345596 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.584011573 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.564359467 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.689241758 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.454474002 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.54453034 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.110665435 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.550538276 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.188168554 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.515728617 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.555680787 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.573869199 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.856737186 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.446474931 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.092491095 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.084859064 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.460980912 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.555135971 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.971217059 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.650500797 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.456263749 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.0119658 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.400978772 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.985130628 seconds)
  done (took 54.76880229 seconds)
done (took 544.819469838 seconds)
SAVING RESULT...
DONE!
