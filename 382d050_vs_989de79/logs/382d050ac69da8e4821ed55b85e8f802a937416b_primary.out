cset: moving following pidspec: 28980
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.532839888 seconds)
loading group "string"... done (took 0.550046588 seconds)
loading group "linalg"... done (took 9.132618795 seconds)
loading group "parallel"... done (took 0.181610473 seconds)
loading group "find"... done (took 1.327680971 seconds)
loading group "tuple"... done (took 1.98491436 seconds)
loading group "dates"... done (took 1.392116103 seconds)
loading group "micro"... done (took 0.200879185 seconds)
loading group "io"... done (took 0.522136128 seconds)
loading group "scalar"... done (took 54.187740024 seconds)
loading group "sparse"... done (took 15.22068485 seconds)
loading group "broadcast"... done (took 1.446825898 seconds)
loading group "union"... done (took 11.387807963 seconds)
loading group "simd"... done (took 3.441300623 seconds)
loading group "random"... done (took 12.795627641 seconds)
loading group "problem"... done (took 2.342490939 seconds)
loading group "array"... done (took 25.407004994 seconds)
loading group "misc"... done (took 1.194487238 seconds)
loading group "sort"... done (took 3.843076266 seconds)
loading group "collection"... done (took 19.898069446 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.633334045 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.195032498 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.216802816 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.300604148 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.249641618 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.172046285 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.16581902 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.25962883 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.701898144 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.214508254 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138043397 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.506424358 seconds)
done (took 6.585110287 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.259977666 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.18252662 seconds)
    (2/2) benchmarking "String"...
    done (took 0.175718051 seconds)
  done (took 1.133281217 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077902522 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.155719376 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.110945464 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.095697668 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095052 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.113454135 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094899905 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.112774395 seconds)
  done (took 1.558457885 seconds)
done (took 3.808879359 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.528415759 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.892401999 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.506229984 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.163616571 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.308283342 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.311824711 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.33133077 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.210594653 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.110936594 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.094554358 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.182282429 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.392586751 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.444844628 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.971937147 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.094363284 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.119889766 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.123088238 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.790729738 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.082017445 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.128452277 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.507871093 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.208813279 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.099575932 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.128948142 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.188805517 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.139275743 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.167559013 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.10479385 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.660392593 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.136508788 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.19132865 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.101833509 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.164595557 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.197887994 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.212445349 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.093478138 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679921598 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.204246611 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.091713861 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100980919 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.676627309 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.123455933 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.189668796 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104925943 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.094484218 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.190137613 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.095181488 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079202134 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.119828613 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.087574974 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.170181443 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.463448783 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107735667 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.175342584 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092864818 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.697355618 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.102354466 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.283752838 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126412139 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.096431089 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.09545307 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.091931186 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.16796287 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095720625 seconds)
  done (took 20.511217795 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.15100024 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.172993715 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.079068 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.160529692 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.128282986 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.081591945 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.104844378 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.080081253 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.130118134 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.229050463 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.141921146 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.156947806 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095814801 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.092929166 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.132223751 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.253474796 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109558559 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.12728302 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.091635955 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.092529426 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.145829157 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.099088255 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110371098 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096548308 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.173117537 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.208997852 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109780978 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123876704 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092817465 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099603508 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145570009 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.150102999 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095953072 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09121483 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.194789439 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109772378 seconds)
  done (took 5.456572275 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.207960011 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.125893262 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.215158394 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.1937821 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.165444742 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146463204 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.176373878 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132706576 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.295712322 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.296955056 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.180895688 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117385395 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.123650044 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082147181 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082355202 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079810755 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.524194901 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.138049959 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.179981671 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160258785 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.092635502 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.10301248 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.410647753 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103262708 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.08431551 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088214548 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.087320027 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.187654019 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108018798 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.102020355 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.085368561 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089322189 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139796571 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.202988704 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.130925794 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123726618 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104688598 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.086306093 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.222819294 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.094784804 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079869617 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.129920443 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119666279 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136798301 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.102039645 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.098538477 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.227029927 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.08212114 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122778809 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.062196831 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.201684192 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.130720229 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.083621069 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.294189205 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.11995524 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.089803191 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.084609742 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.258569637 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.117818755 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.08340157 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.099993021 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089926567 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083147327 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.100266985 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.440601248 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.09494438 seconds)
    (67/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.082677474 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.100646214 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.15081639 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.739131258 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089142361 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.110136091 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089886776 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087635081 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.122743527 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.083546814 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080311751 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.09964153 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.08331257 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08701023 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11351837 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08871949 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081326325 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166466036 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.102860746 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102858499 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12967118 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.088999364 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.099610644 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116062907 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101103682 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.087192066 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.17861547 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0900109 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.096886855 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106368369 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.146097162 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.086049525 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.204272181 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.099069266 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084851074 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.110907876 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.106010908 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131005292 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.106893252 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082682459 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10709355 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.08116799 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082188289 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16940129 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.084981182 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085440219 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.085450751 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.115735478 seconds)
  done (took 23.47123444 seconds)
done (took 50.213828749 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.478133051 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.088074367 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.087488048 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107605455 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.088151313 seconds)
  done (took 1.706183788 seconds)
done (took 2.536334644 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.335424981 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.201651728 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101309523 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.19634736 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087174936 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.202862062 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.190935087 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.095373119 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.215704039 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.086113087 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.195930848 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085693584 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.106155056 seconds)
  done (took 2.956058034 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105219502 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113780993 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.125592103 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106966981 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08882263 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105866053 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.122712992 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118018028 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105062738 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.118578675 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088666458 seconds)
  done (took 2.031610095 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10173178 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110863008 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101079203 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.124440461 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087699211 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103343794 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.122723081 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115145406 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102509827 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.119840742 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089234736 seconds)
  done (took 2.014142979 seconds)
done (took 7.830000913 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.107523276 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.832656335 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.150757578 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.211942857 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.36494594 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.243233977 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.586275798 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.157495034 seconds)
  done (took 14.647932611 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.174908059 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.109331239 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095652574 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.092999072 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.094006858 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.111298698 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.09453548 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.09127849 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.11642418 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.095580317 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.093376456 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.109994276 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.096242003 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.093853251 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.092241621 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.115495261 seconds)
  done (took 2.569535696 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142344779 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.127333721 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.117288305 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.09869434 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093244073 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.11850482 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10045216 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.118574662 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.093919655 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.093914117 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.101217073 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.116841463 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096507457 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.092680706 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.115346216 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.11588481 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.094590151 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.118612348 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.113836787 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.117810676 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.103835386 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098655133 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.117941438 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10253578 seconds)
  done (took 3.528505905 seconds)
done (took 21.582840948 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.150751811 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101866847 seconds)
  done (took 1.090219623 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.146020497 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.163619797 seconds)
  done (took 1.150668368 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112684079 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.090032055 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.143083239 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.107396978 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.092692827 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.111424409 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.12227686 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.112229874 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.0947765 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.093830885 seconds)
  done (took 1.925171154 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.094071801 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095888259 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.126943459 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.145452339 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.121484701 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097171159 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.098304837 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.096596314 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.120120388 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.094092805 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.09769149 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.131856436 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.097946487 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.132779929 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.09977839 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.100150645 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.122130292 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09840681 seconds)
  done (took 2.816785855 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.090352996 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.093057073 seconds)
  done (took 1.029846508 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095000592 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090158442 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093478737 seconds)
    (4/7) benchmarking "year"...
    done (took 0.114040857 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093134027 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.092523431 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.111156907 seconds)
  done (took 1.535613977 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.519503391 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.274615341 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.381854359 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.111367479 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.151972511 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.362083537 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.148176948 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.104344806 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103316886 seconds)
  done (took 3.040410321 seconds)
done (took 13.433173579 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093571416 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.222869594 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.764495595 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.112766794 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.088938894 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.165429448 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.299563659 seconds)
done (took 2.599372713 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.355121837 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.152453448 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.089206184 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094628829 seconds)
  done (took 1.539014316 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081735867 seconds)
    (2/2) benchmarking "read"...
    done (took 0.097592391 seconds)
  done (took 1.034657827 seconds)
done (took 3.429433683 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.123055431 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087566461 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.107984204 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.088925982 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.087613588 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.087513867 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.108790606 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.088268209 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.088475857 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.086955583 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.108510464 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.087251833 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.087347851 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106085979 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088490535 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089284182 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089442458 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.110518061 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09085217 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.091232531 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108274136 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091927251 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090304561 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.089141709 seconds)
  done (took 3.171599961 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.113056443 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.093085455 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.11342812 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097101038 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.09595867 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.114536151 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.097780187 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092940387 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.114220353 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.094056558 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096204197 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.095573194 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.113930351 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.096630019 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091647362 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.116022422 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.096244679 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091545543 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112733176 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.097317896 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.095654986 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113356095 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.097003121 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095696586 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.115899386 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096276644 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.093647181 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.112251119 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097401801 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.096788934 seconds)
  done (took 3.903967871 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097001886 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087579754 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090752815 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.120413071 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089657334 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091412157 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.107346162 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091085158 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09385706 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.090522245 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.115316341 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091940429 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.088761362 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.112533048 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.095322917 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.095594472 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.099436915 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.110110006 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090228622 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.093813526 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.116297104 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.09051096 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09195181 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.090986833 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.11116593 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.089051156 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.092553974 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.110497958 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093335049 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091158449 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.094698738 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.114640159 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093313789 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.102009057 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.11480607 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093458682 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.096760277 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.109321726 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09598791 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088412941 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.088182508 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.111988475 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090133824 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.098861432 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.11189247 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.093878604 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090176566 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.093949521 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.113295283 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096874078 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.087577611 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.107666821 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.096688235 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094203107 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.095294396 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.110646808 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.093222853 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.088819566 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.113487591 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.093096471 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.0896389 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08896091 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.117437936 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.094308201 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.107178167 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.119758495 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.091469922 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.093317196 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.112565716 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.099589767 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095575435 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.122270748 seconds)
  done (took 7.997468521 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.102171446 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098509731 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08891679 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.110929903 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0924383 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092948401 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116934768 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094002864 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093604752 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119361757 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093810696 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094187554 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093815845 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113961569 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094251211 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.093798784 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11871241 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093250224 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.093352639 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11364487 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09483497 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098294588 seconds)
  done (took 3.066786409 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.235829371 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095014988 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138986865 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121687193 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110154681 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.124973839 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.098597298 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097459856 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117091871 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104097058 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103333088 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117286414 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113677267 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101080465 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.122951375 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.104448573 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.119387384 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105625375 seconds)
  done (took 2.996845736 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.104370705 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09338049 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.134803435 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097220079 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.095190249 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094988496 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.121978453 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116900596 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.11557965 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097611142 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.102886116 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094865844 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.11544783 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09662352 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09509315 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.11908309 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.096767992 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09543418 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122214476 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102946156 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.101652066 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.122384037 seconds)
  done (took 3.204164969 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105971841 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094219171 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.134588374 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099621216 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09436041 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.093494406 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.121303143 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.096151121 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.100278868 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.115815736 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095400863 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094679908 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.130454524 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097082173 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.101345894 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.116657742 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.095344444 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.095172883 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114607453 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.096515973 seconds)
  done (took 2.96054361 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.177475418 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129742015 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113220219 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121176451 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133552141 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112570949 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120616147 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.13341903 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112210318 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144298681 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112501341 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112136413 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.141672978 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118793758 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13066425 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122165673 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119071948 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.137030671 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108266379 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107610068 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.139061394 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108569988 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136344146 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109201161 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108748603 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132020365 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10928128 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132116529 seconds)
  done (took 4.356351826 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09079609 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091340052 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.092870147 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.113664235 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095572836 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.093336189 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.092712261 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.113439055 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.0940519 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093522729 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.113725273 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09506713 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093700167 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.093949855 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115048006 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.094955793 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094828752 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.112723113 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094947445 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095038213 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.094887273 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114705591 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.094787146 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092664321 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112738141 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.096337215 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095407462 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09403397 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11384818 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09506585 seconds)
  done (took 3.850682493 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.103784864 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10489769 seconds)
  done (took 1.085804971 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099601657 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106027354 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.092391152 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.11640361 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103000389 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.093874733 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.12368741 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102264129 seconds)
  done (took 1.715014479 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.146847745 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.170537112 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.100449704 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108633846 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.174728368 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.165991714 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.142307174 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10152857 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.11662014 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.089113193 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.169805099 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.088725546 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.097440068 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113916959 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.098356982 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102498193 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.115224665 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.109130712 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102852903 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097570047 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122800585 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.102256572 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.117996929 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.106556331 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.090857181 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097950972 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.123766607 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.109088268 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113262641 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.101156577 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.09553903 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.09526655 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.120377475 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101566849 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.09713143 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.17642464 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.106278855 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114239583 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.099207815 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100621956 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.154094697 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.098011858 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.099241967 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.116446147 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.102574046 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100272911 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.121851852 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.097940784 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.089708376 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.091599953 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.118526522 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093709796 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09658687 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.119261899 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.098281396 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.103838704 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.120386963 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.09457134 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.092283605 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.114475493 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.098111486 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.093301828 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.120123029 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.101467769 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098907708 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.118877895 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098486557 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.09697272 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.118397943 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.098597694 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.097781619 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.133065029 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.100760427 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102460973 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120784233 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.099278932 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09602141 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101726964 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.116783431 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.098563434 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099180025 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.147955523 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100424462 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092443687 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.114289681 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106331912 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099326646 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.119869729 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.091364717 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.106687175 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.120359801 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098304223 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.090346225 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.114582302 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.094716337 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100246748 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.090184537 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.120012177 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.095662524 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100969803 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.123174432 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097709158 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.099781574 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122312905 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104012307 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.096969296 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.169398871 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094708157 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.113714669 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.101375921 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101897718 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.090752911 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.118742098 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.096679141 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093893263 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.114238852 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103863397 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.097213921 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.118846018 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102614226 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.099735922 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.119576959 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.100897759 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095828824 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.094232556 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.125435717 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104684003 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.097601389 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.12156013 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.098313613 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097749261 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.118123775 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102515202 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.095384778 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.124494434 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.097759613 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.096201456 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.118510666 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105373843 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.098683597 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.093326887 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.119823913 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.099066121 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.116625972 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.102419368 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.099807529 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.092819153 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.111900443 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.099242753 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.093518931 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.118805312 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106934985 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.093731848 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.12170044 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.095678951 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106631683 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.115055102 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.103745922 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100287438 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.123752584 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105958903 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.090959113 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094264617 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.122915919 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.099400389 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.094339881 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.119277796 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098202697 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.104086383 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.111982551 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.104296547 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.090464821 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.115387255 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.104943693 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099786346 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101117602 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.115065015 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.140060601 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110370332 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.1249546 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.09619401 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094831294 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.122430658 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.099102069 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102083075 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.124648842 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105892197 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.098327478 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.119021903 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104591195 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.093613802 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.121049388 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099069253 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.100502918 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.090100448 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.121153836 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.091573311 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.102753115 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.122283911 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.104748882 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.104000954 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.121017915 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097438407 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10278878 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.11507822 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102276689 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.090774511 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.125501107 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.110136997 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.104534581 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104513948 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.122000533 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096591871 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.098100477 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.128119686 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100660495 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.098873026 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.120805768 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.091464883 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.091188683 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.125297282 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.103361877 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.096673396 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096903146 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.123809447 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.101796655 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.09298963 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.111266309 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103796148 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103705107 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.115912019 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09961168 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.095244359 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.119529007 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109744529 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.091148375 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.117367964 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.10257379 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103616112 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.12051793 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.100225703 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.10336915 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.123924857 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.103995263 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.102648552 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096440299 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.129193313 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.097879376 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095691552 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.117435559 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.103632209 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.093268064 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.120430783 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.100424886 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.092067031 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.111571143 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.105599904 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103992575 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.105635824 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.121332981 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.103956686 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103005124 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.126580591 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097004313 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102888836 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.115256625 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.091811732 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.094783951 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.113796361 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.103169135 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.092353024 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099639044 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.113787413 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094127998 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.098989529 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.122070781 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.097314977 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105057324 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.132566724 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.094698766 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.092503923 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.121461083 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097883472 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.09407344 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.117218145 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09892742 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101516738 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.125000769 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104436678 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.096022718 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.120870185 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107660288 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.095641374 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.126110655 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.106438611 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100350794 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090888972 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.125671429 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.092699847 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098417343 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.109243084 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.105292046 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09681794 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11812323 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.094688055 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.096134942 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.118880081 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.092016854 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.094740577 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.128087563 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.099007038 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100302083 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.11752918 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.098629194 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.091401281 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110699264 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104049341 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.0962068 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.106403651 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.120209042 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.093371306 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.092896475 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.126209615 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.101833722 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.106405355 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.116769354 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.105404278 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106642806 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.101972329 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.125074707 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110642518 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109209678 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.128556026 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108231132 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.093468854 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.1205068 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103536773 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09836892 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.125330563 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.103984016 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.094580723 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.125532608 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.107417956 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.102356743 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.119184367 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.09599358 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.101923172 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.106471838 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.125768023 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.104781485 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.102812728 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.123376939 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.096864146 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103960108 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.127960723 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103169202 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107427948 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.121789876 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.10654804 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.097392337 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.105122701 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.123492792 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.096261193 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.09382306 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.120770904 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.107982036 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.094762538 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.125628798 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.106895544 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.098039418 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.098677229 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.129203293 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.097646869 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104210505 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.128663249 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.098284878 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109853339 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.120194135 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.098138439 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.10319356 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.122971399 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089345215 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.09289351 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114963997 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103959455 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09420676 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.099973301 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116672978 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100520799 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.095634995 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.120259559 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100157741 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.100025566 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.108671474 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10282118 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.101561741 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.122361281 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.100717445 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101314746 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.094941592 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.122360045 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.108576672 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.098464404 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.132093504 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105497874 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.099020968 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.12087154 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.107354039 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098611862 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.128330401 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092381973 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097075086 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.108193249 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.099850716 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093427255 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.123133699 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.098053922 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.093005918 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102519753 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.124675738 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099112842 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.100132999 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.127756784 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.093661885 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.094240433 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.123901078 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.097640264 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111791994 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.122858182 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.095794743 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093364079 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.115714602 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097017452 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103288912 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.089265631 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.112970337 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.096497523 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09590381 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.115536711 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090353783 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098337511 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.117505007 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098182902 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.096208099 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.109604094 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.095561412 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101068097 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.112893728 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.09226089 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.093364843 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104681404 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.115794789 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091822093 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087368965 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122198041 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097425435 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101565622 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.11329198 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.095683457 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092119067 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.118334788 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103190046 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.092401927 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116828488 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.097136701 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105033221 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.128238008 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.094280961 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.099118563 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.132610846 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.109973105 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.107062521 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.103894115 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.125964078 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108597024 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10730283 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.124589862 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.096813851 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.097043349 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.122801975 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.097590034 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.104362745 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.130778008 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.104249909 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.099750389 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.125517196 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110890551 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.103572964 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.101688494 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.114392118 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.1060242 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.096967602 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.126787966 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.093642592 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.090300379 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.118507038 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103350738 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095094222 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.095265271 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.117997524 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098347436 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.096045007 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.118950832 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.100425254 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098368725 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.121581017 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095265355 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.093536349 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.118852927 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108568796 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.096803791 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.09392863 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125176366 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.101832579 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115926368 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.096228346 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099907606 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.10022281 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.118161942 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102193787 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091727882 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.11443853 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.101897285 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.100934211 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126554958 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09542572 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088663846 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.120488852 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.094559019 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.088627408 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.119608362 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103819826 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.101017849 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.116042916 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.094799337 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104126739 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.119565657 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096623656 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.092277669 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092213446 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.122530865 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093416429 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.0977605 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.113844242 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103216012 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.101845489 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.125264689 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109368908 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090441199 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12254373 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.099362184 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.10371725 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.124079603 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.098892093 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.095872984 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.102521611 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.133723543 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.111051033 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.107406519 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.128735493 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.107232902 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.095825315 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115661693 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.094900447 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.10199082 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.099940978 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.119374578 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.098653324 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094028317 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11763829 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099843871 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.10239732 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.125044565 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.097586247 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106761514 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.12409758 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.103616158 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.09623517 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.116597658 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.104580973 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.104978477 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10805857 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.123165762 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.098019466 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107534184 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.133011821 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10248022 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106326826 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.126476374 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.098776976 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.101550758 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.132444752 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.110972095 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.104557343 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.104271997 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.127742782 seconds)
  done (took 64.654095553 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149194796 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10668644 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127992879 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10763631 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123937924 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.129289813 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10504316 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107480447 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.128719772 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.116178106 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.100798578 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123448444 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123131624 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128685431 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.150646654 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.117296582 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128372924 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108136304 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105920337 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.128617054 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.124179048 seconds)
  done (took 3.469880708 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.115818098 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111357136 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129998241 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112861142 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109618404 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.140932834 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.117738238 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.140154949 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.122452358 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115253086 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.144146434 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118514136 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.13691833 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.116112956 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11477069 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.138468066 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.121121226 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112544289 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.141136503 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.118578292 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.13720945 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11952644 seconds)
  done (took 3.665090421 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.106421798 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101223999 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.100144021 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.121793498 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.104748121 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.101156066 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.132646664 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.106223966 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108957873 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.118798026 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.102535367 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.102772146 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.109591525 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.128518909 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.0998545 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.103943608 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.134761879 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.109632686 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.111456982 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.127262262 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.120279928 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.105943587 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.128180356 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.101353109 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.11825089 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.134296856 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.109002479 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.110083037 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.099837141 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.133955464 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.107706736 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105072318 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.129340804 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.1021022 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.100406102 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.132963422 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.112149888 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.107109505 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.107356692 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.129574767 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.107639103 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.109808361 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.13076557 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.106014412 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.103410088 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.12833984 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.112906495 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.107600812 seconds)
  done (took 6.366976598 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.131232471 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.170227331 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103185804 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.145479936 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.137129608 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113022385 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.106128811 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.149504044 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102455035 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.13216465 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.117351019 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.114163644 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.130721174 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106612069 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.100855191 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.127125666 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106172225 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101931171 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.13495133 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.112811209 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.115287226 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.136186103 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122863956 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.143057169 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.115846343 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.110242728 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.133739994 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.117485034 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.121509367 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.139884301 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.357710485 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106956335 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.140309256 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.114289764 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109308254 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.137171197 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123368831 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.134196873 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.113935544 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.108778175 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.133835574 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.117077228 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.113438624 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.144718864 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.112277886 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.113767246 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.13494979 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.108940612 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.120692302 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.136022921 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.118089985 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.121038201 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.136190296 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.112486986 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114983925 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.145412551 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.111561743 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.131867955 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.115872134 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.120518034 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.131383199 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.116151518 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.12093163 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.134327391 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.117230119 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.122106133 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.136648407 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.112274252 seconds)
  done (took 9.677788672 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135787559 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10619018 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137358199 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116510913 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103319756 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.130703914 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114673934 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.108325805 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.131517797 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114513899 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129214087 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.212042675 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.128026308 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.12119139 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112062145 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.139397263 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111962306 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109893073 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.136787987 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115071792 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.115132168 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.146919955 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.115960244 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.145797552 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12632995 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.109455715 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.13610587 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114769707 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119205554 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.13749937 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123637219 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.137835325 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11489174 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.123994788 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.15015662 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.115561003 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109103384 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.140836266 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.116620344 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.13837616 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.11583319 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123984107 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.139493143 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.114844677 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116878181 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.139194727 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.125756496 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127328959 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.143126217 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.121790572 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.138323461 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.127036304 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114126118 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.13831401 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118190324 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.144028492 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118398448 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115082895 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128518587 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115521233 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136297559 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.123700328 seconds)
  done (took 8.781867087 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099016748 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099866234 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.09855572 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.124142315 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.104779804 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.102618837 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.100342199 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.121314802 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099135109 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098724759 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121696686 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100058284 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099208452 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098228968 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.122152757 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10020553 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099544602 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118781115 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100420093 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098995063 seconds)
  done (took 3.05420731 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110859188 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117250321 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.121544552 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10903078 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101969345 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.12940323 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106032283 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102131823 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101365631 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.127083992 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.113682792 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130102135 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10342981 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106525754 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.131129677 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11006198 seconds)
  done (took 2.769748725 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.122675164 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119543577 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.197959157 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.111775048 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.136552557 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.120256921 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.111625975 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.138513659 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.112783613 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.118525571 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.115739065 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.13802052 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.113018416 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.11308903 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.136776474 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.115413068 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.11057768 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.140796914 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.113983314 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.207035724 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.117785902 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.114640583 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.135633795 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.117887491 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.113948237 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.139309664 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.120600539 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.111757158 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.114510982 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.133118349 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.114010033 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.117722114 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.128541352 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.111277147 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102929539 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.127371183 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102942766 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.103834392 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.132624153 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.111149739 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.110915159 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.133940812 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.114392957 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.116562624 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.111255027 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.136282947 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.108813082 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.114607468 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.132835211 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.115564277 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10934795 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.143599737 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.11282615 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.112150707 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.136088862 seconds)
  done (took 7.726598275 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113965914 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104041406 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.135528233 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10165896 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103785302 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103404714 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.129498285 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.112600295 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107938421 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.126889204 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106035625 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.107045353 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.135627088 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116199081 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114221308 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.133362276 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.107354058 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108263885 seconds)
  done (took 3.017461106 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.110559637 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.1022397 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.10912882 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.129526486 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.106027478 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.105322543 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.129032593 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103332827 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105810138 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.109610355 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.137449477 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.110542547 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103297949 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.127432237 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108596966 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107960013 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.133117651 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113149423 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.11321644 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111023678 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.135456634 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11160952 seconds)
  done (took 3.479186879 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.114584775 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.200035291 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.121324271 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.211974728 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.111918957 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.108060956 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.144347572 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.111704654 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.125849494 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.132884088 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.111486378 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.107740051 seconds)
  done (took 2.558763041 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134349184 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141525452 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126811553 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105518446 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11201359 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130155281 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107851969 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106390983 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138938956 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12426259 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131991688 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116213225 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113985785 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14116044 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12016141 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139195001 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116890851 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112014317 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13036288 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132959667 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107571191 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142327737 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111288953 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105942639 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133388549 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126171997 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150184808 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128009386 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111511431 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140821305 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118977078 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137060447 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128307224 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127094755 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134729173 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127082489 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117959079 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.152234682 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118324282 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144577691 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.113006014 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117592994 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144266469 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12367809 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143396378 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117465014 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118052611 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138451671 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118556037 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.162913885 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126425573 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125020133 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141634104 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118254934 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136639998 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132576883 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118674793 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141927002 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111606872 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14268264 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117961275 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133344776 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119975368 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11887364 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135055284 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117915822 seconds)
  done (took 9.344271585 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146044933 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102554038 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131131779 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12123894 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137522396 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109380666 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108840979 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133311469 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116662116 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111352768 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.179951002 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109090176 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141533978 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128595319 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117446399 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142184552 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118594815 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124159765 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133501327 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140849099 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14277523 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128761565 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126496852 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.150064176 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129733831 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14678076 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119845134 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112133242 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132158537 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113798558 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119020462 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131639953 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119051414 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105123949 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141905883 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119553946 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141588486 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125779294 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112910331 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141040532 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117555972 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146506453 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113216553 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108919067 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143304592 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10906775 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108461465 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129486189 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110904516 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104816244 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144194435 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126824401 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.146862078 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121002194 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112043525 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131971826 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110105759 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108919956 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13437683 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123041075 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145874613 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113105327 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129344336 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133875391 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110973966 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139613263 seconds)
  done (took 9.307214141 seconds)
done (took 177.036497702 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.153446195 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.195410635 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.147932526 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.183649438 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.095615627 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.131337845 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.15195655 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.152041968 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093015749 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.117260529 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094847357 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.097336363 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.188304099 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.09604506 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.093910031 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.121118302 seconds)
  done (took 3.071362498 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.194461653 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.317672967 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.113607463 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120716205 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104399242 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.101866043 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.123556636 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101343679 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099933415 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.129858978 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.103355105 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096858139 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.131759939 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09896414 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099283065 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.127253759 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109385766 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101715414 seconds)
  done (took 3.242362546 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.12472559 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145724457 seconds)
  done (took 1.243578046 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.13312327 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.201796641 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.284643292 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.174833042 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.124417228 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.14173234 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15526367 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135792656 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.183050634 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.137040187 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.115585264 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099575417 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.150026506 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105039948 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.138325676 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.101619541 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128105201 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.136458244 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114170087 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101781109 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.144823445 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105717605 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104857656 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.138207683 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.171338685 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.135967232 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104981841 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103598732 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.125293921 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115177534 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.107721744 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.141030017 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.112240007 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.182168602 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.107831566 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.174412929 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.109211818 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.124944188 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113559515 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.099740973 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.131002839 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.106731869 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.140538466 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.101041793 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103758211 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.133752925 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105633333 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103347527 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.132119516 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.111631295 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.130812016 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.109424515 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.172911893 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.112774612 seconds)
  done (took 8.047117025 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.891971051 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.144557475 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.1002822 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.032241129 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.160805849 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127507826 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.89238101 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.147654014 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.266520266 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.904720003 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120959303 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.140115332 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.248594689 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.240463793 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.032811677 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.340354557 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.730024627 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115775415 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128051014 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.171717121 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111661759 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.153546447 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.122408643 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.427105917 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.103047858 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.12268304 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11103422 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112321791 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.184348154 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.110876148 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.132555084 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.206997758 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.250516111 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.213284301 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129342897 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112454511 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100902522 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.190353038 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.28585061 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.237686841 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.195824934 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105496291 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.101666826 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.137061999 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11932582 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.121339069 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160097851 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.193420686 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.197362322 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116333922 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.140194827 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115048237 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131371621 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164373847 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.125927633 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.348063379 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.349871126 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107326137 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1377485 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120613413 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.276993236 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125315471 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.251281213 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136412326 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220478613 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122861791 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.866513882 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.168383785 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.124890288 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.115440303 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108616049 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133567428 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.109817417 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.18608563 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.377024669 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.138269554 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104227012 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120103921 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.23174113 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.129571771 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103490672 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.190916836 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107020586 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132287599 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11838621 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.112817978 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.192872899 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.258047798 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.115897171 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.136987145 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.112110624 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13520209 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.104352722 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.242155221 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.238711242 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.159728208 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.24470033 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133168723 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.159755462 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.197550787 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.134129371 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.166397448 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.134853881 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11993856 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134433728 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.237026692 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.143116504 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.126176876 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105459136 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.10842986 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.166076504 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10456867 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.135051906 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.165337082 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.462040807 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.199727751 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.104139855 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.135250555 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114428148 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185948346 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113666636 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273382917 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132296669 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169907787 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.134802896 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.104464444 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111089462 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.188270248 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.137440037 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.113802097 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10754249 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.138913262 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.239404995 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.25582275 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123155233 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.250684667 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.201695822 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.115150546 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197789423 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110617216 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.194459225 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116776993 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133816412 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103019152 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.87122155 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136343991 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.110103048 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105714849 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.213254028 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100711829 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.100631005 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126761563 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098797078 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.866808131 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102077865 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.125963493 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102011227 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.106683196 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.13552345 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.112417903 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.104469125 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.183880495 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.272457161 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123027727 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107911579 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.12711764 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158808683 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.128763797 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.1037118 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.100234674 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.127957758 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.115209339 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104498975 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129124042 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170187724 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.183995287 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.239280169 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.528964866 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124440673 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102121793 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244042465 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125031972 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.31125271 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1123911 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.236969414 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.192895206 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.101383426 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.333591131 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.195580991 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.218782737 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.107865258 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.193806169 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097674594 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131409776 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.160200033 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.12506006 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108845935 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.182777529 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.115452257 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.138621234 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.040152225 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101320351 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.261897147 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.099270643 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.193443774 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.105461991 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.133394582 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.314628449 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103128797 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143554767 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.161058097 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132785761 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.106106543 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.625687332 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101167892 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137450562 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10999613 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.242889055 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.192327463 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.1115541 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13553303 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114971586 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.187448872 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.248988989 seconds)
  done (took 46.917217373 seconds)
done (took 63.486063931 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311647615 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.261119835 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.310118339 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.21354985 seconds)
  done (took 2.162021686 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.279749662 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.17582635 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.239102323 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.099287586 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.255654794 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.109104745 seconds)
  done (took 2.164290899 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.510239027 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.388700523 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.314386708 seconds)
  done (took 2.217231136 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.264627777 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.262801358 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.358586331 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.421184463 seconds)
  done (took 2.431490896 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.322863665 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132472382 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.130928315 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.220607829 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.262666781 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.23457497 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.149978344 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.20403756 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.155467894 seconds)
  done (took 2.862376075 seconds)
done (took 12.8316557 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.401847949 seconds)
    (2/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.365631538 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.248826207 seconds)
    (4/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.341506101 seconds)
    (5/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.315848807 seconds)
    (6/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.347289541 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.229656576 seconds)
    (8/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.370092236 seconds)
    (9/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.228606745 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.148967274 seconds)
    (11/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.225533684 seconds)
    (12/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.177252642 seconds)
    (13/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.196971489 seconds)
    (14/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.2302397 seconds)
    (15/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.112075332 seconds)
    (16/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.108954975 seconds)
    (17/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.222573279 seconds)
    (18/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.252262829 seconds)
    (19/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.214223445 seconds)
    (20/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.19592824 seconds)
    (21/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.245321467 seconds)
    (22/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113223838 seconds)
    (23/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.29871923 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.140750399 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.235970689 seconds)
    (26/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.086222867 seconds)
    (27/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.135344812 seconds)
    (28/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.237823459 seconds)
    (29/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.212725804 seconds)
    (30/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.137478795 seconds)
    (31/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.129954385 seconds)
    (32/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.240608529 seconds)
    (33/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.239877351 seconds)
    (34/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.083382104 seconds)
    (35/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.200238373 seconds)
    (36/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.086962565 seconds)
    (37/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.219681292 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.144047598 seconds)
    (39/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.317212999 seconds)
    (40/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.345358908 seconds)
    (41/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.142577007 seconds)
    (42/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.111292999 seconds)
    (43/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.244909012 seconds)
    (44/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.109795765 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.166043504 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.110170774 seconds)
    (47/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110827373 seconds)
    (48/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.184869233 seconds)
    (49/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.1171396 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.106691624 seconds)
    (51/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.210786475 seconds)
    (52/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.258735453 seconds)
    (53/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.224923022 seconds)
    (54/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.14919862 seconds)
    (55/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.15439115 seconds)
    (56/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.145261551 seconds)
    (57/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.219348713 seconds)
    (58/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.137608818 seconds)
    (59/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.156781293 seconds)
    (60/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.086441549 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.106667564 seconds)
    (62/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.263226224 seconds)
    (63/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.087201292 seconds)
    (64/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.082169592 seconds)
    (65/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.108946418 seconds)
    (66/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.089081943 seconds)
    (67/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.084726241 seconds)
    (68/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.193113932 seconds)
    (69/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.131671168 seconds)
    (70/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.16619098 seconds)
    (71/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.113703751 seconds)
    (72/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.087344917 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.157022593 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.111083778 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.10632896 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.133894121 seconds)
    (77/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.111396996 seconds)
    (78/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.083108859 seconds)
    (79/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.195908838 seconds)
    (80/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.087564661 seconds)
    (81/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.191594894 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.15626443 seconds)
    (83/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.084392462 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.105134655 seconds)
    (85/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.235895095 seconds)
    (86/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.135553168 seconds)
    (87/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.083113115 seconds)
    (88/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.081332 seconds)
    (89/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.203023105 seconds)
    (90/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.084203213 seconds)
    (91/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.194607138 seconds)
    (92/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.132746134 seconds)
    (93/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.084042227 seconds)
    (94/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.083872933 seconds)
    (95/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.181047193 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.104675318 seconds)
    (97/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.108276181 seconds)
    (98/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.14116264 seconds)
    (99/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.196126501 seconds)
    (100/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.106515562 seconds)
    (101/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.111049754 seconds)
    (102/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.197977125 seconds)
    (103/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.105914656 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.156408682 seconds)
    (105/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.113727645 seconds)
    (106/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.083843188 seconds)
    (107/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.083717422 seconds)
    (108/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.138132767 seconds)
    (109/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.090013517 seconds)
    (110/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.19211304 seconds)
    (111/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.085183567 seconds)
    (112/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.124238514 seconds)
    (113/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.118938087 seconds)
    (114/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.195208046 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.11530925 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.111345209 seconds)
    (117/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.107862325 seconds)
    (118/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.191414443 seconds)
    (119/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.084864112 seconds)
    (120/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.243210222 seconds)
    (121/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.104426469 seconds)
    (122/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111467562 seconds)
    (123/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.085069466 seconds)
    (124/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.107643719 seconds)
    (125/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.153557601 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.10845127 seconds)
    (127/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.148452372 seconds)
    (128/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.223994425 seconds)
    (129/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.154769703 seconds)
    (130/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.136803902 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.108493179 seconds)
    (132/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.08393825 seconds)
    (133/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.110550442 seconds)
    (134/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.097267423 seconds)
    (135/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.147136093 seconds)
    (136/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.166463526 seconds)
    (137/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.105148628 seconds)
    (138/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.109460705 seconds)
    (139/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.138395513 seconds)
    (140/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.119642465 seconds)
    (141/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.084481528 seconds)
    (142/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.084700877 seconds)
    (143/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.110006665 seconds)
    (144/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.090017677 seconds)
    (145/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.085018531 seconds)
    (146/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.084085963 seconds)
    (147/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.129391239 seconds)
    (148/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.117688788 seconds)
    (149/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.1062257 seconds)
    (150/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.110369749 seconds)
    (151/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.084766841 seconds)
    (152/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.128969171 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.112614713 seconds)
    (154/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.082929634 seconds)
    (155/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.082684919 seconds)
    (156/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.14275908 seconds)
    (157/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.113952334 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.100659515 seconds)
    (159/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.109295874 seconds)
    (160/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.085173857 seconds)
    (161/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.0850518 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.108738195 seconds)
    (163/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.111262427 seconds)
    (164/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.114328375 seconds)
    (165/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.089261524 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.130729469 seconds)
    (167/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.13214735 seconds)
    (168/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.103285734 seconds)
    (169/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.107754529 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.133829064 seconds)
    (171/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.102065829 seconds)
    (172/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.085168645 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.134153697 seconds)
    (174/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.08771326 seconds)
    (175/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.084907149 seconds)
    (176/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.112731931 seconds)
    (177/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.155608267 seconds)
    (178/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.085855246 seconds)
    (179/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.100763248 seconds)
    (180/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.082124736 seconds)
    (181/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.112319991 seconds)
    (182/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.088568098 seconds)
    (183/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.083688131 seconds)
    (184/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.095392828 seconds)
    (185/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.110769069 seconds)
    (186/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.113347245 seconds)
    (187/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.109124686 seconds)
    (188/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.0829808 seconds)
    (189/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.083506169 seconds)
    (190/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.117096406 seconds)
    (191/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.097561045 seconds)
    (192/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.090099374 seconds)
  done (took 28.931461422 seconds)
done (took 29.936401822 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.231010776 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.133491976 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.109667327 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.107824553 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.209350852 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.116543524 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.151525235 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.115786093 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.117250217 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.137351325 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.103696516 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.120970141 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.108602819 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.2125101 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111497222 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.132607503 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102069108 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.118962575 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.150351333 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125019818 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.211855777 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105150299 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.118258158 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.130852232 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.185489101 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129453965 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109661511 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.108247911 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.147633938 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.111863609 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.107726874 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.127260429 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.123836874 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.121571406 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.127859541 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.118777296 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101757701 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089442698 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.137174118 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112588707 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.119448415 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.138514326 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112141801 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.103199566 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.1373456 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111084964 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101957006 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.139080433 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.107868482 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.110287907 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103890111 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.154404875 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.114354156 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.09898045 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.12874901 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.10369382 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117394134 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.128124851 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.122597324 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101483202 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.128883012 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105437064 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.114205513 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101460346 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.140263549 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102798849 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.110531792 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.144897167 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.120012209 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106897342 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.127338771 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113492833 seconds)
done (took 10.060736679 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.120835233 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.158432091 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.20944093 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.218621153 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.132163686 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.14507694 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.127334484 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.133058571 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.149872284 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.127723838 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.166383816 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.138286307 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.218419557 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.117665056 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.117696506 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.141184361 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.119977056 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.114451728 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.222907727 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.152810335 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.136893056 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.117730244 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.164608691 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.125989947 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.13531568 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.135012425 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.109610369 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.140839112 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.110829255 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.126905129 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.153881926 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.11083094 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.108094364 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.159706224 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.12454993 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118633082 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.146391895 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.114943333 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.1331442 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.110511282 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.116886649 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.155705154 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.109673897 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119265198 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.140761396 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.118930519 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.119837371 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.145158194 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.111602795 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114879609 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.138106906 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.139060722 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.142665056 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123904595 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.118831263 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.143151682 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121526673 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.118072204 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.134708036 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.122423517 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.108607961 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.13550568 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112593974 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.132679454 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.135690605 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119383532 seconds)
  done (took 9.956501475 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.133930434 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137784789 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.14396811 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117961431 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111707432 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.12598226 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100966375 seconds)
  done (took 1.933262978 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.111723931 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.19342744 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.215063691 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.213833121 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.21586407 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.207674594 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.152120584 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102312133 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.137021359 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.139538003 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.192138157 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.24656406 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.11054582 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.144117457 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.215842383 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.106111345 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.218481397 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.111330994 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115198481 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.217620773 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119253512 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.160389838 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.118910778 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.10124786 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.213595057 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102903252 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.270143252 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119330984 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.140161166 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116721606 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116153618 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.208828901 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.214985072 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116197777 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.110056673 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.215538887 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.211526619 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117383079 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.231587685 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.108813742 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.213696129 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117462304 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118010785 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.145110457 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120047642 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.202069291 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120908995 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116011338 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.143216624 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.197174038 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.140025164 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.19022454 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.142533363 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117223055 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.112020632 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.145413704 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125165006 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.11640985 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.225412373 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11824203 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.213324766 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.218373756 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.18843302 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.216037096 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.153279441 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.198533558 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.211960572 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116569662 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110843532 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.15076783 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.191865778 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.14654296 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114875606 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.206452056 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120762553 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.219255292 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.217072828 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121855116 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.115231654 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.105092541 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.143667379 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103325525 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.208740172 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12049157 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113760407 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14792302 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115942905 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.115318952 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.136099066 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125629232 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.140581069 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116417865 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.122107949 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.143805284 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122188191 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.221522713 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115461098 seconds)
  done (took 16.122060617 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.118266127 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104623372 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.107790057 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.134314799 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.104355266 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.103854326 seconds)
  done (took 1.75027528 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.151895255 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118318519 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.154674146 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122963478 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.170466319 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.226128399 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.229781162 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112089039 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.161656336 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127557922 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.226497694 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.204431643 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.227273997 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120844199 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.230817454 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119389728 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.230817014 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.143224903 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.132055247 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11446472 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.144357267 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122452078 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116168921 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.217643258 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119083026 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.148381882 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112196031 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.127105018 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.154717581 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.114662899 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.121462638 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.145200251 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111240879 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.112095348 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.230009039 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.136669051 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118431424 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121613109 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.147501853 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.125369527 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.227328216 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121996652 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124528916 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.149644733 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.114113706 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.1098372 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.147876829 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113078472 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.233230759 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121794165 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.12062875 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.146242602 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119406596 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120420427 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.139566156 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112937491 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.146573008 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.203792116 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.150654742 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.114058205 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118864911 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.1465625 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114079909 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121622323 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.148770639 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.125449354 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.110973993 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.146725731 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117268327 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.118229989 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.149717171 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120439592 seconds)
  done (took 11.524789599 seconds)
done (took 42.339413918 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.591676264 seconds)
  done (took 2.662457617 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.923760268 seconds)
  done (took 1.995936176 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.21951041 seconds)
  done (took 20.326281692 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.54258073 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.624677118 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.056991968 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160170674 seconds)
  done (took 3.457407203 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.053695801 seconds)
  done (took 2.150140822 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.310169575 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.279121326 seconds)
  done (took 1.674119423 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.766411192 seconds)
  done (took 1.861750581 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.568646252 seconds)
  done (took 2.649886267 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.363229714 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181334994 seconds)
  done (took 1.648284071 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.656107219 seconds)
  done (took 1.754380763 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.891671084 seconds)
  done (took 21.994500651 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.255095149 seconds)
  done (took 1.359172542 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.292113079 seconds)
  done (took 1.395571905 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.842176141 seconds)
  done (took 4.946808498 seconds)
done (took 70.962155274 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.124163748 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.117897176 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115954797 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.144387229 seconds)
  done (took 1.593825374 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.131311249 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119043549 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.120920457 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.146577868 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124754011 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.143634519 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.11853072 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.12048179 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116215875 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.147413754 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119231123 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116418343 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.149365116 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116613955 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115311663 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.150018466 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122439962 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.118176185 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.145155155 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120528974 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118123049 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.148234294 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122847399 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120382784 seconds)
  done (took 4.177695989 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.122700657 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.108776705 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.10860049 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.135447814 seconds)
  done (took 1.584455928 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.138684692 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130940567 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.156421848 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126821838 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129519853 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.156593548 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117048442 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114742384 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143785569 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127321599 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133854427 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156826362 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.130685638 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.118252612 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.156254075 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112714909 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118948073 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.157329631 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126794843 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126202737 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.146046945 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125628443 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.122216232 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.154789446 seconds)
  done (took 4.332504179 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.201092187 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129944867 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.171356516 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162670249 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.172694393 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.116547358 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.141095824 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.154036994 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.122890859 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.117907904 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.147845287 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.163693336 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.151424356 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.119530306 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117540349 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.149319736 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.129864953 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.122617694 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.18821745 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.12147568 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.150047621 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130800301 seconds)
  done (took 4.289989384 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.127206547 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108781574 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.103332809 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.142146904 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120960198 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.109999837 seconds)
  done (took 1.827382975 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.117185826 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.102810063 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.10248805 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.129308455 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108527352 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.102382873 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.101536196 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.131143912 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.104084287 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102392782 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.130201498 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103208667 seconds)
  done (took 2.449615143 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.348627865 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.108924924 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.1357971 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.109347976 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.11426169 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.106348789 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.150415372 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.107880249 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.27370249 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.10774805 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.148290774 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.197990209 seconds)
  done (took 3.026378137 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218570072 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145270758 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.302987297 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.369105905 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163748797 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188294752 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.272326773 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192550139 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.209594177 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136733317 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248698547 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155488458 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181427211 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175865621 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166399127 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.156914374 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196669885 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190104839 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17675759 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227505678 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156431662 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192389855 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180880205 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176388403 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13429141 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189808368 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.11895416 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125780388 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196044041 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190917413 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170073815 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17291392 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141398888 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221541259 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264823601 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170697164 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.315891351 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132614791 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.199489787 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.183842195 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259320751 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164452743 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1882062 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181118791 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128001701 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205168867 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152170163 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.20294361 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.129885479 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168651468 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178866801 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201479491 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.205277456 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136944563 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.323636641 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16890031 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.169741211 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169702207 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210547451 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215768534 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166086517 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.147887219 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182080663 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210566703 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204493299 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141018205 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.19269288 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125753974 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189985718 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194439895 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210646547 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155993492 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.226655005 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158985444 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158012724 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199952545 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176732728 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204026866 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156571568 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.147248817 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148391915 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159694267 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127406659 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.203205015 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149035128 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198569523 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158533849 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.349902096 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186275942 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185898891 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157370316 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185972265 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183530474 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14689429 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.105737324 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171493334 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.16169858 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184017065 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131450446 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183017129 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138097668 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.125385432 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17829367 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.12002833 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185086114 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.128959708 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191378472 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158760117 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.15800401 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165032685 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173196779 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.153033295 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195056451 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183394075 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158397588 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131323279 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216305226 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1556429 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.158056962 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177496696 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.212369425 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.142170502 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161969447 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165696176 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216032584 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139468924 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2163627 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135043703 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160942823 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.141666723 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187125412 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157402394 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.181165773 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127900971 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.177961778 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197460382 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.15407979 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137197946 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193630321 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13258903 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122388037 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165978493 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135653616 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.165051099 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.144493288 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13271214 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181516113 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156021307 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183701623 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1536844 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160887307 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204385747 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132882961 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.158341228 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173546344 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118398269 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.202870256 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183515304 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157128757 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20025577 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.190234087 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217822967 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15880945 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159786665 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175624321 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154946899 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.11901577 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18846548 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15535659 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187152816 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.179932885 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215957809 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.195936009 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.14994223 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174767137 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166452474 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.204541327 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152235568 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.172068302 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156728557 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192643554 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.118757893 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.151231397 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.127667038 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135469686 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158476421 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134642693 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203116502 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162209355 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211829083 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185851151 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138502155 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211102139 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.126032657 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186967783 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.164944195 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165926007 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.182443366 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210332861 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16521899 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169494998 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16022562 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.149127083 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124533935 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.130133857 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190550647 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132601764 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163249296 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139484896 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212039488 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170913875 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176132239 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223522639 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164445464 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226746575 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.118031858 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.197895302 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16900517 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184867486 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.182057585 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166372918 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.157121912 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.206912575 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139411701 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216829549 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154847066 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191164893 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214814848 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.155265851 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127742329 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175545151 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155842141 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165387528 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16394785 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1735689 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128670335 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180480321 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.137776134 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122435932 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211163798 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169669663 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171327224 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.188041106 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168162368 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153707872 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141437306 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187595435 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143385693 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.109027642 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198055173 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212505091 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145625653 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183188701 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175436447 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156408353 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.319930024 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219772072 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17548755 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16534317 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140194886 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192066671 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160438635 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19147319 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178902838 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169314302 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17526307 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186584262 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.139965641 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157662269 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149133374 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180586048 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.142000105 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.158572344 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.156552042 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.13976093 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212657167 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165683914 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159213367 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186834832 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150487386 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14931167 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16784555 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194315004 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18537793 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201507311 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.155254097 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.194474523 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189223529 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151178144 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127343957 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.13038267 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208441515 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127868885 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189373831 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.203433054 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217368632 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162080994 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189381151 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138024576 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.124957435 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185126545 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146406096 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219875781 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162911051 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136915903 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219797361 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.130737704 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128399747 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189527322 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302227064 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144988118 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202414109 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.115371111 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.296265297 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128926034 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131307429 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193462808 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196264852 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.133881531 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.182304161 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19190663 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140469748 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19189637 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135787988 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211970919 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21838715 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168103866 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200975177 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.142357674 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18925478 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158284438 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205627151 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140088117 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.173679165 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161185997 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212957753 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.209931815 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.133300272 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156130107 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187910525 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154870916 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199019106 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134660562 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220620396 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126829328 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191967309 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134926416 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153857438 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156555607 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.205626093 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131215753 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210133651 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18554786 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133214544 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126543742 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173815283 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154914722 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166554179 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129674745 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212077802 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.128929271 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189915865 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180549983 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128115278 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185381482 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144432383 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15894076 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140856508 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167785758 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130973051 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.170119857 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217588131 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13110291 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207886526 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162679963 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19232067 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154729456 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170707621 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663850548 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.157040544 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181982053 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176112729 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188415855 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180005019 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160211835 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188573466 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147167516 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193962378 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146468272 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.270313643 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162004722 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.187342747 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130835135 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169146513 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138701898 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.130778671 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180567401 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156129583 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169043455 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.135278945 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.185386761 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141107557 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.173442815 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138967124 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211323455 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147550684 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212897749 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180839276 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166924449 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160161809 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202953369 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128997878 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.192667329 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170492326 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170928823 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148229344 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.161556266 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.136944986 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209304327 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124699081 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156748106 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18962844 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157620899 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187961934 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.135187954 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19214261 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140348516 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188753826 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128005982 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.152013909 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188478644 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132799103 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.155338447 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15817464 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186676963 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.155768002 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152475127 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.172968423 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188261233 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.152331256 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132694865 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302094542 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158646369 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219971778 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.141229757 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163860956 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143390655 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183975505 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.154876644 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189305089 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.131172427 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128944711 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.158666815 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.16998016 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.180063405 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159410449 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204690613 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16040655 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222761499 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136011089 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.324247839 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139261574 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186839748 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.120861029 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.127107765 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170018027 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133382081 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167458233 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186709891 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209799581 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.151938898 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.176059492 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133438667 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.152898088 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132203818 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164190114 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180338054 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158080567 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17408642 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.106930099 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170149202 seconds)
  done (took 84.384959149 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174024467 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.153768285 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.170298186 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.228965124 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197293775 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.300280589 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.237789516 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.266229518 seconds)
  done (took 2.918866958 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.127804568 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.159892017 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.141449186 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.147838064 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.119756127 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.453453474 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.158744146 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.12073927 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.166495618 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.161083057 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.143525615 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.635059432 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.115273192 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.146281796 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.128880748 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.118763778 seconds)
  done (took 4.236445069 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.585702742 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.601437476 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.410959564 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.798429705 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.235182522 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.180546078 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.82257206 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.193916387 seconds)
  done (took 14.029895404 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.152830396 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137133603 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.321699277 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.265961252 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.151569966 seconds)
  done (took 2.234883822 seconds)
done (took 132.180534317 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.130338575 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123445764 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.123376953 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.155518253 seconds)
  done (took 1.726599334 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.191864875 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.095261403 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.09658481 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.122649066 seconds)
  done (took 1.708237084 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.462842381 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.094362423 seconds)
  done (took 1.791259553 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.156747499 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.145086336 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.173038357 seconds)
  done (took 1.693453315 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.150420649 seconds)
  done (took 1.355804345 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.135208244 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.121095499 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.24459225 seconds)
  done (took 1.71055263 seconds)
done (took 11.197728354 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.128763158 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.421404841 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.43455332 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135305814 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.710141947 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.427360747 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.02983758 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.175320326 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174206288 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.139042097 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134012032 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.689378153 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.048956113 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.364398803 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.004242711 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.488108167 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.696405236 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111130773 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.147155558 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112257459 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.011787711 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.138586651 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111660887 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11160156 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.718616644 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.422183502 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109008504 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.495758512 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109779231 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113131522 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.428033496 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111670072 seconds)
  done (took 17.649329341 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.124774 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174423191 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146931926 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111736208 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113366977 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.140100299 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122613298 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121747526 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207419475 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108796174 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.163077184 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109326446 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114972606 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.139176024 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.13722254 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109161066 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.141400296 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113705331 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117965868 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.140039604 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135519033 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108905604 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.140383291 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113745746 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108681855 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.159932444 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111070082 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122453697 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.13770044 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115672523 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114236183 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.138436992 seconds)
  done (took 5.378447359 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.16530717 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180563784 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149463069 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149308415 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.188028892 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.112686639 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.222900275 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148991646 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205979687 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111594726 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132985662 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.138821545 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152277482 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110229299 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.167297733 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110263955 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.1124693 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.142445387 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120653177 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112371643 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163634086 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110796829 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112303186 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.142363853 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110259529 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133469551 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.14058843 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122838292 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110136755 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.144199488 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116024671 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111847276 seconds)
  done (took 5.658671023 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.131310857 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.12643767 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.13310859 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.165128662 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.122751284 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124934029 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.15503424 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.122368764 seconds)
  done (took 2.300304753 seconds)
done (took 32.192546375 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.145135783 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.133402871 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.131394498 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.157280514 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.196650929 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.150715238 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.131191436 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.118830643 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.157106681 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.135048 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.109130804 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.148340782 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134569432 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.12404734 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.228982463 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.127500734 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.235294601 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.198505067 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.151492531 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126947289 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121061701 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.234284729 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.123834469 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.149960279 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.206595212 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.143004371 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.190344986 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.122089661 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.156227193 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112124341 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.2288417 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.124098975 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.118636261 seconds)
  done (took 6.274682774 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.221616634 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.120101671 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.151478525 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120717102 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.119802023 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.148147745 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.217368129 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.148605611 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.120004502 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117564201 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.117267484 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.230023972 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.123647791 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.146971326 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122080768 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.115190179 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.249393805 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.119550304 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.110175406 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.126749683 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116660074 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.12013065 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.259569596 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.114698271 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.118149215 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.15036883 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.122544728 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.123321186 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.151051049 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.122264613 seconds)
  done (took 5.576114722 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.133329949 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132952335 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.136677743 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.216880199 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.146862539 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.162498198 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.141775871 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.134010216 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.174412824 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.113358905 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.127184964 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.179957962 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130356573 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.123195022 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.148196319 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.133634385 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134960027 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.143682514 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.120452514 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129960797 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.164920761 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131290878 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139863975 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.154637153 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.111493653 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119697807 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.152991701 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.12940087 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.119748516 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.156891684 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.115406641 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116658644 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.14370183 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.150634466 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.11726072 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.155692905 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139770567 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124775034 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.157405871 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.144876621 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.116714996 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.14614833 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140853679 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168599974 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.144087354 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127189101 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124160117 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.156362074 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.112748705 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131339635 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.186878666 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.120940701 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.133332657 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.143676867 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.111957061 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.120697452 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.143328315 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118554146 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.128248423 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.115453013 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.168363877 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121723025 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.122432961 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.145585865 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123903876 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.11144112 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.142055036 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118811809 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.139492915 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.14868655 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.152067049 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.112832709 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.154141577 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.12700967 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123741002 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.123374179 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.143078467 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125220801 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122804574 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.14921643 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126787925 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.115361146 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.146354012 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.131394686 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.133403347 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.157899132 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.126809551 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.126691839 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.146520907 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115713006 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13052954 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.112864386 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.152190943 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.126652666 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.112673404 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.148708587 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.1276077 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124225485 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.14174339 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139554431 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.116369802 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.14269082 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.140017732 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.117752723 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.148258368 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.124538764 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.155529166 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.14612029 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126765973 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.126203085 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.141868568 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122013415 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.118115209 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.111353823 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.16385635 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129480533 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.119019207 seconds)
  done (took 17.105913575 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.339024179 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.319372331 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.182431232 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.31847119 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.158422718 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.212810644 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.313137665 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.316031183 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112812332 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.18321301 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.197620631 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.252100785 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.146414382 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.141927515 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.316879365 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.370668459 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.174983806 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.150470611 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.1832023 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127452328 seconds)
  done (took 5.761842038 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.140263558 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149780867 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.169204251 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.143722202 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.124232161 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.159134234 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.113505377 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135524133 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.156272554 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125298312 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.115618549 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.161451834 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125828566 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.130857039 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.159760608 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.155192143 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.121520943 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.149740615 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.137073876 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117843759 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.137034904 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.14139024 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122531113 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.167801435 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.133001353 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.12557421 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.144170075 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119837272 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.119315872 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.15289712 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.118962087 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132160316 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.150146596 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110106424 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125379449 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.129090603 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.151450232 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.117471633 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.118068904 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.148511245 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129894007 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.125777779 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.152664805 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.103149438 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.132725312 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.116529585 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.157356254 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128435015 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.111055711 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.13075999 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.157215483 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.128053573 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.120346078 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.168286937 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.121280813 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.130430054 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.156604343 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.128421541 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.120184416 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.143976357 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.113843546 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.118174823 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.151802755 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.12942741 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126752206 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.164747224 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.131087148 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.113431071 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.147766856 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.120196858 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118361271 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.160016035 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141244947 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.122917138 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.120992913 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.157966432 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.123431543 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.098948307 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.153866517 seconds)
  done (took 11.88418231 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.146345727 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124225868 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.133177977 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.184471907 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.12790823 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.119439128 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.15705825 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134913744 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128963281 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.165287703 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.129690437 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.127481532 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167851155 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125062951 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12293186 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.163065324 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129923299 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.152332226 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.16588676 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141953793 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.160806972 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.121611533 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126944671 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.12491275 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.17768308 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126074132 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.177222293 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.138945347 seconds)
  done (took 5.244977108 seconds)
done (took 53.066050376 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.385901543 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.586657894 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.346062348 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.346832395 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.337214451 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.376086933 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.341591997 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.347933037 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.9210869 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.313953077 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.346558482 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.347903598 seconds)
done (took 30.24609197 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.361834136 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.877943586 seconds)
    (2/2) benchmarking "String"...
    done (took 1.628061001 seconds)
  done (took 4.737778763 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.34123827 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.342102059 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.564955787 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.337538274 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.333266603 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.336485077 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.349089129 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.339470697 seconds)
  done (took 16.840406011 seconds)
done (took 27.51183784 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.408008015 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.518709852 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.584437432 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.344358926 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.339971114 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.344839623 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.339039595 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.366408839 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.338199325 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.351301819 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.764667283 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.587171223 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.349138651 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.704508941 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.335192272 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.344043667 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.349585247 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.584923584 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.340884357 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.37653298 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.318819198 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.315388116 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.372281494 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.33963442 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.344760417 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.344239589 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.39230454 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.346466579 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.522689028 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.346310357 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.370555701 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.333917441 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.379665681 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.350747086 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.34431798 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.352426444 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.538381449 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.347802902 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.318633504 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.341025483 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.525235007 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.347602531 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.333623692 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.358606526 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.349274191 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.402193489 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.319746202 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.452887151 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.367999363 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.340465992 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.356892936 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.703518906 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.351418467 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.351265934 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.341811621 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.560671526 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.367419112 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.404073097 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.367825715 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.353205131 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.339163839 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.366101 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.351778383 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.356798096 seconds)
  done (took 152.594622831 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.342642051 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.34410678 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.342868459 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.345657782 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.342862398 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.344436159 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.343506067 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.342800064 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.343361094 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.352099674 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.343404062 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.342622949 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.343035013 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.312608833 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.350600572 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.367415356 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.343917853 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.362276636 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.368133173 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.343660319 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.347353809 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.345006519 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.345211327 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.344781758 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.352333822 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.427596199 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.346711289 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.355783682 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.352365638 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.343841048 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.348567186 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.348640398 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.002868588 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.21325003 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.361348512 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.377394076 seconds)
  done (took 85.372193488 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.345197435 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.346012648 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.34524283 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.345909805 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.38359832 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.343807641 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.971619926 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.970107551 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.884823367 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.063096128 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.842059955 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.645316633 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.337927519 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.444231948 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.35191551 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.341576319 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.363034719 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.372024965 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.346757006 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.345251719 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.972106753 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.358539168 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.395137905 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.530477101 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.358408282 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.37998331 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.746103554 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.340582362 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.381812148 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.68907366 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.394880673 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.34038886 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.780344363 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.88290436 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.460597464 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.34373205 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.383072461 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.346930669 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.636292956 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.341499402 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.348855389 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.349948835 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.045868887 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.341552822 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.974870811 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.347927743 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.32790227 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.341694273 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.347007859 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.614003834 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.053027674 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.342333501 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.346802134 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.351285571 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.345757013 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.347903873 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.38379875 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.609196708 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.446138231 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.350189776 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.351417895 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.38242815 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.348417615 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.349125967 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.552860081 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.342840552 seconds)
    (67/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.347851943 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.404474347 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.585247082 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.527282446 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.971415951 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.348718765 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.450171885 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.467091532 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.34359394 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.349170697 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.349328322 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.350002534 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.462030562 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.343927343 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.793096294 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.529980551 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.360986965 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.856983734 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.450689749 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.344997334 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.795323362 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.348822512 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.347663371 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.127367948 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.447381264 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.34484115 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.34938215 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.350555605 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.792545682 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.97329117 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.63855749 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.352222519 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.964576665 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.350382494 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.350498873 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.808345152 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.945849285 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.100914517 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.352243621 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.469154082 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.533095948 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.364465736 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.351811659 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.865873774 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.353286855 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.408521689 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.346518309 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.757167618 seconds)
  done (took 384.467393721 seconds)
done (took 623.666554366 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.211396942 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.15616154 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.326571788 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.173562031 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.153575264 seconds)
  done (took 12.264264408 seconds)
done (took 13.508953561 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.558034733 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.558488489 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.420171553 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.558512444 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.387241831 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.576601565 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.547012458 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.37234495 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.469658992 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.438662096 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.468910426 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.409963256 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.384634297 seconds)
  done (took 20.39562898 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.649970705 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.363295655 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.424152032 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.632753493 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.400742649 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.647875908 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.687238404 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.364645386 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.513319153 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.379035277 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.374082161 seconds)
  done (took 19.682983009 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.652769733 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.364412928 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.416124658 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.640088254 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.397486129 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.686726365 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.688427666 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.366438692 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.512265621 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.375241532 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.373772483 seconds)
  done (took 19.719015314 seconds)
done (took 61.043773171 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.392180455 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.457104148 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.386029345 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.37007904 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.366372204 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.371410439 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.372534727 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.372316581 seconds)
  done (took 12.33195732 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.371600817 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.369763041 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.369116963 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.369299118 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.368595811 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.368976235 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.370058893 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.371149712 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.371580214 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.369963674 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.367533488 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.370979539 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.37055555 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.367420228 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.371139376 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.371705682 seconds)
  done (took 23.166886584 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.371694647 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.370498897 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.369855666 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.369965055 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.371024596 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.372989338 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.372993481 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.367722963 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.369992026 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.370381858 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.372241938 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.371549992 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.372003077 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.373463769 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.37244802 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.371853513 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.372946789 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.372839782 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.377635245 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.372175458 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.371928515 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.370959404 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.372934589 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.37096197 seconds)
  done (took 34.171742932 seconds)
done (took 70.916565751 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.3723613 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.37006289 seconds)
  done (took 5.989663149 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.4336495 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.431571021 seconds)
  done (took 4.114290251 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.373021003 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.371607993 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.373441659 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.372224952 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.371071683 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.374362593 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.374691947 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.372526391 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.371302992 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.373095152 seconds)
  done (took 14.97571776 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.374562442 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.373103049 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.374607383 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.372825473 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.374819839 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.372991119 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.373576103 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.373503989 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.373282469 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.373159704 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.374228763 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.374337602 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.373891749 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.373295291 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.37472266 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.373583912 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.375886698 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.375198396 seconds)
  done (took 25.980307439 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.386022105 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.393338177 seconds)
  done (took 4.028846129 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.512713049 seconds)
    (2/7) benchmarking "second"...
    done (took 1.415545816 seconds)
    (3/7) benchmarking "month"...
    done (took 1.488894627 seconds)
    (4/7) benchmarking "year"...
    done (took 1.480238008 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.414705091 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.393013854 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.414445803 seconds)
  done (took 11.369474098 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.375422793 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.588685338 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.723793428 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.935479527 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.374848824 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.378091925 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.197523838 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.377688863 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.379337372 seconds)
  done (took 15.579782849 seconds)
done (took 83.286409607 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.359107586 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.442768901 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.376766309 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.385546495 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.713793973 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.403473618 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.360174128 seconds)
done (took 17.292871752 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.353000679 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.343458479 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.360410079 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.372494447 seconds)
  done (took 10.67967919 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.370390411 seconds)
    (2/2) benchmarking "read"...
    done (took 1.644656607 seconds)
  done (took 5.267264538 seconds)
done (took 17.201224499 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.37601044 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.376745935 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.374662306 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.377323475 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.376181575 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.374716042 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.375881288 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.376308946 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.37760829 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.374993267 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.375615855 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.377084534 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.375384498 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.376661382 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.375836625 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.376889548 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.378372223 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.37684028 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.376941988 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.377845089 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.376085547 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.377173841 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.377151332 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.377354276 seconds)
  done (took 34.288019251 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.379044022 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.376209114 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.377411886 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.377867966 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.378497438 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.3774391 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.378498426 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.377723921 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.377962983 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.378392635 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.3755537 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.376928586 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.377828603 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.377166233 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.37871124 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.378800899 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.378217196 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.378357819 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.376658074 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.37750818 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.379787766 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.378712184 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.379302001 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.378306352 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.377753249 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.377042831 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.377943911 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.37979815 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.379979708 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.380051101 seconds)
  done (took 42.596989151 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.383079222 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.382808728 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.380249086 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.37766174 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.3793173 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.379304833 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.377849929 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.379123538 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.379954152 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.379479675 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.376983975 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.378513703 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.379865197 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.379244533 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.376321777 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.378370637 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.3802513 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.379432447 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.38125335 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.378539344 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.378492804 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.379967843 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.378650869 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.380877675 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.378431327 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.380896871 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.38064642 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.38144029 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.378447213 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.378340458 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.379395436 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.380811778 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.379827206 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.379624675 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.380317681 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.377498019 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.38446822 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.384815007 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.380524197 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.380641905 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.380353424 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.381397009 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.380133943 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.379820343 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.381163153 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.38026828 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.379569766 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.379576117 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.381437955 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.379125439 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.380827442 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.381049245 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.37864001 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.380873456 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.380664061 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.381042152 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.381375281 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.379883031 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.380810804 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.380095648 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.381007703 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.379912583 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.380967643 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.383361339 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.382686273 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.37997489 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.382241975 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.382467206 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.38204038 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.382993956 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.381973822 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.382025913 seconds)
  done (took 100.638681654 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.383004426 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.38433344 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.384529319 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.383678065 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.382234694 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.382037206 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.38314167 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.38274474 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.380685753 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.383952839 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.384443218 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.383942546 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.383645174 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.383534054 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.383929809 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.383807129 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.383976644 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.384184149 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.383395183 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.385708909 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.384561225 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.386394405 seconds)
  done (took 31.700508968 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.383226396 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.384569684 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.385159768 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.386380465 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.387999182 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.386052879 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.384084926 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.385236285 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.384250436 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.383592934 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.386188188 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.384420632 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.387202495 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.38441552 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.385691525 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.388558534 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.383331195 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.389372409 seconds)
  done (took 26.199338748 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.385404114 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.385974382 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.386148856 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.385666793 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.386453788 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.385240804 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.38650247 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.386350787 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.387793116 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.384271199 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.385960548 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.387332856 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.386638061 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.386390179 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.385304958 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.387375956 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.386976159 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.384744672 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.38582345 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.385827318 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.38616778 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.386118552 seconds)
  done (took 31.755269254 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.387875038 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.386652003 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.387612534 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.386764807 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.386697123 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.387645709 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.388751823 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.385297944 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.389180909 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.388242639 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.387391848 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.388111467 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.39030418 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.387377661 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.389394417 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.390256389 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.390151494 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.387837198 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.38808198 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.388847399 seconds)
  done (took 29.025099883 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.388461942 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.391775298 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.391022556 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.388167439 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.388297528 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.390621837 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.390358082 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.386927788 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.390287987 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.390826421 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.389286177 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.388124708 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.38998345 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.397651971 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.388848821 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.39109663 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.389725786 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.388642219 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.387666966 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.39019246 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.390957146 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.38968201 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.389635534 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.390256176 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.387968788 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.39018947 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.390974381 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.392697015 seconds)
  done (took 40.182545024 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.393525075 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.390760923 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.388888209 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.390575822 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.389440174 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.39167468 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.38908914 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.391839873 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.391594817 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.388274897 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.390428904 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.389372248 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.389539976 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.390751963 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.393213351 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.387821664 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.392895842 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.39091211 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.390327796 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.390409703 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.392253897 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.392760684 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.391865434 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.390744849 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.392804002 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.392989916 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.39338 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.395343824 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.394579818 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.393437089 seconds)
  done (took 43.006916381 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.413203582 seconds)
    (2/2) benchmarking "in"...
    done (took 1.414947246 seconds)
  done (took 4.092879596 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.394413547 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.393545702 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.392331093 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.393826686 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.39278572 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.392517483 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.391879943 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.393576443 seconds)
  done (took 12.411295499 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.386143319 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.392176852 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.393801378 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.39358012 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.392419198 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.387337235 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.393150532 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.394820118 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.384911622 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.384908266 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.392100094 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.391620861 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.389076825 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.389942094 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.387784659 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.388691881 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.394932476 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.39328463 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.39271699 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.395293441 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.393990417 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.389585396 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.390462397 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.397921955 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.388702563 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.396880688 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.392990794 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.398425464 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.388458531 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.390684097 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.388742054 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.397304792 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.394317496 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.394451139 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.396861132 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.396012638 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.396885567 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.393089418 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.395130237 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.396828763 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.396155268 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.396293729 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.3949987 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.39341169 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.391426703 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.397357789 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.39672926 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.394561373 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.387950552 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.390865263 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.40061561 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.386277026 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.395107793 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.392207601 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.39307162 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.394607764 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.399277259 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.392243037 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.394869736 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.398429353 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.404114456 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.399150486 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.392639227 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.399120685 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.39846865 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.405595717 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.399471726 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.40117573 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.398873421 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.398051354 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.396479477 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.406565614 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.404063574 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.397566275 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.397895865 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.399044337 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.392698454 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.399443769 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.397840269 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.396716675 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.400777413 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.397436465 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.400078533 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.405091663 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.391551942 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.399431388 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.399182755 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.398556863 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.391677037 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.399960388 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.400407479 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.399822095 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.390720736 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.392172849 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.393217322 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.398731848 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.390633383 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.393056232 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.400067871 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.39962226 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.397662776 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.396189944 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.397182941 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.401398361 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.39965043 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.399470683 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.402305116 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.393250514 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.39984675 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.405336173 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.401016763 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.392863508 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.396756834 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.402235056 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.39563584 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.399258599 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.400305136 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.396220685 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.400245598 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.401363129 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.40198381 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.411263687 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.400367528 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.401066344 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.398063488 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.407412682 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.400258749 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.398268724 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.402682218 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.400550856 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.403263953 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.398966529 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.401682833 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.395890886 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.402298051 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.396606982 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.40318804 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.403168429 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.402881853 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.396131755 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.398198644 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.397078192 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.398392378 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.399003913 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.404185806 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.399226987 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.403621383 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.397551974 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.398646015 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.400265172 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.40617194 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.403386411 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.396843046 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.404103577 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.393935124 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.403313696 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.395385491 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.402613257 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.40446314 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.405481586 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.405664697 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.397589476 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.39877494 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.404612764 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.400463427 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.397955544 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.403909358 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.402511075 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.404123742 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.397910507 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.405288953 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.394356538 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.398960506 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.408972051 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.404595941 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.403917588 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.401240053 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.405841676 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.405164154 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.403863097 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.399920134 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.402492023 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.404070164 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.40543015 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.40869785 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.403283876 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.406758419 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.398204681 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.396912983 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.40433051 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.400831539 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.409344369 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.409554449 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.407618667 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.399248881 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.407753621 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.400120424 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.405495527 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.401649985 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.408177931 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.408309414 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.405345035 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.398670069 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.407507691 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.402202886 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.406931684 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.399392993 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.410452635 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.407759718 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.40792529 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.407273568 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.399812672 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.401261622 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.407808293 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.407547205 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.406248985 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.397925762 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.407459047 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.397065197 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.401250585 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.408860897 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.405253998 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.406190699 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.410902925 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.401344182 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.405513102 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.403307226 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.400170109 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.407612648 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.404319289 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.403380497 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.409091842 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.404054116 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.404552443 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.407806801 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.40792324 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.401974114 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.404906271 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.410614035 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.40676578 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.403458642 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.413797192 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.407924071 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.408727474 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.40892112 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.401870542 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.409861663 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.407316413 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.409941444 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.401273085 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.411605105 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.403401283 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.411978785 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.402579939 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.40470226 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.406064157 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.403845293 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.413009309 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.410327393 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.402202422 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.40839083 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.408617952 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.408400339 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.404483988 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.413198143 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.408109168 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.406442974 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.404601943 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.406205953 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.412381514 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.402643403 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.406855691 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.404965907 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.414684168 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.419975086 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.40967462 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.407923389 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.411148135 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.409363986 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.405058156 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.403962229 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.404602319 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.405339062 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.404659201 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.405157682 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.412478071 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.406331021 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.413659794 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.4073624 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.40965728 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.414733353 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.413572015 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.407747949 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.412621499 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.411730914 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.412577165 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.404543232 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.411318063 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.405817256 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.406967143 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.407647399 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.406310823 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.413305962 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.40827135 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.408899307 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.408569155 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.409475557 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.406487776 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.409024616 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.413499869 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.40930191 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.41609656 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.408923589 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.41299174 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.407194292 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.414103673 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.413810759 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.409647201 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.41942604 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.41299768 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.406283243 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.405482825 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.413938889 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.414931311 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.413231069 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.406831819 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.413842134 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.411177548 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.411312377 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.412529492 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.412565207 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.411909885 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.412515701 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.413659536 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.412346758 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.409480304 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.409697694 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.416747657 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.412772082 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.416134085 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.408317159 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.410385554 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.41693993 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.408595088 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.409244949 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.408579191 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.417786876 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.417906126 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.41721844 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.417212958 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.416884835 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.414482111 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.412811286 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.416894713 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.416444692 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.415430555 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.417841827 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.414613035 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.419945473 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.409861381 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.414832234 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.416984774 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.411408565 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.408695637 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.410365356 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.417895471 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.41018289 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.42041873 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.416781981 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.4129214 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.411688975 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.419640768 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.41171405 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.417537845 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.430509264 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.412637845 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.417252306 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.416016141 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.409508604 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.416970306 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.417795362 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.408659409 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.41220316 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.418167336 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.42186316 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.408411583 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.414921005 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.410169663 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.415509356 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.417791451 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.419059513 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.416501999 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.418194674 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.410399521 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.417187424 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.412061992 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.420287169 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.412684432 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.412139427 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.412080516 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.419523551 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.419102581 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.412664634 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.41793803 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.419157164 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.41332846 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.412580506 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.419424137 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.411491605 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.420604922 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.412837404 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.416688998 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.416500975 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.415531766 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.413335258 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.419240196 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.415056955 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.412149716 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.420928628 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.421239081 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.421133096 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.414703125 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.422636436 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.415130663 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.413265988 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.420184991 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.414921829 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.421432697 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.414733191 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.416984495 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.414089743 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.422133329 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.421098098 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.421448954 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.414089422 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.414930147 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.421086043 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.418389973 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.419913908 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.419647882 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.421420071 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.413236229 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.416299677 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.418664776 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.411925965 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.416145999 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.423228143 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.417442241 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.417348865 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.417496771 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.424024446 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.422390322 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.415638944 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.415735529 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.424436643 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.420135022 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.422607788 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.41802309 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.417653003 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.414890422 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.423636017 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.423646101 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.418671242 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.424671625 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.41970878 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.423675094 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.419421984 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.418237335 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.417339301 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.42522667 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.427170712 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.415194052 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.423917008 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.416766093 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.424637577 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.424019705 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.422884725 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.415567138 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.41456127 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.421299968 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.422841046 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.422573945 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.419496403 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.417672581 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.420967235 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.42449704 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.426803365 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.425609282 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.426818468 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.417673542 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.424398664 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.417822096 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.418967519 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.419421338 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.418387743 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.42940768 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.42639848 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.422214626 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.427286433 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.431157152 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.426590906 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.416132309 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.420311214 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.421549055 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.427018111 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.427287233 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.420628604 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.423937799 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.426709433 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.426463802 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.42538538 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.420122043 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.431557261 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.428608763 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.417926321 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.419645997 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.42575639 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.428903995 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.425729676 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.426544749 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.419526892 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.422070438 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.432408281 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.424890219 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.425866882 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.424336253 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.419892247 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.426887434 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.420408168 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.424800661 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.423103739 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.42869752 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.42768619 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.424180206 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.431622418 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.428328303 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.429448272 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.441182666 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.422163675 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.423198227 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.427169374 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.419375236 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.427294833 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.422284304 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.427075364 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.428560989 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.427486176 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.426895827 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.421496194 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.424746764 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.422918277 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.43090454 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.429087916 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.42070478 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.422711233 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.427701699 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.426387872 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.426329427 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.428180825 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.430254203 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.42680706 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.420427066 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.431963782 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.432298161 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.43142431 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.428554535 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.428624321 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.425127667 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.427196137 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.430664945 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.434080481 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.430321381 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.430183261 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.423002582 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.429548424 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.431539747 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.422684774 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.421925003 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.421006937 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.431814693 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.432693878 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.440346317 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.430320792 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.425517626 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.432641983 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.431224898 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.424618045 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.43142161 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.429221674 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.424691805 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.425163481 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.434112712 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.43281724 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.431860276 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.426341999 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.433938599 seconds)
  done (took 841.887165181 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.429548106 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.430922688 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.430805573 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.429425714 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.428969435 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.430229787 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.429369437 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.430270219 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.430879152 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.432983076 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.430618754 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.429097645 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.429230854 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.431407117 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.430580419 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.432557106 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.429574206 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.431667601 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.433565411 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.430865071 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.43097004 seconds)
  done (took 31.342820882 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.434279401 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.431692572 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.432553246 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.431860673 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.432421779 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.432742732 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.432265131 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.431525183 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.430178363 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.432761373 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.433506948 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.434421496 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.433124808 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.433431091 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.431587107 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.434986666 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.432467036 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.433985445 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.433946471 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.431244329 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.431857681 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.432677245 seconds)
  done (took 32.820088977 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.431525299 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.433041538 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.423597957 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.432267417 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.431989097 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.434731774 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.433743826 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.437142658 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.43471083 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.428710352 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.423264343 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.42905536 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.433128065 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.440986335 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.426802538 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.435871552 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.432332731 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.433805108 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.432447729 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.435776423 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.435240988 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.436375325 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.434011547 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.426016951 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.435699658 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.435202577 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.434421427 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.435534125 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.428036741 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.436856638 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.435955641 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.428542416 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.43188206 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.430173528 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.427738729 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.439393641 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.43949868 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.436147116 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.436271828 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.43891593 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.448954336 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.435841828 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.434206778 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.43812486 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.435511381 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.431780575 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.440895706 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.435020494 seconds)
  done (took 70.128421155 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.435591401 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.435894513 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.434510236 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.435750732 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.436591016 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.436723463 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.438312879 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.436895526 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.437973331 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.437328943 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.438837085 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.439486318 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.437257447 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.440449096 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.43735019 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.436434477 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.436647077 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.440052872 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.43841659 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.441415788 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.437622706 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.437847666 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.440729472 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.438814456 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.439137637 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.436114013 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.439051713 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.439623889 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.438486186 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.440160032 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.439512777 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.439328516 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.443004556 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.4397656 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.437360922 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.438854864 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.435891044 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.440258435 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.438052135 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.438036815 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.438960453 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.439884956 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.440703617 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.439174293 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.442844877 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.440039134 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.440997467 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.439551665 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.441390378 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.439958711 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.441563288 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.438946916 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.440341864 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.440207366 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.443185871 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.439596664 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.439350324 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.438744818 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.439241618 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.440564694 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.440411103 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.44210028 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.442291124 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.440432909 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.441504638 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.439358762 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.440364436 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.439618056 seconds)
  done (took 99.166245428 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.440278653 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.440138485 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.439755159 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.440542573 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.444331125 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.440409794 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.442375561 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.444172144 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.44144667 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.442427359 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.441725908 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.443139325 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.44089512 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.444247799 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.442650335 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.440208661 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.442589968 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.442994985 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.446957671 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.441056174 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.442819867 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.442592877 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.442132551 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.441911014 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.443521334 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.445583825 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.442917231 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.443464537 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.443960686 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.443389711 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.441275289 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.444073338 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.441350072 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.443626156 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.445192701 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.442323506 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.443280959 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.443573227 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.443873347 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.443824645 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.442671307 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.444490824 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.444997906 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.442100744 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.441784252 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.442099518 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.44244661 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.443231268 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.446199404 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.443632451 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.448018728 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.44401853 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.444182308 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.443284862 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.446862317 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.444285004 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.444386617 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.44470678 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.441893485 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.44415278 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.444327677 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.446476967 seconds)
  done (took 90.786232033 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.445026861 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.444140357 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.445336416 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.444324041 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.445538607 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.444287551 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.444216704 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.443916889 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.445873887 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.441535825 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.44567109 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.442544979 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.445469471 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.443944781 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.445842567 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.445779012 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.444557627 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.44564494 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.443471499 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.444493837 seconds)
  done (took 30.20207731 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.444595733 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.446160524 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.44362765 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.444258983 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.444304306 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.44397991 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.443587034 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.445125226 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.444546038 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.444503937 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.442964198 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.444695461 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.445656189 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.444201277 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.444955395 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.445458369 seconds)
  done (took 24.422329274 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.442562481 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.443037709 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.440917387 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.44096513 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.441367131 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.44376817 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.441189365 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.440069644 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.439299906 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.445678554 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.442665484 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.443329026 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.443779948 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.441408946 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.441196376 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.445892421 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.443547578 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.442405916 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.443033227 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.441892264 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.443192006 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.441599558 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.442405004 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.442584878 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.443455068 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.443252303 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.442968142 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.440226133 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.440559418 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.44191992 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.441339713 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.443778218 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.441315216 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.441655053 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.439235132 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.439871129 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.44203861 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.441479749 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.441502062 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.442523636 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.439879444 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.440979909 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.439423133 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.442777266 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.439148057 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.441795948 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.44609033 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.440211259 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.438847536 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.439643701 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.439442167 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.439129495 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.440315985 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.443419301 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.440077032 seconds)
  done (took 80.607391335 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.439851163 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.438765843 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.438103493 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.440117485 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.441046272 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.438779246 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.440443276 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.441714907 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.439672097 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.43819681 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.442356003 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.442772153 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.441551518 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.438805539 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.437869258 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.438756067 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.438483381 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.439938394 seconds)
  done (took 27.222874155 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.439662657 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.437299465 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.436867531 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.438508255 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.439576959 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.439562772 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.439374453 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.440041927 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.43837143 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.439432385 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.438123104 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.437636433 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.439683039 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.441638474 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.438621365 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.440239769 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.439407048 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.438859608 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.43817565 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.439799436 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.441370612 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.438882547 seconds)
  done (took 32.968849973 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.43159282 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.430587286 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.428817648 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.445126487 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.44453252 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.429653147 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.429177312 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.432239491 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.453476039 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.470543214 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.464216617 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.444718475 seconds)
  done (took 18.607772683 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.440339917 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.439529734 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.440659499 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.440575172 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.441890077 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.442192476 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.443018303 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.442520205 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.439514838 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.439523772 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.441745818 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.442199735 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.441537249 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.442336595 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.441737081 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.442629321 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.443761824 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.440940946 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.443053822 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.442588408 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.441870544 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.442898567 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.441917344 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.441042933 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.444450306 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.440170543 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.440631469 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.443944108 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.442175815 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.442257759 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.442587436 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.441924809 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.442034184 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.442891852 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.44301784 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.441697447 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.444402952 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.443025651 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.442150728 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.444369897 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.442769977 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.444946982 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.444683432 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.444992333 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.443696366 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.444199321 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.443120689 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.444598166 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.442836168 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.443272189 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.443895046 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.443924283 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.444888138 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.442394635 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.442299618 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.44431577 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.444019352 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.442778713 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.444207927 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.444433546 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.444621099 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.444794792 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.446777229 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.444094876 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.446590255 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.445784316 seconds)
  done (took 96.536236028 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.446656054 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.444372899 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.447209137 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.44767778 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.444312073 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.443462098 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.446926703 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.44577371 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.447591947 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.445181534 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.445612768 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.445005416 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.44562651 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.445061552 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.446129013 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.446026689 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.445663031 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.446028265 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.444937938 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.449144191 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.447406286 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.44711609 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.446851824 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.444811346 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.446405288 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.445988713 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.446821645 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.448342408 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.444880534 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.446873853 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.447109753 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.445733935 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.447161716 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.446887656 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.447471935 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.447085725 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.447355218 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.446433471 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.447818324 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.448013642 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.449044021 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.448374464 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.450011826 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.448721934 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.447285758 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.447298657 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.449930751 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.447550304 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.44852341 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.45144096 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.450227511 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.447852702 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.449250454 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.448582704 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.448417772 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.448098372 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.450249848 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.448743016 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.44861806 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.44923356 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.449914106 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.448718214 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.448001012 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.44797915 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.451211462 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.449435352 seconds)
  done (took 96.839579693 seconds)
done (took 1970.687975604 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.604286376 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.561547805 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.439929291 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.455609533 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.434968802 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.440186477 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.449356535 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.438497704 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.439260645 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.439897297 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.438859219 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.632816715 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.473851501 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.435556168 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.43958909 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.534316108 seconds)
  done (took 28.970075888 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.472595405 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.447350321 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.569429362 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.443492494 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.470552997 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.64515736 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.503473848 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.438973904 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.631860443 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.462106624 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.439248463 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.462426639 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.443868469 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.443360237 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.457883868 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.64659612 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.714012337 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.439127732 seconds)
  done (took 31.444637446 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.930949087 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.452148966 seconds)
  done (took 5.696044047 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.464848783 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.444089788 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.444589701 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.439011865 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.436000934 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.431431233 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.444223387 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.438400579 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.429737073 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.582098997 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.443820471 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.455829884 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.442269353 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.447028708 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.451153097 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.488640751 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.587791612 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.451564093 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.452002574 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.447988321 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.444282609 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.542265336 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.484226576 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.452957372 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.579730843 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.43740063 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.446221086 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.453025615 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.574848655 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.453939349 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.444155277 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.444211521 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.447697549 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.436571748 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.938127103 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.446367056 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.46554257 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.446673152 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.451605537 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.589388444 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.448008917 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.448534404 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.445884252 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.90700258 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.589570127 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.571662551 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.437837656 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.438131493 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.44513706 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.513994409 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.439363612 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.443308259 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.505324665 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.30085924 seconds)
  done (took 91.451405908 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.449722379 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.43532815 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.610564779 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.458407321 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.432073085 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.447842347 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.431028946 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.744558351 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.486638302 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.436417856 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.745363963 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.979752974 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.435384525 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.503388685 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.997846652 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.464728421 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.438497339 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.44672548 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.431407512 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.438055705 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.977406862 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.435581091 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.447688383 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.487929648 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.475288204 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.94186898 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.432490431 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.431620431 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.450436681 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.431309313 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.939772746 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.439948743 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.524939383 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.434129103 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.724637475 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.826582044 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.794020369 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.432189057 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.474179184 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.438264219 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.461657438 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.926729082 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.802404317 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.432690702 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.431225356 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.924852292 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.431968016 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.444948746 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.438442905 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.679602037 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.436538595 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.440447876 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.434264115 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.430214651 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.436570024 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.519547202 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.470525461 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.96575851 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.432710032 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.437709431 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.447822739 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.437146103 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.438233576 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.442879971 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.436760331 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.817603543 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.729458253 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.436970336 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.815005605 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.925413792 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.444355978 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.008143716 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.435663252 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.46951544 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.641586572 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.438630813 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.43096274 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.970049223 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.43365963 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.432719809 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.797494261 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.435100484 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.746041597 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.457665514 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.434091536 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.999022252 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.445017682 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.47194894 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.440373611 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.435200849 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.449544777 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.441724282 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.725994417 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.493051814 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.439696626 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.436502649 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.485443626 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.437855904 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.451634198 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.44000981 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.00571833 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.432924889 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.440336177 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.444898668 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.43611717 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.454217728 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.441134267 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.440168453 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.692028636 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.439010107 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.440557666 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.439370843 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.435113845 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.438182741 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.491791371 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.443059413 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.756774477 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.434123363 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.436304779 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.457067375 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.4392632 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.457064962 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.434887312 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.439122113 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.322057638 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.674326078 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.455835103 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.43826026 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.441896224 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.437761915 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.45098647 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.448162233 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.501781054 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.441198586 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.205379205 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.456439413 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.464535779 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.437639552 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.444552346 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.449788013 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.440111198 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.440293975 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.748251113 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.721536307 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.72866721 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.435004604 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.442861669 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.204303717 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.441075476 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.576646496 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.458466468 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.435743722 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.661410257 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.762235258 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.441642225 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.433817909 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.438927576 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.678106286 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.449698877 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.759045098 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.953411488 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.435175927 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.444530875 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.20493021 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.154399358 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.440724843 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.438453876 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.732730702 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.45591135 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.439376933 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.439483786 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.44253111 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.434775753 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.444364266 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.438484245 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.441070103 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.440807649 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.708226067 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.615861075 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.456457858 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.441509145 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.923696968 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.46377209 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.43536649 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.463227466 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.435906787 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.438154467 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.4920191 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.442709156 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.449585071 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.441678779 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.447186715 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.944930877 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.43666809 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.441355185 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.59429874 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.120163295 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.433990093 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.439790519 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.45334391 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.063380065 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.976744649 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.501012393 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.752594605 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.440617004 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.481052247 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.439955232 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.489338422 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.942048895 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.439078705 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.441812482 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.082417199 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.435687938 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.879973173 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.437077398 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.442346299 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.014223045 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.436724987 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.442930487 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.434934422 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.437117055 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.726697489 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.441829912 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.451698562 seconds)
  done (took 521.220364685 seconds)
done (took 680.094170831 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.441091439 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.443968335 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.428390628 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.442757385 seconds)
  done (took 11.070459346 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.456418746 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.448404818 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.455889796 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.446796903 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.458938607 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.446298241 seconds)
  done (took 10.029903619 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.441395691 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.439968385 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.442015525 seconds)
  done (took 8.639463998 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.662607661 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.460306308 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.801926506 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.443049038 seconds)
  done (took 9.684657166 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.453780417 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.45583111 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.458529833 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.459333512 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.457358685 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.459778403 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.459931101 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.456517234 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.457540691 seconds)
  done (took 14.433992408 seconds)
done (took 55.173928189 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.556435033 seconds)
    (2/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.557877054 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.5487376 seconds)
    (4/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.336865302 seconds)
    (5/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.265216523 seconds)
    (6/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.437168531 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.545163302 seconds)
    (8/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.423961646 seconds)
    (9/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.448882021 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.50496864 seconds)
    (11/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.547480174 seconds)
    (12/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.446519518 seconds)
    (13/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.421783754 seconds)
    (14/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.662517395 seconds)
    (15/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.480743697 seconds)
    (16/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.477459469 seconds)
    (17/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.433993263 seconds)
    (18/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.585367428 seconds)
    (19/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.706743981 seconds)
    (20/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.341035944 seconds)
    (21/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.440136467 seconds)
    (22/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.467432125 seconds)
    (23/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.607322123 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.594113774 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.672151567 seconds)
    (26/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.426294478 seconds)
    (27/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.636925117 seconds)
    (28/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.296820919 seconds)
    (29/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.295617375 seconds)
    (30/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.559483319 seconds)
    (31/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.517780557 seconds)
    (32/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.427163975 seconds)
    (33/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.143074183 seconds)
    (34/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.426289404 seconds)
    (35/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.422325381 seconds)
    (36/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.299667213 seconds)
    (37/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.430070825 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.610348119 seconds)
    (39/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.209912673 seconds)
    (40/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.546584102 seconds)
    (41/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.532751276 seconds)
    (42/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.523708782 seconds)
    (43/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.572125029 seconds)
    (44/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.503176359 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.562981557 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.612006138 seconds)
    (47/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.508106368 seconds)
    (48/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.702055826 seconds)
    (49/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.477945251 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.545526702 seconds)
    (51/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.427319298 seconds)
    (52/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.40533951 seconds)
    (53/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.559270821 seconds)
    (54/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.478824153 seconds)
    (55/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.531697319 seconds)
    (56/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.46986224 seconds)
    (57/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.422679475 seconds)
    (58/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.479624796 seconds)
    (59/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.666735715 seconds)
    (60/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.431593138 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.604842398 seconds)
    (62/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.429421227 seconds)
    (63/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.421337418 seconds)
    (64/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.429121701 seconds)
    (65/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.196178419 seconds)
    (66/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.104916925 seconds)
    (67/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.427968248 seconds)
    (68/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.214066241 seconds)
    (69/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.527731399 seconds)
    (70/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.669398981 seconds)
    (71/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.478943384 seconds)
    (72/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.567152044 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.542013244 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.677840961 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.557493576 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.607698056 seconds)
    (77/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.483406878 seconds)
    (78/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.448163239 seconds)
    (79/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.667284939 seconds)
    (80/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.306779219 seconds)
    (81/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.597249664 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.544361462 seconds)
    (83/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.440101759 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.563109636 seconds)
    (85/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.577074384 seconds)
    (86/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.534516316 seconds)
    (87/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.586010108 seconds)
    (88/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.547013613 seconds)
    (89/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.441590415 seconds)
    (90/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.438172866 seconds)
    (91/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.664069711 seconds)
    (92/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.519530759 seconds)
    (93/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.255644033 seconds)
    (94/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.633834643 seconds)
    (95/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.600433198 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.572256254 seconds)
    (97/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.447814878 seconds)
    (98/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.479830336 seconds)
    (99/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.547771424 seconds)
    (100/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.622193181 seconds)
    (101/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.431185138 seconds)
    (102/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.606113651 seconds)
    (103/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.56714455 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.526212689 seconds)
    (105/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.489085002 seconds)
    (106/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.280970793 seconds)
    (107/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.633481312 seconds)
    (108/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.484460128 seconds)
    (109/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.787351468 seconds)
    (110/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.449412618 seconds)
    (111/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.432248359 seconds)
    (112/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.434892085 seconds)
    (113/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.607594236 seconds)
    (114/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.43223421 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.577772288 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.487402384 seconds)
    (117/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.570154789 seconds)
    (118/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.627602392 seconds)
    (119/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.592085958 seconds)
    (120/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.432817032 seconds)
    (121/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.630385562 seconds)
    (122/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.487055405 seconds)
    (123/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.542466576 seconds)
    (124/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.432190074 seconds)
    (125/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.519607421 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.605831311 seconds)
    (127/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.479859321 seconds)
    (128/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.537947701 seconds)
    (129/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.586093984 seconds)
    (130/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.546620499 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.557048165 seconds)
    (132/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.436002518 seconds)
    (133/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.179247561 seconds)
    (134/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.436304694 seconds)
    (135/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.489862559 seconds)
    (136/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.456656412 seconds)
    (137/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.449820162 seconds)
    (138/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.486243003 seconds)
    (139/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.518487945 seconds)
    (140/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.47170411 seconds)
    (141/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.447049037 seconds)
    (142/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.152823412 seconds)
    (143/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.110866821 seconds)
    (144/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.433914246 seconds)
    (145/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.433401717 seconds)
    (146/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.727218734 seconds)
    (147/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.540124411 seconds)
    (148/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.628133081 seconds)
    (149/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.565320071 seconds)
    (150/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.490996791 seconds)
    (151/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.434555856 seconds)
    (152/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.566780558 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.680619806 seconds)
    (154/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.525996912 seconds)
    (155/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.481649587 seconds)
    (156/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.450107819 seconds)
    (157/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.53746633 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.516656436 seconds)
    (159/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.593594154 seconds)
    (160/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.288637016 seconds)
    (161/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.256849834 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.490776181 seconds)
    (163/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.43492047 seconds)
    (164/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.498397927 seconds)
    (165/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.678606454 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.564412494 seconds)
    (167/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.462499119 seconds)
    (168/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.610709423 seconds)
    (169/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.452451348 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.573311368 seconds)
    (171/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.539868773 seconds)
    (172/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.44669037 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.580271546 seconds)
    (174/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.60203619 seconds)
    (175/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.200485979 seconds)
    (176/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.532514969 seconds)
    (177/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.651200467 seconds)
    (178/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.643463993 seconds)
    (179/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.524705918 seconds)
    (180/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.489889629 seconds)
    (181/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.59697211 seconds)
    (182/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.160685224 seconds)
    (183/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.636603685 seconds)
    (184/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.429745034 seconds)
    (185/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.535048907 seconds)
    (186/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.437520996 seconds)
    (187/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.471461402 seconds)
    (188/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.538940298 seconds)
    (189/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.275591243 seconds)
    (190/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.586767929 seconds)
    (191/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.459310897 seconds)
    (192/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.729702646 seconds)
  done (took 362.471390804 seconds)
done (took 363.78777185 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.482695098 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.5518855 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.46302506 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.463900396 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.463341579 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.452268527 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.486660507 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.464680709 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.477316221 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.475425732 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.456377178 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.470078598 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.477722242 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.472438152 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.498238552 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.463487181 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.463934918 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.47418575 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.478116408 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.481199914 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.464219098 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.466807456 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.485795287 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.464057297 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.471984981 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.473691689 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.47168002 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.468502255 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.466118594 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.480135743 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.456579676 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.465696099 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.481512303 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.474905707 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.467947351 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.474221889 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.468547109 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.554442805 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.48398712 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.474731493 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.472548703 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.482988314 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.473844899 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.469592489 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.476289844 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.487257367 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.475340332 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.48301247 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.456236674 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.462858909 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.479014083 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.480272229 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.472515162 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.471028836 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.46045019 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.475821812 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.473717438 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.483530796 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.474205739 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.470885036 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.499147959 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.483774809 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.478383199 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.475952383 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.473391077 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.479636686 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.475827888 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.483326065 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.47336973 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.46939948 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.469435973 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.47399847 seconds)
done (took 115.579227683 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.590180878 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.465090824 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.6076346 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.475763538 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.628413867 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.601474828 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.475323239 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.475597885 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.477128586 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.269198761 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.481520055 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.484000399 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.46846388 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.477717185 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.598199706 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.476102426 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.47758827 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.166675398 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.476914074 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.611850328 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.465893166 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.477129092 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.476262426 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.268359443 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.463083865 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.465934538 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.608616871 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.473850473 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.166759208 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.46298978 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.46129908 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.163813871 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.610877367 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.495543958 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.486949867 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.485816541 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.629156331 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.479407416 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.588903821 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.588743643 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.606772577 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.515556304 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.465204068 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.470296816 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.482422935 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.480717372 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.478779539 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.506537863 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.469250522 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.480307009 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.168106722 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.489739693 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.478013419 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.480258893 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.478288023 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.507370556 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.478968564 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.480179775 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.6118301 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.479862034 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.595631972 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.272812561 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.270118211 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.478585061 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.463276941 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.48074605 seconds)
  done (took 117.607410221 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.538407744 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.54547645 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.584351867 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.470734009 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.519726639 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.583316888 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.470313395 seconds)
  done (took 12.04728585 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.477194628 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.479083652 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.520524387 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.520775616 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.478370902 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.631042582 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.480243516 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.481422823 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.479095793 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.524519983 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.479331863 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.480997272 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.489271735 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.470841241 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.522364823 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.482744983 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.586943557 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.472472928 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.480261524 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.627083675 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.479736735 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.491192427 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.524459023 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.482219952 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.48058287 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.478376615 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.238775494 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.479095916 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.479757543 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.480396345 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.481615035 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.52636286 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.481412596 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.472009262 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.483262808 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.590719989 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.48095363 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.481834649 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.482767236 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.474870135 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.480008953 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.483433579 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.48215103 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.482927848 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.481023772 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.499399621 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.482004493 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.483836323 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.484127174 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.480910396 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.525907403 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.481481086 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.480693391 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.483715661 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.534088918 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.492050192 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.48292718 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.485998451 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.485589661 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.484192803 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.626097357 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.519292155 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.482219398 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.520918972 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.482217165 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.48386018 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.484418294 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.483709123 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.528832666 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.483277849 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.524469769 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.483426413 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.655921845 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.499958325 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.485876727 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.479793291 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.4780343 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.484261269 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.477791041 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.483021548 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.482477082 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.478264931 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.483912473 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.482750706 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.483815227 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.636872281 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.583320763 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.485336248 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.490851659 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.48528983 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.485069162 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.529588317 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.483170432 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.485882473 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.527651702 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.591136913 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.532370273 seconds)
  done (took 151.723511384 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.490005833 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.487982196 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.479332293 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.503535304 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.479274954 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.475732412 seconds)
  done (took 10.254450501 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.478264955 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.489088209 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.482531546 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.483518263 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.484599988 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.483933149 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.482556538 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.476577178 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.486726526 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.485079114 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.482747936 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.485568905 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.485490337 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.484293326 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.486302416 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.486599567 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.48448893 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.485306201 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.485417655 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.486559338 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.475933149 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.484703949 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.487252253 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.479252631 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.488065618 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.483742354 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.497246386 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.486164461 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.486207347 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.481554667 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.487091801 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.485626318 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.479709173 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.481632208 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.488926751 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.479206284 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.487627778 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.489032286 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.484931042 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.487782204 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.486601945 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.485034721 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.48567744 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.488004631 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.47934454 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.481359256 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.492494216 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.497468002 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.485243316 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.490470657 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.489764864 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.492429246 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.488583266 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.48979937 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.482869371 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.484236723 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.49217893 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.487597489 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.489527433 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.481271556 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.488025563 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.488047166 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.481729918 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.489408933 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.491208985 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.491824898 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.480985586 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.490313892 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.488181927 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.488201569 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.490754188 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.487010572 seconds)
  done (took 109.333185042 seconds)
done (took 402.297999497 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.807065164 seconds)
  done (took 4.147987668 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.528035244 seconds)
  done (took 3.871498416 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.18866248 seconds)
  done (took 23.537412139 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.542802094 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.481253983 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.483074621 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.478953619 seconds)
  done (took 11.331776771 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.787881889 seconds)
  done (took 4.132171269 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.482466552 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.503441127 seconds)
  done (took 6.332861361 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.743863452 seconds)
  done (took 4.08680079 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.817899228 seconds)
  done (took 4.16290796 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.483783021 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.492050908 seconds)
  done (took 6.328343908 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.461305977 seconds)
  done (took 3.804969987 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.81159487 seconds)
  done (took 21.152390123 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.493094687 seconds)
  done (took 3.838705049 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.563641379 seconds)
  done (took 3.907435956 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.06705876 seconds)
  done (took 6.409362055 seconds)
done (took 108.38577898 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.472732081 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.467402426 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.469144725 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.469556813 seconds)
  done (took 11.221293861 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.542732059 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.54158548 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.545862357 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.540515354 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.541458168 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.538536021 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.515742511 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.513936995 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.540216283 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.542083021 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.549064243 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.540780196 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.539942428 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.514155071 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.539995788 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.547315159 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.542235815 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.546627793 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.514246958 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.541202545 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.487304838 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.541558192 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.54084256 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.489087447 seconds)
  done (took 38.139715355 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.998102049 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.552431992 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.634456851 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.530555393 seconds)
  done (took 8.059723326 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.56668638 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.570989574 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.589926797 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.627580865 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.658768485 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.587342432 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.518841751 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.51271908 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.498926807 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.572705485 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.623985759 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.556796596 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.661339561 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.491118675 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.78087493 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.491498611 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.492472106 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.571748418 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.623702832 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.640773506 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.492239049 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.568459203 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.575193504 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.555152376 seconds)
  done (took 39.174830062 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.501589236 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.512317729 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.494350111 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.507370932 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.492290488 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.494154127 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.494938782 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.499993297 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.493920044 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.495488294 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.494846921 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.507656949 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.493644674 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.493158142 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.500476449 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.49609436 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.493972099 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.500382615 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.502232229 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.493804807 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.493017705 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.500275795 seconds)
  done (took 34.30074261 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.478823026 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.478621076 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.8285257 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.731992204 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.479723617 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.478598253 seconds)
  done (took 14.822211247 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.555679198 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.693497246 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.479843615 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.834672481 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.918158731 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.485681871 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.485254535 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.731700245 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.024782178 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.020889136 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.540586399 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.554645582 seconds)
  done (took 21.673620285 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.491690084 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.480565578 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.488287146 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.49566317 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.539954099 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.483183598 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.493015018 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.478291463 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.541495869 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.539790462 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.482677961 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.539979273 seconds)
  done (took 23.404973444 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578976386 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.490323633 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.505094644 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529077684 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488955445 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.390169441 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.5211533 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.202821802 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.48885222 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.765285996 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504276378 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.579919749 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.745185446 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500809114 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.492572193 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.476815561 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.722277826 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001383518 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48591013 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489758939 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.521437579 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.503237268 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.491549464 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.704789293 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.326545092 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488261148 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.75623767 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.489035213 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.780799211 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.759895182 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.758670231 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.495950209 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.764367952 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137524729 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.583884365 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.703840822 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493500347 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.491990298 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.474342281 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.500589726 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504619054 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.492374442 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.754451069 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494207885 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.491122334 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.498184419 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210289472 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.492361821 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.490880283 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.497482333 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.758530678 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587623607 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.49660326 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.491267568 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492216004 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487280081 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.495728372 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.617483794 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04684062 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501837938 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497349231 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.492820977 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.495253764 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494437295 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151736602 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.492154058 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.497642416 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.498398798 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489999701 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.486809149 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.513182352 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492858289 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.50878487 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49483591 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282563553 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.497731631 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486384585 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053709449 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487820443 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.494577821 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.722604141 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492989765 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495142274 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.495291769 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.492651612 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.244648828 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.496739577 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.467662952 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529086861 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.203909795 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.70194187 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510452617 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527557905 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.716846359 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.465716381 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495435038 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.498485043 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492668228 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511551864 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.206853166 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490311605 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.496103216 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.753844268 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.708028662 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494994925 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.484193611 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982195599 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499990295 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.517616445 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.501238547 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.709086725 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.137369943 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.765830041 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513136761 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528017524 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.495654428 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.307024098 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500601269 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.504398493 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.509931191 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.776410044 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.345945812 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492634277 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564700827 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.502539465 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.502792176 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493128975 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499257198 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.495169297 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.693550184 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.505433341 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.764803107 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.499336895 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493142939 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.499142197 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511510715 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.502745507 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.715971241 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496481606 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.774802743 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49463205 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492791689 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495178805 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.714201621 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.502017595 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.506366679 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.764199028 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503421246 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.514514479 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.766141692 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529527777 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.60632271 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529225578 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.513063012 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.755026033 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.501425846 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.504322963 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499402281 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.500581716 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504465349 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.506527985 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497871802 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141980582 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478008228 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.495645485 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.500884838 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.516060307 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568264906 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.509006336 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.713716004 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.493940275 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499501096 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.506521545 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.506920333 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.726587774 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.765383421 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.514493402 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.581301193 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.983195675 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.138965829 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.516737311 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.500859816 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.499587241 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.499462072 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.5015011 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501701434 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.502145534 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.712971708 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.764778069 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.496727134 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.145889789 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505551261 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.502979762 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.508359495 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.767966147 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.513312483 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501765995 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.498604805 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501370638 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.531041043 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.770682705 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.639983353 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.52186546 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.505443014 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.022672756 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.510859945 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.505067308 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.503337605 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.536605375 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.503040657 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352871407 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.763103794 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.49539282 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.767543693 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.506779868 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.521916511 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.503532578 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503827877 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515809739 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.520125348 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.513359125 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.716176284 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.499423979 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507542028 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054842682 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307472838 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08014562 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.509422458 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.512312344 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.503642562 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.218040165 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499339788 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.505087677 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.737471858 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.212652011 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499640008 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983750332 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.502745441 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.249182674 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.769399209 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.738163173 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.516623341 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.506072611 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.768673146 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.717385426 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533598506 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.502683698 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520874775 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.473789765 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055886736 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496340422 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.587449235 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222776324 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503312111 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.505980723 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.50918661 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.506286424 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896762568 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.496845797 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504100197 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.499212584 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.517646609 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356326889 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.499696853 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.50318537 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165851501 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.508835457 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.007255897 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501335932 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.71480704 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.768050974 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.756469995 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.520627395 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.514421718 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.75740214 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.772473281 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507928967 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.516537346 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090778379 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.373292457 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.510046413 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505390543 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.316942138 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510610321 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.800075109 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.522048806 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.509157167 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507743132 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.507272348 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508177482 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.505766341 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.509602798 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480292199 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012252033 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.505876945 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521036013 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.519425645 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510801668 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.760158445 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.517471472 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.148859763 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.73320742 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.501923897 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.553246939 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.510673697 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51459832 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.480623855 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.503902928 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.506483778 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.576340819 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.722838045 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.504430478 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.482418851 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.530047238 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.716992787 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.50160924 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.518892573 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.729202094 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.499350814 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.524690495 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306635543 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531116501 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.515187983 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508133113 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.500485132 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538788441 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570373336 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.717668146 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.765002787 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.777694608 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898960326 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518478295 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.510443211 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.519303099 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598597194 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517986137 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.512884713 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.274360976 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150729938 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310569694 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.151117127 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.775127207 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.508249951 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509677748 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501861354 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.638507096 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.506942231 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.779608284 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504494183 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.5032594 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523020264 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518577768 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51719903 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.716833637 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.781618644 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504529609 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503817758 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506717608 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.503560685 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.774684595 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.717953751 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015439884 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072891244 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501780041 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.513930619 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.221695347 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.776864511 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505600623 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.506304167 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505710308 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.528191274 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.515039929 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.513437543 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506473192 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.643100765 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.771548551 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152247464 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.768504316 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.54582064 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.024996348 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513639296 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.762030277 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275533327 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.719162901 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.153958299 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.269070093 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.772746326 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574555331 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.718677147 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.50101436 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.641483138 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.521439558 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.503260214 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.503378652 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503774641 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.503833673 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.762056619 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150349792 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.764068026 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.502179363 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.49840233 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523415743 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.703336213 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.711100981 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.244779345 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.710054355 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.757313053 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.495361243 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.486935523 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.135306152 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.760759677 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486276857 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.485737661 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.706329213 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.480417496 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.508788643 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.002693211 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.479745715 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043619971 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.399314939 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503928268 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484767219 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.236453637 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.12886666 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.481275134 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990008921 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.473573475 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472456942 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.752834621 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.480278967 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.484175663 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.75345776 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.473749974 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.477152979 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.686705538 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.116400509 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.222158781 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.491623323 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467946191 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.475730946 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460263469 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474263998 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46082967 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.469584973 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.855727238 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.459014809 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459551424 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.465810835 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.459821615 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465777196 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.45747734 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453983066 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.466721353 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.435859541 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.435652643 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.459036557 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.577071779 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004437377 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452408585 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.134891537 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.802046741 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.708925993 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.455676932 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.430354433 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.460614556 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457546473 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461218677 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.454290575 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.44541413 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024223062 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.459780364 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.723304775 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.463966257 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.667672218 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.665889484 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.470173399 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.663883724 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44824333 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.470421217 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.417391127 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444934246 seconds)
  done (took 1039.01825158 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.454189511 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.439792378 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.447165866 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.484959212 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.442176282 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.508296822 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.516814572 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.547101328 seconds)
  done (took 21.163825559 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.450516297 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.449425798 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.454654341 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.45062175 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.450337188 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.920719372 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.444741139 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.442979343 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.462472648 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.449491905 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.44535444 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.123557306 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.464326688 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.448256442 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.417832743 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.443793158 seconds)
  done (took 33.639621441 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.527062466 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.617354286 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.395341083 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.48961787 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.471780363 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.434951861 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.678794022 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.442887767 seconds)
  done (took 27.374113059 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.444994861 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.444989088 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.444532319 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.442279619 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.443643835 seconds)
  done (took 8.530186637 seconds)
done (took 1321.869000094 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.445043263 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.442988766 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.444995443 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.443988557 seconds)
  done (took 7.085754187 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.412855441 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.412122513 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.414413204 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.425376885 seconds)
  done (took 9.976290221 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.138009005 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.035365112 seconds)
  done (took 5.485533867 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.926368848 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.926350757 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.922084326 seconds)
  done (took 7.082409637 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.719903574 seconds)
  done (took 3.028978598 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.35859327 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.429544194 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.096773507 seconds)
  done (took 8.195184797 seconds)
done (took 42.164479332 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.430045141 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.665734909 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.582438868 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.437246715 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.578562447 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.584181294 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.161583658 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.42439439 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.420004693 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.429572233 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.421098973 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.582461742 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.144554855 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.676639167 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.145455063 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.770286965 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.585886974 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.433981998 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.429918826 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.427204537 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.161140364 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.437714458 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.419942295 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.423810393 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.598929523 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.602936706 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.4322482 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.756246062 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.424790143 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.422969173 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.568148489 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.423954571 seconds)
  done (took 84.31155014 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.426739542 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.424038882 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.429070032 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.432272569 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.433309309 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.431265183 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.420060328 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.419733185 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.431823141 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.425290856 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.430981144 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.426684228 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.421961996 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.419211862 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.419375746 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.419186025 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.418267386 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.42904907 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.420053206 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.42010318 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.424299118 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.420092227 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.418859611 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.420429447 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.42447141 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.420864246 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.433566487 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.42156527 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.419486348 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.422200596 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.426331516 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.454691667 seconds)
  done (took 78.910647949 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.436496034 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.426772072 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.442515361 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.427033789 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.426967528 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.428080228 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.429968392 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.429313074 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.442065504 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.430765626 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.426540266 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.427404897 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.430273878 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.426971149 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.425997204 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.424448979 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.428311143 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.454856837 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.432622601 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.427246623 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.428943275 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.426019819 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.427582461 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.439884646 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.427739023 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.429502828 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.429139124 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.437413399 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.427142963 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.438672435 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.429821505 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.437846968 seconds)
  done (took 79.111978389 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.666043375 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.443419985 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.446745275 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.436926271 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.446219597 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.443643588 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.437831024 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.671394215 seconds)
  done (took 15.299727976 seconds)
done (took 258.941185899 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.442081216 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.938679264 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.465829027 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.436438936 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.446537014 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.460982199 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.65398018 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.460995187 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.661134502 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.451939537 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.444513619 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.436645107 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.252874954 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.58319072 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.284095351 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.398987051 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.298919354 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.426573049 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.994328408 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.71305003 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.46504508 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.429499557 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.29839305 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.32091598 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.406262731 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.508709833 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.528279243 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.655025234 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.59677545 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.509676457 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.934736243 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.433367282 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.439748061 seconds)
  done (took 66.087040447 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.433984534 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.441747303 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.442947358 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.4416905 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.441837906 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.442946004 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.436348922 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.440201412 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.439354806 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.440591701 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.439514406 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.440322796 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.438355165 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.442733535 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.439820671 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.418973155 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.430431041 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.438647446 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.432066751 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.419474995 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.439391039 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.439710486 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.442866266 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.438850297 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.443565419 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.44177149 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.441340281 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.439943185 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.440031767 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.440933203 seconds)
  done (took 44.45819708 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.442698262 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.012313241 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.160404548 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.441205641 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.435128905 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.438911149 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.720237616 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.438720547 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.437648693 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.436393615 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.908555755 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.44026167 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.4670526 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.159669191 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.432356865 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.442752423 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.44342536 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.435318438 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.016952195 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.438801629 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.718231407 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.43825086 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.717195316 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.442478849 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.437985293 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.43567884 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.440198922 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.236619216 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.451627023 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.909378013 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.202082126 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.712459481 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.16492978 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.204543829 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.204810839 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.445101514 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.44477293 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.917073798 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.432780332 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.434524229 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.717339343 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.436840331 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.166081301 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.100394538 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.451193658 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.44303183 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.28466237 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.920460333 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.677303952 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.442474418 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.204031447 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.441113687 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.445200395 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.437886489 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.676212723 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.438429359 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.436436694 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.287737397 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.437369959 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.717623983 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.444263881 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.436799918 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.017194227 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.434296055 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.012712482 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.435440135 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.445392443 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.436565148 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.175062547 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.438644111 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.121599601 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.447380142 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.44556021 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.913953883 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.006713695 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.30678356 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.435242644 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.020341546 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.192687653 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.729313418 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.436159834 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.230810767 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.731327915 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.435978959 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.448079976 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.449905077 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.445102756 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.508707841 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.716709188 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.047846977 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.116557872 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.291342855 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.71706291 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.442162888 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.439873948 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.288566231 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.443222262 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.447149078 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.164120813 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.117569691 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.454868688 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.445110507 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.113264861 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.452358499 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.722372925 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.440577097 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.214121293 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.436652634 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.512731143 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.448758492 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.446978297 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.44731716 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.722867908 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.441167586 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.449979806 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.113313366 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.945138972 seconds)
  done (took 199.633126208 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.435500078 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.429736123 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.436267747 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.430880901 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.434858686 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.444069152 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.435902284 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.435921952 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.440120442 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.433592706 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.436902333 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.444251599 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.441096102 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.434386857 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.437253456 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.432307189 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.436184304 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.454206087 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.432936021 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.437355785 seconds)
  done (took 46.057606057 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.452091976 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.997865961 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.952868413 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.450723982 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.448881643 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.443210351 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.497334096 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.450110651 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.449231529 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.73973111 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.611410102 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.449195404 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.449304163 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.449692203 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.958726679 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.429265181 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.736844835 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.986666911 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.445989899 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.991361275 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.423065396 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.449487082 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.443395744 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.992013275 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.743689517 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.719629886 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.496577172 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.993385553 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.447639459 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.45194946 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.99085419 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.449262247 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.442675926 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.983861605 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.446609541 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.465321045 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.451603031 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.501777084 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.50376795 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.738359213 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.99633029 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.732015841 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.458369746 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.622249601 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.450099851 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.426062625 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.003822518 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.449914269 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.427919899 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.452118659 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.456133857 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.976239726 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.446543904 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.980128674 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.447012112 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.451791537 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.993738575 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.973454207 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.96122429 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.613835292 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.446121147 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.724964325 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.449121581 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.007345222 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.449518775 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.452869381 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.453669125 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.6170703 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.997930055 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.723818933 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.737763355 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.737471347 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.450272897 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.515021476 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.450156521 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.741512792 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.507506266 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.876132143 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.744719734 seconds)
  done (took 130.24608476 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.704178558 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.556191875 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.808151103 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.022556395 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.947249556 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.572347945 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.559464255 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.683763893 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.462989011 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.535692573 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.08438289 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.543431219 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.169082529 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.515315491 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.560128801 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.576119181 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.842365861 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.433188828 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.07569582 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.054962391 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.46203079 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.54565249 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.970790855 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.636413335 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.44398819 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.024282766 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.369672018 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.971675853 seconds)
  done (took 54.450959749 seconds)
done (took 542.241086975 seconds)
SAVING RESULT...
DONE!
