cset: moving following pidspec: 24232
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.319426265 seconds)
loading group "string"... done (took 0.479877834 seconds)
loading group "linalg"... done (took 7.779295445 seconds)
loading group "parallel"... done (took 0.17371997 seconds)
loading group "find"... done (took 1.184124603 seconds)
loading group "tuple"... done (took 2.126526142 seconds)
loading group "dates"... done (took 1.341887909 seconds)
loading group "micro"... done (took 0.247073694 seconds)
loading group "io"... done (took 0.673805848 seconds)
loading group "scalar"... done (took 41.2685725 seconds)
loading group "sparse"... done (took 12.763337062 seconds)
loading group "broadcast"... done (took 1.127325766 seconds)
loading group "union"... done (took 14.04873716 seconds)
loading group "simd"... done (took 4.823547415 seconds)
loading group "random"... done (took 9.693507088 seconds)
loading group "problem"... done (took 2.005890321 seconds)
loading group "array"... done (took 22.713809291 seconds)
loading group "misc"... done (took 1.448570469 seconds)
loading group "sort"... done (took 3.640781208 seconds)
loading group "collection"... done (took 19.599348414 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.523915132 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145726987 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.138852879 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.163647158 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.234735962 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.160116527 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.161540722 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100511165 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.127410974 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.188243712 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.156214057 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.533604881 seconds)
done (took 5.389646062 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.227868601 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095914306 seconds)
    (2/2) benchmarking "String"...
    done (took 0.108058701 seconds)
  done (took 0.883625935 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.079280333 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.147973749 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095652549 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079799189 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.09672124 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.097264325 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.08144924 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.093687001 seconds)
  done (took 1.37404422 seconds)
done (took 3.25443029 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.749123885 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.291525505 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.207121999 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.504622559 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.180275243 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.214880468 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.690853257 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.342332191 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.267743358 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101442436 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.149308017 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391708455 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138020053 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.707917074 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091411659 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.129046723 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.185993241 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.449952048 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084270231 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111413341 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.119234879 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142366131 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.132199887 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091940105 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.187496379 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.084914224 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.200963868 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.110027988 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081721257 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.289097675 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.203650075 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.694790887 seconds)
  done (took 11.044894222 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.117438064 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.138712278 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098544524 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140465617 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13609855 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100818165 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085759456 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.099054856 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124753275 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179613463 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.133579029 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.125026318 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096370846 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.099694849 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.10497702 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247226852 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.125549789 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121532739 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086521739 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.107160618 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122467722 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114930644 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111008345 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.109823844 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16686584 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20856806 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114239159 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127869879 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.0992893 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113940393 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144233876 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144561173 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095589205 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082499302 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175781932 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126647655 seconds)
  done (took 5.219302098 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.194340751 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123506157 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.175506018 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.167099158 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.151582673 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.163817201 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118852269 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.253055525 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.196329268 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.180507265 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.147267164 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102545005 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099612373 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08566366 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097287487 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.651583773 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.167235766 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.138429725 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.120001654 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103658545 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.091064749 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.366274599 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.1052826 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.08160124 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10014978 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06684439 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16841904 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101291669 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.191604774 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123859262 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101327155 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119752054 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.211933941 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128158457 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12307714 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098792931 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.131833108 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079963575 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.200333791 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089741547 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.096674035 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.081535395 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.127088108 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135145543 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122285475 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.10039176 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.100913729 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.211580796 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.097924608 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100645526 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.003212908 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183747022 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096621421 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.099661482 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.343594757 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.102282175 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099453788 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079061145 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.286477233 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.144721819 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084137805 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.099454783 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081532623 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.100962493 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.388092294 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082465316 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.760648677 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085535543 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.111250954 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084264373 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09805144 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105445661 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089148278 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116486708 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081178067 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100661416 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079756005 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098240884 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.099763639 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.092884234 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.127076017 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102318617 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081477841 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166117864 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.081458976 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116222504 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128568204 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084778903 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097353729 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132016164 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101016776 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.08426874 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.13742172 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081892367 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110986275 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095946715 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099752255 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128752123 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.100034232 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.19769531 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081292142 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.130884718 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.10112006 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115637533 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.109906591 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100452906 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086113039 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.098022658 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078833841 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165852552 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082000464 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097712287 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099528075 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.096306584 seconds)
  done (took 23.10942657 seconds)
done (took 40.05439562 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.349668605 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104866537 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104865046 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104330611 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.103158022 seconds)
  done (took 1.522639284 seconds)
done (took 2.256397133 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.284820189 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.176898315 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096463518 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.170148422 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094375629 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.179602375 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161891171 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.113417166 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.186117177 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095806709 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.165765964 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078179664 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095587344 seconds)
  done (took 2.653465689 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096920193 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117469588 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084234441 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113061735 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078538278 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113464095 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110570976 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102693504 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112014526 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087029309 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094954033 seconds)
  done (took 1.838810157 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095416608 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115302846 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084236219 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111831841 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079177101 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113051465 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093845601 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118322682 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112221098 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087184708 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094988041 seconds)
  done (took 1.831867556 seconds)
done (took 7.045258172 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.095657202 seconds)
  done (took 0.815414154 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.034266221 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.338923293 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.117125748 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.157751162 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.309739851 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.203184574 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.569225217 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.134059962 seconds)
  done (took 15.803943243 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.118087554 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.119509446 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.103881234 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085003794 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.105719645 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103643997 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.087203242 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.103869854 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.088398126 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.10270919 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099988959 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085271559 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100962597 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.086449025 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101271985 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.1045865 seconds)
  done (took 2.383341366 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.121878307 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.1197638 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108422711 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.1102242 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.106447242 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.088196937 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.109776197 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.107915849 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087534631 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.106552471 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.109669712 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.091014048 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105696897 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.097185917 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091185029 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109160033 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.104182563 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.091977969 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109065347 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.108788623 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092163678 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097701936 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.10509705 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.091306426 seconds)
  done (took 3.303464585 seconds)
done (took 23.031221957 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.164009204 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110965641 seconds)
  done (took 1.008251706 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.102690295 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.120692712 seconds)
  done (took 0.959922346 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109397008 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096511006 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137390373 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.117226525 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082309933 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097069428 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.132669372 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.098123454 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081814161 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.09850911 seconds)
  done (took 1.791254325 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088247913 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.116860536 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.108115641 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.1042933 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.113053102 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.103108659 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.096425939 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.104433792 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.118819552 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.083122494 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.108568638 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116119928 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.108782524 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.10220597 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.113774387 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.107118352 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.094096782 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.104736754 seconds)
  done (took 2.630685986 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080788142 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.103017089 seconds)
  done (took 0.926514839 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.086272503 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09916344 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086409089 seconds)
    (4/7) benchmarking "year"...
    done (took 0.102985211 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.099305042 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.082336448 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.099285938 seconds)
  done (took 1.396459141 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.482273611 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.13786209 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.259467271 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086636443 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.12289757 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.310290241 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099300597 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.104996443 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.086697723 seconds)
  done (took 2.486357651 seconds)
done (took 11.939698206 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094764311 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.119264746 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.117691952 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.496386718 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.12261042 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.081653858 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.162372287 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.258243042 seconds)
done (took 2.200963608 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.151966835 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.329012563 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.118934499 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068294952 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096967903 seconds)
  done (took 1.359640286 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080025751 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100942754 seconds)
  done (took 0.925612227 seconds)
done (took 3.184035002 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081362502 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.131105158 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.081869292 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.099600722 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.078999212 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.099495445 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.096834477 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078904232 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.099198546 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081523586 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098374085 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.082080609 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.097952245 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082137771 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096173576 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078630847 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098053159 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079061903 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095705574 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079062532 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095959299 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082440467 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096231209 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079272262 seconds)
  done (took 2.94791219 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110966708 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099704399 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104987564 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088407737 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104631685 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.1040429 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.087516252 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099281047 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088376543 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101316225 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103450052 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.087640617 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100829224 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.101984796 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084711383 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103032512 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087727403 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098539029 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101559106 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.085336918 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.105857287 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082931206 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102303619 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105089288 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085945276 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101787841 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.100980243 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082186082 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104473406 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086607708 seconds)
  done (took 3.650994852 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086280053 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095778045 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079197211 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104119301 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078823853 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.102595293 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079479348 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097656565 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081002392 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096074993 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081289277 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097099718 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.096788575 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080985159 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.098605484 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083154191 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110834175 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080329654 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097214021 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080587166 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.10095163 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078890211 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.100123629 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079283115 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095486702 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.080297804 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096228955 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.096579935 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.080285609 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.096361373 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.082585838 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.100355518 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079891205 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.103837423 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083451595 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.095815527 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083893667 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.096284942 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.082237658 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.097407506 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079854402 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096261946 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079882625 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102331023 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.099533929 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.081372262 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.097971605 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.08097713 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.097989144 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.083180136 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.095948875 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.079896068 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.098571609 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081018544 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.10018559 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.095778499 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.081123379 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.096856255 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.08126934 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.097227681 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.079417645 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.095832894 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.083193253 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.097243757 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.095814979 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.103991838 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080045141 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.098601687 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100862766 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081609069 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099303973 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.093721885 seconds)
  done (took 7.288689609 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084901813 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107863787 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081375996 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09956825 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077511135 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097614118 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101006684 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080929306 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098772229 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086911113 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096781536 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099071493 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081710968 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108691119 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080114059 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100157877 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086837958 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095647223 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.097948907 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084311617 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098094047 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083806441 seconds)
  done (took 2.784690663 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.224263348 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107212192 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144269661 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.124535031 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099803487 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112255117 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.1044713 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089418982 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103925816 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10247769 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085197096 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104537628 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089495353 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10182035 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103193167 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086889045 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104787909 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103615436 seconds)
  done (took 2.74907915 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095929273 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100804402 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.122695938 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.082891784 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101491046 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086532517 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107326152 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.121748089 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085485081 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099530059 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.110154439 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085270531 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102715081 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083220336 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102239785 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.099997037 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.085911042 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10069126 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092594984 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10618563 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10560788 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092550295 seconds)
  done (took 2.927697212 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098806107 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102264108 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120722644 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085255273 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096264856 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080967841 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107579284 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082676911 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107655839 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101945965 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083785229 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09891425 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090142947 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100159554 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105783625 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083419247 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101947105 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083180731 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102259496 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.096407948 seconds)
  done (took 2.690857793 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10861478 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10192608 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102201726 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093769633 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101953211 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101401449 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095518572 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102213448 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101832337 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110939933 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102270977 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102833298 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094223823 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107978933 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102834168 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094197874 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.220234678 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11129148 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102194908 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083523451 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127452695 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101053592 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093952493 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.1016271 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102165723 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084537885 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102040538 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108270277 seconds)
  done (took 3.722732514 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082724636 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100364736 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079808924 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098338469 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080148066 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098476875 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07972842 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096717954 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082317092 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097108345 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083261325 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100557584 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083103179 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.099556404 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082731572 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100507275 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085339271 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097098984 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080447656 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097869914 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082432339 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099157521 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.1004391 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08053567 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09830406 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.083005956 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098157476 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.0805126 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100360666 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08059066 seconds)
  done (took 3.471578411 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093540084 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108344949 seconds)
  done (took 0.968329772 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.081834222 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117876248 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080472263 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105336713 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.107368126 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08384301 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110293692 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087941447 seconds)
  done (took 1.539223641 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.101062719 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.116660877 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084915737 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114769595 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.115887102 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099308012 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162175983 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10297028 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089728732 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099267094 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.118642848 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082053933 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106745917 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084146876 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107326774 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089704539 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.09843063 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107285835 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086162713 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099933005 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08615801 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111965428 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103912406 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.081266662 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.103765712 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095119507 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110755627 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103218016 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087329039 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111071899 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089992592 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095918829 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083662634 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102230061 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.099798551 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.096842005 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113613956 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087351439 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110067783 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103101189 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112227983 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09715451 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.10702149 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091555456 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112632309 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084419182 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.103087158 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079114545 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098551361 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.104207841 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.079172962 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100593004 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.078034273 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108999742 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088564514 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114562829 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.100324636 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.085232684 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.104991624 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087399751 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.107600199 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102864558 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086079998 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.101205064 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091380733 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.105220116 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090962257 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.096894314 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.077997761 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.099762317 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.11002148 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106742306 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.10976466 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102557967 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086100031 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.099678429 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087809241 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102717486 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109021498 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092396198 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.102350866 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109529465 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108895215 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101762478 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085907742 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.110761126 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.08248325 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.104226547 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099255389 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098981062 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100000642 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082123658 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099685432 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109894295 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087090862 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102684657 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081342245 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108414889 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.077972213 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102557819 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085443826 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102500815 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110406109 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090220468 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107953461 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110027635 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.094316349 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102149441 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08667131 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.099210454 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085024371 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.104485894 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.110072439 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077494329 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104809216 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086447776 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103809605 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092219442 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.101046733 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102953034 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092127153 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109145341 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082677754 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.099413007 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087958216 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.102840259 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106775828 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091480066 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100567317 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080265542 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096969019 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.087893345 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101468837 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106129498 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090263528 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105259901 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078767365 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099683654 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.10740433 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091335043 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102041066 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084519979 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107422867 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.103240963 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083906048 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107753309 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086380208 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.10215006 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.08894545 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103381567 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079411448 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106900194 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.104705465 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082997911 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105631353 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08848145 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104527542 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.104277631 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082277849 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108586359 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085332772 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101312285 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083852231 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100789254 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111575476 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086281049 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.098167686 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.081765286 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.110730134 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.081743471 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101181369 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101616704 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087194741 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103235532 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.08226949 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101951389 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085968354 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.1331438 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106984568 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086414892 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.10848237 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111440514 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084320454 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.104548368 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.08471912 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104431329 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.085260017 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109887136 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107421752 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090737965 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104456179 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081897673 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108188875 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111246756 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084612747 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.100717559 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08329038 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.105675925 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.090984916 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.106412207 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103636983 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082962678 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103462254 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089080903 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105702653 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.101909956 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083473559 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.107205457 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.084254952 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.109883367 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104833625 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093825996 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106127464 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079310984 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107903951 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082454807 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108643911 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09801667 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081851561 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100864681 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.085334047 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.101437513 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086592196 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096198899 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09210606 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110962374 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.102774088 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08417392 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103353175 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092511112 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104576853 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106986954 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087430028 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107878297 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097845455 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101641482 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.08751602 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.111557669 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103509689 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078512684 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108279634 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083659318 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101556151 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.083352742 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.100799126 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105550083 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094001486 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.107818375 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079059059 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.105367311 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101521583 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083652621 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099280444 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.09174868 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106380846 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.085473993 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111863493 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104309361 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.085877581 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106844656 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084615421 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104770377 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.105211965 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087909687 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.104732214 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086719354 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.1013306 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086752039 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101035061 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082679308 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104923928 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103267988 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.08484967 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109151877 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086373832 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103484806 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.08820157 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104570224 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103985214 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084654478 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102144908 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087641703 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103689147 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.085384566 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.105715946 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080211215 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110675082 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.103716411 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093210714 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.10327733 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081396741 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.108611076 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.105804494 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.090426512 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104720194 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.086407801 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.104315913 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084257805 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106989246 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112555152 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082409803 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112537323 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090519342 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103973859 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.10611405 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085272987 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104292519 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.083355927 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105369437 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085845651 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.102747128 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084690947 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108028581 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.105408422 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.084780075 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104371007 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086262974 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.103245604 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.08629595 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.098077838 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.102112397 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084657544 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.104083248 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092065603 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104405365 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088008323 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.102330531 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104944027 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08399562 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.099439222 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09313577 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113213405 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.105542328 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093609798 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.102843766 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086809026 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11282404 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.0978751 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082574765 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.101023318 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083715655 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11134732 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086051368 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.112541635 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084693177 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.103697587 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100056217 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085747903 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.102547373 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079878735 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.101928057 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088508894 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.105728444 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084471697 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.104435645 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.114317713 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086876255 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111275675 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.084085644 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.104895882 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086304006 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.100199299 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.10178601 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.084218214 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106001975 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.085596965 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.100725133 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.08244621 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.103834782 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086687595 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.103776709 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.103632822 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087120842 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111513085 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084981328 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106956809 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089742901 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098130101 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106787932 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085091653 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103142674 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.083536481 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.10787863 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088370753 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105361186 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.110895468 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085074194 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104243929 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085554329 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.102530799 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085458021 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.103971943 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104032847 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08427947 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.104980989 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09352775 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101611278 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087321041 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103460491 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.104114246 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091082748 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104893924 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087369061 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112864968 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.088449242 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.105827449 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110268145 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089237864 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107415462 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086444155 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.105439585 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10989772 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084249463 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.112136035 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085318803 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105471521 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.086960312 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.101702376 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104236424 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084529589 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103312927 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090784384 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10542896 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084738893 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102477229 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.084095563 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.105656574 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108623437 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093729169 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106065246 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08797392 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.100078501 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.101383136 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08714815 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.1024561 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086384579 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.107106579 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091624123 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.107015673 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.10408634 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.08426129 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.11132713 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091038057 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109376955 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.08311275 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.1090912 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105537853 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087889563 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.105578976 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084616654 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10553246 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090485589 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.106093944 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103232252 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093607783 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.108464439 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086859891 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.105672971 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08583485 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.104903968 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099680348 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.085936933 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.106499345 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092059665 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.106627099 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085513777 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11442018 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.103957429 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085526297 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108824881 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084511771 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.111985951 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.09966777 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.085594311 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105622114 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08786647 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099568479 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085242184 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.102053795 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087757073 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.103426738 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099679458 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095429127 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.111134203 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088541141 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103521782 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083751139 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.101096831 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.100298818 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084767395 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106023157 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.086929839 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114177411 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.084740961 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.103446591 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.080155258 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105040144 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106732171 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.089272392 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.101697286 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.081248556 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.102978128 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087918054 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.111785401 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103763705 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085803914 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107897787 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.0884025 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102127658 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090111713 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.101190041 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.107607622 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096364993 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105817961 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085828262 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.109960272 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112859853 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.087493711 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100134006 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087148377 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.106585006 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086203021 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.106328864 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.106067133 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100001755 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108039393 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.084936752 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.103673393 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.087463221 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.104207772 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111481844 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08711505 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.106223382 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090785819 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.105944565 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114534505 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088757853 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111027697 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.087261816 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.106816433 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10360017 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08578339 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.10292799 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084087342 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105956239 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086677745 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.11014741 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.11266639 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085047469 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114965249 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.094335152 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.109522479 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.101753904 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.084351234 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103619758 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081471218 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.106836479 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08495243 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.104143402 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083677184 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.104339851 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085478383 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111016981 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.105794111 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086328841 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104446788 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.080500008 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.107015194 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.08862243 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106000273 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100619397 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086173575 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10537474 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.091345366 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112106571 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086207981 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106328792 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.106645887 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087227786 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.101177586 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092788048 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103303639 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088266372 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.104562729 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086602264 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.106245581 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108424422 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09203764 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106424548 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088772633 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117575892 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106635636 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.083011902 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.102384438 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091136143 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103094582 seconds)
  done (took 59.018238903 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.150784695 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092872465 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100539585 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080705783 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118351342 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10261078 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081533774 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101830549 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082485306 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106892925 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081524059 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100750292 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114140228 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128447173 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099073542 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110517804 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101387825 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082700293 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100891751 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082559996 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114959921 seconds)
  done (took 2.952923288 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106968809 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118738985 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115833238 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12207759 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09138884 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.118193437 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116856107 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116876172 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101651969 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112533992 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120587022 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118214114 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092650776 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112806499 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112330171 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094849074 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120163522 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111752051 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.119518917 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099751952 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116779998 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116859978 seconds)
  done (took 3.275353807 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.098240349 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.104159671 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089754029 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.100388741 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.085082404 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.100262509 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.090124791 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.103555315 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107940086 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.085216861 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.103191208 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.084669362 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.109200241 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080946447 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.104039291 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083645511 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.156187486 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110365334 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.105110608 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.086648925 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.101001301 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087483024 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.100114403 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.081839082 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.103639325 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.121659727 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086833741 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.102609565 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.085227234 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.104194509 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.085078796 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.102564889 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088167809 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.105552138 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084190419 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.103514064 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085208472 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.1058425 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.099621033 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083868493 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.104483714 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.081757218 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.105125511 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.086317615 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.104636806 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.083713246 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.106920888 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085407523 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.102826067 seconds)
  done (took 5.588484573 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.10813111 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163412812 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087763752 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14512263 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122283842 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.11563312 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088895304 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.124749333 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103889167 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084676115 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12523807 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.1225811 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105388965 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.091908393 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.10917639 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105218001 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087200807 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104232532 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.110235316 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086304867 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.110723963 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.111603748 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.102386509 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.120186778 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110230852 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084960313 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105852909 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.110464203 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.119184814 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.091437296 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.111786775 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.11227163 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.102634015 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.111005301 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104400361 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089233705 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.124681637 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.107345813 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088922134 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105325833 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.10796195 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092805418 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.112250754 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.124000924 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086958284 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.111938009 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106791492 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.085741028 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.120542134 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.110179055 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.097591196 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.124543279 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.115636118 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.110941643 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.09486899 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.127457225 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.109960595 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.0881408 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.114433129 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.123785239 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.087613193 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.115199812 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.125611451 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.091898262 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.119095581 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.126623692 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.114766337 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.094825081 seconds)
  done (took 8.341228467 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095896766 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113308401 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124121348 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126427908 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096918017 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.118568394 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.116190545 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.117492854 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.096304788 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120004874 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114207393 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.143955725 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.091211867 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.123296726 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.118884501 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097028497 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118331626 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117217852 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.117993969 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098450252 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11828705 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12621542 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.114282428 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10499981 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.14779762 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.109777682 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114099259 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.096432783 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125198184 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.114687145 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12818444 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.118438501 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.098248729 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.129176233 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.132184304 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.116896911 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088379646 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114878659 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.114182854 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094472768 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.108442135 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124819952 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113896182 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088830825 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113800368 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113233674 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103256749 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.126111021 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118942869 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.123652052 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.11873818 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107050175 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118029408 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.118811513 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.129540465 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.154735749 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127758631 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107895364 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119310589 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.12909147 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12733045 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.136392517 seconds)
  done (took 8.035560281 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.116299649 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.121370038 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.127103291 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.102348921 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084428295 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.114804885 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084471351 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104568902 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.120315905 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098675268 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122327244 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11421539 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117403656 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101678957 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114400516 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117066113 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114720041 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094182353 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.119706346 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.113351582 seconds)
  done (took 3.037440967 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095732674 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127733078 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087257627 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.115040299 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109653463 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094064602 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.113699736 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113847408 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09151384 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114258086 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.123905842 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10403535 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111922024 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.119124554 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103752312 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.118400616 seconds)
  done (took 2.577836917 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.098547043 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120058601 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.125853056 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086516924 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106445781 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.103191325 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.087421105 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102718457 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083120962 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.123381024 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.108040447 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.089990898 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.107954844 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085595258 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103154479 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08992116 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.104310297 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.104367792 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.087028358 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.126825171 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.118882541 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085730583 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.107551273 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089349901 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.107812371 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.112655636 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087920508 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.105432166 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084866988 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107812215 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.106639967 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.09472787 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103782013 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085767525 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.106688662 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.104088866 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.08681962 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.107593249 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.089421532 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.107181241 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084414653 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106833511 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.106139083 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.088919652 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.104436404 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.091429183 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.108476001 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.117516513 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.089604147 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.111157503 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.090808105 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.114857368 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.110980976 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.101367002 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.111796579 seconds)
  done (took 6.421820846 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101159583 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110249788 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082008025 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104972044 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090610558 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109355623 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110528151 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089767242 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109011354 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084891609 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10891869 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.111857415 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088738415 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110853842 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089735992 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11110607 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08354617 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108859741 seconds)
  done (took 2.646027747 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092644378 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10673358 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095284236 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107861005 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.0870598 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11143977 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103056104 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086018576 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105895886 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088441197 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106481281 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.089534408 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105341614 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089449736 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107480147 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108940571 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.094140251 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107153541 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091248907 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107149588 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.0927242 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111346444 seconds)
  done (took 3.036881258 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.124512367 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.127361535 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.094825837 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.238278574 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.106151094 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.134935266 seconds)
  done (took 1.669782169 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111638364 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124639698 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108477053 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109684912 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118695791 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109280857 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08998687 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109704649 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120720229 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125053569 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091657098 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12038239 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120775166 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120116876 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097941747 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11643761 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109913865 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09089178 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109071044 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132018325 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110550955 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100058098 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11076569 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108970565 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089984793 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119599031 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120947376 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125985729 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089217742 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120861719 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116048386 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109920487 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101136383 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125203022 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111590319 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121003079 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090004355 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130575205 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116636599 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120490705 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091465858 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118220632 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12107513 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115766345 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100864065 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110588132 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116283979 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08912644 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110268229 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139073107 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11750221 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120191944 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097325053 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121887753 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120591347 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138919551 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126732605 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120417385 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096976298 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125690659 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121227142 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116656837 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121606065 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129844809 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100477282 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121130102 seconds)
  done (took 8.332962421 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105611283 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128208443 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11068908 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126216116 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1004975 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110536287 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110308846 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090497332 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110663956 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108917954 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.155992399 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090700235 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121483313 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12065585 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110554888 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089670047 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110035735 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120691281 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089115969 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137973325 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110891058 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120023159 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122014708 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120459487 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106135644 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119233947 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110255803 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089854753 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111204278 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110948456 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116819123 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091251452 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121527396 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108441498 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100419747 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111127039 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109977578 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116714018 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089856061 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116686192 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121060478 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13200664 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091164577 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111301369 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126818589 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110484571 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091162032 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108482857 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090491699 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110577151 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126791948 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125453057 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125118731 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100270069 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111593855 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110437812 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089742825 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111133172 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110706221 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11719246 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099818687 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111197909 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139369752 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11043366 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090502432 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121552103 seconds)
  done (took 8.198790925 seconds)
done (took 158.619986941 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.103107992 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.141711402 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.10036798 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.17072345 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107924294 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.121787552 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.1402743 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.103230764 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108499292 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087289872 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.109236918 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.109856383 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.152925595 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.108614849 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087783622 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.110299069 seconds)
  done (took 2.712098449 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.202309516 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.272182235 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104467609 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.108587171 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.112667198 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.087607896 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.106440784 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.09536735 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109431321 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.087492791 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108809632 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091576076 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.113333243 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.091433677 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.116830761 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.113154234 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.091754512 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.112818152 seconds)
  done (took 2.981687028 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115358273 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.155833513 seconds)
  done (took 1.124894919 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122641464 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.1863583 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.303061173 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156634256 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121495677 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.12896808 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158061372 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133908017 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.21390966 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.126372016 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.126767671 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.119932743 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.123447365 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.118792827 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116336142 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099374493 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.145437524 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115474035 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.095876107 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.119464495 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140595231 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.087448313 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117877136 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.116096881 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.196054197 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.101519076 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.108603975 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086629271 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.119758427 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.116930411 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.093938182 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.128055647 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.122639761 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175447639 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.126301293 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.161845923 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.120770088 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113581387 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096513992 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.114585398 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.121953427 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101521226 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.129058807 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120382074 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.089544456 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.120547398 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086817184 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.108588865 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116078536 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.100817441 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116508921 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114584713 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.161479946 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120710308 seconds)
  done (took 7.74148753 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.828528161 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156492926 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114307514 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.907209048 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.140990706 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128163121 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.804954837 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.137258035 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.236193296 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.80763359 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.140970795 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105351544 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.240273689 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.262225058 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.911665913 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.316245856 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.710905893 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103618946 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.14298888 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.157783388 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118756099 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13848358 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110592355 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.431634781 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117470165 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112664289 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096473848 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123037895 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163612441 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.114068129 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094165044 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.205374884 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.25270907 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209952656 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095941092 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.114581187 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112917779 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.179876045 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.278859254 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.204554907 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.206975533 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091368176 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11139519 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.104370642 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131404332 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108388691 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.167845327 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.178319496 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.198013828 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093573633 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122338642 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119423511 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099739152 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.189920311 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.10236538 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.317089444 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.329475798 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.119331825 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12520586 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111083371 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273700066 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127270363 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.233497332 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120895361 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222105076 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11540425 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814636314 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.18001933 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.095508393 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.125591462 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123605458 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100544935 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122647892 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171175972 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.396459096 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12548605 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092791037 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112952287 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.240831456 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092366529 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111601469 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166477127 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115879858 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099110481 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12521105 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122261532 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.173511888 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.233509991 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125361782 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119307508 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095145393 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125458468 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115536565 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.215477557 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226973809 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.167748556 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211495847 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122021823 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.189027135 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.172861604 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120729963 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.176561478 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117817268 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105125895 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123218313 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224290665 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.14841718 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.126181738 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095520121 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119901126 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.151146868 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.093085765 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119985234 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.173968552 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.484145132 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.173465394 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110925511 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.0938002 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121763228 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.164673343 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11970951 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263514638 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099325523 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.19716198 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096721476 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.110357336 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119410368 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.169746187 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122968248 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098697121 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122982471 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11972307 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.241052205 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223492732 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124809455 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222246338 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185225215 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121261882 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177621412 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121285373 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.172827199 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122121248 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120678251 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097797536 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.805069202 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124536436 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097318016 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117661223 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.191524965 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112649455 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.1042982 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.113528422 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088103907 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778577112 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.113874938 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.10186316 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.126853146 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120416484 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.097513263 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119243102 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.121203227 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.167947702 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23848407 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123010944 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096872684 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.114057173 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.163992117 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117854499 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.090861669 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.11446734 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.090847159 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121174758 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116040029 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104975048 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.196943895 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.167983522 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.226573385 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.566978142 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092276088 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.1131682 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.236579666 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091274266 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.296518252 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120821607 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.23173344 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.169377476 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.123865409 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.320685748 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.170738583 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.191232935 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.092615343 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.200572935 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088753664 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119116294 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.170457905 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113534485 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117782541 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.167397126 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125469968 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102111788 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.959414148 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113899405 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229349719 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.10963216 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.176429555 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095363866 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121909412 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.297661619 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113760829 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107276804 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.191305573 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093698247 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.114254705 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.7031542 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.114530931 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121224899 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098702732 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.229986146 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.189180983 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098983707 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119411478 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122636281 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.166851802 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.212430467 seconds)
  done (took 44.574549399 seconds)
done (took 59.989161689 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.302350412 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.219011379 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.263341159 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173776789 seconds)
  done (took 1.913621982 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.180887379 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.152118926 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.125982428 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.110239612 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.155357189 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08687678 seconds)
  done (took 1.692127625 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.396388958 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279449542 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.245474688 seconds)
  done (took 1.806865424 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.252398945 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.271305101 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.331828471 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.422279503 seconds)
  done (took 2.256508576 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.283072056 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.146973049 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.139849851 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.171707774 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.206714361 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.298810225 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.170259646 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.249467963 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.162502388 seconds)
  done (took 2.754097968 seconds)
done (took 11.310599214 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.131347384 seconds)
    (2/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.148959054 seconds)
    (3/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.091646024 seconds)
    (4/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.174518981 seconds)
    (5/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.179875114 seconds)
    (6/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.131446793 seconds)
    (7/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.287492331 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.131592877 seconds)
    (9/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.120910207 seconds)
    (10/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.195121239 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.125029574 seconds)
    (12/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.243277159 seconds)
    (13/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.107521019 seconds)
    (14/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.110793951 seconds)
    (15/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.095594861 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.120119687 seconds)
    (17/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.219098213 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.138737826 seconds)
    (19/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.132814784 seconds)
    (20/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.216711028 seconds)
    (21/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.220342034 seconds)
    (22/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.118288412 seconds)
    (23/286) benchmarking ("sort", Int8, false)...
    done (took 0.209754252 seconds)
    (24/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.139021747 seconds)
    (25/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.100692008 seconds)
    (26/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.133885132 seconds)
    (27/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.222323068 seconds)
    (28/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.122453258 seconds)
    (29/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.089253099 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 0.232579275 seconds)
    (31/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116824703 seconds)
    (32/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.105900175 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.140093691 seconds)
    (34/286) benchmarking ("sort", Float64, false)...
    done (took 0.179070728 seconds)
    (35/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.126903912 seconds)
    (36/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.114973788 seconds)
    (37/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.11640807 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.097663385 seconds)
    (39/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.121300609 seconds)
    (40/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.186908485 seconds)
    (41/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.118606348 seconds)
    (42/286) benchmarking ("sort", BigInt, true)...
    done (took 0.238221735 seconds)
    (43/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.140274456 seconds)
    (44/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.126270165 seconds)
    (45/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.088864772 seconds)
    (46/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.187602008 seconds)
    (47/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066806952 seconds)
    (48/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.18679922 seconds)
    (49/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.194393125 seconds)
    (50/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.12253463 seconds)
    (51/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.099754142 seconds)
    (52/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.137669026 seconds)
    (53/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.191256682 seconds)
    (54/286) benchmarking ("sort", BigInt, false)...
    done (took 0.223187257 seconds)
    (55/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.200778846 seconds)
    (56/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.162752747 seconds)
    (57/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.120594798 seconds)
    (58/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.095576598 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.111422713 seconds)
    (60/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.221976292 seconds)
    (61/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.170569769 seconds)
    (62/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.202016596 seconds)
    (63/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.187974334 seconds)
    (64/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.124073191 seconds)
    (65/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.191232556 seconds)
    (66/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.091243179 seconds)
    (67/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.111049461 seconds)
    (68/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.090757943 seconds)
    (69/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.235785966 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.110709135 seconds)
    (71/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.100285415 seconds)
    (72/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.17745979 seconds)
    (73/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118237252 seconds)
    (74/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.154521202 seconds)
    (75/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.194629714 seconds)
    (76/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.146391851 seconds)
    (77/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.079245193 seconds)
    (78/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067981739 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.137576601 seconds)
    (80/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.11334518 seconds)
    (81/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.170179973 seconds)
    (82/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.173605606 seconds)
    (83/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.161186962 seconds)
    (84/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.130952402 seconds)
    (85/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.141261947 seconds)
    (86/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.112133292 seconds)
    (87/286) benchmarking ("sort", Int64, false)...
    done (took 0.088556522 seconds)
    (88/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.126546529 seconds)
    (89/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.174394121 seconds)
    (90/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.068752166 seconds)
    (91/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.189899639 seconds)
    (92/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.078586636 seconds)
    (93/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.156972532 seconds)
    (94/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.068828654 seconds)
    (95/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.068274324 seconds)
    (96/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.126503251 seconds)
    (97/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.138371148 seconds)
    (98/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.084793688 seconds)
    (99/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.123113307 seconds)
    (100/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.131151763 seconds)
    (101/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.117432546 seconds)
    (102/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.093631418 seconds)
    (103/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.120751434 seconds)
    (104/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.095176373 seconds)
    (105/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.091294365 seconds)
    (106/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.188633769 seconds)
    (107/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.135192986 seconds)
    (108/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.156771802 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.097306389 seconds)
    (110/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.137614098 seconds)
    (111/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.114032227 seconds)
    (112/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.187144561 seconds)
    (113/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.091740364 seconds)
    (114/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.163373761 seconds)
    (115/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.114912785 seconds)
    (116/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.095608912 seconds)
    (117/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.183027012 seconds)
    (118/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.138240953 seconds)
    (119/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.115953088 seconds)
    (120/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.067631001 seconds)
    (121/286) benchmarking ("sort", Bool, false)...
    done (took 0.201881342 seconds)
    (122/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.190100671 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.098738129 seconds)
    (124/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.091389231 seconds)
    (125/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.173210541 seconds)
    (126/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.091151262 seconds)
    (127/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.139961345 seconds)
    (128/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.097187762 seconds)
    (129/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.168624296 seconds)
    (130/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.096154673 seconds)
    (131/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.091430093 seconds)
    (132/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.094084535 seconds)
    (133/286) benchmarking ("sort", Float32, false)...
    done (took 0.181841278 seconds)
    (134/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118678063 seconds)
    (135/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.167524867 seconds)
    (136/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.173821394 seconds)
    (137/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.112619298 seconds)
    (138/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.088590867 seconds)
    (139/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.175149581 seconds)
    (140/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.125823257 seconds)
    (141/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.069409291 seconds)
    (142/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068583219 seconds)
    (143/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.122995011 seconds)
    (144/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.118137033 seconds)
    (145/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.100989333 seconds)
    (146/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.103338365 seconds)
    (147/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.089565684 seconds)
    (148/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.122144119 seconds)
    (149/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.100569982 seconds)
    (150/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.089896564 seconds)
    (151/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.08827162 seconds)
    (152/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118759745 seconds)
    (153/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.06882712 seconds)
    (154/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.189027336 seconds)
    (155/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.068897275 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.111461866 seconds)
    (157/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.069127972 seconds)
    (158/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.120908377 seconds)
    (159/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.104001311 seconds)
    (160/286) benchmarking ("sort", Float32, true)...
    done (took 0.238572635 seconds)
    (161/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.120692297 seconds)
    (162/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.188656532 seconds)
    (163/286) benchmarking ("sort", Int8, true)...
    done (took 0.23081971 seconds)
    (164/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.09797182 seconds)
    (165/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.111458986 seconds)
    (166/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.174873121 seconds)
    (167/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.069325609 seconds)
    (168/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.190421046 seconds)
    (169/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.092514623 seconds)
    (170/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.095826149 seconds)
    (171/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.069452052 seconds)
    (172/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.086372428 seconds)
    (173/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.112181285 seconds)
    (174/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.116821983 seconds)
    (175/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.092504284 seconds)
    (176/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.068375893 seconds)
    (177/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.118070292 seconds)
    (178/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069867636 seconds)
    (179/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.067756576 seconds)
    (180/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.122843402 seconds)
    (181/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.119772228 seconds)
    (182/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068699944 seconds)
    (183/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.178906015 seconds)
    (184/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.089591125 seconds)
    (185/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.093322898 seconds)
    (186/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.169002664 seconds)
    (187/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.177141345 seconds)
    (188/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.150002814 seconds)
    (189/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.098156651 seconds)
    (190/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.091694436 seconds)
    (191/286) benchmarking ("sort", Float64, true)...
    done (took 0.241510272 seconds)
    (192/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.07796805 seconds)
    (193/286) benchmarking ("sort", Bool, true)...
    done (took 0.230419658 seconds)
    (194/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.082905467 seconds)
    (195/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.111821083 seconds)
    (196/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.127313545 seconds)
    (197/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.069228187 seconds)
    (198/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.089593842 seconds)
    (199/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.141940663 seconds)
    (200/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.092500054 seconds)
    (201/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.096646537 seconds)
    (202/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.183156924 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089058093 seconds)
    (204/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.110331643 seconds)
    (205/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102403022 seconds)
    (206/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.091884289 seconds)
    (207/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.097855799 seconds)
    (208/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.121893155 seconds)
    (209/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.06924665 seconds)
    (210/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.12001301 seconds)
    (211/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.070821234 seconds)
    (212/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.102602902 seconds)
    (213/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.304356754 seconds)
    (214/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.124943411 seconds)
    (215/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.089413215 seconds)
    (216/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.114570531 seconds)
    (217/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.095274479 seconds)
    (218/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116578955 seconds)
    (219/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.090329318 seconds)
    (220/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.113110348 seconds)
    (221/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.070617411 seconds)
    (222/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.118782653 seconds)
    (223/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.105662546 seconds)
    (224/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.113024943 seconds)
    (225/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.088043943 seconds)
    (226/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.137825318 seconds)
    (227/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.068717825 seconds)
    (228/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.185934439 seconds)
    (229/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.111793815 seconds)
    (230/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.149905701 seconds)
    (231/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.102122163 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.088939203 seconds)
    (233/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.175918731 seconds)
    (234/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.0708383 seconds)
    (235/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.092861249 seconds)
    (236/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.069843563 seconds)
    (237/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.06852826 seconds)
    (238/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.092105075 seconds)
    (239/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.068584909 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.110851606 seconds)
    (241/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.090681496 seconds)
    (242/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.138749168 seconds)
    (243/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.242889959 seconds)
    (244/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.069054612 seconds)
    (245/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.11956331 seconds)
    (246/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.069211631 seconds)
    (247/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.111499471 seconds)
    (248/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.069718978 seconds)
    (249/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.06901513 seconds)
    (250/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.092205111 seconds)
    (251/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095612873 seconds)
    (252/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.118406735 seconds)
    (253/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.08883787 seconds)
    (254/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.122598456 seconds)
    (255/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.160919744 seconds)
    (256/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.098216453 seconds)
    (257/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.068272619 seconds)
    (258/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.092803669 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.088762527 seconds)
    (260/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.114175714 seconds)
    (261/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.137589645 seconds)
    (262/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.06815386 seconds)
    (263/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.097135986 seconds)
    (264/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.091812785 seconds)
    (265/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.089602941 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.120640402 seconds)
    (267/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.117313692 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.088652509 seconds)
    (269/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.137370394 seconds)
    (270/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.07731272 seconds)
    (271/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067891017 seconds)
    (272/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.09262741 seconds)
    (273/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.088375768 seconds)
    (274/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.11358557 seconds)
    (275/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.097296395 seconds)
    (276/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.112262337 seconds)
    (277/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.08746866 seconds)
    (278/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.092041917 seconds)
    (279/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.095748496 seconds)
    (280/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.116967037 seconds)
    (281/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.140722257 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.095374305 seconds)
    (283/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.068156974 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.111345157 seconds)
    (285/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.131000494 seconds)
    (286/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.09013888 seconds)
  done (took 36.947370908 seconds)
done (took 37.837030124 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.10320721 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.152759684 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.098599697 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.142446404 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125673347 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092798669 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.120889944 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.123885939 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.101861908 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.127113983 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.100860438 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094705936 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.09849075 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122569036 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.123376757 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.120218384 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.12578047 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.096010313 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.121318784 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.111740676 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.09749187 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.110353784 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.090727356 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.093809659 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.100668686 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119124965 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.094532281 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.12338326 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088798461 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.11188537 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094489917 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.119657123 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.110719619 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.102764742 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.117822923 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.097264237 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.122689489 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.098880538 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.114355832 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088222765 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.120496539 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.11096883 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.095747442 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.119107124 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.095042576 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.117082463 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.098308396 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.12445323 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.143846017 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093963597 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.119830736 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.09917154 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.121811474 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.095537953 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.116403867 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.097623635 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.117398512 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.144330255 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.098515726 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118422426 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.097523079 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.12009445 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.093216354 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.121219322 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120559674 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.099350371 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.123523076 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.094066084 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.122852954 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.093857227 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.111186018 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120808414 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.092881949 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111744378 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.098377323 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122432322 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088030437 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.11816307 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.095954337 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.11731263 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.088194646 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114721486 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.090585644 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.11932373 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114521254 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071283234 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.092893577 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.118097887 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.087867893 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.120960446 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.11833672 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.096458997 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113546918 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.10158827 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110974046 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094896008 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111671374 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.088638014 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114550821 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.093611424 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.11199683 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091642413 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121083964 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090317503 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.119534002 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.125967916 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089267867 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118191187 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.089122783 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111493316 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.104101074 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122985957 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.089865411 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11814914 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.112489451 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.096937649 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111461916 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.089316976 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111674657 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.090423069 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.118518332 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.089183254 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114628459 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.096057458 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126408419 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088832516 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.116939986 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091345973 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.113202403 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.094889605 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.113417866 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088515288 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.115241693 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.07990484 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115457226 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089216275 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.120504083 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115507627 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.099217476 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.114156559 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098711361 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.117480756 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.096224695 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.11805028 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.088452348 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.099483113 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094711778 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114747689 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.091428379 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.111881052 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.091209794 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.112096064 seconds)
done (took 17.272939107 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.089237242 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186896864 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.156993854 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.146890986 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109486112 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.11318041 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123791983 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.145979396 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.091411763 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.146165508 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.137475797 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.110041971 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.153453211 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088218625 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113431915 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.093452596 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115060345 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.129188283 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.128607143 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134385228 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.167491404 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.112739852 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149064853 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.11383782 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.122493015 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.140273078 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.090363472 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.116497315 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.092963011 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.1290167 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110060184 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.116628561 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.090831237 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135664822 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.130051096 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.097772612 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.113013721 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.095552711 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.113177868 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.08835209 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142972757 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.136812116 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.117841287 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.095987092 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.117266514 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.093246635 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115046568 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.099103909 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.124214253 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.118215907 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.105031655 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.159676777 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.11758166 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123018046 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.088936586 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124185011 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.100150936 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.116083923 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.090135256 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.115868373 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.08968328 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.117246074 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128495341 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143221766 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.094468459 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123923123 seconds)
  done (took 8.777556326 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.106715855 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.143682563 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.13196053 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109676547 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113106654 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.090202425 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113727286 seconds)
  done (took 1.762882387 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090654003 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.139900199 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117608351 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.139768411 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.137617297 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.117372343 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124670662 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090802054 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134752053 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.115558565 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.11548548 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.156667367 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.116421832 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.099198719 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.142557677 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090562247 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.14126575 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.114755408 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09374855 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.141843707 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094378242 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136129843 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.116662695 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.090013227 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.133354618 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.091451056 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.166682361 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.120368226 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096062871 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.135556681 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090600891 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.154450255 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.132165049 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.102070937 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115003158 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.108805379 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.13335538 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088245518 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131755042 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.122978212 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.108839315 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.118018837 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092019298 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.115407004 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.095687337 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.128639706 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.119075056 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092339986 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.118006477 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.114775872 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.115395046 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.108488206 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.115696569 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.094238283 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.117207575 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121719696 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.101946727 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115421906 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.115493373 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116251542 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.111265271 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135207397 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.133887587 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.111072293 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118388688 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.109457938 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.133346257 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118759021 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092590556 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119545042 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.111135722 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.113874722 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.092701097 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.129275092 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092810297 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.142931636 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.141986043 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093480893 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.127224079 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.090977257 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.116635068 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.091043774 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.142564671 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120281535 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.092724143 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119357325 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09451402 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113523905 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.090492602 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118977564 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.089598045 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117825076 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.093391227 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116747845 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118151129 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.11197828 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116840631 seconds)
  done (took 12.14798488 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.09257057 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116459845 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095218586 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.118202929 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.092212009 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116244404 seconds)
  done (took 1.597891305 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.119814816 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119009162 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.131698436 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.099968485 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158483137 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.135385162 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.111169016 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125331094 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.135176194 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.104628729 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.134691793 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.11050898 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.140972152 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122469057 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.109539864 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122165815 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.134461417 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101937139 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128782797 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123381618 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.114809199 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122762129 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09872117 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.136855653 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120512197 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098259013 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12817893 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.12989419 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.105097698 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.126146267 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123046652 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.09557252 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.122667381 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.100350806 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.136424185 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.123426582 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098291049 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121286498 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127791403 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.095681368 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.13653654 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099035111 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.129322922 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121226033 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.100317971 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.124113025 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121285065 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102308733 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.135205773 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120611097 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.097130683 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.122009133 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.095794597 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121373602 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123187136 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100794205 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122823428 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.110354686 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.124218619 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.123812271 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095750823 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120118704 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125528321 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096426346 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.132489761 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096250366 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.123361028 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123980405 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099114834 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.122986641 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.095975522 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121273786 seconds)
  done (took 9.450930191 seconds)
done (took 34.683422618 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.693196888 seconds)
  done (took 1.657230364 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.85568971 seconds)
  done (took 1.823588062 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.409600846 seconds)
  done (took 18.40798964 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.509777337 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.603425232 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.999908583 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.174013716 seconds)
  done (took 3.254716637 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.94701524 seconds)
  done (took 1.936626811 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.287215382 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.238433988 seconds)
  done (took 1.497208508 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.784908968 seconds)
  done (took 1.768401778 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.446908786 seconds)
  done (took 2.425493136 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.337030807 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18505091 seconds)
  done (took 1.512983634 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.563649557 seconds)
  done (took 1.545210849 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.747469332 seconds)
  done (took 11.735133931 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.274190382 seconds)
  done (took 1.268924101 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.305814297 seconds)
  done (took 1.292839983 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.576099381 seconds)
  done (took 4.564450701 seconds)
done (took 55.66668493 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.101216997 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.129311959 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105076669 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126474026 seconds)
  done (took 1.444476805 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.106871737 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.1224464 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105924834 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122424312 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.132381852 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.098793286 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.126366084 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.103115135 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122525355 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.124629553 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.097680367 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121516257 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100890795 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.125686574 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.095496579 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125352633 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.127738309 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.097979601 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.127623595 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097886497 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121267521 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.12594171 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.101613132 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121282843 seconds)
  done (took 3.743987308 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101750616 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.121043801 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098981296 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.120645245 seconds)
  done (took 1.434291149 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.102057017 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.134757401 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.107694062 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127322143 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.134617114 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.108733038 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119758733 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.095116556 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.121775055 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.102320426 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.11876991 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.142137927 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.109274255 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.127090399 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104635968 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11614078 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118224941 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.109099527 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126900882 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.10412477 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.120883515 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.1025471 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.117640067 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.136826963 seconds)
  done (took 3.801226718 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.174761266 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129616761 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.141959167 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.097426205 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162985193 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142886076 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.09151313 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.143217988 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.090085458 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133158052 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.120360864 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.136838275 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130928077 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.090031968 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11730673 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.115541353 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.102848115 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128648967 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.093203537 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.129604782 seconds)
  done (took 3.466613921 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.10054473 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119026219 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090571581 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.118332269 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100735809 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.12195029 seconds)
  done (took 1.649899253 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.098842559 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.116459713 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095770641 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.117773075 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.096333978 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115951499 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.091341387 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.117145479 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092057309 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114949976 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092645301 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115807369 seconds)
  done (took 2.26319743 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.515887556 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.122808069 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122023477 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091147888 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.127460365 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090771116 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.133332591 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.094580755 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.145302899 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089726431 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.118245933 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.11954683 seconds)
  done (took 2.769849904 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246549701 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127231941 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.289400032 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.39810544 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185530406 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171160593 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.307730004 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168825777 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.239040745 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168723994 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232247287 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182329008 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132641328 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246278564 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144628753 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.122726882 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223137385 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.313847483 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156116113 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223825717 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174556025 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171575579 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185315674 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157305164 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142624138 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200835287 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.123092756 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107072504 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218959873 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182874163 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193276832 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163760976 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164356769 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237748596 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.297016703 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198418066 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285275155 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137243008 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.145683712 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169131589 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274331567 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145113661 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240306232 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138983212 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134228146 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23693521 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162064654 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.203399148 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.149767959 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117905301 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231219549 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200175359 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.246277246 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140463949 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311182935 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154749565 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.175315982 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194503971 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255826169 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207578731 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223146494 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097495525 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.217760353 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201142368 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191508623 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.171561142 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.196053243 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147363491 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181738765 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.227464564 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191806349 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17625495 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.215275025 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113344272 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17115249 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177798953 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199734952 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23926154 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216556269 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.09817807 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171105863 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152815177 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135156312 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.197978104 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101525383 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251247314 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147207094 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.167477702 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215122859 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162475987 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165061372 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193264825 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179724773 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151154804 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.113192841 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129706344 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157574759 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175020352 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14284485 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161467353 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154693943 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.132450476 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172732355 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.099944525 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215297912 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.093092094 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172324316 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215886826 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.102573361 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16879991 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156448902 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.155228645 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198005648 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202356982 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144056629 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137384956 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214934264 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210258765 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.117988788 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180320295 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.238192768 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.148077916 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125435498 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232830313 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247489241 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119253003 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232493306 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151948142 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111889197 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.136515534 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186676829 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159623687 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.164229918 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136919323 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.187272971 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231594862 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.101515952 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141061801 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204195952 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13797914 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134671193 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150794886 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122451928 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140785972 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145384641 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.148712439 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180394496 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182232527 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158458587 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170000291 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151013884 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243632224 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143264291 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.127538375 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15253511 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.1242765 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.220293096 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201381003 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134832506 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23151626 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.17364922 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204162787 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170929282 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137707025 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181337308 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132557104 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.09679055 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224557947 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168867752 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165726542 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.199068324 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19967064 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.221053509 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.18764949 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170254723 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177660311 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.17021648 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157512427 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.141424651 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164874293 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162191597 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.09867829 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143071666 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.138172361 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152990304 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145571148 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110399804 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227926873 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176706414 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195322035 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16178274 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152837906 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187040801 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.132096699 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177439627 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179868325 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150310879 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.227504024 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199336577 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193008161 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147533979 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232413771 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.096606371 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127762458 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.146195055 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171663895 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108897435 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138849618 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166368432 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185826115 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180187768 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202594357 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2118529 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190925674 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224341368 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.097973565 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.172427273 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181950935 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181901144 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.183645624 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143946743 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.153654636 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183163193 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123451296 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244435804 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170993216 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178422284 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232313952 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.153748186 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107896388 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153724366 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176697283 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157897935 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176466709 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149131006 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141666321 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158503449 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.105605676 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191282588 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184883416 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166033814 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184543148 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.153418075 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192155647 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131398824 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166393933 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164904767 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166178321 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.083248438 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199625126 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199627949 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145821139 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164309825 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187106017 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13408551 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.312736661 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20511657 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220797594 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112664467 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158317348 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165623266 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165591057 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16921273 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182678093 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162735058 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191080308 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162137573 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.139946238 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140179404 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151621895 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12886128 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.13711032 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149681133 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.180237016 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.142254447 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185655354 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150552154 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162189983 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174748809 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.153280291 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.147706459 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125223065 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249164667 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186489362 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223295329 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.12453995 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.205697538 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207097185 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100615832 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135705915 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.136424852 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18294192 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139167777 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197920217 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.191967245 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231095137 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185506897 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175570262 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141900153 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.122712 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161955904 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172161238 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207593261 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150039527 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.152739743 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202876706 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.140884096 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13457265 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140279481 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.319667165 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148420569 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192734691 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081366946 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.284441218 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126307596 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13606793 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165838531 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188613651 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.138512119 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.156359246 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170421391 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154390382 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167333471 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152909384 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.220071424 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217760753 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203999163 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215492283 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.108672263 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161808167 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170752251 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218040429 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160079225 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.113396763 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190384438 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226951529 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.198516447 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.145964745 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172186318 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172017878 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162829457 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195775387 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138937379 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234475373 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111610591 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224615835 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15732711 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139853874 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176944803 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.191721497 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144554523 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185292108 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186550315 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138726851 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13535851 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165024007 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182485973 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151550388 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.101704065 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210422504 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.099391751 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227994019 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270452105 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109100694 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159090849 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150301877 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13911773 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158591641 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161696075 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112894708 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.168819278 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198080261 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.138376456 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188282866 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235940458 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174992651 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169760668 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148463977 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.75310351 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.133947466 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198808363 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150210523 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187356676 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152439136 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176052102 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16350943 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170969485 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199935695 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160393792 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.235181906 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222520367 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.183313692 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107085796 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189830802 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123157269 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.147511934 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157593309 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171057123 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162346404 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.149196745 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.182576705 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159042029 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.136694218 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113779041 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231220277 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149971993 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186995058 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18411745 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141253187 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176352186 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195225048 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138005182 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.19349934 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216570453 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116823652 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153215245 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.137886369 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.154434837 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268883228 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.100683512 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186214436 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219082642 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164052277 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171169034 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.150468126 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197589941 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161637642 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217578914 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118679486 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159646422 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161965981 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141466188 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.133567659 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158365865 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170949849 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.125699607 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191418619 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.140802321 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196936505 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.127328695 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147958376 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294864269 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177459953 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245278575 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.110414836 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139797102 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163709755 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150488194 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.181247853 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184337616 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.139163533 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137766929 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.110189668 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.157807375 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113984788 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15997328 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194309721 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162541764 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237845313 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110555213 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.283096827 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142855962 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157863421 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090196645 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.135247785 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154256393 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149750637 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152363117 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197400321 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271328426 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149310642 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.108505078 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152568473 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.128512755 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13792113 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138507886 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16368628 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210415722 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117173476 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.110988479 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159367238 seconds)
  done (took 84.0102372 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.181573348 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.137324014 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.150452684 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.204223214 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.180178207 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.295341917 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212107205 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25691298 seconds)
  done (took 2.707235255 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.096064028 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.15355159 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.159399693 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.135637407 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093582949 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.122157069 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.37144204 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.135253642 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.118196325 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.124424248 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173374192 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095721858 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.587339577 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.092221871 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.121626887 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109988167 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.118176076 seconds)
  done (took 3.889108782 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.253972513 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.47999938 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.089910522 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.213415499 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.162210369 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.121833593 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.69253774 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.117423046 seconds)
  done (took 12.211964525 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.126559413 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.14694023 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.136844985 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.16639485 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.151477417 seconds)
  done (took 1.821244518 seconds)
done (took 126.196205037 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.100327689 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.130395351 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099950978 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132363003 seconds)
  done (took 1.540526512 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.099817236 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071953266 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103166242 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076556526 seconds)
  done (took 1.438621821 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.196366484 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.169942249 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.394229275 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.07341485 seconds)
  done (took 1.58842464 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.118105146 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13482587 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.106334791 seconds)
  done (took 1.459703049 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.10883451 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.13144966 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105353208 seconds)
  done (took 1.442221588 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.10772682 seconds)
  done (took 1.206470296 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.113560136 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.142098071 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.113712331 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.141551103 seconds)
  done (took 1.607951807 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.100803575 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128626692 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.114397237 seconds)
  done (took 1.43965343 seconds)
done (took 13.178941679 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10920967 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.424564105 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.419469183 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112279967 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.728468906 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.38315848 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.038005511 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.1491003 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171203123 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094350172 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.142142384 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673996529 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.06648563 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.375959069 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.023505308 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.373282021 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.703557606 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095123556 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120859836 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096014895 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.020751484 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093831834 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123952982 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093690795 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704255672 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.428065759 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097251162 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.373847946 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093123501 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.13187975 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381997634 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124030275 seconds)
  done (took 17.052466923 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.100197151 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18158722 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.133083224 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.097049573 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.130184674 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095797574 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126186037 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095386371 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184763888 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124507747 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113149361 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123016622 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127373588 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096391268 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144808979 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094386084 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126837618 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093985263 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123038595 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123988924 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114334142 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122731295 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095944682 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123042763 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096141423 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137522793 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124889899 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.09448834 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123315929 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103399078 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.12631306 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096229387 seconds)
  done (took 4.898909091 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.145536103 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.191869918 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.13502479 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130282905 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.175900858 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125856738 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.202298294 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147704984 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.189530011 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096113759 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141816654 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.09471246 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15958713 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.125677766 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116968853 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123589092 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097052092 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122781812 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122292259 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096429244 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.142250293 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094583901 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125406781 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093876459 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12575833 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.138204467 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097548907 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123312799 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094595062 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133012221 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098997369 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126372645 seconds)
  done (took 5.2398145 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.09966403 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128630805 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.112251229 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.141433862 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096950344 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127142746 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.099443414 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126898528 seconds)
  done (took 2.037847157 seconds)
done (took 30.327011574 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113269166 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128998302 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.109816021 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.137985497 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.106034801 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.136709604 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.093187516 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.136357264 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135751771 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.104253395 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.139869254 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093385528 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.125621634 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.094150724 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.137010924 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.099493959 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.137069432 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.132912046 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.110924505 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.136894023 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095926269 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.136158346 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10425425 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.138908734 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.136777128 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.109148994 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.139977142 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100821751 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.125217699 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095547097 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.129124224 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.107465796 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.126051607 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.137414444 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.099982833 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.127393185 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.096347343 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.127549047 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.108662097 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.136242204 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.101043905 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.135537392 seconds)
  done (took 6.120496223 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.112930064 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.144399283 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.108810867 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082526658 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118363033 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082712359 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.141997499 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.081312742 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.112263658 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.112750004 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.104958402 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079649836 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079708726 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.103441947 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078991226 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076567078 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.110710037 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077214481 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078184375 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.108177936 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081466541 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.102873338 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081458964 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079333264 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.105388852 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.083239997 seconds)
  done (took 3.643668754 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.102373668 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.143041707 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116403498 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.178662706 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.158724488 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.103089419 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.137552471 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.142102141 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111398646 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.122975737 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.098693391 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.153190816 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112308101 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131473396 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.126268451 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.11062483 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138193829 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.097229931 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.134850892 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11411237 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.141159935 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.133849303 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.113502671 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134584324 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.09391487 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126030275 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.10078 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.14366278 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.13115683 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.105517879 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.130148993 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.099193264 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.126875795 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106699487 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.130751529 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.125174671 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.116099022 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.138754277 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.105535837 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.126292378 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101695668 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.12742801 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.145176217 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.135681723 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.124724063 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.103025973 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127840779 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133861778 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.096764072 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.142695732 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104960791 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.124167621 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.09836755 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.125435851 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095740155 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140408894 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.095995589 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.133139422 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132166268 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.101389353 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.136623752 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.100520873 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141600529 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.095718882 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.132595111 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.096470928 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.125384307 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122582047 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.118532569 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130149982 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16525016 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.096642501 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124461817 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.105371159 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.132990879 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.101474965 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.12418499 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111698582 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13445853 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.127155769 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.107417927 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126695092 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.098291653 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.143439607 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.096852229 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125678467 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.095992055 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.13118986 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.096785438 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.125132432 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138648126 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.09462136 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126648514 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.107877562 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.124235552 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.096282492 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.131855428 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.128380165 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.095617315 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137530923 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.10023486 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.126553873 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.106699485 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.125512417 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.098030701 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.134841735 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.128846598 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.095550461 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.129484115 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102308153 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125872696 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.098983459 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.128163925 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.097410286 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134883261 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.133197483 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.099900131 seconds)
  done (took 15.192510134 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.235593253 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.225209532 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.191055384 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.302040417 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137331421 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.119365944 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.218346328 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.162113129 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124877911 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.163959033 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.173958289 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.189103424 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.144953168 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.185039159 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.173920139 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.125681764 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.144943936 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.14118946 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.251046245 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.265617316 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.153753365 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.133576405 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.165722178 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.133431879 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.138902774 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.135011808 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.112070238 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.13828111 seconds)
  done (took 5.914412243 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.111616527 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157789939 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.101175198 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.147845618 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.153440508 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.095858481 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.130661926 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.126451144 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109333888 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.139771822 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.095202949 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.131680021 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.13205514 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105307287 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.125640123 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.105297812 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.135109984 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.097093841 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128350222 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.099486007 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.135877995 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.134598367 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.099447591 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.124716515 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.105279382 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.125315878 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.088750758 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.146541411 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124729519 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117853285 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.123510289 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.103273648 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.13922794 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.125315907 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.095751506 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.127186541 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.098074796 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.127808579 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.098179987 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.124374438 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.095506354 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.109803569 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.095321889 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.140229706 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.10152937 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.111988731 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.10240404 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.13218295 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095748914 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.123935065 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097388981 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.128467043 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.128026303 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.103751225 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.12678594 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.097724656 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.128633077 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.087691881 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.131623057 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.098753088 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115605637 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094760729 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.129302671 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.091319508 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.133932279 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.100728555 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.124246354 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.097593001 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.129691468 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101203528 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.128571572 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.100738404 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.122971777 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127657826 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.098826333 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130982011 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.099217393 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122855074 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.095786672 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.126019316 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.077505247 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124676496 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.076505841 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.098388246 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.123829384 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.12352237 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.098377204 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131416135 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.111825075 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.126945348 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.134123325 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096932092 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.12350388 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.099494475 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114375494 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.09929699 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.141345033 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.11470812 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.126048 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122928053 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.110935099 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127713244 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.09566855 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.108327038 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.105788714 seconds)
  done (took 13.251056957 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.133097695 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.156157392 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.127625691 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.114626424 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.159474246 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.15960176 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104343081 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.133240157 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.097478259 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.144798059 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.096021782 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.135862901 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096021822 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.140072016 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.159823568 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.106942375 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.128838042 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.110596126 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130534585 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.172189832 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.113761754 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.145134951 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143760982 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097066756 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.131044979 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.112525779 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.163899259 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.139960503 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109253523 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.145640361 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.110356663 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163092301 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.145866139 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100225794 seconds)
  done (took 5.573006842 seconds)
done (took 50.801800655 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.214688232 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.425722684 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.201025052 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.03949428 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.25022982 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.221813919 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.231295093 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.203003128 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.470587888 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.203818485 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.475430813 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.750072732 seconds)
done (took 58.814731173 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.217662692 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.357891857 seconds)
    (2/2) benchmarking "String"...
    done (took 1.497219781 seconds)
  done (took 3.982599295 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.799240192 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.154470759 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.463988815 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.201407231 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.202528842 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.498316207 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.912740402 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.584951727 seconds)
  done (took 28.145854019 seconds)
done (took 42.276551023 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.2216234 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.257380927 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.237679891 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.181609962 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.337943546 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.226480886 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.506474891 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.2064978 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.223919488 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.184474273 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.231975207 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.203391314 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.215056861 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.472173828 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.205119893 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.223926899 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.245936739 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.677778936 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.606099475 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.209759722 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.215220708 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.256723162 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.225613781 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.207186818 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.238308814 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.219546365 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.204138943 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.222336838 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.739602911 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.205807361 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.216260862 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.700851444 seconds)
  done (took 190.6550182 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.205210619 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.259432774 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.361149407 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.245731871 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.716841825 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.406055734 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.350673647 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.787259103 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.225024839 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.234780561 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.532928204 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.208091597 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.608081753 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.176985132 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.236089916 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.26862919 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.507338699 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.573873459 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.240663452 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.366580222 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.22426735 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.584852566 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.512068477 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.458818702 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.232418618 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.251281709 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.238575599 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.228142352 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.399823278 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.418179575 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.267645985 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.241922612 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.829488628 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.06177277 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.229312606 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.244029668 seconds)
  done (took 151.062283969 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.206244933 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.205447817 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.207785306 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.239248734 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.206554401 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.787809169 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.773874576 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.724280154 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.662828769 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.528379122 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.506504775 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.20963852 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301693286 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.221387485 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.210927587 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.221851574 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.247682906 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.209913784 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.208108824 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.78984161 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.224377063 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.236850165 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.403846488 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.223329576 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.240299132 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.598979051 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.2087646 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.241455895 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.540703452 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.258434913 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.208119674 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.590084507 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.519864537 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.322942181 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.211148164 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.241605876 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.208719002 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.210136209 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.488765796 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.210220206 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.2079308 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.209635613 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.212249756 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.89281113 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.213059479 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.790272937 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.212774703 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.176164767 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.211837562 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.209948253 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.592149883 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.884430987 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.22789621 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.208919534 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.212273758 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.209045477 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.2100687 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.242060145 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.527136455 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.308041707 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.228003892 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.214477474 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.241940704 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.211158649 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.376035191 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.211367703 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.294651684 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.270485097 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.428728154 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.793432912 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.213365282 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.3102179 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.332463471 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.211357584 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.211961978 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.211368383 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.210190661 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.321953932 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.210797071 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.616602127 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.211438087 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.388028172 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.227372186 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.619897519 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.311582592 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.211475416 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.640109618 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.214815754 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.213458021 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.969020547 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.30994176 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.211725473 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.213023116 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.213025045 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.617377446 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.211876393 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.779577968 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.477998979 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.215794889 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.529696993 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.215253093 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.635557091 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.769486466 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.903727181 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.216321197 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.325840188 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.389338003 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.22966995 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.21292 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.609948628 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.214146892 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.269322522 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.216903489 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.611397796 seconds)
  done (took 366.881782519 seconds)
done (took 709.73002439 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.841421367 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.829787634 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.939290349 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.822768121 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.790006051 seconds)
  done (took 10.36085436 seconds)
done (took 11.500470963 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.400425306 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.399281099 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273491841 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.401684549 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.245287364 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.419258875 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.380871716 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.234054559 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.314478035 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.294506821 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.312566192 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.265728432 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.248176311 seconds)
  done (took 18.328078176 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.533348732 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.546685339 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.279194701 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.537668093 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.254123221 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.537029805 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.423570952 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.436241026 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.4368918 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.24837423 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.228114927 seconds)
  done (took 16.600531418 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.534630449 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.538808791 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.282227096 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.532933061 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.257388349 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.54830548 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.419917979 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.433283195 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.433205499 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.249809053 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227885912 seconds)
  done (took 16.597678358 seconds)
done (took 52.666314366 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.224221431 seconds)
  done (took 2.363440378 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.259132761 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.424280185 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.2422913 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.230174634 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.224796166 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.228294493 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.229696881 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.223853995 seconds)
  done (took 11.20381349 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.221646586 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.225368259 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.225036273 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.221314611 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.222931882 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.224045949 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.22396187 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.224073038 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.224162309 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.221747572 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.223353851 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.220310229 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.218945214 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.218981027 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.219795422 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.222864564 seconds)
  done (took 20.698536923 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.221789604 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.220928747 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.219259804 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.219720969 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.218332598 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.21976878 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.219993345 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.219260394 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.220704574 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.218986164 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.221732899 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.220318434 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.22064103 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.220201783 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.220569074 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.220673759 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.219883432 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.219902548 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.225301436 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.219979118 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.21961265 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.219691206 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.219702627 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.220414875 seconds)
  done (took 30.428156087 seconds)
done (took 65.836096172 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.833892196 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.833501227 seconds)
  done (took 6.805323292 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.280643769 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.285270221 seconds)
  done (took 3.706382318 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.222991926 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.222219095 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.223965185 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.222196986 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.224125404 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.223757152 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.224439451 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.223066965 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.222254322 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.222658713 seconds)
  done (took 13.371168216 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.22374792 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.223829698 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.221553425 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.224047824 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.223131476 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.221005248 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.223462608 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.223162137 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.22313612 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.220864499 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.224605489 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.220910802 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.22238706 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.221443266 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.221855792 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.221718041 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.221523174 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.22125393 seconds)
  done (took 23.143625393 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.224539434 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.244070853 seconds)
  done (took 3.608698082 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.350891185 seconds)
    (2/7) benchmarking "second"...
    done (took 1.263298135 seconds)
    (3/7) benchmarking "month"...
    done (took 1.332018169 seconds)
    (4/7) benchmarking "year"...
    done (took 1.319975486 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.26410704 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.24248642 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.263864047 seconds)
  done (took 10.177282235 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.224875932 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.40098605 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.50720602 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.824692481 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.22628714 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.229920146 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.105182358 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.230891949 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.234288197 seconds)
  done (took 14.125046863 seconds)
done (took 76.07810652 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.244564189 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.235762096 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.479039879 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.220803088 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.251065202 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.514907717 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.232777008 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.339273898 seconds)
done (took 37.660400422 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.229598345 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.195386504 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.942152415 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.213476024 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.287081237 seconds)
  done (took 18.77730473 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.256136923 seconds)
    (2/2) benchmarking "read"...
    done (took 1.570390463 seconds)
  done (took 4.966189712 seconds)
done (took 31.114521011 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224854199 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.221980133 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.225269234 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.223971609 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.222991913 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.224371942 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.222507663 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.221757515 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.225004945 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.224973089 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.224324462 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.225101314 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.225179451 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226592555 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222284511 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222165381 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225101044 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.223216983 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.221855086 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223158017 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223252606 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226162265 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.223108785 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.223605459 seconds)
  done (took 30.513825086 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.226102274 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.223507798 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.226037584 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.226551147 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.224108463 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.226416131 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.226038388 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.223730731 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.225570884 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.226537132 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223340877 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.223590196 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.226711874 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.223720264 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226898185 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.22496213 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.227106726 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224333951 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226496314 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.224892463 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.227186549 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225456335 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.224474783 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227138494 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.224706967 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223895619 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.227974834 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.225820063 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.227002454 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.226056231 seconds)
  done (took 37.908654789 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.232480905 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.233816728 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.228258323 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.227427842 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.229063054 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.228260973 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.227230772 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.229144584 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.22808501 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.228272622 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.22778375 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.228913286 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.229403445 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.227290432 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.228823442 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.227457306 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.228222729 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.228097504 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.228010653 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.228941008 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.228816225 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.229225856 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.228567978 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.229017389 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.22826077 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.228634791 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.228710408 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.228264967 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.228539954 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.229140136 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.228881976 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.229331099 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.229023554 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.228648865 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.229186826 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.229824712 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.234362991 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.237436707 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.230151722 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.229334488 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.229766178 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.229616949 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.230548339 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.230614365 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.23076854 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.230509569 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.230914863 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.230576746 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.230483262 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.230897068 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.230069226 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.229945669 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.230061016 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.230277422 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.231800704 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.230105291 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.231178418 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.229874332 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.230258398 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.22984882 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.230330692 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.230809003 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.230295382 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.231595173 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.231593531 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.229779988 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.230923309 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.230911138 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.232075327 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.231735996 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.23135385 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.23324777 seconds)
  done (took 89.696795171 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.231554798 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.229036566 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.228931561 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.229128321 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233172518 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.231198471 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.22961788 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231519303 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229743575 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.231603889 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231462025 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.230394115 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2284339 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.232200609 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233730122 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.23024101 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.231827458 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.231996643 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.231924567 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.232898981 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233107519 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.229313826 seconds)
  done (took 28.229932655 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232492768 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.234195144 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.229799263 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.234254348 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.231318907 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.233898633 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.232151902 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.235092979 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231754493 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230484445 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229004635 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232156941 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.231170045 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228944548 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231068718 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.232676179 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232457321 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.231954141 seconds)
  done (took 23.324310735 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.229926189 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.229721078 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.233073747 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.230641873 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.23053188 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.233680085 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229326261 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.232565988 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.233696084 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.229165849 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.231779055 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232784703 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.232643884 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230496913 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232506993 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.230106005 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.232619532 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230337311 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232497247 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.23101864 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.230869518 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.234371413 seconds)
  done (took 28.242411096 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232993006 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.231677063 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.229490944 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.23069756 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.230135168 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.231412379 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.235007843 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.230056875 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.234014166 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.232538224 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230968206 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.23345951 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.233309856 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.231711486 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.231835893 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230100216 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.234154456 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.23207475 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233708592 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.23043857 seconds)
  done (took 25.787227925 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.234091283 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.235530219 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.234055621 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.234926825 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234793326 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.23569927 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236494302 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.23377307 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.235198301 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.23630791 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.234400178 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.236662812 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.235406103 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.235705821 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.236072853 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.236188422 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.235958211 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.236073411 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.235431528 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.236018152 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.236718926 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.236532902 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.236655512 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.235776437 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.236452301 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.236489811 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236286449 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.23525887 seconds)
  done (took 35.748719937 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236802944 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.235528497 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.232390858 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.233504462 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.233403929 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.233975333 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.232708852 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.233644835 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.235810795 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.232163339 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.235324057 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.236341776 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.235512466 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.235838227 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.235847188 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.236718669 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236124339 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.233673351 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.233486098 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233039443 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.236732629 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236642291 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.237931583 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.233782546 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234175897 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.236336449 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.234479672 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.234737874 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236410343 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.233291515 seconds)
  done (took 38.19754799 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.256390034 seconds)
    (2/2) benchmarking "in"...
    done (took 1.255231643 seconds)
  done (took 3.663073021 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.235157822 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23715682 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.237611051 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.234923924 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.234241963 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.236634129 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.237261496 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235561111 seconds)
  done (took 11.039821229 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.237343124 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.238111761 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.238089646 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.239263411 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.239100634 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.23865923 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24630536 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.257415353 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.239655233 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.240264886 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.2457674 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.246380381 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.241434754 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.240025809 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.238358369 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.239914611 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.238195235 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.240582091 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.240830504 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.241823835 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.241127566 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241604899 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24039741 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.237627493 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.24090918 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.250520424 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.262096828 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.240342563 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.24077624 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.243570431 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.240951636 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.237586257 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.240567128 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.240963454 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.241581083 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.240942338 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250760411 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262113658 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.248069889 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.260975413 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241737785 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.238958425 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.242302503 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.242706013 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24225437 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.242159484 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.242718864 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.23896917 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.241908029 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.24516827 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.247827352 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241898672 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.239842005 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245008721 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.242527579 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.248745048 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.26051444 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.246328798 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.250555363 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.252513307 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.274409711 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.266363186 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.243692315 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.242082887 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252762024 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.266213042 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.250689562 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.259536839 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.241281004 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.244788922 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.249833218 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.27475054 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.268306551 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.243505672 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243934408 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.245227142 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242715834 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.245194595 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.249959321 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.264311364 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.243758636 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.244229852 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.25407649 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266968001 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.243116895 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.244088588 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.24495998 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.243931296 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.245417507 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254230761 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.263288093 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.245962788 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.242651004 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.243783613 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.244655926 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.243496072 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.24368168 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244934149 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.241299945 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.245252732 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242646724 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.246921664 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.252609529 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.243809517 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243570854 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.251089703 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.263182322 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.245008311 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.250513673 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.244078052 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.244877868 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.244612496 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.249393583 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.241763847 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246794345 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.253277307 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.242925648 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.243976226 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.24332106 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.245161603 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.252095784 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.270836211 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.24517226 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.245231643 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.248025879 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.25474728 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24376281 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.245913139 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.244543515 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.240794763 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.24188716 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.246544333 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.244077473 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.24381481 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.244012071 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243979124 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.240648435 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.243144849 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.24424668 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.245991471 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.245070454 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.244280472 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.24513301 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.244157002 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.243725152 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.245552165 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.250916318 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.263048004 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.24543655 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.244431466 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.242275284 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.24524162 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.245167582 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.245081061 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.244833818 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.246666961 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.244463642 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.244574179 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.245228197 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.246435728 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245943366 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.248191639 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.251728886 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.246055994 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.249672219 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.24565568 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.243567196 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.24661602 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.246498578 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.245848706 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.24638035 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.245004952 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.248634537 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.255692169 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.247515285 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.246413486 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.249815617 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.24721962 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.248544365 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247829775 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.250485368 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.254615101 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.246676844 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.253848141 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.26644656 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.248824153 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.247191894 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.247343731 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.246747684 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247461053 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.250167087 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.256355258 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260337091 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.27233883 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.248883202 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.25279834 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.248194632 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.252332824 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.252124038 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.248508674 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.249618764 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.247689209 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247939684 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.248468558 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.248595329 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.248070363 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.248378429 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.249451793 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.249035155 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.248554183 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248848251 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.247541373 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.248689219 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.247135932 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.249366917 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.248705076 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.249477487 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.246650531 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.24806989 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.24839032 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.251039295 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.249981366 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.254597611 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.246838271 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.250232477 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250313526 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.24862282 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.249281415 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.251040809 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250872459 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.249545915 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.256690317 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.267884654 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.250551833 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255261995 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.267604924 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.249011949 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.251529127 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.250938325 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.246418941 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.252848627 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.258514142 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.249652963 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.252297614 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.250166567 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.250096812 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251531165 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.255926612 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.265306748 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.249879425 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.250617091 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.252370611 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.248506768 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.249543712 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.249549672 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.2502173 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.251338038 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25047588 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.251012258 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251867682 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.250575098 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.251173831 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.250694294 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.2529362 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.257975067 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.255151814 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.248809021 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.254095199 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.249151446 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.254835781 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.24924082 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.2511976 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.249209366 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.262484952 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.27374136 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25633894 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.268310384 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.249839403 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.255028187 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.269048451 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.252940783 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250267526 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.250860268 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.250639266 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.249870518 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.247213939 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.24974445 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.250379975 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.250816073 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.251048998 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.255235663 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.251995811 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.249507982 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.250390111 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.250211317 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.250264662 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.24803125 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.250826719 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.2521946 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.251409096 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.248464415 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.249373642 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256247027 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.266917061 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.250388785 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.249207746 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.249329514 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.248944891 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.249413898 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.250098277 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.252945978 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.256737593 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.253196155 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.257785074 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.251803424 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.261224727 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.250838 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.254307841 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.257861374 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.247261375 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.24825313 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.250114273 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.250413504 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257493759 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.268692998 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.24979797 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.2539618 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249777566 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.250022409 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.250853104 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.25043926 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.25188163 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.251147858 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.258531148 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.270966983 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.252671206 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250890763 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.248028393 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.250812069 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.251110845 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.249780803 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253344142 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.250758538 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.251526951 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.249538461 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.249544783 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.251694322 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.251361495 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.25102581 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.249044519 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.247763339 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256103499 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.269675093 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.254676313 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.25089906 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.258140275 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.269080753 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256778961 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.268217856 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.251683013 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.251882357 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.248796977 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.252151174 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.251283771 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.252142211 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.25140609 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.2500617 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.25371934 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.250575391 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.25251744 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.251101002 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.25248569 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.250765431 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259030874 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272352249 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.250791445 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254752913 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.249076553 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.251159168 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.255077552 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.251374733 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.250479725 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.253319084 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25959283 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258593323 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.251285376 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.251086851 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.253723147 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.251992883 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.250641048 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.252088803 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.251711956 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.251370931 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.25095573 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.251446595 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.253760494 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.252496709 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.251321503 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252610447 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.252663824 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.259575497 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.269985814 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.252981912 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.251983315 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.253214805 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.251469323 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.252811292 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.251825635 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.251860312 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.252644929 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.253733598 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.256288216 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.257809081 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.25513732 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.251923914 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.252290871 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.252746477 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.252655813 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.254281235 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.252659038 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.252994014 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.253294711 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.253022979 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.252664509 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.251960754 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.255463092 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.253793143 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254740438 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254199511 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.259593409 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252277226 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.251417594 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.254562979 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254432512 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.253908345 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.253843187 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.260332466 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272736603 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.261928136 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.260997148 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.257526938 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.254016339 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.256925346 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.26010603 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.252604507 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.255313421 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.254133831 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.254752228 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.254295596 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.257302483 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.256983201 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.260355923 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.270908553 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.252918755 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262745703 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.274271377 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.254506768 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.25540644 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.257291346 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.253554593 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.253184363 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.255277611 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.254864743 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262070677 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.274177362 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.256355253 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257200447 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.254618765 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.255587645 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.258213871 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.255978845 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.256108519 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.254512853 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.255909276 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257177855 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256112422 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.254789294 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.254754467 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.2548919 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.258882025 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.261562195 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.254005755 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257632829 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.256311995 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.257047861 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.257184842 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258402956 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.255001769 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.255091586 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.2566624 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257836653 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.256935952 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.260105303 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.255309202 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.259075945 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.258115156 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258399022 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.259301205 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.26543689 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.26463469 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.254526505 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.257138381 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.257964764 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.259203951 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25788998 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.258667851 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.258187891 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.258567759 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.258252911 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258251384 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.258204472 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.26105779 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27225723 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.279986329 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.259316112 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.258979807 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260547963 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.259322065 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.255766036 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.259573539 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.259940111 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.261454876 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.265686855 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.259417659 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.265518282 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.27565209 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.258977135 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.262490332 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.260897218 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.263355348 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.262052864 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.259598337 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.259257293 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.262088546 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.273997453 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259650496 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.26905868 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.286126073 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.277366441 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.260709222 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.260952146 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.25809171 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.261869695 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.261166862 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.261346279 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.260347825 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.261671702 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.261427058 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.261850388 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.264634768 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.261737945 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.262341953 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.261435157 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.260495974 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.261422594 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.259560015 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.261613523 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.260391223 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.261178656 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.26118325 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.261580217 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.262269165 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.272291996 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.28455703 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.263181504 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.261645224 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.260299927 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.266320228 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.262896976 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271182295 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.268080773 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.263340346 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.263486255 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.263145214 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263725605 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.261638229 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.262535787 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.261672846 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.262282615 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.26031817 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.273846199 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.286685723 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.267630634 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.262082585 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.26531761 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.262364432 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262889437 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264877685 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.263831008 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.264491507 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.264969557 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267647542 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.264274602 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.264162185 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.266618683 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.269779141 seconds)
  done (took 748.08896258 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.261744396 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260895007 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.261616651 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.260899684 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.261566896 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261763154 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260966029 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.261646108 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.262247868 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.262028954 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.261566263 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.261580874 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.26256004 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.26306113 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.261832074 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.262067959 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262883576 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.261282037 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.262049881 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262338822 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.262728266 seconds)
  done (took 27.675771622 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.265234414 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.262817215 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.262263996 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.265893812 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.262834569 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.26505767 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.263046115 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265165464 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.264579147 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263912139 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.266240194 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265800585 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.264109072 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.26285839 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263201999 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.265222565 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.267503511 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.262394938 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.265457109 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.263214855 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.265603373 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.263984352 seconds)
  done (took 28.993823341 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.266663691 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.266843161 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.265824663 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.26343646 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.266782026 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.264352843 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.26738538 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.267169428 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.268161117 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.266105235 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.266094325 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.267910588 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.27247829 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.272275549 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.26833444 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.267579224 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.412105053 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.26766194 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.267498538 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.267363958 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.266210716 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.272094494 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.28455444 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.265083178 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.265001049 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.268400729 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.268439714 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.267771627 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.268262104 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.268288041 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.270567113 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.267942867 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.26798148 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.268826966 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.266730919 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.268059397 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.273317109 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.269649916 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.266328103 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.268193762 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.276253171 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.285663169 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.269168405 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.273231532 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.286539877 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.269375281 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.270831938 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.275227683 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.266802628 seconds)
  done (took 63.525928304 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.2694451 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.270200036 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.267425358 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.270008207 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.270023296 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.270005746 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.270437039 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.269876661 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.267425264 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.268098072 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.270893702 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.267801493 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.268029024 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.270287581 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.270888158 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.268398865 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.267874657 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.268672059 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.269062374 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.268023553 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.269229962 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.271884873 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.272395122 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.268073285 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.270280562 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.269647006 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.268647873 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.270969431 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.269304167 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.269165784 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.271821238 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.271533725 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.271346883 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.270299981 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.268577572 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.272459996 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.273045327 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.269284017 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.272661193 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.268971096 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.272490099 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.271535655 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.27257671 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.272948548 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.270120354 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.269812671 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.269662426 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.269215033 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.270783652 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.271726747 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.272155218 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.271336091 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.272892443 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.270649952 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.273734553 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.273187616 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.270917951 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.270578483 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.272873525 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.271108239 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.270204914 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.273242002 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.27175541 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.272047834 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.271798886 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.271190457 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.270449858 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.273482306 seconds)
  done (took 87.580022935 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273101228 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.273440476 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273367259 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272766751 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.273421755 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.273705715 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.274178012 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.273363 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.274112328 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.273494727 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.273837315 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.273948042 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.273311833 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.276327141 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.274729031 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.274021313 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.274912237 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.274074188 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.274280356 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275422474 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.273370025 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.27494366 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.274728725 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.274134348 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.274834048 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.274340291 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.274326642 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.275006865 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274449272 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.275530663 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.275914904 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.27608019 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.276155448 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.275711034 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.274962749 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.276088254 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.276317812 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275586877 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.275015756 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.274963649 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.275339808 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.275136381 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.276190151 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.27678154 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.276478429 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.276013536 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.275708952 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.277108952 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.276619182 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.277069934 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.276500202 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.276697915 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277898715 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.276847357 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.275593618 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.278412805 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277061608 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.277344518 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277580378 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.27769807 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.27756442 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.277890989 seconds)
  done (took 80.25846723 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.277281116 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.278546272 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.276358808 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.275687488 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.278211061 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.276767622 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.278018724 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.278592047 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.278376213 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.279230203 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279331517 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.277549934 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277831212 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281396872 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.277141824 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27851436 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.276979782 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.277572909 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.278473648 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.277206904 seconds)
  done (took 26.747954926 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.277687211 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.279751439 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.27649632 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.276618232 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.279961441 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.277301848 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.279772553 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280477568 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276687178 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280886621 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.279832681 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.279825194 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277720921 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.277722981 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.279477955 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.278332989 seconds)
  done (took 21.648445802 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.277654054 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.279005039 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.280006794 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.279663701 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.277911089 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.277951452 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.280454006 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.277987607 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.278357655 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.281947639 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.280897036 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.281117578 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.280697447 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.281722201 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.277906704 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.281019231 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.278766006 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.278384219 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.279886531 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.28165313 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.280248284 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.278982326 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.281276208 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.281664805 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.279426884 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.279339502 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.277860726 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.279806538 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.279781805 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.281300858 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.279120877 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.280565084 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.279523725 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.27996606 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.28111318 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.279471691 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.283030083 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.282360439 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.282517083 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.282596411 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.282464893 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.280073605 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.282163657 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.281605729 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.279879313 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.283900336 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.279732506 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.281239958 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.280334794 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.281757718 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.282838276 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.283001718 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.282839168 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.283732688 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.282203817 seconds)
  done (took 71.622831049 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.283811989 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.282140849 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.280099863 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.283891352 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.283431581 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.280913736 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.284650846 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.283259997 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.281249644 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.284373869 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.281667465 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.285634272 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.282154748 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.284425367 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.2814399 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.28389031 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.281103793 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.282454693 seconds)
  done (took 24.283855268 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.282032211 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.281697966 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.285083275 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.281903866 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.281016869 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.285415384 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.283038894 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.284798808 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284642075 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.2828618 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282137102 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.285531306 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285752816 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.285736602 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.283882056 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282471178 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.285312264 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.28564858 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.283026077 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.282575303 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.286668662 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285675721 seconds)
  done (took 29.442049993 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.284391808 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.284339428 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.284912682 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.300284935 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.302362311 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.305078834 seconds)
  done (took 8.956866701 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291665237 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285971674 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.28326724 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28796779 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285717079 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281219771 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282491996 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28205788 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284934562 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282665821 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282321841 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285350801 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279759621 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276494656 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278776012 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279207455 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277481824 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276993875 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277276538 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280925519 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276779782 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28017458 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277776666 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277426764 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277135468 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277513575 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281007642 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278364931 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277200166 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280462723 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280393599 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278943376 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281056609 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279245212 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280721846 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280710719 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27863296 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281195735 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280802024 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278169623 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.280839863 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280099251 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280903916 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278402747 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280611883 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278629361 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278812035 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278614847 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27850016 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282227665 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281226433 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278812907 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280827265 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281346807 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281849467 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28187394 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279699688 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278594024 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281446744 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27869854 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278754583 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282077854 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279208509 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279545056 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282196103 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279486152 seconds)
  done (took 85.728004078 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279763745 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.279869294 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279728347 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281344524 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280486652 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280042395 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280075756 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280613815 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280999275 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2810721 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282691391 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281769274 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280780184 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282944348 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280130686 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280354796 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280811182 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281027443 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281606184 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284188017 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280832191 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280155037 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281924254 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281411344 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281974723 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283570966 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281883786 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282329301 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281381809 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282645922 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281732442 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281959134 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28132512 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.282019626 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282242327 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281334975 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282179872 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283065507 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282352959 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28554027 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282271808 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286214834 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281557907 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282735733 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283006284 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28388425 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282256125 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283738807 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282312925 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28321301 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285749022 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283464858 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283528943 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284910156 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282861766 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28342097 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282934565 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283202583 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283215247 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28720477 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283446294 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283702011 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287344584 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284062981 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283652559 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283193182 seconds)
  done (took 85.834230517 seconds)
done (took 1743.882461358 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.449738318 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.403972154 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.28426522 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.285965826 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.284873707 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.308387818 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.297038396 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.285465235 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.285616727 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.285078801 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.284805032 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.475294985 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.288671474 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.286748383 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.285190995 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.380392841 seconds)
  done (took 42.369250974 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.313567225 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.290915878 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.396224275 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.311574217 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.313972061 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.462457838 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.345591994 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.290336973 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.445693877 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.336879276 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.740388668 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.317630538 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.290410491 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.329315643 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.312406228 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.458988839 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.523592027 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.75378697 seconds)
  done (took 29.431939344 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.695327472 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.288626087 seconds)
  done (took 9.1825133 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.307595222 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.291019324 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.29185507 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.290406061 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.281800006 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.298694403 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.288984369 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.282850303 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.61513891 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.409339445 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.295683764 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.301769918 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.309251774 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.291046087 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.28907362 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.327110997 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.441108553 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.288850582 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.288345022 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.296209161 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.290990349 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.408700577 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.329980332 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.290751472 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.406333733 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.625113327 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.297538716 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.298763212 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.442245378 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.290890913 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.291678609 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.291054356 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.292806238 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.182113802 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.732331727 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.289988662 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.315310636 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.300813967 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.29047113 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.481201201 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.292677234 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.298843744 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.284858745 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.710373662 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.435831011 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.399828109 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.449955134 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.314189069 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.294203427 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.349453893 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.293035113 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.292819895 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.335307186 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.058238142 seconds)
  done (took 108.656192608 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.302582361 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.675540751 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.452208325 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.304336755 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.886084653 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.953568085 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.306296463 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.548945877 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.329019301 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.285398675 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.566648036 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.764054047 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.30784144 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.296643053 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.929091396 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.365016197 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.287210716 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.99765494 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.307157995 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.287988146 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.770237963 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.293842303 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.29291101 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.483174215 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.323982067 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.722507285 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.620202848 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.702847848 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.307984641 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.288063085 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.727761164 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.317616092 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.338482076 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.287945319 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.538837527 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.62943963 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.624823428 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.316707062 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.342270726 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.293356247 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.309174733 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.720026723 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.632072304 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.315391755 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.299412274 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.726997189 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.311074909 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.289323598 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.29175667 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.485964207 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.14490963 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.290563538 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.638789191 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.295049547 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.652822073 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.35751949 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.355816269 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.750592436 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.310468499 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.347218572 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.350674176 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.290309351 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.297223313 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.291626611 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.314909653 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.615330611 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.678773451 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.291310037 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.613080674 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.745656502 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.310569767 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.807056719 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.072226838 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.320196571 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.362867905 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.290257329 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.830133657 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.765458353 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.32897744 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.289326979 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.604497954 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.314691054 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.559698261 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.304032958 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.306625606 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.800079345 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.304309841 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.324872632 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.302665838 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.297092028 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.923676119 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.292579771 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.552219646 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.365535645 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.290702034 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.29152402 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.332460666 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.292233034 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.313841773 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.296602103 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.787436334 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.318632861 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.408020581 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.306118842 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.297332567 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.311045725 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.293508755 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.291812806 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.507890354 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.748930006 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.318649758 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.292046087 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.29254409 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.307285198 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.455180112 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.29576592 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.580125213 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.317627211 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.291912318 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.299001235 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.97953055 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.317780343 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.293376066 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.315461094 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.144117778 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.497021637 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.310246344 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.293749514 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.294901643 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.313856495 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.496758031 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.318152598 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.319477727 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.295907495 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.973608902 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.350514628 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.296787131 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.801532022 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.298387303 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.069642931 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.314232633 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.295027649 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.587423372 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.548492326 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.570170092 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.298034535 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.309858886 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.949946154 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.329054808 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.431404729 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.31203378 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.342116337 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.491702122 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.43559708 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.297741375 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.908435818 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.296164851 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.506419061 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.297256927 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.584749403 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.764527627 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.317062329 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.296059938 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.973104553 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.016613422 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.965899884 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.29779339 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.559891182 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.231365403 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.760185249 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.296335611 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.29685891 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.741657791 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.300003841 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.303064975 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.297489561 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.297040031 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.359995546 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.470304358 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.912459701 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.299339194 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.724256949 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.32079773 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.298297112 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.318435703 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.300018192 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.646807865 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.359003726 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.29865201 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.319891328 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.29933342 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.297388779 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.747355275 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.102439181 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.305606095 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.448244008 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.899298973 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.319804372 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.300107999 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.883754981 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.577078199 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.788231341 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.349282093 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.585452698 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.323489751 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.3349574 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.858669637 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.386473816 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.747024151 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.318315145 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.298403191 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.86210623 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.319542328 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.360951647 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.299848471 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.298971044 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.80470435 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.320528438 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.298669932 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.520835236 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.321971786 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.560979925 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.299968334 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.328696764 seconds)
  done (took 1100.966390544 seconds)
done (took 1291.805322641 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.29943433 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.306609352 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.286185858 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.303528705 seconds)
  done (took 26.411600482 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.308631763 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.303305996 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.30531183 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.30240352 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.305952187 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.303160166 seconds)
  done (took 9.041173713 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.353913987 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.304301146 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.303082704 seconds)
  done (took 19.174312768 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.496193052 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.518096505 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.620332071 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.366406445 seconds)
  done (took 10.214262947 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.306124419 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.305151035 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.305082873 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.308595976 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.308788524 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.310643536 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.308115222 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.307363461 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.310134811 seconds)
  done (took 12.982922931 seconds)
done (took 79.042602145 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.422973231 seconds)
    (2/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.318354386 seconds)
    (3/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.382226364 seconds)
    (4/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.721354475 seconds)
    (5/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.300300269 seconds)
    (6/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.097639452 seconds)
    (7/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.278914061 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.553928655 seconds)
    (9/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.340963809 seconds)
    (10/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.692264313 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.355320811 seconds)
    (12/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.357251778 seconds)
    (13/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.634659413 seconds)
    (14/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.642434629 seconds)
    (15/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.342321085 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.326124871 seconds)
    (17/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.279402635 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.872078157 seconds)
    (19/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.306167273 seconds)
    (20/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.325700938 seconds)
    (21/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.302548898 seconds)
    (22/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.327638815 seconds)
    (23/286) benchmarking ("sort", Int8, false)...
    done (took 4.352534441 seconds)
    (24/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.312524237 seconds)
    (25/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.300972598 seconds)
    (26/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.073472289 seconds)
    (27/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.491676414 seconds)
    (28/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.301006822 seconds)
    (29/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.302364788 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 6.35063372 seconds)
    (31/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.992682873 seconds)
    (32/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.584204418 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.882401381 seconds)
    (34/286) benchmarking ("sort", Float64, false)...
    done (took 5.58286253 seconds)
    (35/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.386583732 seconds)
    (36/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.318209647 seconds)
    (37/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.502637818 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.428230949 seconds)
    (39/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.399194098 seconds)
    (40/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.678375591 seconds)
    (41/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.311878658 seconds)
    (42/286) benchmarking ("sort", BigInt, true)...
    done (took 6.302349725 seconds)
    (43/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.332051294 seconds)
    (44/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.447781751 seconds)
    (45/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.542364623 seconds)
    (46/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.425761145 seconds)
    (47/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.273909502 seconds)
    (48/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.333928872 seconds)
    (49/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.084804243 seconds)
    (50/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.370324033 seconds)
    (51/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.387337573 seconds)
    (52/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.173959132 seconds)
    (53/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.03883703 seconds)
    (54/286) benchmarking ("sort", BigInt, false)...
    done (took 6.309056234 seconds)
    (55/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.28213817 seconds)
    (56/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.302695546 seconds)
    (57/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.429398368 seconds)
    (58/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.562503098 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.811818317 seconds)
    (60/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.283415941 seconds)
    (61/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.066924657 seconds)
    (62/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.284075463 seconds)
    (63/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.287292575 seconds)
    (64/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.313739127 seconds)
    (65/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.650057137 seconds)
    (66/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.368212225 seconds)
    (67/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.928541345 seconds)
    (68/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.368873481 seconds)
    (69/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.284328379 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.185921562 seconds)
    (71/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.390017953 seconds)
    (72/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.286432873 seconds)
    (73/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.336955876 seconds)
    (74/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.28339938 seconds)
    (75/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.886259684 seconds)
    (76/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.485909378 seconds)
    (77/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.610286293 seconds)
    (78/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.298287464 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.718577691 seconds)
    (80/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.443309852 seconds)
    (81/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.795239827 seconds)
    (82/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.35097309 seconds)
    (83/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.303307514 seconds)
    (84/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.651146158 seconds)
    (85/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.548283516 seconds)
    (86/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.35575107 seconds)
    (87/286) benchmarking ("sort", Int64, false)...
    done (took 5.443041034 seconds)
    (88/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.31085327 seconds)
    (89/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.286562519 seconds)
    (90/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.303843993 seconds)
    (91/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.114661326 seconds)
    (92/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.235745456 seconds)
    (93/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.518210456 seconds)
    (94/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.504884821 seconds)
    (95/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.885418146 seconds)
    (96/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.336365827 seconds)
    (97/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.388005085 seconds)
    (98/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.778724073 seconds)
    (99/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.310392269 seconds)
    (100/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.075425029 seconds)
    (101/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.017661572 seconds)
    (102/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.372426644 seconds)
    (103/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.330241367 seconds)
    (104/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.332020677 seconds)
    (105/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.293613234 seconds)
    (106/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.739629342 seconds)
    (107/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.528718603 seconds)
    (108/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.028984158 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.524674222 seconds)
    (110/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.122234913 seconds)
    (111/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.37095492 seconds)
    (112/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.123622234 seconds)
    (113/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.302050473 seconds)
    (114/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.146625883 seconds)
    (115/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.414169477 seconds)
    (116/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.333226114 seconds)
    (117/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.421060595 seconds)
    (118/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.664007808 seconds)
    (119/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.37716427 seconds)
    (120/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.124437323 seconds)
    (121/286) benchmarking ("sort", Bool, false)...
    done (took 1.834765896 seconds)
    (122/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.535501897 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.3471936 seconds)
    (124/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.292349825 seconds)
    (125/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.786165867 seconds)
    (126/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.637796367 seconds)
    (127/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.308912235 seconds)
    (128/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.563825992 seconds)
    (129/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.289810011 seconds)
    (130/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.334783998 seconds)
    (131/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.654301234 seconds)
    (132/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.042288169 seconds)
    (133/286) benchmarking ("sort", Float32, false)...
    done (took 5.299198843 seconds)
    (134/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.584950521 seconds)
    (135/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.342761031 seconds)
    (136/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.302951218 seconds)
    (137/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.136517727 seconds)
    (138/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.064725767 seconds)
    (139/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.487562073 seconds)
    (140/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.005839997 seconds)
    (141/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.310027039 seconds)
    (142/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.306870361 seconds)
    (143/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.459013291 seconds)
    (144/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.430204321 seconds)
    (145/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.307103082 seconds)
    (146/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.715170638 seconds)
    (147/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.32741615 seconds)
    (148/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.395184663 seconds)
    (149/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.308988512 seconds)
    (150/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.090247426 seconds)
    (151/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.043994768 seconds)
    (152/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.336298628 seconds)
    (153/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.31659674 seconds)
    (154/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.300460637 seconds)
    (155/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.898232771 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.891326696 seconds)
    (157/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.291292334 seconds)
    (158/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.350511117 seconds)
    (159/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.443175582 seconds)
    (160/286) benchmarking ("sort", Float32, true)...
    done (took 6.314877788 seconds)
    (161/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.320341063 seconds)
    (162/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.290592055 seconds)
    (163/286) benchmarking ("sort", Int8, true)...
    done (took 6.310618827 seconds)
    (164/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.451262375 seconds)
    (165/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.63341699 seconds)
    (166/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.260230704 seconds)
    (167/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.852091978 seconds)
    (168/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.744585406 seconds)
    (169/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.397462127 seconds)
    (170/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.31490833 seconds)
    (171/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.111258802 seconds)
    (172/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.932562346 seconds)
    (173/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.666381946 seconds)
    (174/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.585630169 seconds)
    (175/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.783416234 seconds)
    (176/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.289524529 seconds)
    (177/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.353211006 seconds)
    (178/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.294475809 seconds)
    (179/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.486806615 seconds)
    (180/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.3704678 seconds)
    (181/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.337473612 seconds)
    (182/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.790610657 seconds)
    (183/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.330251231 seconds)
    (184/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.026285702 seconds)
    (185/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.291190796 seconds)
    (186/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.458802526 seconds)
    (187/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.291331516 seconds)
    (188/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.303441776 seconds)
    (189/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.417859021 seconds)
    (190/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.683546449 seconds)
    (191/286) benchmarking ("sort", Float64, true)...
    done (took 6.31123866 seconds)
    (192/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.679965933 seconds)
    (193/286) benchmarking ("sort", Bool, true)...
    done (took 5.414236154 seconds)
    (194/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.819481449 seconds)
    (195/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.373127716 seconds)
    (196/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.012261366 seconds)
    (197/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.942796304 seconds)
    (198/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.310633215 seconds)
    (199/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.17759322 seconds)
    (200/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.316597788 seconds)
    (201/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.341386252 seconds)
    (202/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.978201276 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.726432773 seconds)
    (204/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.411370352 seconds)
    (205/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.455160335 seconds)
    (206/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.299723353 seconds)
    (207/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.322528513 seconds)
    (208/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.93906277 seconds)
    (209/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.566452562 seconds)
    (210/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.538821902 seconds)
    (211/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.299616343 seconds)
    (212/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.305247096 seconds)
    (213/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.520763905 seconds)
    (214/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.398472531 seconds)
    (215/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.320184732 seconds)
    (216/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.378604493 seconds)
    (217/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.336221722 seconds)
    (218/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.329692955 seconds)
    (219/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.312338732 seconds)
    (220/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.457438668 seconds)
    (221/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.294174601 seconds)
    (222/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.45434047 seconds)
    (223/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.629525851 seconds)
    (224/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.428375193 seconds)
    (225/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.35436137 seconds)
    (226/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.682676878 seconds)
    (227/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.299827768 seconds)
    (228/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.331776101 seconds)
    (229/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.324308357 seconds)
    (230/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.035686048 seconds)
    (231/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.522948639 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.720038206 seconds)
    (233/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.517596758 seconds)
    (234/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.297197958 seconds)
    (235/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.504615918 seconds)
    (236/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.294233575 seconds)
    (237/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.314702412 seconds)
    (238/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.295273012 seconds)
    (239/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.406114911 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.947139736 seconds)
    (241/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.322514705 seconds)
    (242/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.322693403 seconds)
    (243/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.377582933 seconds)
    (244/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.294046481 seconds)
    (245/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.357887655 seconds)
    (246/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.518593245 seconds)
    (247/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.534534617 seconds)
    (248/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.965745944 seconds)
    (249/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.789197303 seconds)
    (250/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.295095105 seconds)
    (251/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.342935165 seconds)
    (252/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.342803302 seconds)
    (253/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.098606614 seconds)
    (254/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.359014773 seconds)
    (255/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.44299877 seconds)
    (256/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.699611221 seconds)
    (257/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.296393281 seconds)
    (258/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.780298073 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.191823004 seconds)
    (260/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.436064576 seconds)
    (261/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.158221911 seconds)
    (262/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.538636042 seconds)
    (263/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.407072797 seconds)
    (264/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.30758471 seconds)
    (265/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.32738268 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.405630227 seconds)
    (267/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.795492235 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.405786804 seconds)
    (269/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.333765581 seconds)
    (270/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.657055631 seconds)
    (271/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.695568821 seconds)
    (272/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.495844724 seconds)
    (273/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.451096851 seconds)
    (274/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.317677636 seconds)
    (275/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.158474269 seconds)
    (276/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.746809138 seconds)
    (277/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.407097117 seconds)
    (278/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.296761275 seconds)
    (279/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.375276998 seconds)
    (280/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.444618808 seconds)
    (281/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.225936724 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.339845502 seconds)
    (283/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.667912114 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.224047522 seconds)
    (285/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.628078627 seconds)
    (286/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.318059591 seconds)
  done (took 926.426509022 seconds)
done (took 927.643102496 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.35065491 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.345083525 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.329207369 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.349354653 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.439978242 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.353748034 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.339931625 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.331720983 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.376439277 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.377895627 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.326249698 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.352973201 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.330466655 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.328622131 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.328256857 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.344119292 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.346559324 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.334943631 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.345872532 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.339377702 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.345963487 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.327744397 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.379520216 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.353532585 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.334104451 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.332088876 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.332685466 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.349248973 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.441531474 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.33294213 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.333102636 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.3405288 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.345619421 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.335509522 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.326135482 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.351276566 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.342195342 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.3405632 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.334687991 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.361638307 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.713908639 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.345271097 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.332320981 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.33143784 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.330928347 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.335064328 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.333103579 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.337995847 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.3458332 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.346434409 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.7054539 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.361816093 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.334482074 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.332134144 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.343102279 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.330763369 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.335414015 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.350355381 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.352188695 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.34928006 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.338213073 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.343770341 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.334929323 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.349007692 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.339419548 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.742558684 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.342430821 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.336108054 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.717584352 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.352777779 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.743194169 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.356138053 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.333936328 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.346727019 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.36395775 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.349457781 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.334659006 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.332800843 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.341174525 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.332453118 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.343411495 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.348038611 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.339067253 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.334067203 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.348370523 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.359683862 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.344184695 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.334786841 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.343848588 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.353616336 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.343360696 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.346869114 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.33781494 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.33208237 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.344295548 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.337726598 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.336977623 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.337907054 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.338645653 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.346523175 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.715248036 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.369451556 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.332491226 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.33395153 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.335431143 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.349323996 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.716388758 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.351286335 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.357132982 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.383431056 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.336515097 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.327253551 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.339065563 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.354601948 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.345929599 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.33977016 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.332364196 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.326882669 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.710130405 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.364575063 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.338529478 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.335230269 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.354545643 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.339557952 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.334251308 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.349267275 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.344785071 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.351625597 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.457657238 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.348545727 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.367899391 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.334992113 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.340294459 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.362310211 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.354885163 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.368463337 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.340868628 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.353936986 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.352608819 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.334528762 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.348601152 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.348116887 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.339375104 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.343545031 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.332222313 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.362801716 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.351885096 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.352049318 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.360147897 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.458102086 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.336321699 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.329528491 seconds)
done (took 224.932754116 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.403583371 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.332362383 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.425371857 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.335890472 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.43931099 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.436055025 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.333095747 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.333282934 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.33262438 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.713089237 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.332747897 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.333568057 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.33338422 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.333260411 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.424852069 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.336600323 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.332975077 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.676296493 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.336283706 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.410743033 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.333354325 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.333949645 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.335356666 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.721637725 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.332593481 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.329359108 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.40723363 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.337308647 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.681754039 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.336263291 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.330136236 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.68362232 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.426207794 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.353985045 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.345721367 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.34353644 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.435985481 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.353637181 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.417961991 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.426497845 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.421692836 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.375156654 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.336817552 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.334757718 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.336971943 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.338015879 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.335416864 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.364231684 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.338338972 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.336785412 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.679657859 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.347254011 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.335776052 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.336781719 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.336867523 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.367131902 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.33633663 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.339002174 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.43361697 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.339647913 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.400620424 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.722513742 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.718928925 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.337824436 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.332378819 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.33815249 seconds)
  done (took 148.665172568 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.405747762 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.414582951 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.446674047 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.361600457 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.389016683 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.452119797 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.356946749 seconds)
  done (took 11.071618954 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.345339163 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.340915551 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.387245381 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.389817935 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.340017092 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.517190904 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.342304598 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.351483409 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.337653663 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.392743597 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.341944283 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.340674403 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.347413794 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.336521505 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.387912093 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.352253281 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.455277044 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.34053496 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.342212844 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.49210737 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.33912959 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.347309828 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.392308035 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.351923881 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.342448664 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.345198412 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.146850743 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.342204906 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.339123671 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.342594835 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.339314626 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.415234841 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.342492576 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.341621242 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.339713655 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.455671924 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.341938647 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.338967106 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.343088672 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.340536034 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.342961969 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.34247623 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.342313351 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.340174887 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.341649552 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.365238452 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.342954592 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.342990212 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.342676845 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.343628504 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.391744306 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.343928971 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.340341353 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.340936278 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.397728713 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.350484892 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.344106341 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.341296712 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.34392769 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.340726706 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.492802142 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.389532014 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.3453169 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.39003543 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.344116148 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.344279206 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.343458957 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.344193464 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.397006856 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.344545164 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.390774789 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.340620271 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.528330045 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.367396874 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.346660899 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.345193283 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.345655866 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.344153494 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.340573438 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.3493016 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.341983124 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.344565205 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.349049377 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.342802543 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.342004795 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.508756814 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.45247445 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.341733265 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.35646203 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.350437595 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.343260109 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.397321733 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.345735962 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.343229064 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.398659936 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.459343466 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.39945178 seconds)
  done (took 154.450958645 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.350404254 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.35274028 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.348453579 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.368145968 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.364531612 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.345918082 seconds)
  done (took 9.380405109 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.346951174 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.347942397 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.346524652 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.346591227 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.347156648 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.347549014 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.346405668 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.348799667 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.350970202 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.347554194 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.347770497 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.347555432 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.348013156 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.347079221 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.346910134 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.347157647 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.345889992 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.344670806 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.348020793 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.347842375 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.443763322 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.347951152 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.34666205 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.34832379 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.352584809 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.346949895 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.355752376 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.349444188 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.347903878 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.355005695 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.367036299 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.348024288 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.348497271 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.352891146 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.352993964 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.348742118 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.352750186 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.349972822 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.345712543 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.349731171 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.350442356 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.349484152 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.349333953 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.350746283 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.349849195 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.354290753 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.354495016 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.356365041 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.350365919 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.35145858 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.351808224 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.350805584 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.350596153 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.352129779 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.351252301 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.37017855 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.354112074 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.350217704 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.350242407 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.350692919 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.351923575 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.351287346 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.352072554 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.354350709 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.357891949 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.351600647 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.350265058 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.353336081 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.350516745 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.35042322 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.352296631 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.348542653 seconds)
  done (took 99.58489077 seconds)
done (took 424.39558756 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.635105229 seconds)
  done (took 7.89140691 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.441691702 seconds)
  done (took 7.699686514 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.688873669 seconds)
  done (took 21.955154842 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.350971197 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.352887113 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.380397649 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.344593133 seconds)
  done (took 26.683850313 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.487418131 seconds)
  done (took 7.74351544 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.356875293 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.355217599 seconds)
  done (took 13.970030976 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.935865376 seconds)
  done (took 8.19281383 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.041489968 seconds)
  done (took 8.308055503 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.35600266 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.362864471 seconds)
  done (took 14.241163621 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.324928479 seconds)
  done (took 7.582192493 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.852235253 seconds)
  done (took 12.109853813 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.356295021 seconds)
  done (took 7.614757587 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.394189624 seconds)
  done (took 7.65055383 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.236667269 seconds)
  done (took 9.494347233 seconds)
done (took 162.396028902 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.344892445 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.347163433 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.344186594 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.34486048 seconds)
  done (took 26.638386005 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.386852705 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.385365556 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.38771336 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.396492501 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.390148952 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.386499783 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.379442121 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.379077939 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.397629895 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.389266881 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.389086881 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.389679891 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.384261259 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.379629462 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.389337251 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.38822963 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.397718539 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.389059684 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.378967234 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.390680792 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.355310527 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.39792989 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.392938522 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.356512487 seconds)
  done (took 34.515240156 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.877153178 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.425772841 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.507434354 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.406378764 seconds)
  done (took 7.475505892 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.405339964 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.408299508 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.41987867 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.458674294 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.484231685 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.418250012 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.382363492 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.37586084 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.363410965 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.408873335 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.482973286 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.423481387 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.493175618 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.355509169 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.565079425 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.355522016 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.354705429 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.408190984 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.459700559 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.473445817 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.355720948 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.407600603 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.411924793 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.424108671 seconds)
  done (took 35.356674018 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.353577402 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.373584681 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.355586031 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.354522155 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.362820191 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.355449372 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.355315062 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.356624812 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.355120367 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.36233006 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.354651037 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.367059115 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.355196044 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.355995712 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.362078646 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.357786755 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.361896712 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.355784325 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.355938224 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.362378301 seconds)
  done (took 28.43448364 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.348488065 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.203304318 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.702215524 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.605398258 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.350930384 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.349034949 seconds)
  done (took 27.821269527 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.423080007 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.578669678 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.363452197 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.698135748 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.796461422 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.380771386 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.357296919 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.59734853 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.902011114 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.88664265 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.418742226 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.426285284 seconds)
  done (took 20.091640869 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.360848534 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.35665543 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.359205772 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.376139634 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.410131157 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.382877521 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.3641519 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.350826591 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.416292154 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.430558255 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.379429476 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.412478532 seconds)
  done (took 37.86285442 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439285868 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.398764506 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.297164151 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396596313 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.096665728 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.566564928 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.415007557 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.085226994 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.382187375 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627345405 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358093177 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443751046 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.608810215 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359349894 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.361787636 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.305180805 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.604847608 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812137443 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357859676 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.263430589 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380283082 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.358441938 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.341418522 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.579856527 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.583582093 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.332726727 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.615461146 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.129191821 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632431032 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.367763891 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365751872 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.35400185 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.628565667 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997716459 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476084759 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.561584373 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373475579 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.902393857 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.346924077 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.282734387 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365405173 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.358401837 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368027565 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355724101 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.290669664 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3555671 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102605104 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.387136622 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.067448364 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.356626602 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.608078689 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451409333 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.359946978 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.926361187 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423342773 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.362614651 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.36119995 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447917346 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947544032 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.503241843 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38044023 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.298936741 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.362866496 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.265196041 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955311602 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.379326932 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.360013086 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.362291106 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292314015 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.273564449 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37518634 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505539887 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.382870459 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.008073926 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04063592 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.383042716 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.290372858 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881773387 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.368272949 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.304489949 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.58674501 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.138480987 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.294901482 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.300542994 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.294910302 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035884244 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374211422 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.876916126 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388421026 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.095099669 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.593271796 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395274897 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384002287 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.583153985 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.238183573 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358410606 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.372822721 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489424412 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38275853 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.081018899 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319428893 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.36300177 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616390301 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.572196103 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.360969594 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.31850017 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858127622 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390141228 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.37803073 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.368345683 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.575324309 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.936467893 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.392258362 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.51114071 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386367189 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.137492211 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076653875 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369227234 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.373087491 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.361330245 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629354378 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.092075575 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.252510384 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429185107 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365128063 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.361618595 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.330874442 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.212818304 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.261957402 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.553103319 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386970492 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.378643516 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.362450354 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310759837 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.365276792 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363358352 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.140357094 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.586446556 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36722946 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645256667 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.296672635 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510048482 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.371833532 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.585468637 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.535344117 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.384003246 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.622577159 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375861617 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.372624534 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.380605961 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382373187 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463175133 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385145935 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.369037955 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.626128546 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.367804018 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.367496007 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.437905494 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.145673792 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369783404 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.369779447 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367126583 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92373196 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494249845 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.370377274 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.253943937 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.379300297 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431998188 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.371348793 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.575312618 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.547515507 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396150142 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.372051382 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.371616969 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.588036403 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.375773784 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.293933804 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445449608 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.836086997 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.948516527 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402118224 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.299731812 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.077918296 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.058397549 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366622784 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.556033945 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.365770966 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.574219853 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.405051218 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.365441591 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.926051953 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390670506 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.29977514 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.37245497 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.378973001 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.371825842 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367626501 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.547184042 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.545121893 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380871837 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.384731732 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51074785 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.382167384 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.301542422 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.884653528 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37206627 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.368129952 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.142499755 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401993757 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.295276751 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163026381 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.644883273 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.370890904 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.638467044 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.384716517 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.401522078 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.36496743 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369037277 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374939664 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.377817043 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393879594 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.380075766 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.301603227 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.808770737 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937467248 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076857615 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898543038 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.638236292 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.401061933 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.25793338 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.093042402 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329319482 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.027364155 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.601321604 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.108903073 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340462785 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.845912318 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.580863113 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133655419 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624643371 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598735492 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.618211925 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.390005739 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.627626823 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.583407501 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405567563 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.373915166 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.306610272 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.888710874 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915681527 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389237823 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.449137125 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.071718674 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389169553 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.149099671 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.438832158 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.060876793 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77743679 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.940088484 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.82547996 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.384149254 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.380526449 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160735474 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.39614824 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.897436721 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971124096 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400337341 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.850395935 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333380123 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.582635989 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.40068163 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.367669267 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.87138937 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.392905482 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.6353192 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627561691 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309394952 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.385795999 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888802609 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.251558063 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.377868128 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374626676 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089694559 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383744777 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.65983354 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.375568478 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.563808653 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392187632 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.308116697 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30755314 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.066905719 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.375905526 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348737532 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834823084 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.37423079 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396488646 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40532185 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22462071 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.628827228 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.3878804 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.932694572 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623278112 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384184377 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398309274 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.378516543 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388284393 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.35669193 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.285463052 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.611053555 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392936544 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.597862878 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.319086361 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.282412095 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.460594253 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587738671 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.257783856 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.388114739 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614359803 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.104452842 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.389897999 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079719557 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421440853 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.387718916 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.388960488 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.395751559 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397211826 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46461366 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58904932 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.404930817 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.386758291 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773776093 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418070117 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378293896 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.389850166 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469191229 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.566307078 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.57347752 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.165654918 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944963708 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.126367148 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.963073208 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.653179598 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.380244174 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386862388 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311498116 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52581376 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.902828111 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652356402 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507364724 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.376684124 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401930046 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377584515 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40656017 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59647488 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653994548 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.678363179 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387150064 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.215997976 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.260974406 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.389452601 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.589962557 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844308938 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915828198 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500925184 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.38828662 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.089557683 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670846225 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.468682636 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380132312 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.971358194 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.384081529 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.088204596 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.384131447 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385446073 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52598834 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.633772845 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040386515 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.413914151 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.535861533 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.151521329 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.347304401 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.635186795 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.826261752 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.5926425 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962756413 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.07608667 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.642504967 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449302567 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.592397813 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.502676487 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527125644 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.380770646 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.269658032 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381073336 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.223815876 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.091007088 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.388306241 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950761174 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658291067 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.383458892 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.382147859 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407234542 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.389953719 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.603402486 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069922552 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611266897 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391435829 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.382368685 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.370267698 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944957973 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650538448 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31286517 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.380540526 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613254208 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.629596821 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401549465 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.829420471 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.087858838 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906384473 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.349544228 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399183872 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385377567 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.067972443 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947321549 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.582157013 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867441942 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.035964808 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38182275 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6586522 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.382019787 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.377966652 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658689426 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.38086693 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.378419396 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598635743 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.958988286 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.143857615 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.388106303 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.386416783 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.315241061 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.602665786 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385362287 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321999966 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387723261 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.783420444 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.405641492 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50655877 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39019905 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.379880463 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398780969 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.143104199 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.673546604 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.38411718 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.377994209 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.373356315 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.388100315 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479305016 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934457683 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406581011 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.054853438 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.727648845 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.633051502 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.386488773 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.365546189 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.383349471 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380458994 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.096632531 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.348895607 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.384722944 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922042137 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.394553107 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.3972866 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.382814711 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.596199794 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591518593 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.381159299 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.595265476 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411111177 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401685593 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.279018614 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.147741062 seconds)
  done (took 1672.603366277 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.39000285 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.383348572 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.391262805 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.45619886 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.375879778 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.420996955 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.408003528 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.392692764 seconds)
  done (took 52.508107491 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.372867851 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.553669758 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.406703661 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.378408018 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.384743626 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.388712845 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.838981642 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.395097616 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.384872084 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.384166489 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.37556783 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.378585286 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.027301896 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.401196258 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.389474103 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.368356344 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.383324623 seconds)
  done (took 66.095946853 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.308597094 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.662397929 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.013299573 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.386359015 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.412305628 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.386376801 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.881243202 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.392206954 seconds)
  done (took 58.729165007 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.387031051 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.385889243 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.386939356 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.388115293 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.387476867 seconds)
  done (took 8.220737262 seconds)
done (took 2077.614023893 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.379901888 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.382248324 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.380279051 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.383566442 seconds)
  done (took 6.81168464 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.356501804 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.099135311 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.3581431 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.37091504 seconds)
  done (took 18.469365997 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.383484694 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.392824829 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.06049125 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.991850458 seconds)
  done (took 5.339747204 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.129836733 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.143142768 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.12628075 seconds)
  done (took 7.688683312 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.378137875 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.385975451 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.386292553 seconds)
  done (took 20.439259602 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.665744758 seconds)
  done (took 2.95496918 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.527383365 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.575405517 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.695657721 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.699292667 seconds)
  done (took 7.787660995 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.769114603 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.755145328 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.574969545 seconds)
  done (took 6.388704365 seconds)
done (took 89.943820229 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.121568942 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.39570727 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.58438954 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.086999185 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.609694863 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.583618636 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.673479527 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.05437813 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.602432134 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.58935413 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.091169032 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.610292925 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.847803882 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.394865238 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.848477371 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.403368724 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.610806566 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.178941718 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.778407204 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.014913976 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.680676544 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.729392681 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.920014688 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.754190206 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.607208652 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.544795038 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.310402144 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.405340333 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.950549391 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.333181302 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.545666311 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.185952448 seconds)
  done (took 190.338930333 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.382137975 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.381135846 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.382278968 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.393933882 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.381175708 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.382634809 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.381913876 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.383652894 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.388308947 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.389428124 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.382211838 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.398298953 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.402893252 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.38234116 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.400928153 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.397802962 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.391257977 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.382699071 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.395719152 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.382596996 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.385244256 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.397427083 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.383925901 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.400144733 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.399745081 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.384499714 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.391241094 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.395579207 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.383033021 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.400513058 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.384854494 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.391537658 seconds)
  done (took 205.752929808 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.390126178 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.38434631 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.399797036 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.383871297 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.384366126 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.400131139 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.384955874 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.383674931 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.383415925 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.384325549 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.383204097 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.383547152 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.397315475 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.382610306 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.386089629 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.399977674 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.386087757 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.400985909 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.384874936 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.385090108 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.392568747 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.399644931 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.3841847 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.384338521 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.385265652 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.399832805 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.385787177 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.385137973 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.401150972 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.386496393 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.396123393 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.385196188 seconds)
  done (took 205.763087114 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.589630179 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.393601207 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.394602521 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.346258409 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.3950007 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.393799886 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.37918234 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.595193079 seconds)
  done (took 14.782537324 seconds)
done (took 617.927917441 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.697993405 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.409587684 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.593212537 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.41429366 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.1612789 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.431210726 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.413528789 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.582027361 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.307266012 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.587594671 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.608725233 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.428317623 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.736849978 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.412262638 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.665522995 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.513891963 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.299178734 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.430290011 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.720351191 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.92611917 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.672125114 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.840382253 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.599493588 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.302466502 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.750436376 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.838802953 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.111282614 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.289795845 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.429029272 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.730642683 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.017106277 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.367467541 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.454397265 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.471872734 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.528381823 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.510786409 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.337909425 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.471004077 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.609508094 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.601385357 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.938058954 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.126267455 seconds)
  done (took 93.634284496 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.378820601 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.37922568 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.377576477 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.378144097 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.380605008 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.37934814 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.37669216 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.378303521 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.379133605 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.37955703 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.377196839 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.378991551 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.378221662 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.38014548 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.380033881 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.380843551 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.380188912 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.38070667 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.378016202 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.378999098 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.378961988 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.378163841 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.379113272 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.379338229 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.378524465 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.37943074 seconds)
  done (took 37.153989256 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.39856243 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.642963219 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.811325803 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.411948783 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.398567727 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.402415083 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.476622925 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.400968017 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.401032164 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.401718731 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.553114889 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.401172836 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.43575903 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.833248694 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.409440768 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.398929045 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.399736836 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.398251413 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.649823414 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.409888017 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.496263265 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.401816704 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.47581548 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.410332981 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.422896051 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.400690945 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.404926193 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.980054064 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.418947969 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.551081228 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.174271594 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.479379763 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.945021632 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.845925067 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.187673962 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.409674127 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.40251849 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.556492555 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.403311305 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.400103583 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.476054879 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.401275181 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.817698072 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.066628969 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.421895429 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.400163449 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.00037952 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.575293558 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.638979719 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.411522734 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.844410521 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.406859112 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.404370538 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.403293824 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.638028688 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.416074601 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.401172912 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.001510725 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.430797398 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.478809978 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.403898821 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.400920211 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.657547155 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.402372966 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.646271216 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.40457659 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.41139973 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.420156269 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.826881634 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.410114341 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.095243844 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.424412022 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.405874584 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.554214451 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.647096874 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.034781604 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.425140581 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.662502583 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.957113005 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.494669193 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.407276512 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.973110032 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.499373791 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.409215933 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.406339133 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.405008111 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.404928928 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.451837631 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.475926313 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.034418585 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.106660207 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.030660322 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.506764224 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.419648691 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.403808992 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.003090146 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.430108591 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.404630607 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.822119697 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.098283164 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.429560403 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.413108672 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.089116557 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.432550571 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.481866043 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.413396666 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.832696487 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.411207206 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.45312466 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.406117502 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.412132861 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.427265192 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.482359511 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.413030816 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.406849967 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.063919542 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.58701249 seconds)
  done (took 184.875672738 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.405534424 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.399837462 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.402070059 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.399875195 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.400051201 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.407047256 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.400039988 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.400515766 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.405339875 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.400273969 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.399168377 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.40057444 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.402953417 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.404824949 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.430400932 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.408034548 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.012381627 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.400449898 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.400491984 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.417905223 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.201926717 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.411142895 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.40217147 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.416118534 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.402561119 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.402833499 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.423989925 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.402812878 seconds)
  done (took 154.069488474 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.409126028 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.95328843 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.426563182 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.536337359 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.42836214 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.406886906 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.533322014 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.463801212 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.43301595 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.406937557 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.406151874 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.704225969 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.413869921 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.911859234 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.601619445 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.560715357 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.91370377 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.430040675 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.407237393 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.408150382 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.536611003 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.415506225 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.704556722 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.968825144 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.43439107 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.961536341 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.399525145 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.411057507 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.408738054 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.964934117 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.432024356 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.706917804 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.491292204 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.468229805 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.982378107 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.931426316 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.924441506 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.554285732 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.414128574 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.408647101 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.408438228 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.392501701 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.960139269 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.427759305 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.409273862 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.951675103 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.435264012 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.412985804 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.415709789 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.408712797 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.467290532 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.490437419 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.730809467 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.968925098 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.502060778 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.422973661 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.538193604 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.794451524 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.414264958 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.908948635 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.392728424 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.969286604 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.437778475 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.393691524 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.412407068 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.41679328 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.557420773 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.540081663 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.911210894 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.427329761 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.909874747 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.573072505 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.411499559 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.410742939 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.413662311 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.969402777 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.938006969 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.573918356 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.543351274 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.600530132 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.403387348 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.411658255 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.395895289 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.488399871 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.412396251 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.971943639 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.937858532 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.430371933 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.415242196 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.414721469 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.41496095 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.583647715 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.991208207 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.504593828 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.900644015 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.72773792 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.720025903 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.419709887 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.471753473 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.430297298 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.713843663 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.423229713 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.469983092 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.86396573 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.713819674 seconds)
  done (took 167.482803069 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.657123722 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.575440958 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.532183834 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.557344057 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.006820811 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.969304275 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.739311995 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.562918096 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.524541964 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.672546495 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.545054916 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.50589917 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.625240863 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.489562031 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.15257685 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.50073948 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.520844716 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.558031976 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.56891455 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.417300546 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.068257353 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.691666792 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.597869796 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.302058949 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.510930728 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.162324487 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.961547293 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.991313653 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.590245957 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.679861605 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.950760277 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.517718261 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.364103406 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.100195222 seconds)
  done (took 67.486832965 seconds)
done (took 705.999616192 seconds)
SAVING RESULT...
DONE!
