cset: moving following pidspec: 1412
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.33469694 seconds)
loading group "string"... done (took 0.487261806 seconds)
loading group "linalg"... done (took 7.829874572 seconds)
loading group "parallel"... done (took 0.177645119 seconds)
loading group "find"... done (took 1.204556266 seconds)
loading group "tuple"... done (took 2.170772712 seconds)
loading group "dates"... done (took 1.359551221 seconds)
loading group "micro"... done (took 0.251820836 seconds)
loading group "io"... done (took 0.684459604 seconds)
loading group "scalar"... done (took 42.583207415 seconds)
loading group "sparse"... done (took 13.211508031 seconds)
loading group "broadcast"... done (took 1.159820247 seconds)
loading group "union"... done (took 14.835308651 seconds)
loading group "simd"... done (took 4.898358544 seconds)
loading group "random"... done (took 9.784687289 seconds)
loading group "problem"... done (took 2.036709018 seconds)
loading group "array"... done (took 22.789630896 seconds)
loading group "misc"... done (took 1.453365975 seconds)
loading group "sort"... done (took 3.652724105 seconds)
loading group "collection"... done (took 19.650726829 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.522774117 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145746048 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.138835202 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.163630846 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.23431478 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.158696159 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.160925466 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100538006 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.010546349 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.192952124 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.157400988 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.532835848 seconds)
done (took 5.268123308 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.227761901 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095939788 seconds)
    (2/2) benchmarking "String"...
    done (took 0.10781502 seconds)
  done (took 0.88398835 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078864724 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.14886329 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095861581 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07981791 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096153259 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.09784518 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.080815486 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.094350739 seconds)
  done (took 1.375721079 seconds)
done (took 3.256515794 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.748408048 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.287468283 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.20765995 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.503613839 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.179277878 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.217096498 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.684229503 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.367012281 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.266958646 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.1013503 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.149623721 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.390135228 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13764778 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.686421447 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091631921 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.128004819 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177935281 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.487789152 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.085142554 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.112107731 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.11817278 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142377009 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.133117303 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091965792 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.186731625 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.085452867 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.199315603 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108662011 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081988667 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.289888611 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.203491218 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.69348556 seconds)
  done (took 11.058854081 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11685335 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.138637612 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098159174 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139453757 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136257461 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.10055918 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085460577 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09825024 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124243475 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177763594 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.132614415 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.127047928 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096451271 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.099894942 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.104912804 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245253541 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122725248 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121566832 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086800737 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106435404 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122789247 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.11477333 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111272488 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110210017 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167377248 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.210152638 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11408616 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12751427 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09747753 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113580083 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144380238 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145200561 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096118829 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082069265 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173996148 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126372453 seconds)
  done (took 5.21071569 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.193027776 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123973541 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.174452366 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.165374669 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.151491931 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.162168503 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118826775 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.252200478 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.199781536 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.180240959 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.148529785 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.112959979 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.119326137 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09969148 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087102578 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.099839991 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.644789939 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.166072333 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.138195635 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.118466571 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.091177081 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.103613933 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365965701 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.108773951 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081645301 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100586103 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066639525 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164141434 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100459121 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.19000758 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123403501 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100468307 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079929775 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134465504 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.201296205 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.12836703 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126607574 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.139350655 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08196142 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.097118904 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.181024341 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089393817 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098524544 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.124324637 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120855459 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.137208876 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.103337771 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.098679276 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.209950594 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.097408579 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100765766 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.991633175 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183889335 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095889023 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096358315 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.334380641 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100477124 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099377192 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.07799252 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.287543759 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134744963 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083323748 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.09742058 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081023125 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.100583925 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.386504222 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08175878 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.783285962 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084951224 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108957892 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084397214 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097719755 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105046704 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088632274 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116436366 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.077646011 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098463207 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082044316 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.099038171 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096723312 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084924769 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108699985 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087029141 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097819843 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.161615833 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082702425 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116239614 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12823732 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085780892 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097096972 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133187903 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084981202 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.099280979 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.12043231 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101011475 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.10825753 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099941975 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129655563 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.099021478 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.192918818 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081999167 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128172441 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101685826 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116111013 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110526925 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10062946 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08634942 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.098090662 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079518983 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16652173 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082624869 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097880034 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099127392 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.096787139 seconds)
  done (took 23.065440645 seconds)
done (took 40.012074568 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.353277362 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105960992 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104728959 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105516896 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.103219357 seconds)
  done (took 1.527738999 seconds)
done (took 2.259595804 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.286462749 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.176704346 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09704755 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.17065104 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094616711 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.178080249 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162573196 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.115081269 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.18639732 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095213361 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.167920205 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079020301 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095421325 seconds)
  done (took 2.656073065 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097061388 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117264707 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08453317 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112864617 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079114776 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113525365 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.111415765 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103453687 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112039939 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087852783 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095572285 seconds)
  done (took 1.838560233 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095953492 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116128285 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084593125 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111539697 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078939591 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112907131 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095186051 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118551861 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111647669 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087200726 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095616825 seconds)
  done (took 1.830572157 seconds)
done (took 7.043248524 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.09606822 seconds)
  done (took 0.817217978 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.028759405 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.212950578 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.121043292 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.157004594 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.308433287 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.203409469 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.569093697 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.132276783 seconds)
  done (took 15.676337922 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.15068398 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088799094 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.105972817 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085195342 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.102956445 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.103250348 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084671052 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.103158626 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.088260859 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100610087 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.101747773 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087135935 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.105487378 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088096838 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.102403142 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.101075772 seconds)
  done (took 2.386563537 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.121866494 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.121849316 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.109297797 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.111348503 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.107653499 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.0886796 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108288676 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.106978469 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087734284 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105625769 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.108767737 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.092018567 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10525034 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.097829054 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091188068 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.110609689 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.104150164 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.092112488 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109577597 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.109893933 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09308064 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097629041 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.105665475 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.092168173 seconds)
  done (took 3.310279598 seconds)
done (took 22.916783516 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.164009853 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110756743 seconds)
  done (took 1.006458426 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.10396281 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.121469039 seconds)
  done (took 0.962174937 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109769981 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097483761 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138458942 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.11817748 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081980919 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09778488 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.133831444 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.098179502 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081394277 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.097975274 seconds)
  done (took 1.792817545 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.087616317 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.116792794 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.108209211 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.104166301 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.111470488 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.104332272 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.097185713 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.104349608 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.119413601 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082706525 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10789229 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118683114 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.108633948 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.10247259 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.113557091 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.107399189 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.094145796 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.105108391 seconds)
  done (took 2.629268894 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081229315 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.102803058 seconds)
  done (took 0.925104059 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.086353367 seconds)
    (2/7) benchmarking "second"...
    done (took 0.099855683 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086580876 seconds)
    (4/7) benchmarking "year"...
    done (took 0.102033685 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09975613 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.082082047 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.100047772 seconds)
  done (took 1.395429626 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.48246308 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138155246 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.259043169 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086357713 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.123047219 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.309881867 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.0990315 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.105102398 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.086248183 seconds)
  done (took 2.48448125 seconds)
done (took 11.93537966 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09479235 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.11970461 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.118074874 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.495494313 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.124188318 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.081213105 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.163232441 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.2584785 seconds)
done (took 2.200593708 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.153284173 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.331886688 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.11895524 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068215658 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096652736 seconds)
  done (took 1.362465017 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080907948 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101941418 seconds)
  done (took 0.925036521 seconds)
done (took 3.186988986 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0820527 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098277543 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.114219133 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.097839186 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.082274887 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.09841609 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.097549677 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082379665 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.098929974 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081420699 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098483433 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.081079675 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.098931281 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082802787 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095812884 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079570135 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098535193 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079493532 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096452268 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079145217 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09844783 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.07957935 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.095735351 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079399471 seconds)
  done (took 2.951630487 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.111514433 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099296437 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105089418 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088975526 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104024443 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.104220981 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.088142143 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099818266 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088213498 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100829121 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102439832 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.087627563 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101841022 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.104027858 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084243181 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103467549 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087998858 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10012815 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10279691 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086490045 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104229898 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083677166 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103477437 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105269291 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086506174 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102631752 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.101686084 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083462751 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104019205 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086309759 seconds)
  done (took 3.66014659 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087713346 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095901373 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080228533 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103845705 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079307926 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.101863577 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079512682 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098193981 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081157169 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096667772 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08094241 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097423602 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.097082932 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080780714 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.098108283 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083351908 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110272627 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080220731 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.098033683 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.08096641 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100238843 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079726367 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.099906459 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079287361 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095943683 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079464937 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096720594 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.096464295 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.07987242 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.096955581 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.08190543 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.100350812 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.08010064 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.103727039 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.08326501 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.096395947 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083207608 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.095947378 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080967211 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.097087629 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080723331 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096500541 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079631307 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102775902 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.099758331 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.081564911 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.098835285 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.081195592 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.097951088 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.08425746 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.096209833 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.080041076 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.099265513 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082445791 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100733677 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.09642107 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.08172587 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.097421026 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081017072 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.096436304 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.079687178 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.096728788 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.082080103 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.097613662 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096145954 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.103958175 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.079265323 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.099114062 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.101112162 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.0825676 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099297305 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.093886522 seconds)
  done (took 7.299379368 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084715643 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107838626 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.0824259 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09891182 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07853001 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097884799 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100920451 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081485631 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099815685 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08774272 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0981848 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099820308 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082576858 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109632772 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080774201 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099279336 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087899162 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095690287 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.0983224 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084546719 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097726327 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085253744 seconds)
  done (took 2.797645379 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.224647526 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107233167 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144787417 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123909129 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100332274 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.113685193 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104508853 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089811518 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104785482 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103427566 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085205928 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104546818 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089540526 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102406614 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103006475 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088060785 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105266529 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104390909 seconds)
  done (took 2.758708962 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095960851 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100891016 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.123046133 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.08283269 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101935077 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086895709 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106872957 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.122246389 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087200902 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100580396 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.110928852 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08691667 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103163974 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084456184 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103395505 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083313602 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103261834 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100843891 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094510849 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106314209 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.107089515 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094121933 seconds)
  done (took 2.944931487 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099122204 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102528284 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120769265 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086575874 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09694537 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082111091 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10818708 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083418958 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109747031 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.10268582 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084121368 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099533506 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090831617 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100387623 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.10695287 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083892391 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102605943 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084026145 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102714754 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.096437241 seconds)
  done (took 2.706117305 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108750511 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102999136 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102011338 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094008184 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102871085 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.102802633 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094935211 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10244346 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102621201 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.111934529 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102379364 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103972565 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096044155 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108153378 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103160504 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095509907 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.222394778 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112191963 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103059566 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08496349 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12944646 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101899361 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096003096 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101593785 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102765718 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085413736 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102639452 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10869525 seconds)
  done (took 3.746441185 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083481542 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101691413 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081375091 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098786368 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081244907 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098661875 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081272208 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098219403 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083609898 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098278112 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083702109 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.10052439 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083311148 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100575099 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083145211 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100697938 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084875217 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098371446 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081650094 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097127429 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083518062 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101437537 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.101237701 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.081628442 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097933914 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.08304737 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097910039 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08019252 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100864094 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081223826 seconds)
  done (took 3.494013377 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093404979 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108774834 seconds)
  done (took 0.97087724 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080994662 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116973375 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080920065 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105888367 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106562252 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083976301 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110456029 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08941355 seconds)
  done (took 1.541287075 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.100875612 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.116166021 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085142612 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.115473164 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.116409138 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.100045542 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.163901501 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10262956 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.090202378 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099503515 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.118464767 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083067948 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108231659 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083424106 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107264429 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090066753 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099329395 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107969585 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.08688507 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09964295 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086321648 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113491137 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103532723 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.08059003 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.103195363 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094125481 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111267089 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103276461 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087302589 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110745386 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089773838 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095444906 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083954522 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103215957 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.100258869 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.097270064 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114418133 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087358475 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110572977 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103523747 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113206304 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096635003 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.107207155 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092331155 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111719762 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084942061 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102980303 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079380329 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099569723 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.104314932 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.080012696 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10175265 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.078946661 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108946775 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.089303408 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114568702 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.100660161 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.086864831 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.105513979 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087898553 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.107389661 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085584939 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103346223 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.102025901 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091851229 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.105264132 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092565049 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.096594946 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.078356704 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.099544521 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109871647 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107406856 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.110198837 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.103486706 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085712622 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.099904767 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087779117 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103510999 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090974994 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110453172 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.102783538 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10933939 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110196362 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101629228 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087133867 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.111030535 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.082430375 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.105395972 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099260595 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098526999 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.101012412 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082616033 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099711605 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.094457025 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.105630643 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103057851 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.08280929 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109890652 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078759801 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103850077 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086708519 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102761244 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112081051 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091069465 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109201395 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109903844 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.095118578 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103298073 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087134606 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09891873 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085718389 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.105364287 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.110753433 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079390704 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105524942 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087095902 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.10368702 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092464363 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.100462191 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102718699 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093123179 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109722448 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083719883 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.099870455 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088534289 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.103313715 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10696094 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091873984 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102014023 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080326658 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098334535 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.088053781 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102701156 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.107390136 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092226664 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106634591 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.079721491 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100447055 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.107646306 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092720509 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.103276069 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085371485 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107623313 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085291242 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.101755446 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.108449753 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088032275 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101886313 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089128338 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104849407 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.080378872 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107348929 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.10671499 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083710378 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.106625123 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08934611 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104999549 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.104188147 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084224011 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108932445 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086693398 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.102504468 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084311514 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.101513556 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112421504 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087830585 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.098780793 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.082025742 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.11075252 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082877822 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.102229437 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.102040755 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086975363 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.104102532 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.082934033 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.102079012 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086532933 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.133867443 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107774642 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085922107 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108866635 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112531678 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08478496 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.105874428 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085456607 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104754469 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.085595125 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110360801 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.10852575 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090814781 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105366485 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081418683 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109235771 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110941944 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.08413753 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.10064781 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084495519 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.107138171 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.091666018 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.107476326 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10450903 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083869441 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104088908 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089581714 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.104627965 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.084526279 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.102384508 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.10884646 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083881213 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.110321649 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104115788 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094466476 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106865533 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079701545 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107535491 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083573029 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109765276 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09824476 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081727953 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101882365 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.08638779 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.10162183 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.087998063 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097116661 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093063664 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110742932 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.102715338 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084231284 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103593963 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09403187 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104767548 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088427817 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106296469 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108501245 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097974509 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.102380775 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088004478 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112682097 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103459813 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079939718 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108429959 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083796346 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101836087 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.083648748 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.102015523 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106330528 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094143877 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.10725422 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079013964 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.105125798 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.10139549 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083055363 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.09894785 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.091798225 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.107076551 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086334154 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111714556 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104740262 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086447257 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107578686 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.08548217 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.105458902 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086787297 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107181002 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.103816352 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087510096 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.102610871 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087615728 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.102527104 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082026499 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104534721 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.10352259 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.08503407 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108389632 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.087082155 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104037962 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087139715 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104350898 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103962132 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085971151 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102154802 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088477523 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104376974 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.084607149 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.105866288 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.079699955 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110484786 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.102695134 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093169854 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103048357 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081023484 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.109331154 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087954987 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109116947 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.10398371 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.086668707 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.105121622 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.085359697 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106172388 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112048499 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.08392408 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.11230341 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091320291 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104654999 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.106344064 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085902949 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.105312878 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.084118166 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.10514205 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.086372524 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.103494008 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085331319 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.109171476 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.10563128 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.084969685 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105123278 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.087069479 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.103634409 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.08718714 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.09715749 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084835571 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.103703812 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.104073495 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093614599 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104513245 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087746089 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.102437471 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105078527 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085232898 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.100871132 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094169998 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113785058 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.104924057 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093228837 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.103179184 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087378147 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114018422 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.097815496 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083936893 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.101331856 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083737533 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111873546 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086560799 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.111996308 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085332711 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.103334757 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.101189975 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086071008 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.102036507 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079644413 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.10186777 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089804635 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.106848413 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084167508 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.104763539 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.115239732 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087593646 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111057318 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.085355043 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.106146675 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.085887837 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.101257077 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083527365 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.102495613 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.107387006 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086742188 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.102396829 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082422993 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.103839626 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087386266 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.103795273 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085552543 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.106130654 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110955617 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085840059 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106568813 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089374789 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098024533 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106657259 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085411354 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.1035238 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084586915 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.107186073 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08910087 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105370473 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111186837 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085965718 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103850584 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085673129 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.101863519 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085347714 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.104089916 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104295537 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084603498 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105196365 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09401977 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101706575 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087271212 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103363013 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085563599 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.108972597 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.105406551 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087626775 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11218741 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.087690381 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.106018674 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109852749 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089594576 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107880022 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086503365 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.105586856 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11046434 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085038635 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.112250942 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.08483724 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105860784 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087036439 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.101970363 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104297969 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084842788 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103213639 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090050537 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10592144 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084426739 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.103103746 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083227996 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106266253 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108563711 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09331609 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106824962 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089312717 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099737382 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.082308038 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10564242 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.101665809 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087110504 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.106784841 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0917314 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.106368483 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085250516 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.104882778 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.112106396 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091766077 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109770559 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.083442996 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.109601112 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105479892 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088220321 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.105660047 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.085381782 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106917586 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.092067211 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.106341721 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103757518 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094999534 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.109240594 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088086064 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.106262357 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.086982218 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.105311293 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.100402301 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087707244 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.107145459 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093057529 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.107262136 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086895782 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114887828 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.104227641 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085206479 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109422351 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085598146 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.112536351 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080174779 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.104903028 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105315762 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088520585 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099210964 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.08487973 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.102284422 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088769016 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.104840801 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.080721841 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114526435 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112494983 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087332693 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103558779 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084351507 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.100508802 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.080785568 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.103673048 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10657486 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088600295 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.113939679 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.084698526 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.103728172 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.081203339 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10531153 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107267982 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.089993559 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.102198696 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.081755999 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.102869589 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087643826 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.111850731 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085127721 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.104793951 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107106543 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088200082 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.10266854 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090555109 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.101776628 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109632097 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09726026 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.10602783 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086295077 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.109876634 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113524084 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.08686691 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100477254 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087822218 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.106449414 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085976122 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.106371074 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.106468393 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099942268 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108088361 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085278612 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.104386641 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088458432 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.104427273 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.11163602 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087693428 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105804384 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091068128 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.106588322 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115359673 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089157577 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110843612 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.087995458 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.107598174 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104786006 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085806298 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102604212 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084675693 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.106357356 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087801445 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110195944 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.113593058 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085365934 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114964602 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.094040973 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.109783317 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.10129987 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.085245132 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.104275583 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.082082532 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105656456 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.084523047 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103073088 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084480176 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.103382367 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.08728743 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111332859 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.107240492 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087670107 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.105068351 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.080583403 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.106924626 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088847542 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106206902 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.082645085 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.1065647 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.106268129 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.092266869 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112241456 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086746926 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.107165005 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087061442 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105712953 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100632122 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092658571 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104209456 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089039896 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.104366947 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086624794 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.106879164 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108343235 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092715822 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.107317149 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087632783 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.118263729 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108179023 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.084320457 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.102413427 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092162376 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103125358 seconds)
  done (took 59.258922099 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.151427364 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093926999 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100974152 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081542897 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118854098 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102805908 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08157505 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101223882 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082805903 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106764594 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081366672 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101194444 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114506076 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129210795 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098910801 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111454142 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100017319 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082500782 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100784602 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082856092 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115997741 seconds)
  done (took 2.957865722 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107132059 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119270877 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.117677406 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.122695339 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092520685 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117838754 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116462175 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119772008 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103592133 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113210718 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.121424595 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11818273 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.094161937 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112713011 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11357219 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095103625 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.123023995 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111918315 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.118908237 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096624988 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115354842 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11644966 seconds)
  done (took 3.284424234 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.099337388 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.105095931 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.091031009 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.099844799 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.086070503 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.099903795 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.091160718 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.103253595 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.109220035 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.08466079 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.104129687 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.085731077 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.110117089 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.081943622 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.10567499 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084353917 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.15702921 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110044169 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.105204001 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087437143 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.100010484 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088061008 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.100888636 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.082277227 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.103891941 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.12301707 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086746334 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.102916032 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.085836548 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.104102092 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.085657075 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.102250657 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088018984 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.105664598 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085134018 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.103754242 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086026873 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.105216159 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.100470168 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.084235413 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.104549126 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.081853426 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.105149885 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.087687353 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.103994669 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.084471873 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.106934309 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085927025 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.10112905 seconds)
  done (took 5.606866981 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.107007463 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164773987 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08862561 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144717678 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.123618579 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.117081813 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.090104867 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.124371251 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103956325 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084671642 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125519066 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.12297496 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106189562 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.092568532 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110477743 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106744449 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088184091 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105109235 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.111237035 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08674742 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.111979305 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.112918708 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.102973622 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.121003419 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110892747 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085565952 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105901054 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.111893585 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.119727662 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.0925514 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.111574995 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112345515 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.10315898 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.1117598 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10486683 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089015149 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.1251984 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.106855851 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089057354 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.104032153 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.10743027 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091889913 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.112521633 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.125323444 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087186089 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.111523433 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105902755 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.083921658 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.121525239 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.108530688 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.095636348 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.122692423 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.11044798 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105586321 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091836959 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.123091307 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105591084 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.085451218 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.10987246 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.120094823 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.0843574 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110979725 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.122047254 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088902228 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.11506788 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121385311 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111163757 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091156355 seconds)
  done (took 8.291617255 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095622156 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113051757 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124176133 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124090015 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093543182 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113293194 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113434724 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.112743544 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094223905 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118480173 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112960207 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.140870878 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088689109 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117295096 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113278111 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09355711 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11395304 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114382714 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.114022908 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093955201 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.114313479 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123845525 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.11251997 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.103412801 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144810106 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107753475 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111437729 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.093626164 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124408023 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113583787 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127807987 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.112540028 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094631352 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.124035401 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.127360045 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.114252113 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085864091 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113107549 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.113940215 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094866241 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.107620201 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123548093 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113626882 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089001764 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114071555 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113935925 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104107783 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127089918 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11730628 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120115642 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114368912 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103663273 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113078359 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113915253 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.123601749 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.15075812 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123021639 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103240354 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112653755 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.123727477 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124024952 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.131291965 seconds)
  done (took 7.864708696 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.116231351 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.121075777 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.12746613 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.102387635 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084732049 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113774472 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085479206 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104557517 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.118563063 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100130916 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122504726 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.114156416 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116940627 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104141979 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116005934 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118058763 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115515775 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094786839 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.120272499 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.114490372 seconds)
  done (took 3.044052504 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.096049378 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126621407 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087456486 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11482038 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10935258 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093744401 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109470408 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109607533 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088930709 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109809832 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.119271209 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098749422 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109040804 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113860573 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09918116 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114446573 seconds)
  done (took 2.534262031 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099503377 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120043202 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.126166501 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087553455 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106026633 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.103813155 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.087346266 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102373944 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083197005 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.124027732 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.107950016 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.090010859 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.107156437 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08425969 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.104118838 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089468174 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103814033 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.104534819 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.086829202 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.127263982 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.119379416 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086260202 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.107886845 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.088339047 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10769191 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.112454652 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087792969 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104557055 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084791587 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.108707109 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.106800099 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.095735678 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103638137 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085741789 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.105335477 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.103605271 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.087787448 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.107447787 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.090921829 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106828061 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08503205 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.10803239 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.106815373 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.088686944 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.103039856 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.087361661 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.103894811 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.113928132 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.085589861 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.108044832 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.087109067 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110269411 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.10840386 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.098622557 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.111818734 seconds)
  done (took 6.39036738 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101222249 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111709061 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083325536 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105363066 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090244169 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109220644 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110993329 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09042568 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107872413 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084678158 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109134447 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.11136817 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090411772 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111325659 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089659538 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110881223 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082649251 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109412126 seconds)
  done (took 2.650272007 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092516245 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106977272 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09444488 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.10749818 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087165865 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110653724 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103160626 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.08545363 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104898305 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087377895 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107351069 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088552508 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105852577 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089233858 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107430326 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106997404 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.089793614 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105154375 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08734293 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103003655 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090280173 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10546767 seconds)
  done (took 3.007908908 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.123777048 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.127581646 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093900011 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.237690825 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.106405885 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.135114534 seconds)
  done (took 1.66700649 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111468059 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124168655 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108075897 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110382854 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117510033 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110389858 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09072043 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110323514 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1208554 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124581973 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089973694 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120019534 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120591052 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121471133 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097187454 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116977172 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109542663 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089259138 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109134565 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132477168 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110317693 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101498008 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110632896 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109805381 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08981829 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120131346 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121018018 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125717715 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089004874 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121898631 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117359927 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109793527 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101581124 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1251887 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111312308 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120677359 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089664118 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131469489 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116911079 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120294125 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090715881 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117456765 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120466273 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115753058 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100499555 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110411813 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115853289 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089118334 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110860269 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138347022 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117145685 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119758633 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097089627 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121889878 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120300858 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140451001 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126296693 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120518974 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096974821 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126273311 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120722376 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118064426 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120063192 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125223378 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097959885 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121203947 seconds)
  done (took 8.322043538 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10519299 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127504967 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110225952 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125325867 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100110816 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109493973 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110892146 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090051723 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110120591 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108344955 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15526752 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090105046 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120742571 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120733636 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110280644 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090419435 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111013149 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121042389 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089913143 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138691462 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11062065 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120656829 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119982688 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119763835 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104946682 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117559216 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10973457 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089652702 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111381105 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110177399 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11783941 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090036864 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120490526 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108775904 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09965062 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110993435 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110063187 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116906605 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090522334 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118122424 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120074419 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132448915 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090753435 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109778598 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127422041 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110050585 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08995331 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109081132 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089937992 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109941819 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126815831 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125845744 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125721472 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1004307 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110722358 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111020146 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08929984 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110173291 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111003623 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117478237 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099264049 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111670714 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140668077 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111289323 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090590733 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121645274 seconds)
  done (took 8.183759844 seconds)
done (took 158.677810641 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.103319379 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.141503923 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100654703 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170792999 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.108821137 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.121872229 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.140280852 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.102065286 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.109046799 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086982585 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108881536 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.110264123 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.154111 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.107774885 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088335351 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.110165095 seconds)
  done (took 2.710873596 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.203716254 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.272719312 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104053006 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107955808 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.11377384 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.088076647 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.106491989 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.096360278 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109421973 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.088031362 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108129888 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.088456851 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.10824537 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087658435 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109821442 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.107836205 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.087893128 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.10773833 seconds)
  done (took 2.948696582 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115476707 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148950642 seconds)
  done (took 1.121361859 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.12190986 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.185366586 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.302391257 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157260198 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121918324 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129422708 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157562232 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13376841 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.2153651 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.12713115 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.126169973 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.119235925 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.123934916 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.118365946 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116783707 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.09986613 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.145958201 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115875526 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.096986059 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.120213663 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.14061526 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.088396316 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.118954938 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115667723 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.197287073 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.100843245 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.109578437 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087121988 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.120342717 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.1168497 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.093912266 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.128515003 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.123077519 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.17574918 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.126205366 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.16442341 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.120875956 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113010747 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096846961 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.114357299 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120618838 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100996935 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.128274124 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.121204044 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.089929724 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.121464861 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087123019 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.108238734 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115600328 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.100889759 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116332835 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.11382582 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.161263415 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.121219323 seconds)
  done (took 7.750427186 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.833154601 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157410618 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114360977 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.913086151 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.141770503 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126948027 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.80187547 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.137120875 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.237155038 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.802179475 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132806869 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.101010923 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.238676974 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.263298028 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.913082782 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.315699252 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.713020652 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103934994 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.142902236 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.158658614 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119188527 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137926374 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.111205363 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.432072958 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.11804222 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113638321 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096767446 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.122463978 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165541782 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.113713962 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093912429 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.204178975 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.254122072 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.212363727 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09540891 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113539336 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.1113765 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.17431529 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274637807 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.200047348 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.202877035 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089267439 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112122351 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.100517107 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132233798 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109382928 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.168873162 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.179357324 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.196422755 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094251132 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12218854 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121255645 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099579719 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.192030358 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.10134919 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.318996824 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.325396446 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11284619 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120598738 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.107359101 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272515147 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126386726 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230565113 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117001302 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220250368 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112713417 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81126535 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.175635287 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090984843 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119768686 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118320036 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096002888 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12241881 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.17223876 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.396846097 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125583848 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093512732 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113464851 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.246975026 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.093295844 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111580495 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167457669 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115677207 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099945615 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125675797 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122266943 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.174274096 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.230550558 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12440931 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121303556 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095116781 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1249966 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116804038 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.215135225 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22672223 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.166845792 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.21344485 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123663103 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.189618649 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.173341972 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12086161 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.178679196 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119709154 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105197172 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123435479 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224159328 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.148396861 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.125645007 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094547742 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120126307 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.152251099 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.093446975 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120361332 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.174390484 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.487312496 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.174829391 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.111070163 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094248357 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121478921 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.165384006 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119591997 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263648636 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099735938 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.196912235 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096948121 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.110927575 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119024622 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.17032404 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123785433 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098850604 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124137615 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120292552 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.237299578 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226441992 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124702638 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.224448266 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185282046 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120926304 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177403384 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121547832 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.173760128 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121711493 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121355909 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096664969 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.803921316 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125321788 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097860668 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11839225 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.192452059 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112165661 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104936868 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.113671121 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087738185 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.786644587 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.114891453 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.102093958 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.126856873 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119830421 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098623365 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11913507 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117114634 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.167641073 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239471362 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122090729 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097224935 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.113972798 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.165561964 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117706978 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.091692007 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.114507423 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.092086096 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120422874 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116954144 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105696459 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.196779023 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.167756333 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.227595108 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.566711092 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091715167 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.113815389 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.234915441 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091246037 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.295437055 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120275556 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.231147377 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.168821023 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.123559713 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.32135571 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.170756937 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.193731864 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.093461238 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.200758711 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088782143 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120398628 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.168285426 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113375888 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117978672 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.169272728 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126865475 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102629561 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.974521623 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114096783 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.230568467 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087875217 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.198372867 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094716321 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123276622 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.294709077 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112802402 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107596306 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.191700829 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094131151 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.114576095 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.700440742 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.11458493 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121652357 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098211103 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.231484183 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.189647247 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099196586 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120164028 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121950092 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.168074138 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.212910003 seconds)
  done (took 44.555096526 seconds)
done (took 59.938502427 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.302376004 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.21843237 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.262707889 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172607599 seconds)
  done (took 1.915132443 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.180335842 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.152063364 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.125756267 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.111047113 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.155576692 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087400284 seconds)
  done (took 1.695325198 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.392825935 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.278964373 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244884029 seconds)
  done (took 1.802575355 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.252338216 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.273131722 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.331510274 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.421000897 seconds)
  done (took 2.258074737 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.283435476 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.148593366 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.139853149 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.170615169 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.206903585 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.297838812 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.170245548 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.249401529 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.162186229 seconds)
  done (took 2.754086522 seconds)
done (took 11.315499025 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.253322629 seconds)
    (2/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.163106105 seconds)
    (3/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.098673683 seconds)
    (4/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.258725517 seconds)
    (5/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.231638666 seconds)
    (6/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.26023524 seconds)
    (7/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.2526295 seconds)
    (8/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.22118895 seconds)
    (9/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.094440306 seconds)
    (10/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.270403469 seconds)
    (11/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.256076806 seconds)
    (12/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.17100426 seconds)
    (13/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.13119661 seconds)
    (14/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.225000858 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.101942644 seconds)
    (16/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.234667855 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119176253 seconds)
    (18/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.120692754 seconds)
    (19/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.161743511 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.138399562 seconds)
    (21/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.078065844 seconds)
    (22/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.22806195 seconds)
    (23/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.090758441 seconds)
    (24/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.133548996 seconds)
    (25/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.149467356 seconds)
    (26/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.147358081 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.117667631 seconds)
    (28/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.188360137 seconds)
    (29/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.128263862 seconds)
    (30/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.14717371 seconds)
    (31/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.100547554 seconds)
    (32/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.136482112 seconds)
    (33/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.184445802 seconds)
    (34/286) benchmarking ("sort", Int64, true)...
    done (took 0.233297078 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.098815424 seconds)
    (36/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.20537478 seconds)
    (37/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.138967356 seconds)
    (38/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.190875643 seconds)
    (39/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.10376773 seconds)
    (40/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.126179687 seconds)
    (41/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.09392561 seconds)
    (42/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.172704565 seconds)
    (43/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.121147042 seconds)
    (44/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.190360678 seconds)
    (45/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.103380898 seconds)
    (46/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.117129866 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.095316374 seconds)
    (48/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.111220468 seconds)
    (49/286) benchmarking ("sort", Float32, true)...
    done (took 0.239852891 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.098888119 seconds)
    (51/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.188991168 seconds)
    (52/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.126843327 seconds)
    (53/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.172615932 seconds)
    (54/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.177469905 seconds)
    (55/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.118488936 seconds)
    (56/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.124655738 seconds)
    (57/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.114647317 seconds)
    (58/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.202942407 seconds)
    (59/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.187384114 seconds)
    (60/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.139945643 seconds)
    (61/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.143117368 seconds)
    (62/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.174669724 seconds)
    (63/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.097157545 seconds)
    (64/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.115549321 seconds)
    (65/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.068762399 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.137586297 seconds)
    (67/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.173370637 seconds)
    (68/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.147169122 seconds)
    (69/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.125963928 seconds)
    (70/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.201978819 seconds)
    (71/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.079068179 seconds)
    (72/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.185232358 seconds)
    (73/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.07217823 seconds)
    (74/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.179575857 seconds)
    (75/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.195328936 seconds)
    (76/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.102075749 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 0.111460666 seconds)
    (78/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.1139712 seconds)
    (79/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.092186201 seconds)
    (80/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.138694348 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.088950372 seconds)
    (82/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.120245602 seconds)
    (83/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.117501225 seconds)
    (84/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117688952 seconds)
    (85/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.122214345 seconds)
    (86/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.124045932 seconds)
    (87/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.115314125 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.089516327 seconds)
    (89/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.116937729 seconds)
    (90/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.100261123 seconds)
    (91/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.119523405 seconds)
    (92/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.077239294 seconds)
    (93/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.090274014 seconds)
    (94/286) benchmarking ("sort", BigInt, true)...
    done (took 0.24048686 seconds)
    (95/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.071171142 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.138303815 seconds)
    (97/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.171432357 seconds)
    (98/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.117462304 seconds)
    (99/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.08304448 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.139280854 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.119694849 seconds)
    (102/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.139485578 seconds)
    (103/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.124008448 seconds)
    (104/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.078205822 seconds)
    (105/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.123262586 seconds)
    (106/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.109656843 seconds)
    (107/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.17794416 seconds)
    (108/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.122583169 seconds)
    (109/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.140090583 seconds)
    (110/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.084015622 seconds)
    (111/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.137781455 seconds)
    (112/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.091182317 seconds)
    (113/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.124441268 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 0.189949621 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.097620649 seconds)
    (116/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.119937369 seconds)
    (117/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.177356824 seconds)
    (118/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.159043295 seconds)
    (119/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.122401759 seconds)
    (120/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.116418713 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.097179469 seconds)
    (122/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.11098496 seconds)
    (123/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.139239228 seconds)
    (124/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.12161782 seconds)
    (125/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.120424743 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.096990656 seconds)
    (127/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.148452655 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.088771269 seconds)
    (129/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.118359335 seconds)
    (130/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.096899994 seconds)
    (131/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.111197221 seconds)
    (132/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.188308887 seconds)
    (133/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.070827903 seconds)
    (134/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.077835423 seconds)
    (135/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.091311968 seconds)
    (136/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.088904687 seconds)
    (137/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.17432756 seconds)
    (138/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.067336472 seconds)
    (139/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.09071276 seconds)
    (140/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.099257432 seconds)
    (141/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.241484801 seconds)
    (142/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.091584591 seconds)
    (143/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.097616352 seconds)
    (144/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.150594922 seconds)
    (145/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.100719854 seconds)
    (146/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.120211026 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.111311827 seconds)
    (148/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.144978238 seconds)
    (149/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.113773266 seconds)
    (150/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.068021534 seconds)
    (151/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.174767987 seconds)
    (152/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068950363 seconds)
    (153/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.102121764 seconds)
    (154/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.096862578 seconds)
    (155/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.11292248 seconds)
    (156/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.103046 seconds)
    (157/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.093005957 seconds)
    (158/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.0687786 seconds)
    (159/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.139678537 seconds)
    (160/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.068382848 seconds)
    (161/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.091614919 seconds)
    (162/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.095523646 seconds)
    (163/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.118348837 seconds)
    (164/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.077774201 seconds)
    (165/286) benchmarking ("sort", Float64, false)...
    done (took 0.17905588 seconds)
    (166/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.069838674 seconds)
    (167/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.115433795 seconds)
    (168/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.069129271 seconds)
    (169/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.125684584 seconds)
    (170/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.09880106 seconds)
    (171/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.092030789 seconds)
    (172/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.092130614 seconds)
    (173/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.145511579 seconds)
    (174/286) benchmarking ("sort", Bool, true)...
    done (took 0.231464091 seconds)
    (175/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.088340245 seconds)
    (176/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.101310055 seconds)
    (177/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.104406886 seconds)
    (178/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.091953192 seconds)
    (179/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.095627552 seconds)
    (180/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.18807189 seconds)
    (181/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.093600563 seconds)
    (182/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.112635499 seconds)
    (183/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.068485125 seconds)
    (184/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.110638828 seconds)
    (185/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.140391892 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.089815254 seconds)
    (187/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.1230011 seconds)
    (188/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.135167733 seconds)
    (189/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.144317546 seconds)
    (190/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.097649368 seconds)
    (191/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.12131266 seconds)
    (192/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.077373013 seconds)
    (193/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.11193219 seconds)
    (194/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.091839367 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.111063373 seconds)
    (196/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.095804056 seconds)
    (197/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.091241505 seconds)
    (198/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.09228713 seconds)
    (199/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.117800741 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.088852653 seconds)
    (201/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.118379231 seconds)
    (202/286) benchmarking ("sort", Float32, false)...
    done (took 0.181421917 seconds)
    (203/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096808281 seconds)
    (204/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.110582447 seconds)
    (205/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.069265973 seconds)
    (206/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.112911374 seconds)
    (207/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.070268963 seconds)
    (208/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.07986009 seconds)
    (209/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.091572843 seconds)
    (210/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.078172103 seconds)
    (211/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068750444 seconds)
    (212/286) benchmarking ("sort", BigInt, false)...
    done (took 0.247068727 seconds)
    (213/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.089959564 seconds)
    (214/286) benchmarking ("sort", Float64, true)...
    done (took 0.239196558 seconds)
    (215/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.093603326 seconds)
    (216/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.071126486 seconds)
    (217/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.127437677 seconds)
    (218/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.340906786 seconds)
    (219/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.185664283 seconds)
    (220/286) benchmarking ("sort", Int8, true)...
    done (took 0.229661227 seconds)
    (221/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.113202274 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.089768886 seconds)
    (223/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.133050109 seconds)
    (224/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.14248815 seconds)
    (225/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.093819005 seconds)
    (226/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.088278509 seconds)
    (227/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.114629497 seconds)
    (228/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.089409833 seconds)
    (229/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.112038361 seconds)
    (230/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.068368449 seconds)
    (231/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.112846057 seconds)
    (232/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.069679023 seconds)
    (233/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.115417682 seconds)
    (234/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.077935003 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.110687432 seconds)
    (236/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.069190762 seconds)
    (237/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.068691597 seconds)
    (238/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.113693142 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094437822 seconds)
    (240/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.119784106 seconds)
    (241/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.125907084 seconds)
    (242/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.089790634 seconds)
    (243/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.112917303 seconds)
    (244/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.069352291 seconds)
    (245/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.087238333 seconds)
    (246/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.192958901 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.121141024 seconds)
    (248/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.187134854 seconds)
    (249/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.068902511 seconds)
    (250/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.068835759 seconds)
    (251/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.175508498 seconds)
    (252/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.068555706 seconds)
    (253/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.126831007 seconds)
    (254/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.068438199 seconds)
    (255/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.113535062 seconds)
    (256/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069652139 seconds)
    (257/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.11479292 seconds)
    (258/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.184458699 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.089103354 seconds)
    (260/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068430404 seconds)
    (261/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.175941461 seconds)
    (262/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.079026166 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.12127576 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.110544593 seconds)
    (265/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.090439266 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.110607357 seconds)
    (267/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.079787772 seconds)
    (268/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.111466633 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.097912972 seconds)
    (270/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067662539 seconds)
    (271/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.091737196 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.09616949 seconds)
    (273/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.118353734 seconds)
    (274/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.115065444 seconds)
    (275/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.121304304 seconds)
    (276/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.137802494 seconds)
    (277/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.070512629 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.111141456 seconds)
    (279/286) benchmarking ("sort", Int8, false)...
    done (took 0.1975189 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.095183699 seconds)
    (281/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.14087556 seconds)
    (282/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.091651082 seconds)
    (283/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.118390306 seconds)
    (284/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.069653297 seconds)
    (285/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.09303309 seconds)
    (286/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.09111212 seconds)
  done (took 36.984113201 seconds)
done (took 37.873403756 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.103043044 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.152647424 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.098005189 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.141586294 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125584773 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.093631296 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.121104664 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.124556671 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.102922812 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.128276692 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.101553017 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094410586 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.099172268 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.123313095 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.12176239 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.121203877 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.126203801 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.096520994 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.121782026 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.112058297 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.097224447 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.109933476 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.091390324 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.093645106 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101537508 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119155217 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.095758213 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.124392267 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088750708 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.112463301 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.0938378 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.120245198 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.088458083 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126490784 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.118722318 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.099172982 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.124194361 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.098614375 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.114819679 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088997239 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.120793114 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088067507 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.120171179 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.120002698 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.095617625 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.117194199 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.098964207 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125453177 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.144105424 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094545762 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.120474267 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.10042677 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.122802888 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.096792816 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.116225905 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.098460258 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.118608605 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.145229909 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.098219389 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117619858 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.097026517 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.121034078 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.094254003 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.121751021 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120938803 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.101130854 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124075676 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.094993988 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.123260122 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.094317429 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.112271002 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120337593 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.093213853 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111945848 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.098667513 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122854444 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088926228 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117579246 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.095787791 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.117391009 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.089096449 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115073737 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.090297397 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.119396818 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091389782 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.094689278 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.093384013 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.118314473 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.08840734 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.122319988 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117948316 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.095989148 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114098938 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.102120092 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111793422 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095398883 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111965458 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.090177703 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115011694 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.093405421 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112779381 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092135068 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121957428 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090312984 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.119979403 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.125520638 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089358121 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117816731 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.089552304 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111705713 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.105518838 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.123787884 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.090322667 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119098685 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.087512458 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120649587 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.112231502 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.08964189 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111927605 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089673592 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.11838458 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.089665721 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115094359 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.096784265 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126455195 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.089544152 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.116170388 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091651207 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.112740354 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.095123894 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112548732 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088293244 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.116147708 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079695694 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115573999 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089117478 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.120607646 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091503958 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.122366714 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.114332813 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.099225637 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.116747557 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.095615741 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.1178574 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.08874826 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.099424347 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09484554 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115739629 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.091789182 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.112091656 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.092403175 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.112295766 seconds)
done (took 17.323833397 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.090015232 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.188017072 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.156404179 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.147769982 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109895122 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113301541 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.124078381 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.146008383 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.091934394 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.146050357 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.137271362 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.110473107 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.15221158 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.089168834 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113375931 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092754636 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115259039 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.128625553 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.127730964 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.135047182 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.169015872 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.112128087 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149372058 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.114477128 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.122621603 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.130877213 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.091058366 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.116634652 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.093818101 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.138598674 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110780226 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.117290786 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.089669061 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136618878 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.131275673 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.097724104 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.113678577 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.097090572 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.114039499 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.089205982 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.143705811 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.135840824 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.117717389 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.095851646 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116398685 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.092542631 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115768806 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.09891822 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.124390132 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116841289 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.104849467 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.16079404 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.11653656 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124145711 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.088536277 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124227915 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.099496839 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.115757646 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.090817016 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.116801218 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.089871503 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.116924746 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129491593 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144706511 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.093736321 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123360055 seconds)
  done (took 8.790790218 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.107884191 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.143532108 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.132250481 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109149611 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113611361 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.090096882 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114526662 seconds)
  done (took 1.764726841 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090673505 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.140159117 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117179215 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.141299327 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.138131169 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.117059095 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126008141 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.091509257 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13648265 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.116095109 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.115475619 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.156415416 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.11713695 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.099205918 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.142990285 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.09090184 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.141860834 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.114360265 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094753634 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.141628401 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094679574 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.137826862 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.116178817 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.091045837 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.133754645 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.091018138 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.166778965 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119622309 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092962291 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.136104617 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0895661 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.153710525 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.132644884 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.102471039 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114444287 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.110051506 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.133471764 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088213456 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.132191685 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.12319028 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.109212749 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117588092 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092134912 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.115139291 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.095954137 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.128571581 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118494211 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092912372 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.118048139 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.115832606 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.115858791 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.109223938 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.118209013 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.094562491 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.117450323 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122088196 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.101741107 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115892485 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.115479402 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117790373 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.111892066 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135901128 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.133050765 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.111311074 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.11901958 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108627571 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.133646341 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118889017 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093326816 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118351814 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.111167745 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.113672576 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.092890103 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.129885321 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092741284 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.144046546 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.141879884 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092676941 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.126472671 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.090714726 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.116511718 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.091213601 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.142093502 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119270958 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091837394 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119814587 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095286847 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.11450861 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.090192533 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.119406582 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.090194882 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117350638 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.094936455 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.11738628 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117803823 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.110986522 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11700353 seconds)
  done (took 12.164597816 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.093453163 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.117103321 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095292978 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.117177334 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.093060685 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116932816 seconds)
  done (took 1.598723484 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.119999412 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119956719 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.132046444 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.100288519 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158379584 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.13504587 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.110941472 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125825876 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.136420187 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.104875394 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.135908362 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.111278194 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.142640178 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123461964 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.110360599 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122452385 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.135114104 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102932626 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129522089 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123287353 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.114780216 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123190114 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098918904 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.137934707 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120609438 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098489492 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128331869 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.129968491 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104682347 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125992395 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123267248 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.095916294 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.122785416 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.100617955 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.136246457 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.124328851 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097869645 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121878815 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128253554 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.09605582 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.136443484 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098918802 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.130515328 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122062803 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.101855867 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.123936548 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121932826 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.104224595 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.136397652 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121053908 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.096987362 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.122291171 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096140844 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.123426714 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122556072 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101094834 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.12193857 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.110939069 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123985896 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.124107701 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095900055 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121418486 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126422221 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096636136 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.133187606 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.09673895 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.124406401 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125101659 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099139383 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.124624616 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.096209377 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121579835 seconds)
  done (took 9.478919577 seconds)
done (took 34.745847818 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.693135463 seconds)
  done (took 1.655170233 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.843273883 seconds)
  done (took 1.80818811 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.814926661 seconds)
  done (took 17.807978504 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.50859216 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.599935766 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.998685706 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.174584547 seconds)
  done (took 3.245538789 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.949513137 seconds)
  done (took 1.935743629 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.287089734 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.238571799 seconds)
  done (took 1.496837972 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.77493989 seconds)
  done (took 1.756124949 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.452859725 seconds)
  done (took 2.428928735 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.335687287 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18504316 seconds)
  done (took 1.508894746 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.562232731 seconds)
  done (took 1.541628031 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.69883478 seconds)
  done (took 11.683123957 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.271467489 seconds)
  done (took 1.266936262 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.305050513 seconds)
  done (took 1.29227631 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.499229189 seconds)
  done (took 4.485817981 seconds)
done (took 54.887651228 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.101451046 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128824974 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104506334 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126351939 seconds)
  done (took 1.44110319 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.106330989 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.124293356 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105977065 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122730821 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.132545639 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.098280593 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.125062842 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.103714067 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.12234547 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.124437895 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.098126556 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.122365143 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.1015541 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.125135259 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.095286723 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.126486243 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.127598491 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.098933694 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.127300995 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.098282538 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121689525 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.126297215 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.102254511 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122320916 seconds)
  done (took 3.748736569 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102023301 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.12037642 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099389024 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.120144678 seconds)
  done (took 1.432758579 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.102193398 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.134239094 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.107579054 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127842708 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.133832732 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.108926252 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.120066043 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.094602015 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.121216813 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.101863075 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.117912084 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.142742218 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.10929073 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.127539059 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104485866 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.116821301 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117544597 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.109165769 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.127624925 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103585235 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.120188033 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.102538433 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.118275418 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.135604325 seconds)
  done (took 3.797344242 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.173611783 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.130402149 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.142096921 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.097920864 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163357141 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.143132996 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.09067902 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.143703828 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.089465249 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133175842 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.120116885 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.136862754 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.13153506 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.090269991 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116593575 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.114851361 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.104454111 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129956232 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.093146316 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.130069415 seconds)
  done (took 3.46742884 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.10050384 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.120514506 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090856452 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117994562 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.101697055 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122833058 seconds)
  done (took 1.650448817 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.099776271 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.117004605 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.096180147 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.119100209 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.096745816 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115757978 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090891914 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11728446 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092291298 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115306203 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093267192 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.116307591 seconds)
  done (took 2.26721715 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.515327734 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.123942281 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122871859 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091274066 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.128376166 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091040528 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.133831549 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.095460791 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.146531721 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090730363 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.118704089 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.119053108 seconds)
  done (took 2.774026239 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248018999 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127409361 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.289345764 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.382972977 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187107337 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171190377 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.30804418 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170040014 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.238228321 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168372021 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229688074 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180401366 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158503499 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219301256 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144015674 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.12189732 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223573599 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.311981654 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155863483 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222492535 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173464956 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172174494 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184867662 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156001798 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141859289 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201207332 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122946601 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106275088 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217608926 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18347042 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192379767 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165265532 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165752928 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236627126 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.296990279 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197359112 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285269311 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137827544 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.145252645 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.170650786 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275728307 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145535698 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23930638 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139117972 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134108611 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237098725 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162714527 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.202497089 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150124584 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118972127 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23250636 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200964846 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.246695634 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140811742 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313114175 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15461495 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.176793628 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19478694 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255711947 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206398599 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224956863 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.098165875 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.217921763 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201712559 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191633917 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.171722985 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.196583062 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147299192 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182182274 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.226881325 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192234602 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175683429 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.213086484 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113666598 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173464941 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175983026 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199886677 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239797418 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216075618 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.098926677 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170606989 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154123018 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135001312 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.199455654 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101626528 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25104302 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146510116 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.16774965 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213529046 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162877917 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165041189 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19169772 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179872565 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151375679 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.113908197 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130028422 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158480532 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175811529 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144190884 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162200717 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153974383 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.134000203 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174411865 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.099979397 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215442223 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.093382637 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171821027 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216337852 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.102935543 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169071668 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156228632 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.154922097 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1974068 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201554011 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144346007 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136868161 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214254315 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210215876 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.119542312 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180359416 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.236799199 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147580462 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125258759 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232648033 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244984352 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118992067 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232702749 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151108121 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110808311 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.136637388 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185395909 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160439254 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.165689327 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136697962 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.186864417 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233116831 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.101726791 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141425488 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206570918 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136781286 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135028853 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150014371 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123347093 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140639674 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146129456 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.148453209 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180024692 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18246832 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159160134 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169066614 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151278885 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245225328 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143323246 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.1273625 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152165555 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.123762163 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.220404377 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201867644 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134577459 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232327882 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173314935 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201722842 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170604523 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13843245 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181731823 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133107199 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.096160455 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225047601 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169322153 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164881949 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.199226748 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224662981 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.195660198 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.187054993 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170691912 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178552126 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.170036953 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158337802 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.142356678 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16584901 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162571031 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.098712368 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.14475412 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.138065814 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152954715 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145775566 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109251147 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227087602 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176098232 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19528711 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163203074 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153199911 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186279349 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.133201648 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176846723 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.180651023 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149969904 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.226728471 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198176159 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193798332 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148156631 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232999828 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.096181862 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127824913 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.146165924 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173028619 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109822365 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139441162 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167023923 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186391092 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179722814 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201836349 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213105562 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190408163 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22471925 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.098760628 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.17226717 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182774064 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180978201 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.183379588 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144686439 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.153927439 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181991326 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150767512 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216306097 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16998702 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178690967 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233804286 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.15309378 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106843768 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153820274 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176341959 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157472492 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176365223 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149984548 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141681752 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157623149 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.106186142 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191442698 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184558773 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166476119 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184672133 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.155077273 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193131916 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130986754 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166470761 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164503673 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165672646 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082897664 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198829411 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199131449 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146283021 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164298156 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186356897 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134516672 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.313126025 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204997 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22029175 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113551984 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158793418 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165302088 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167000284 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168826395 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182588428 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163375297 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219470455 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135705685 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138930161 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140063819 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15143896 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127811996 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.136505237 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.151005482 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.180524934 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.141916969 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187224193 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151276951 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162536811 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174896661 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.153414751 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.147111885 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125459617 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249030733 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187864116 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22302074 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.125752302 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.205945953 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209664801 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127754857 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108136851 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.136684453 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1830319 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13944288 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197537418 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.191602697 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230917317 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18659275 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175741421 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142737234 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.12226661 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160625574 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172187467 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208165776 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148797001 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.152248955 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200773854 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.140505071 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133686261 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17048029 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292419482 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148875508 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193120225 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.08127539 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.284976359 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12601163 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135892922 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165874233 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188750601 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.138858982 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.156283518 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169864982 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155388437 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166621111 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153216004 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.222287678 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218558507 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204549363 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214925032 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.108336134 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161258795 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171715058 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218149151 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160292109 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.11332271 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189075581 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228551495 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.199482059 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.145831743 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172172917 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171996495 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161717178 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194292633 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138034949 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235906644 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110879857 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225290125 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157922849 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142253061 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177365137 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.192120349 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144692024 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185263849 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186873098 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13967149 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135684242 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164819054 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181678928 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151750671 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.101786402 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209822057 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.099570595 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228864661 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268843678 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108295198 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158829725 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149581817 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137805173 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159167775 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161750815 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113313526 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.169053621 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198911227 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.139053395 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18831949 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236137425 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175178085 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169929063 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149199138 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.754082437 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.134404229 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199362139 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150765663 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187494283 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152999552 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176260486 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163803509 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171125552 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199118934 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162031563 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.236175401 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223293524 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.184177213 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133863962 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162285289 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122880405 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.147480572 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156721362 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170935769 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163257338 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.149332418 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.182543153 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159172444 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.137283197 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115019725 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233172331 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151436351 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187574382 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184009199 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141294742 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177553941 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193470692 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136959085 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.194272346 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216689422 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116964339 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152541953 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.139923715 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.154856853 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270154767 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.100466255 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186679016 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219374636 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163377165 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172090739 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.15092657 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197871055 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161010647 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219691232 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118794695 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.1593462 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161109591 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142034275 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.134195905 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158530932 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170510061 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.125139192 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192202942 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.14119828 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19675036 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.12762363 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148222305 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294004929 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177301301 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248086061 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.109932601 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139772005 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163343149 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150767298 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.181186006 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183999913 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.138826935 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137669574 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.110391219 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.158632622 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.114673263 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159917803 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195228465 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16318314 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237173164 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.111313435 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.283586058 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144500198 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157474605 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089694741 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.135797024 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155436068 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149467784 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153490017 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196772133 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272046797 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.150061981 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.108989328 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153062142 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.129599322 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137512348 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138424881 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164588718 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212422194 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144321436 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.084328652 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159138412 seconds)
  done (took 84.05560959 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173383528 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.136921602 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.15177795 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.204779442 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17932832 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.294484991 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211752764 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.257973553 seconds)
  done (took 2.695887717 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.095694827 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.154314948 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.15926305 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.13587017 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.095099398 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.121981898 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.372029945 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.136019457 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.119136596 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.124990532 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174796889 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.096253803 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.589548545 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.092601175 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.122943568 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.110517425 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.094854579 seconds)
  done (took 3.876071829 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.204616441 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.480611451 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.992222798 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.198339851 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.180418656 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.121764034 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.692578022 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.119476023 seconds)
  done (took 12.079774161 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.126340748 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.147475329 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.137556677 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.165269157 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.152031064 seconds)
  done (took 1.825928426 seconds)
done (took 126.094825292 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.099445456 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.13018641 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100007863 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132786215 seconds)
  done (took 1.543554405 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.098956734 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.072269452 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103008792 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076166131 seconds)
  done (took 1.440766141 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.195610921 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.171192718 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.395049045 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073554425 seconds)
  done (took 1.593513656 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.117385584 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.136006899 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.107206111 seconds)
  done (took 1.462026698 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.108523765 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131482447 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105142729 seconds)
  done (took 1.441270562 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.108648934 seconds)
  done (took 1.205337983 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.112541111 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.143093787 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.11477672 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.142053219 seconds)
  done (took 1.608996994 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.100201829 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129532895 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.114033758 seconds)
  done (took 1.439102236 seconds)
done (took 13.194640755 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.108216952 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.431687902 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.419207593 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111561496 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.732425467 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.383823834 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.086452314 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14835873 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171490129 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096034536 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141146872 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676025299 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.045898712 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.381516924 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.998367044 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.378313992 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.706763317 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095333695 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122674551 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096382933 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.074675822 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093732437 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12404519 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094379312 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.707055679 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.429434543 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096928063 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.374408046 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094333176 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132012022 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381768163 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124919627 seconds)
  done (took 17.145994847 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.100904297 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183622377 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134366841 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.097202779 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.129526376 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096263454 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126624603 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095717987 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.185403068 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126440619 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112206996 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123115349 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128828308 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096256103 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14502781 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094715041 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.12787188 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09522359 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123069042 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.1241385 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113348962 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122632618 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095913396 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123490603 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09485714 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137871747 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124937751 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.095236733 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.124557024 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.104073012 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127168263 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096812472 seconds)
  done (took 4.908669589 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14638312 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.193515462 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135240195 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128924148 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.177063939 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126114777 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.201784754 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148665896 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.189541547 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096900098 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14305027 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094681059 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.159381621 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124615461 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117267208 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123179971 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09700083 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123381313 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122138166 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097016481 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.142383041 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094658025 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125303266 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094293869 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124638977 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.1386543 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096631451 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123287003 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094803671 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132392496 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098183676 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12577076 seconds)
  done (took 5.241654728 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.099851513 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128166849 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.112241153 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.142534313 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096400607 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127118302 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.100405713 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126602249 seconds)
  done (took 2.038546022 seconds)
done (took 30.436305593 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113046707 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128737759 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.108465147 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136357897 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.104739456 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.136614391 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.09375386 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.136104336 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135697386 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.104435882 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.141152501 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093281565 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.12596621 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093561571 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13732758 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.099187172 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.136984094 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.132672366 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.109886255 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.137372053 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095929987 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.135654281 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104182678 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.138487219 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.137145019 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.109869287 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.141067065 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.102120338 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124837046 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.09638797 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.129442896 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.107056661 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.126798293 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.138530191 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.101248579 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.128137297 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.09674148 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.129168437 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.108560829 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.136795269 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.101454134 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.13581152 seconds)
  done (took 6.125939947 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.113047083 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.144987879 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.10922125 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082130696 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118592642 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082443407 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.142320893 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080454629 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.112776415 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.111954808 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.104819091 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079063303 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079445662 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.103216836 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079413764 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.077146571 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.110042207 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076959044 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077414869 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107655049 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081080825 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.102920585 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081736705 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079603869 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.105277241 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.083251359 seconds)
  done (took 3.639387412 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.101849772 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.143231464 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115817456 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.177865842 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.159404773 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.102169934 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.137252069 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.141491828 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111501291 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.12325598 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.098435315 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.152905771 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111548318 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131533137 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.126026852 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.110763037 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138026591 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.097120678 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.134137035 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.115174999 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.140415443 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.133223648 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.113543204 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.135388094 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.094524645 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125796729 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.100955238 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.14572414 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.131016004 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.105323064 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.13003453 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.09823256 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.126785261 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106514543 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.129870105 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.125880778 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.115320762 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.137599828 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.104610365 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.125760916 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101815823 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.127303717 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.145292358 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.135102441 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.124516236 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.102284378 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127777967 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133595799 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.097265012 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.142520158 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105273908 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.1244556 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.09803576 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.124911763 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.09575045 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140484473 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.095844096 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.133271131 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132644603 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.101219068 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.136124183 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.099604344 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140946133 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.095903844 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.132399111 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.096741296 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.125133164 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12281891 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.11737915 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130081588 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164856442 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.097292489 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125810278 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.106005278 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.132907909 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.102206558 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.125415264 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111725016 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.134847656 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.127322212 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.105955275 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126528193 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.098224494 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.143428588 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.098296946 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.126191747 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.097155169 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.131559979 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.096588518 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.126300638 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138422261 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.094404231 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126930067 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109290711 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.124590433 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.095890571 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.131558283 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.128450682 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.094488731 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137703657 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.101413023 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.125413412 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.105438761 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.125459745 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.098149119 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.135840046 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.129087141 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.094972938 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.130023572 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102065596 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125086364 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.099118178 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.128593583 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.096550183 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.135772178 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130682251 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.101310379 seconds)
  done (took 15.186439041 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.234156861 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.221182179 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.191622786 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.303809997 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136408626 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.119378112 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.216935253 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.161376593 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124969055 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.164059602 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.174099415 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.187482362 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.144787303 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.18634735 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.173835766 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.126241288 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.14541554 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.14045396 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.251892352 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.266641123 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.146109669 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.103190732 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.165713952 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.164394697 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.139374112 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.134640445 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.112432331 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.138562818 seconds)
  done (took 5.905741421 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.112392089 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157923897 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.101007212 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.147608217 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.153854696 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.095287716 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.130839915 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.12668644 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109403314 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138962057 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.095331001 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.13154982 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.13179107 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105061235 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124980428 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.105540986 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.135437081 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.097134207 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.129614064 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098531294 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.135175046 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.133988527 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.10002005 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.123577704 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104424975 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.124586077 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.088532109 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.146311599 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.125493567 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.11782771 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.123821555 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.103484317 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.138478144 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.125405942 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.094837644 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.12751879 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.097951257 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.126485799 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.097132465 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.123814114 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094308495 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.108659211 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.094928115 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.140765828 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101842872 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.112318711 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.102974418 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.131687815 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096092591 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.123640823 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098053892 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12833403 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.128367239 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.103936656 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127787707 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.09704301 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.128430428 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.087811924 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.131082986 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.097963135 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115742738 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094756837 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.130488303 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.090436327 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.133991816 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.100284363 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.124178727 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.097371381 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.129662922 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101929697 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.128298583 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.101191683 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.123506176 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.12749045 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.098588391 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129770145 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.099318387 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123117149 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.096367363 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.125815401 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076972772 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124357823 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.07642309 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.098722343 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.123179197 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123695169 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.097854834 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.13047376 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.113143551 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.127831908 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133317557 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096744801 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.12381178 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.098947437 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113866837 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.099085547 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.141215458 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.11473896 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125517539 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.12278495 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.11086424 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127066824 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.09479108 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107358118 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.104645561 seconds)
  done (took 13.234681015 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132266114 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.156602157 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.127461971 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.114474495 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.159647271 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.159740751 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103416942 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.133528493 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.097795969 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.144701268 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.096608398 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.136269531 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096198213 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.140492973 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.159149107 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.106060067 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.128729606 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.110929939 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.131420941 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.1727192 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.113889256 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.144784763 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143512581 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.09677651 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.131857175 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.112623562 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.1637725 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.14034603 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.10966101 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.145633235 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.11025374 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163155428 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.146170516 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099415243 seconds)
  done (took 5.575626742 seconds)
done (took 50.775384402 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.211988419 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.428303067 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.202057236 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.081047299 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.250079585 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.209306334 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.215411061 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.201518105 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.817374478 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.205474483 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.457732678 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.777737639 seconds)
done (took 60.188441815 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.303562006 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.35905951 seconds)
    (2/2) benchmarking "String"...
    done (took 1.491768613 seconds)
  done (took 3.97871164 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.802415479 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.144843164 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.460819195 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.202043286 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.20296079 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.498322288 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.899916017 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.586520327 seconds)
  done (took 28.12284993 seconds)
done (took 42.339569553 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.201478266 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.255788211 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.233831045 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.178410345 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.309502504 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.235429294 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.571177785 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.20239999 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.218539289 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.185039701 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.218633631 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.197272368 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.205374867 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.538492647 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.20483234 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.197914237 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.232004416 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.700888159 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.594159762 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.201967214 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.229928352 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.233402316 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.214728316 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.214230432 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.229748053 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.212903307 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.198614241 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.205034094 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.62271095 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.202697646 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.20367192 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.735661376 seconds)
  done (took 190.512581687 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.199311916 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.291633575 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.383001634 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.23803416 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.699120307 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.403363316 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.340912413 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.759593929 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.22241421 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.210446292 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.502063516 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.199711333 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.571420309 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.173735895 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.231356148 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.229615786 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.397317701 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.549790474 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.235240936 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.323948357 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.227526252 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.418716057 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.32579375 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.438610686 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.219340338 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.287389522 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.223207171 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.222137383 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.407973723 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.334946541 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.248649503 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.239675666 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.80035774 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.051744999 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.21878647 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.209308064 seconds)
  done (took 150.162037061 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.197306345 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.198740722 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.1987008 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.228896673 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.198912107 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.745685582 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.739659094 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.707505128 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.667650311 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.508960657 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.463546688 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.202791818 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.197595746 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.291635764 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.210023284 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.199149559 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.213418181 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.243943713 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.199836028 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.198652654 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.733138671 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.211984751 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.324032839 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.373942315 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.214069679 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.229545303 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.586836416 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.20103253 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230460172 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.527265202 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.246584552 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.199422631 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.198969554 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.568759923 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.968286177 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.198228654 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309701561 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.200821578 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228856741 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.198774362 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.476223585 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.199146586 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.199024811 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.201574655 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.850052041 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.203983753 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.726275812 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.198706833 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.136589102 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.20414512 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.199372339 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.471398706 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.81579462 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.215957308 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.196476554 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.198428531 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.196587037 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.196681143 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.226351172 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.409484649 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.293704967 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.212952526 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.200082355 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.22665818 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.196671057 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.260427372 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.20186413 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.408663781 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.275599919 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.413965877 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.721235753 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.202547584 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.294914331 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.315539015 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.198322749 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.197434537 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.197509637 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.198745728 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.197661684 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.305315432 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.198355085 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.572267662 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.366660278 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.214316562 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.44923094 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.297173721 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.198719994 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.549928498 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.20365017 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.198391342 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.907436464 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.293468957 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.19899831 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.19806469 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.198540336 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.572363874 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.719237844 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.419097095 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.205375129 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.449324538 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.19970495 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.591961904 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.710800217 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.835957046 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.205249867 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.309701621 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.368324404 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.215754905 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.200008279 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.433129331 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.205415945 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.255603435 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.200228095 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.595043235 seconds)
  done (took 364.671851335 seconds)
done (took 706.477431032 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.798371343 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.790200809 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.891222737 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.781323988 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.748664733 seconds)
  done (took 10.134006176 seconds)
done (took 11.261272703 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.377198126 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.375748665 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.255897596 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.378475273 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.231445127 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.394615012 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.357453877 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.221316554 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.297267197 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.276794174 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.297708765 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.2504174 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.232942666 seconds)
  done (took 18.072380917 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.51039351 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.52408987 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264501398 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.524406355 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240728392 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.515348952 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.398089054 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.412924229 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.436603681 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.233128301 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215225294 seconds)
  done (took 16.402452426 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.512274126 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.5159684 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268264699 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.510941305 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.243820247 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.5242806 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.408316754 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.414972986 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.418990281 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.234349142 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215073104 seconds)
  done (took 16.392301417 seconds)
done (took 51.99471818 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.210774387 seconds)
  done (took 2.336845177 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.247402631 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.405483521 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.226784672 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.217293477 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.211785 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.216762236 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.218085296 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.212166558 seconds)
  done (took 11.083366292 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.211767814 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.212612008 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.212089206 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.207990972 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.207508673 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.211039656 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.208185024 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.209271693 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.211514944 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.209005549 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.209869213 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.212083382 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.211855897 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.211508534 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.209854912 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.209161501 seconds)
  done (took 20.493862133 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.212072082 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.210525746 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.208430657 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.210612951 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.209183043 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.210973507 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.210182181 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.208698195 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.209659589 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.209285121 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.210779228 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.209819932 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.210607244 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.209421665 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.210367858 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.211076281 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.209998854 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.210810263 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.215253275 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.210247144 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.210847548 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.21028777 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.211480352 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.210730577 seconds)
  done (took 30.18193559 seconds)
done (took 65.22454606 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.800174253 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.733196001 seconds)
  done (took 6.662368577 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.27057685 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.27555425 seconds)
  done (took 3.676357161 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.213507648 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.212969937 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.213789363 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.21395811 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.213046566 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.21275155 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.213708652 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.214275113 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.211840881 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.213401505 seconds)
  done (took 13.262984835 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.213862211 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.213622586 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.210904649 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.214255564 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.213832015 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.211920522 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.214876337 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.21440115 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.214238417 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.211782535 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.215258169 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.212695108 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.215082478 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.212820567 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.214884345 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.213117845 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.213152515 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.213113268 seconds)
  done (took 22.97566004 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.215187815 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.236519514 seconds)
  done (took 3.583452066 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.342586641 seconds)
    (2/7) benchmarking "second"...
    done (took 1.255594919 seconds)
    (3/7) benchmarking "month"...
    done (took 1.322434186 seconds)
    (4/7) benchmarking "year"...
    done (took 1.310796364 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.25459847 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.233428481 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.254578046 seconds)
  done (took 10.10503132 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.217103252 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.396056225 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.499347169 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.776391982 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.216765474 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.219154284 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.08279806 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.220540023 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.222684124 seconds)
  done (took 13.982818681 seconds)
done (took 75.380052097 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.207585131 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.224612294 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.444626219 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.224714698 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.225615366 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.508135855 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.259023681 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.33503864 seconds)
done (took 37.564373663 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.221801237 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.188341012 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.912666003 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.222678289 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.244590709 seconds)
  done (took 18.701159219 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.198460822 seconds)
    (2/2) benchmarking "read"...
    done (took 1.56023277 seconds)
  done (took 4.89135804 seconds)
done (took 30.949894879 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217046203 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.218135868 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.214607539 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.21514575 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.217163782 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.215692422 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.215812134 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.218127029 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.217133599 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.21815882 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.217469789 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.217710989 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.217734334 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218004211 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214790805 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21550733 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218099899 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.214476546 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215017886 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214276776 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218235641 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.21557973 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.215418571 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.215078368 seconds)
  done (took 30.328448222 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.218710533 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.21681445 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.216878784 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.220234529 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.216049691 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.218678396 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.218949407 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.215980583 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.217856806 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.219709122 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217312077 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.216016312 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.218697353 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.217419358 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218706678 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.216344199 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.219393774 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216914708 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218731705 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.217217639 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.218237762 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216900509 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.216697452 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218765635 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.217151936 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217034586 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.219574213 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.21771837 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220088684 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.217444954 seconds)
  done (took 37.672644868 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.225183449 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.227075823 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.21932967 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.21965101 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.220514084 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.219586646 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.219536133 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.220229276 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.22108903 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.21993759 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.219807312 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.220746015 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.219557707 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.220504579 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.220415471 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.220285705 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.221039295 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.220613924 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.220957799 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.220645 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.221203617 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.221170698 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.221566416 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.220209878 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.221779606 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.221461236 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.221917754 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.221354338 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.221656079 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.22211142 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.222068957 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.221150568 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.221451289 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.222437876 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.222004942 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.222383524 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.226446034 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.229229622 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.22274667 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.222605618 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.222364229 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.222221733 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.22230345 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.224392962 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.222881774 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.222859515 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.223527411 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.222217368 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.223438617 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.223384111 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.222348293 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.223224151 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.223285932 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.222756044 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.223271432 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.222667818 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.225313125 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.223368682 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.22298552 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.22311509 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.223397537 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.223602714 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.223774977 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.223970318 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.224408399 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.223380422 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.223773035 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.223882645 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.223716086 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.223440169 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.223846195 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.223110321 seconds)
  done (took 89.147554067 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.223956992 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.221820227 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.221177208 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.222638705 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224369147 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.224461164 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.221677757 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224076676 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221010337 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.224949764 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22566535 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.222914856 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222109437 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.225562434 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225281438 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.223681508 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.226069842 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.222503534 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.226520996 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.226704428 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.225832144 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.222559613 seconds)
  done (took 28.065188238 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225596735 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.228162826 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.222334274 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.226742452 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.224401787 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.226812425 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.226034906 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.227562907 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225665871 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223826646 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224256098 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226309858 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.224978044 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22310799 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223249979 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.225317951 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226938751 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.22538883 seconds)
  done (took 23.197768021 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.225038519 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.224888291 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.226418263 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.223716333 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.22504919 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.227138942 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224312553 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.227783812 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.227489613 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.225433243 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.228256155 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227547225 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.228524448 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224810195 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227450941 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.225180609 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.228025033 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225458819 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22864157 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.225385433 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.226321948 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228055625 seconds)
  done (took 28.122845027 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228665908 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.227401142 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.226701082 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.225632432 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.227326363 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.228302594 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.228708787 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.226582375 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.229479025 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.228470784 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226038623 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.228549976 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.227381523 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.228150023 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.225810375 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226864776 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.230141854 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.228601849 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22966351 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.22682494 seconds)
  done (took 25.698832971 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.230142546 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.231040586 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.231853285 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23183081 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.231205378 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.231407284 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.229982792 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.23056704 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.232258827 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.232264147 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.231867545 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.230670765 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.232406392 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.231359152 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.232676498 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.23196448 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.230524777 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.233436663 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.231715333 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.231293329 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.232786107 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.232448656 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.232731621 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.231612784 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.231446712 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.232097262 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.232112188 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.232277704 seconds)
  done (took 35.6335168 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232606824 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.231972948 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.229836237 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.229704788 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.230943989 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.229299601 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.23003633 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.23126602 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.232400765 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.232514763 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.232768264 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.234023335 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.232197783 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.232847174 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.232289805 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.233228003 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233264084 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.230959059 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229468177 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230462066 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.233863843 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233333957 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.233000573 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.231127767 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23022082 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.233641231 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229775142 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.231481005 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233647384 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.230898951 seconds)
  done (took 38.101084152 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.252348351 seconds)
    (2/2) benchmarking "in"...
    done (took 1.254123129 seconds)
  done (took 3.654736737 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.23167739 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234134055 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.233228008 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.231412024 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.231523244 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.23387806 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.235286349 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.23215272 seconds)
  done (took 11.012342063 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.235334291 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.23545063 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.234669688 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.236278847 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.236997534 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.234696471 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242599296 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.254969518 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.235414686 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.236423934 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.242639394 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.243839479 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.237968609 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.235629162 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.235159792 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.237873611 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.235988231 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.236288013 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.236700806 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.236673509 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.236302671 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.238711153 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.238818613 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.234301409 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.237496365 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.247243188 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.258185083 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.236786561 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.237538852 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.240589168 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.236401468 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.23427877 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.23770002 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.237966892 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.237812283 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.237510539 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.247214461 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257941091 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.243624709 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256400592 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238773084 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.235842288 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.238041799 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.239877603 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239799019 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.238035982 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.239671959 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.23486721 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.237682173 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.240775862 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.24383217 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.237261881 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.236225681 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.240752733 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.238883669 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245476347 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.256428178 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.243043759 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.247201907 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.249813759 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.270927199 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.262503848 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.240883841 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.239689317 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24964414 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.265959815 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247555821 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.255013376 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.235930953 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.240264785 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.247527756 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.270788204 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.263122145 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.240586592 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.239671115 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.241440686 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240273694 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240720305 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247304729 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.260865303 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.24115187 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241447713 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249717718 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264230732 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.240213534 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.24070035 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.240829473 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.240693564 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.243202478 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251643701 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.25906718 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.242197635 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.240883957 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.241515524 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.242871646 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.242073616 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.2417716 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242070548 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.239785952 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.241531289 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242471973 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.245549977 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.250837267 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.242133222 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243295414 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.249567437 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.260878108 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242405189 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.248541731 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.241535715 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.242526138 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.243397103 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.248627856 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.240622919 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245290838 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.250710045 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.243719202 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.243417107 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.243874926 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.245013173 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25191429 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.271383989 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.24357631 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.243223554 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.249795438 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.254140503 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244690962 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.24696995 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.244983869 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.240809787 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.242270027 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.24458409 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.243290015 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.245094522 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.244285697 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245249902 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.239921524 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.243704194 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.244020833 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.245131027 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.245287134 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.245196373 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.246140593 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.24775061 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.245082887 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.245672621 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.250171677 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.263372788 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.246288975 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.245038381 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.242208203 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.246131557 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.245630153 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.243982243 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.24445927 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24426555 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.244692662 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.2453649 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.24648827 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.245666467 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245093843 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.245268337 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249311078 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.245998832 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.249201063 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.245407504 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.243051197 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.245732106 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.246551689 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.244858419 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.245738337 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.243702647 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.248561332 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.253838638 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.246776057 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.248496265 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.24821889 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.247917458 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246913916 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24752943 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.249949559 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.254196082 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.24685654 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.254152201 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.264961092 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247053294 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.248333966 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.247112326 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.245767315 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247324301 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.2509504 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.255312781 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260875852 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.270469387 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.248255312 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.251738058 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.248075112 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.25123201 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.251213174 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.247625939 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.248625245 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.24870556 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24746443 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249200091 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.250309854 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.248972652 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.247448427 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.249366328 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.247300306 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.249079179 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.24972198 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.248471554 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.249708529 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.24610303 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250285967 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.250011723 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.250404583 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.246725598 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.248227744 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.249037954 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.248608456 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.250579752 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.255737787 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.247628462 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.250737747 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251913789 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.249668627 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.248886955 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.250164984 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.2515672 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.248931466 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257211629 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.267652512 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.251269297 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.25700975 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.268063242 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.249570161 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.253146302 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.25069457 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.248205328 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.253088647 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.25930146 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.25063566 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.250972974 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.251505258 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251445998 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251367271 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.257702046 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.267527505 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.250853177 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.250602259 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.252754879 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.248861923 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.252890328 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.252602969 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.251424967 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253179667 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.252111462 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.252524362 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252160515 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.251948025 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.251938725 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.2523932 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255053678 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.259353272 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.258036675 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.251353218 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.253795572 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.253187807 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.256450557 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.252924948 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.25296703 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.253074044 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266382939 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.276552608 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.260012128 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.271588957 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.252585078 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259397562 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.272220883 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.255826324 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252559459 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.253976819 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.253725927 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.252995857 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.251293405 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.25363815 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.254294487 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.254773811 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.25566525 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.257870158 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.254317323 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.254337188 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.253667873 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.256008321 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.255167941 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.254000296 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.255402197 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.257121044 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.256295267 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.253538638 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.254050848 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.262740527 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273213962 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.256237638 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.255881149 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.255306071 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.254219497 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.255981028 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.255444032 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.257918856 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.263040991 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.257890399 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.263511877 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.256987458 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.264469344 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.256048429 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.258201605 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.263585794 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.254398044 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.254855584 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.255232714 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.256493527 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262910348 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.275238167 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.257483453 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.261917933 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.254384154 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.258384358 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.257378696 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.256995083 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.256684167 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.256774527 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.266044451 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.276539294 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.260757957 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.259034731 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.253863372 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.256031753 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.257154291 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.256482516 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.259727876 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.257740568 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.258096359 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.257807023 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.257474464 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.258472081 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.258947409 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.258898445 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.256582006 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.258467111 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.264177317 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.278110833 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263320137 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.259176971 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.266464222 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.277861124 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.26596072 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.277413896 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.259181808 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.258842512 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.260722202 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.260261268 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.257957544 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.260218639 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.25978697 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.26016845 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.26278355 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.260964101 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.261348784 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.261791284 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.26069725 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.259420644 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270415319 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.286299514 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.262128093 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.265773724 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.258085615 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.261473248 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.264524282 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.260827236 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.259017526 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.263949826 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.271169014 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.269084337 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.259803137 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.260618652 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.262107608 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.26103082 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.260328627 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.261977087 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.261283863 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.262100947 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.261493542 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.262175811 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262846277 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.262690134 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.261048316 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.263610753 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.262083163 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.271468277 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.280394345 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.262150527 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.261793524 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.263095746 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.260963509 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.262548656 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.261219682 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261874781 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261660862 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.262324004 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26856335 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.267724643 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.265119734 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.261757631 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.262928542 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.262004725 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.262402656 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.263851106 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.262549155 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263239266 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.262431814 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.26351722 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.265045658 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.262264603 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.264485699 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.262484834 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261584198 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.266442075 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.270978838 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263782365 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.260984857 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.263828663 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.264190345 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.262157825 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.26344558 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.271572839 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.284912937 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.275133438 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.272191258 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.267516991 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.263416708 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.268112827 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.271513696 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.263964053 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.263947065 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.26442123 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.264670892 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.265405132 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.267845899 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266197485 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.270808547 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.283282537 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.263362373 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.275201309 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.285941473 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.266218696 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.267511315 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.269888316 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.264677657 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.26163987 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.267141386 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.265475842 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272486471 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.285217126 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.267466969 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.266427738 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.266137863 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.267061216 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.270391714 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26711354 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.267693549 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.263574429 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.268537481 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.266334535 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.26803129 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.264882768 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.265888103 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.26645444 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.270187373 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.273357998 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.264462273 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268477042 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.26611964 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.267158002 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267375908 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267666215 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.265127205 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.265478164 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.266189033 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.267813475 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.267861437 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.270388838 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.266801053 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.270020996 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.269615082 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267995502 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.271752137 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.280132464 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.27520088 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.264288305 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.267724907 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.268717851 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.271612599 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268265714 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.271212654 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.270465266 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.269636912 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.268674882 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.269524503 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.268562885 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.271587173 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285617106 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.290777992 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.26984208 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.269875435 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.273222481 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.270767529 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.27070716 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.26947711 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.271448323 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.273105641 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.278091289 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.270503314 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275587075 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.289366993 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.270386481 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.274128717 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.272413024 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.279364201 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.272463754 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.270978766 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.270209503 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.274056822 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.286480821 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.271542232 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.28086986 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.301546864 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.288770439 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.274089214 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.271625676 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271358001 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.270479994 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.274179768 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.272592684 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.272360481 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.273069013 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.271909429 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.274544717 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.277764177 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.27328566 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.273414029 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.272601088 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.271887978 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.272077702 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.269857511 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.272586506 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.272378573 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.272118984 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.27230068 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.272065635 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.27229227 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285043844 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.298298539 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.274309659 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.274875102 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.271479912 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.276130588 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.27617639 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.283220767 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.280400164 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.273686232 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.275141854 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.275060537 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.272926923 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.272231325 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.273862125 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.272008451 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.273872504 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.272326443 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.290476565 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.300696528 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.277613578 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.272573445 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.274282972 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.27443363 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276349596 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.275283656 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.271434263 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.272655828 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.276674205 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278145291 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.274511663 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.273771488 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.279744847 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.281600926 seconds)
  done (took 750.82477851 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.272774098 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2711457 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273578909 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.270900567 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272038665 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272557989 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273149638 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.27308479 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.274132281 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.272369582 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.27319306 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272735816 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.273240452 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.274976186 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273658797 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.273332245 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277156652 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.273871692 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.273216176 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273563011 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.273404736 seconds)
  done (took 27.927053735 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.276938047 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.273973798 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.274464598 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.276729685 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.274918362 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.278848584 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.274065082 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277290272 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.277806127 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274981302 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.275667638 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278680012 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.274293839 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.274348849 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27616003 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.27828255 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.279649472 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.275220984 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.277472087 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.275530108 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.277428517 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.275811921 seconds)
  done (took 29.269138906 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.280429053 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.27729475 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.277071303 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.274985297 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.278496204 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.275074267 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.279622564 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.277958488 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.278680506 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.280667027 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.278940238 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.278000754 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.286179595 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.28522629 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.280648766 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.281618765 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.422439225 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.279992204 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.280084765 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.278012832 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.274933681 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.285451067 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.295951294 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.277504904 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.278216181 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.279879728 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.281353604 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.279852973 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.279341416 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.278867547 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.283411325 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.279099081 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.278649633 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.281564445 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.280981814 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.280702323 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.283994255 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.280164531 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.27719396 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.279971687 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.288815404 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.304389723 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.28029352 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.283901106 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.299427586 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.280072085 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.282844266 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.288631589 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.279282189 seconds)
  done (took 64.126744096 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.280411579 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.282338328 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.278294005 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.280490636 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.280273774 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.280205408 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.283340476 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.28191701 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.280150311 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.280734684 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.281484699 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.280268789 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.278282772 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.283177073 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.286109941 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.282739009 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.280715931 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.279503612 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.278951046 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.278313199 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.27975635 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.283375063 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.283830783 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.280159944 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.283489531 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.279305874 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.280358998 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.283041182 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.27853438 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.281585088 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.282752624 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.282119223 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.284510162 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.280157918 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.282027873 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.283554479 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.281399923 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.281774878 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.282568522 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.281159453 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.284335167 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.284644647 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.283126481 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.286650653 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.282427015 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.282277299 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.281712794 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.280922931 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.283881076 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.28534483 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.284109742 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.283952634 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.285793668 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.282605056 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.286670602 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.286331247 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.282295886 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.280587327 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.284191609 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.284548943 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.279416847 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.285408285 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.284336719 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.286830812 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.285704405 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.282211438 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.283159239 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.285418186 seconds)
  done (took 88.396394516 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.28476691 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.286088653 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283169434 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28459459 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.286099189 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.28372549 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.284436249 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.28712364 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.285490015 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.286469667 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.287089644 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.287267385 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.286468075 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.285667876 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.28756342 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.287012019 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.284350349 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.287111771 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.286341131 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286258698 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.286017156 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.286318963 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.287646993 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.286674588 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.28605815 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.28693184 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.286482531 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.286172542 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28657045 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.286477001 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.287602379 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.286700624 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.286091518 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.285779359 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.287757334 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.285786375 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.28624586 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.286437327 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.286882452 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.286302886 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.287009556 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.287843051 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.287606421 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.28746788 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.288298114 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.28719302 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.288446199 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.288844703 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.287110384 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.288519701 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.288165769 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.288041838 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286567406 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.287706376 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.286888104 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.28762151 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28766053 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.286902896 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287105616 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.286847228 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.287223995 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.289512402 seconds)
  done (took 80.974251794 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288216275 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.288668446 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.287491792 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.286593084 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.287829807 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.28669463 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.287528111 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.28850641 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.292035646 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.290258097 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290743488 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.28725373 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288328259 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290996929 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.288212651 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289118414 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.288764533 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.287356202 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.290350749 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.28905116 seconds)
  done (took 26.969934316 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.286769406 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.289873524 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.287172201 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.286971427 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.289067079 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.289241773 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.290725773 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289976621 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288470794 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290977641 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.291569344 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.29174514 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28850264 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.287784056 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.291009539 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.289318908 seconds)
  done (took 21.829616271 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.287407489 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.29063773 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.29031752 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.290017997 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.287941058 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.289377422 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.291807031 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.289043439 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.289111813 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.290755558 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.291448345 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.292309565 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.291791274 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.290182537 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.2888606 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.292796219 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.288518644 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.290081185 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.29140382 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.291726736 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.291674508 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.289798828 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.292768659 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.293167118 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.290188343 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.290142018 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.293425685 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.290620235 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.291040265 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.29374267 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.28941498 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.290086599 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.290784372 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.290678569 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.293131926 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.289864355 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.292697543 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.293536312 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.293223377 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.29384817 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.291954133 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.292054449 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.292316124 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.295004868 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.293055595 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.29337396 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.291104179 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.292628069 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.292035224 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.291485567 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.293197536 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.293511477 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.294653505 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.294904178 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.294448794 seconds)
  done (took 72.237435082 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.295611902 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.295030697 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.292872329 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.296548013 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.294852003 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.292905407 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.294620998 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.29495352 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292721815 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.295437671 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.299275418 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.297100392 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294687498 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.297209201 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.293640974 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.296518946 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.29364038 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.293852701 seconds)
  done (took 24.514781389 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.297171733 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.294094894 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.294612457 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.293365316 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.293606745 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.294925159 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.292197639 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.294150103 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295239708 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.293460641 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292506473 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.29601423 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298208822 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.296322944 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.293839015 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293388427 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.296896154 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.296617136 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.295118853 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.293563959 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.298298027 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.297647225 seconds)
  done (took 29.696303311 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.294890392 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.295850843 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.295179464 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.311575479 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.316555851 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.319293469 seconds)
  done (took 9.040902061 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301420756 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297698253 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.29542099 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298665846 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297586857 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293710158 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293611352 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294932434 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297338258 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29392872 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29391336 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297609598 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296617315 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294674482 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298495036 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297301102 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295542146 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296047678 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296292321 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299834202 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296062439 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298497088 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298119154 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298804425 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295587774 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297605082 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298592647 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297613352 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296283675 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299514738 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299401184 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296441116 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299020263 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297339287 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300252062 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299233139 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297287595 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298967451 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300762347 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29877179 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.300171887 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299462779 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302687879 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298602508 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29956424 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297579115 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297697323 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299055352 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295514575 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300705293 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300971578 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298004649 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300196314 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300910251 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30083991 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301067395 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297479218 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29846722 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299902708 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297933946 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299690656 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301347535 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297627106 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299339576 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300900022 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298079022 seconds)
  done (took 86.909587334 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298089486 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298154574 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29828587 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301295569 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298583183 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298821489 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298808159 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299372548 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299990657 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298854919 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302379338 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299153661 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301487109 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29932847 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298961808 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299562415 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299764878 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299938683 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300051055 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304222905 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304156891 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301336964 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305765098 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299742156 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302606536 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301972198 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29895227 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301535942 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300041577 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300504683 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300911454 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299718337 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302300509 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.301513191 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306628463 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302849022 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30041288 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301071157 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303881693 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304353153 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300796711 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3042448 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300883366 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301532104 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302363668 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301324817 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302607804 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301345936 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303159354 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302933095 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301538244 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302479468 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303908049 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303543998 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301532764 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302753677 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300990176 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303406794 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302618404 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304820076 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302881584 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302660546 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305805031 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303358054 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304549645 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302547419 seconds)
  done (took 87.119092805 seconds)
done (took 1751.607055882 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.466083559 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.422046162 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.30278126 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.303115892 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.303775401 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.320106117 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.304543746 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.303446292 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.30484354 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.304263075 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.303510174 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.493393096 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.302773776 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.304507284 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.305076383 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.400270114 seconds)
  done (took 42.660885748 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.334001863 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.311415453 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.422094109 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.327962348 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.332472089 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.493166375 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.363864999 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.308141186 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.477263862 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.353971171 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.849430337 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.333519684 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.309244577 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.405137119 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.327877726 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.493976213 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.552109924 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.856234974 seconds)
  done (took 30.068816571 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.754001402 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.332648054 seconds)
  done (took 9.30279404 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.32844241 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.310157558 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.311864305 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.308185176 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.30229127 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.300923136 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.308579936 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.305359062 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.957967524 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.439190374 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.311087298 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.321658665 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.329930954 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.309776219 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.308292147 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.348302151 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.464834952 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.309864671 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.307784191 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.315571207 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.310102262 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.431685587 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.351041239 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.307330959 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.434228153 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.961739363 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.317543234 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.319283188 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.462257809 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.309931719 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.311041931 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.310173225 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.312719981 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.222164038 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.763265287 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.303232954 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.335497305 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.320367818 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.308351688 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.501886843 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.311449352 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.317300381 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.313209261 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.741853317 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.450078022 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.425136866 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.584705357 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.334460916 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.315092082 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.372494526 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.312657953 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.3142288 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.356174536 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.123423969 seconds)
  done (took 110.595401837 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.305717214 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.703073745 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.472001563 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.326819145 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.965570536 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.966708592 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.328143985 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.596654568 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.357258067 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.305478327 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.603462918 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.814081853 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.32949487 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.324419952 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.967520081 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.310166166 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.306661481 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.069831712 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.322565105 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.304182888 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.807700194 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.324244914 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.311558488 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.509666572 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.344248329 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.758465766 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.724407085 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.764070286 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.32803911 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.305012165 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.775079018 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.32981976 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.374465387 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.308162215 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.566787634 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.66112023 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.656203793 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.326894581 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.311047548 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.311076308 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.317236336 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.755374573 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.662282257 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.324491537 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.323432355 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.774799965 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.322769344 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.314651229 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.310553643 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.508675516 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.181113062 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.307771649 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.691224131 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.312294287 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.665828158 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.374347946 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.384375847 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.788161752 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.325282417 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.414762066 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.355891426 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.309783519 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.316206645 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.312321057 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.3276713 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.653335406 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.722892266 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.312601848 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.649675911 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.786159442 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.330852545 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.849068052 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.120963951 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.323024744 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.372537217 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.312345238 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.884497386 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.815643997 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.348107969 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.308668641 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.655369347 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.331069511 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.590370139 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.325240442 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.312372789 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.839381965 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.323472106 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.345020469 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.313374864 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.318368868 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.963458179 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.322477088 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.576910198 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.368343745 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.311790091 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.311044436 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.361559234 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.311359457 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.310745841 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.317226078 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.839430898 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.33718212 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.452645632 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.333768264 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.315887457 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.317797218 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.313340924 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.311046321 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.526529375 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.859770429 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.33775333 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.310598056 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.311129225 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.336519588 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.572846615 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.317547141 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.625960708 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.336281925 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.312994865 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.33907199 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.943600134 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.372191059 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.311413757 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.322361075 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.182931783 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.525184985 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.330903273 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.330632874 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.312153647 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.335734687 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.565515499 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.332258656 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.338767992 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.317233135 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.01826468 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.363207235 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.324297075 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.852035973 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.32791657 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.20896075 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.331690625 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.314362042 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.603130685 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.57962293 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.625910347 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.316274455 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.336673848 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.998784984 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.348443825 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.451531039 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.33210476 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.353949194 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.511434637 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.516845179 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.322188928 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.954544216 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.315170356 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.526954734 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.319799236 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.627027402 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.808381859 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.33768683 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.323653257 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.020442574 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.048603119 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.991520643 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.318704942 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.58905049 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.286029584 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.789831149 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.31470543 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.314726481 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.780186713 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.318110782 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.319717512 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.315047677 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.3159395 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.402414238 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.487890384 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.92999641 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.318821314 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.781820749 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.370134172 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.31692756 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.324703782 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.319712983 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.664918739 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.394108538 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.321965351 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.363191679 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.319135748 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.321091778 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.806627004 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.149720057 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.324085495 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.468386693 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.949309254 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.339859873 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.319658019 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.940492942 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.621666064 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.843553521 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.378324503 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.640477478 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.345191264 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.355065335 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.898745334 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.367996767 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.804301027 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.34367216 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.318821183 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.915358987 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.339619867 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.419825359 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.319970275 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.31869097 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.8529314 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.339170362 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.323408974 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.5674806 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.338595024 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.5675702 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.318551386 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.342109501 seconds)
  done (took 1107.407305864 seconds)
done (took 1301.24960938 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.32016763 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.328535488 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.307983022 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.326746758 seconds)
  done (took 26.516979132 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.328169912 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.325474089 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.324731689 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.325323737 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.328351968 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.322146519 seconds)
  done (took 9.188252466 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.385031153 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.323982602 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.327646637 seconds)
  done (took 19.270045565 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.53668682 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.611235949 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.662400159 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.609148133 seconds)
  done (took 10.656033039 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.332545585 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.328784502 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.327721708 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.3292631 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.331024094 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.334102263 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.330200181 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.329228995 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.332545185 seconds)
  done (took 13.212893771 seconds)
done (took 80.080682351 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.331424629 seconds)
    (2/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.3246098 seconds)
    (3/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.322096062 seconds)
    (4/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.546208984 seconds)
    (5/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.981903959 seconds)
    (6/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.594919058 seconds)
    (7/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.300917097 seconds)
    (8/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.333457186 seconds)
    (9/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.16017982 seconds)
    (10/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.141121377 seconds)
    (11/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.355327475 seconds)
    (12/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.338449371 seconds)
    (13/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.572525413 seconds)
    (14/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.316871358 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.362695076 seconds)
    (16/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.301380829 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.34870373 seconds)
    (18/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.322526183 seconds)
    (19/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.354687634 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.695250757 seconds)
    (21/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.965695524 seconds)
    (22/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.301393719 seconds)
    (23/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.795503645 seconds)
    (24/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.182702838 seconds)
    (25/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.697052892 seconds)
    (26/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.706352388 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.014010304 seconds)
    (28/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.179587095 seconds)
    (29/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.371692982 seconds)
    (30/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.940525546 seconds)
    (31/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.357342804 seconds)
    (32/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.382139882 seconds)
    (33/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.549892803 seconds)
    (34/286) benchmarking ("sort", Int64, true)...
    done (took 6.324079564 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.434761842 seconds)
    (36/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.303441558 seconds)
    (37/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.75116796 seconds)
    (38/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.32027614 seconds)
    (39/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.44726829 seconds)
    (40/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.693833441 seconds)
    (41/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.349454702 seconds)
    (42/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.317864278 seconds)
    (43/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.3508712 seconds)
    (44/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.709986098 seconds)
    (45/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.333689405 seconds)
    (46/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.342589838 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.436449612 seconds)
    (48/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.99619189 seconds)
    (49/286) benchmarking ("sort", Float32, true)...
    done (took 6.323763444 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.586373697 seconds)
    (51/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.501902682 seconds)
    (52/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.450947034 seconds)
    (53/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.891679285 seconds)
    (54/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.303968379 seconds)
    (55/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.351489843 seconds)
    (56/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.151921915 seconds)
    (57/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.383450622 seconds)
    (58/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.56816083 seconds)
    (59/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.761642259 seconds)
    (60/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.811741571 seconds)
    (61/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.341074405 seconds)
    (62/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.105145358 seconds)
    (63/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.352343903 seconds)
    (64/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.389541215 seconds)
    (65/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.305399666 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.974451858 seconds)
    (67/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.29392721 seconds)
    (68/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.0954649 seconds)
    (69/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.467256599 seconds)
    (70/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.305197867 seconds)
    (71/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.628606386 seconds)
    (72/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.139318516 seconds)
    (73/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.304733459 seconds)
    (74/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.583382281 seconds)
    (75/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.342509878 seconds)
    (76/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.335336819 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 5.539980345 seconds)
    (78/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.826175458 seconds)
    (79/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.350505331 seconds)
    (80/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.35456115 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.91424615 seconds)
    (82/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.35303507 seconds)
    (83/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.354460581 seconds)
    (84/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.351901624 seconds)
    (85/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.533901988 seconds)
    (86/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.371137961 seconds)
    (87/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.394026638 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.961940161 seconds)
    (89/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.815674387 seconds)
    (90/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.438489389 seconds)
    (91/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.326472634 seconds)
    (92/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.728329186 seconds)
    (93/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.307514918 seconds)
    (94/286) benchmarking ("sort", BigInt, true)...
    done (took 6.346035228 seconds)
    (95/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.313522854 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.265316204 seconds)
    (97/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.881912582 seconds)
    (98/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.804495616 seconds)
    (99/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.822369824 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.196108978 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.53962021 seconds)
    (102/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.426126903 seconds)
    (103/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.347483334 seconds)
    (104/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.635859259 seconds)
    (105/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.354770333 seconds)
    (106/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.47674704 seconds)
    (107/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.313489479 seconds)
    (108/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.346099434 seconds)
    (109/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.434970812 seconds)
    (110/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.837414358 seconds)
    (111/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.874013445 seconds)
    (112/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.423250747 seconds)
    (113/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.346215033 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 1.845787082 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.368759447 seconds)
    (116/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.58812156 seconds)
    (117/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.321601885 seconds)
    (118/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.309124913 seconds)
    (119/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.470935728 seconds)
    (120/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.094945947 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.590681296 seconds)
    (122/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.335048599 seconds)
    (123/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.571754497 seconds)
    (124/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.438246801 seconds)
    (125/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.455427304 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.591087914 seconds)
    (127/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.97118871 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.100899768 seconds)
    (129/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.416722348 seconds)
    (130/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.357314799 seconds)
    (131/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.748231959 seconds)
    (132/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.339179783 seconds)
    (133/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.319846655 seconds)
    (134/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.628881456 seconds)
    (135/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.073388937 seconds)
    (136/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.347117958 seconds)
    (137/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.294206625 seconds)
    (138/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.762559753 seconds)
    (139/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.5466478 seconds)
    (140/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.360460459 seconds)
    (141/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.337910816 seconds)
    (142/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.306864733 seconds)
    (143/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.375077362 seconds)
    (144/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.316503229 seconds)
    (145/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.421179594 seconds)
    (146/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.447360115 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.748552722 seconds)
    (148/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.327269607 seconds)
    (149/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.337757499 seconds)
    (150/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.313230098 seconds)
    (151/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.553714981 seconds)
    (152/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.31437427 seconds)
    (153/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.088955488 seconds)
    (154/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.429566592 seconds)
    (155/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.37267691 seconds)
    (156/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.050066788 seconds)
    (157/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.328517846 seconds)
    (158/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.331452898 seconds)
    (159/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.370236589 seconds)
    (160/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.512973336 seconds)
    (161/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.174819222 seconds)
    (162/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.117019608 seconds)
    (163/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.360262253 seconds)
    (164/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.780314226 seconds)
    (165/286) benchmarking ("sort", Float64, false)...
    done (took 5.65171155 seconds)
    (166/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.338456411 seconds)
    (167/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.451981666 seconds)
    (168/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.325363704 seconds)
    (169/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.377963055 seconds)
    (170/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.433977538 seconds)
    (171/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.893026854 seconds)
    (172/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.39878969 seconds)
    (173/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.514054482 seconds)
    (174/286) benchmarking ("sort", Bool, true)...
    done (took 5.4726412 seconds)
    (175/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.408167377 seconds)
    (176/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.165114822 seconds)
    (177/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.823765753 seconds)
    (178/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.852545119 seconds)
    (179/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.816354653 seconds)
    (180/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.312842451 seconds)
    (181/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.459643046 seconds)
    (182/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.546248107 seconds)
    (183/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.328622465 seconds)
    (184/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.423690561 seconds)
    (185/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.335045947 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.946251677 seconds)
    (187/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.384902899 seconds)
    (188/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.315270866 seconds)
    (189/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.809189312 seconds)
    (190/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.981161082 seconds)
    (191/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.552781605 seconds)
    (192/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.785934855 seconds)
    (193/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.131252665 seconds)
    (194/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.427884074 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.286014127 seconds)
    (196/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.361207929 seconds)
    (197/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.151892036 seconds)
    (198/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.505614868 seconds)
    (199/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.357520143 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.256321897 seconds)
    (201/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.149291507 seconds)
    (202/286) benchmarking ("sort", Float32, false)...
    done (took 5.372945004 seconds)
    (203/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.385238603 seconds)
    (204/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.376767076 seconds)
    (205/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.315106865 seconds)
    (206/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.351065838 seconds)
    (207/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.346227415 seconds)
    (208/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.319010806 seconds)
    (209/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.617222675 seconds)
    (210/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.717968762 seconds)
    (211/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.862435135 seconds)
    (212/286) benchmarking ("sort", BigInt, false)...
    done (took 6.33592718 seconds)
    (213/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.134354771 seconds)
    (214/286) benchmarking ("sort", Float64, true)...
    done (took 6.340987664 seconds)
    (215/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.338921051 seconds)
    (216/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.343272321 seconds)
    (217/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.628060352 seconds)
    (218/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.843680667 seconds)
    (219/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.436725958 seconds)
    (220/286) benchmarking ("sort", Int8, true)...
    done (took 6.335125568 seconds)
    (221/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.399021259 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.700677041 seconds)
    (223/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.805595135 seconds)
    (224/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.355644193 seconds)
    (225/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.379385168 seconds)
    (226/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.442077726 seconds)
    (227/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.42171247 seconds)
    (228/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.351101689 seconds)
    (229/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.760165685 seconds)
    (230/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.350683563 seconds)
    (231/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.363194391 seconds)
    (232/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.911824427 seconds)
    (233/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.426308729 seconds)
    (234/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.730269837 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.55159408 seconds)
    (236/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.333663906 seconds)
    (237/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.530320049 seconds)
    (238/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.362125291 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.373595792 seconds)
    (240/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.4679294 seconds)
    (241/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.617345302 seconds)
    (242/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.186338541 seconds)
    (243/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.443983617 seconds)
    (244/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.318116727 seconds)
    (245/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.814276004 seconds)
    (246/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.434016657 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.71977585 seconds)
    (248/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.157908534 seconds)
    (249/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.337119167 seconds)
    (250/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.340892123 seconds)
    (251/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.400319388 seconds)
    (252/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.346225957 seconds)
    (253/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.054871879 seconds)
    (254/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.336272566 seconds)
    (255/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.359753833 seconds)
    (256/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.990690152 seconds)
    (257/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.430711353 seconds)
    (258/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.428832099 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.254817743 seconds)
    (260/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.186805245 seconds)
    (261/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.78709289 seconds)
    (262/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.331521186 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.422658595 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.42050135 seconds)
    (265/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.338275315 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.459593952 seconds)
    (267/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.204279503 seconds)
    (268/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.752455181 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.197564674 seconds)
    (270/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.474783277 seconds)
    (271/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.341512168 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.403603791 seconds)
    (273/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.369839808 seconds)
    (274/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.191167778 seconds)
    (275/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.371066785 seconds)
    (276/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.744304356 seconds)
    (277/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.301617162 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.340248839 seconds)
    (279/286) benchmarking ("sort", Int8, false)...
    done (took 4.405506096 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.366825925 seconds)
    (281/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.538576668 seconds)
    (282/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.42228577 seconds)
    (283/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.358926302 seconds)
    (284/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.386282522 seconds)
    (285/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.347944397 seconds)
    (286/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.499852748 seconds)
  done (took 940.836332459 seconds)
done (took 942.074764632 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.376850799 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.37047106 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.352009524 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.372374434 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.464429642 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.379182603 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.363144916 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.353676611 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.398675734 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.400413767 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.350820045 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.37560467 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.354039955 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.353398654 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.351789902 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.367108877 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.405051507 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.354382733 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.368274548 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.363462518 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.371658458 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.350601366 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.40180683 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.378642315 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.358268291 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.356064213 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.356957987 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.371958411 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.464158853 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.357392828 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.360364738 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.365394912 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.40501676 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.354810566 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.349250775 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.373306617 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.367456982 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.364150554 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.357359534 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.384828303 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.821398454 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.370503274 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.356365368 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.358593988 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.355312517 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.361879912 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.357706036 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.360527783 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.369909651 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372559395 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.809234979 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.386224635 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.361502065 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.35906734 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.367814931 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.357490134 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.360243464 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374035346 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.377384727 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.374455587 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.394497704 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.365475726 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.358102663 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.374080323 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.364853719 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.846266969 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.3715307 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.360803613 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.824093412 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.380622591 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.851281983 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.380819545 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.358629299 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.368406038 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.38840174 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.409657461 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.353532916 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.357678482 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.365243343 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.355243996 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.365349051 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.371104884 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.363512459 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.359126216 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372735944 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.380348648 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.368193377 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.36002703 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.369289806 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.379402008 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.365811948 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.369259244 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.364972339 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.355157324 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.371010827 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.361907673 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.361222839 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.362743183 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.364803596 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.369820995 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.822128124 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.396340933 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.356602583 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.355136989 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.360526298 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.373708953 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.825538592 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.377716853 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.382800134 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.405126295 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.360482039 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.407144516 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.36424436 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377901944 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.369918346 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.365710186 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.354367711 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.406116725 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.817322655 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.390955858 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.363206862 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.359008982 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.377539518 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.362617282 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.356415121 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.417162493 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.361374411 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376308073 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.483203098 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.371348748 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.391729463 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.360732964 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.363077077 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.385361499 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381884789 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.394969235 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.364697497 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.377044186 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.377255363 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.358701348 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.371928664 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.372381854 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.364853486 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.369100497 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.35657821 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.386453099 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377021347 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.375909304 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.383350717 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.485139053 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.359497141 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.406270728 seconds)
done (took 229.626542588 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.422726497 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.356999666 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.445514544 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.360483155 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.46034668 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.460722271 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.357210014 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.356461402 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.35524895 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.739500876 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.356868251 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.358206426 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.355287344 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.357355772 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.442425398 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.360337717 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.358953738 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.738347937 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.360138386 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.432855517 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.356714135 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.356305393 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.359046684 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.784991184 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.362927213 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.367458048 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.436680864 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.360638616 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.707260815 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.360834481 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.3571821 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.752580992 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.453011638 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.37874162 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.371278063 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.369022369 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.460854396 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.379040785 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.44436981 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.443890704 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.449367807 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.398595817 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.355785876 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.363909906 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.361569807 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.363511006 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.358471725 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.387664642 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.356412166 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.363101885 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.703013579 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.372578976 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.361312585 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.360214973 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.35998999 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.390846548 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.361419231 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.366428321 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.453553579 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.364869447 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.423909445 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.747017699 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.78644373 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.366287763 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.359787795 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.362595795 seconds)
  done (took 150.45950455 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.430118505 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.435778351 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.478498209 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.381030712 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.411116083 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.480173745 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.381798262 seconds)
  done (took 11.26602944 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.372162509 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.363601237 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.413468816 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.414680001 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.364688064 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.540726366 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.3684565 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.375213156 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.361897593 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.415976347 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.36419142 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.364861032 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.372628701 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.365529703 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.411008731 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.375154624 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.476689132 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.365288866 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.365028033 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.516997343 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.366651823 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.372088965 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.421150938 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.377035518 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.369019871 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.371077541 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.171828745 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.363173267 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.363152532 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.367177451 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.370068615 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.441011891 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.369226924 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.363823148 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.363029984 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.485297735 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.368071595 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.363665043 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.369910301 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.368256246 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.366281222 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.367520012 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.365669479 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.365689407 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.365941128 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.392096292 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.369002293 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.368377692 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.367058573 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.367799297 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.41581328 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.366543736 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.364759554 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.3684588 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.421548247 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.37388966 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.370864874 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.365567669 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.369637726 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.366426027 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.518978138 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.41625623 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.371080731 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.421860426 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.368093941 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.370247507 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.370193061 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.370850804 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.425484449 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.37056015 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.418533722 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.365698104 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.554552969 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.393513227 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.373185636 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.37072652 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.377065287 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.370849679 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.363576518 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.382341161 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.368150654 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.374281762 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.374968301 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.3732419 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.370096007 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.536886797 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.477130449 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.373501531 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.381412234 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.373400051 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.367900784 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.421827914 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.372397445 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.3680697 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.419934464 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.486045754 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.426533744 seconds)
  done (took 156.963756884 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.373504345 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.377794674 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.374175389 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.39399609 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.388899903 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.369780027 seconds)
  done (took 9.553270599 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.377039521 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.367985546 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.372835148 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.373164047 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.375161572 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.37220241 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.371827347 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.370532717 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.375927438 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.372155288 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.370053943 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.375091327 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.373217808 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.373173151 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.372412434 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.372614489 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.372838277 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.366420765 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.375703983 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.37400182 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.472866399 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.374052006 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.371436073 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.373531976 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.378833319 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.373145126 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.381843052 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.37070619 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.373774194 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.379423738 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.393061057 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.371637515 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.374837469 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.380517642 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.377339798 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.37381609 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.3799826 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.372551064 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.371351827 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.374982721 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.375319852 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.374067738 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.372538197 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.376313823 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.37575403 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.382148171 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.381145528 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.381545566 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.375645856 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.375182453 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.375955229 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.375181798 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.377262245 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.377443753 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.37582456 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.395154116 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.378440655 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.37749733 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.373534808 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.372905807 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.376308761 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.37496534 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.375927561 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.379193596 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.373693293 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.376552768 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.373718281 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.380816085 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.374147486 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.376902036 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.374947537 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.37186369 seconds)
  done (took 101.407482831 seconds)
done (took 430.916695615 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.794936879 seconds)
  done (took 8.070303216 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.480050783 seconds)
  done (took 7.760720139 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.414545479 seconds)
  done (took 22.703710747 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.396774454 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.429157827 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.390268314 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.377444553 seconds)
  done (took 26.874141919 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.679793196 seconds)
  done (took 7.958458886 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.369904814 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.369628241 seconds)
  done (took 14.020284197 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.442169951 seconds)
  done (took 7.721477418 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.380954673 seconds)
  done (took 7.667264875 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.377316508 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.3981527 seconds)
  done (took 14.071438232 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.35283517 seconds)
  done (took 7.632679299 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.561957858 seconds)
  done (took 11.847145683 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.369579555 seconds)
  done (took 7.654076939 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.42494919 seconds)
  done (took 7.704017109 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.645867913 seconds)
  done (took 9.925280423 seconds)
done (took 162.892947862 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.371515335 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.379096049 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.379225583 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.377448442 seconds)
  done (took 26.788014331 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.415643522 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.412198198 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.411572375 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.425386093 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.415377152 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.411525941 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.403832302 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.404941289 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.423354222 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.415105676 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.413122749 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.413941052 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.412403041 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.405034247 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.415553712 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.414731574 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.425416644 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.411980714 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.406257455 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.418360327 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.379295354 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.424343949 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.415603873 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.380197816 seconds)
  done (took 35.158541232 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.900368314 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.449501814 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.530717188 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.43246012 seconds)
  done (took 7.594425426 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.433104035 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.432499087 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.445561783 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.484172862 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.50945738 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.442650768 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.405858974 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.399744287 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.388098835 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.43401972 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.507977789 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.45014253 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.517519578 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.380338926 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.588289611 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.381926414 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.381452683 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.431357907 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.483361738 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.495569407 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.381084644 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.434172934 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.43884313 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.448401761 seconds)
  done (took 35.977328841 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.381272606 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.398747313 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.380398121 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.381516511 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.387099596 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.381008763 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.380858826 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.381830949 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.380780476 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.387584128 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.383537677 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.38956291 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.383735766 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.382629638 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.385719159 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.381058033 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.387313126 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.381600784 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.380801973 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.386472477 seconds)
  done (took 28.96461689 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.374495171 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.230183601 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.728148843 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.630434075 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.377184669 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.383643091 seconds)
  done (took 28.007744616 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.461465628 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.605204326 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.384789287 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.750733744 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.842890181 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.398984124 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.380940957 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.632598206 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.962534368 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.955580654 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.441874484 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.45183226 seconds)
  done (took 20.557082716 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.375316833 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.380294192 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.384043602 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.415362534 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.440155337 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.400605122 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.388334382 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.374644394 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.447327452 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.461669186 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.400969164 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.440524398 seconds)
  done (took 38.198045925 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463881004 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.424315217 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.369472143 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390648375 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.096948653 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587557407 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.409026669 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.091189859 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.404392869 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651897574 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379597331 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470466393 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.634712805 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380195714 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.388825885 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.406050301 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630743238 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867364051 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381937259 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.610135061 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41447819 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.380312046 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.691198164 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.629148163 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.619650164 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.358777839 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.639296642 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.154415498 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.681257279 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.395908002 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388806013 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380560794 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652869651 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058344853 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502033695 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.60752785 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407647051 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.94437857 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.36100001 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.598901065 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38916223 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.401513551 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391725086 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381550677 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.317759435 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390348474 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110776493 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.405016297 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.094459568 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.382104032 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656389404 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486395768 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.385725995 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.955594104 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412910954 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.406564119 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.385968354 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477061029 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973047238 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.857129214 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405954566 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.324073276 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.402036922 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.605529865 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018771153 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.406161715 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.38884063 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388490912 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318546184 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.606953879 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407820479 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530231356 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.410402412 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.032829249 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079869924 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.401568504 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.311043982 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933595577 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400443803 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.325446107 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610067261 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.164032178 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318355557 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.327258452 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.321161317 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.115836992 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399750653 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.97112736 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414407375 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.121109349 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.626179559 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419622634 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411270794 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.608716361 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.261963605 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382748391 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.398358678 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512597794 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406109458 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.105702511 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341282438 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.389275716 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641495634 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.596466983 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384602587 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.423096334 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899944664 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40379017 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.405452075 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.396329705 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.614378409 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.998537645 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.418624009 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.854547036 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410220101 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.162513288 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155949031 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410797184 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.396149903 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.388345678 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66617569 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.180680491 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.279228776 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453782985 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390196006 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389853612 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.671745256 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.246012631 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.286440549 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.596319498 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414333923 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.405987783 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.395536621 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337266715 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.400484215 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395700497 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.166865304 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.610699748 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399289522 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670812514 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322673927 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536668721 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.398215733 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.614300086 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.623536759 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.409898526 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648054432 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395670632 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.399315322 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.408553434 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405240774 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488825158 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411606993 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.391997982 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.652223494 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.390495314 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.39513982 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.788284261 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.17948327 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396201378 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.395617341 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397354917 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983299368 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385317934 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396282529 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.281408737 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.405451411 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457829973 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.397341209 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.620222635 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.701176986 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412288992 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.394384225 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.38808211 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61274423 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.400340119 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.612417324 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.478467135 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.875594549 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.005936132 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41932703 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.326742917 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.102915747 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.08590071 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39212605 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.581505699 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391726647 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.617472603 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.429354019 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.39609147 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.991353081 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40982977 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.633621145 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.405698489 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.405110211 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.398120188 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393688959 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.701656987 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.893344444 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406401836 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.412446156 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53509703 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.407822982 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.328134763 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.909896549 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395734823 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.393094022 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.168882245 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427489018 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.630259816 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210662869 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.670945487 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393319736 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.66536825 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.735503877 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.433763425 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.397863401 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407194065 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394985837 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.406986874 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401609927 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.407458105 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.630311312 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.838403948 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962140588 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120441574 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949204779 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.727287621 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.420374413 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.282601883 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.117302844 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347440067 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.05295214 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638872527 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.134321866 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360421238 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903932613 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.660249366 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.222413372 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.67438321 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623508401 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.709406975 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.414255369 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.687799711 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.607362631 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43096039 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.395334518 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.332001536 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.913640791 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963380957 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417305659 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.474409782 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119617894 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.416577102 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.173861881 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.432072975 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.169178867 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836376684 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.968466576 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.783961127 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.410771882 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.41366637 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208150136 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.421327961 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.922982506 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030443602 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.425964302 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.890447157 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351676723 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.622874958 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.425408641 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.394265602 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.020360316 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.418700113 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.660905376 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.671492764 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331607883 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.39692229 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94765749 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.269028927 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.403730828 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397510151 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168746037 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408570862 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.722786099 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.400066046 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.762408014 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427061515 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.332239104 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331421135 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.0910567 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.399001015 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373431909 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890356897 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.411238882 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400662645 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418143869 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250937972 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.654549491 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.413163126 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.993902298 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640190735 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402558707 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440077083 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.401527688 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399430814 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.398618249 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.300438609 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.634972305 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399552627 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.644239744 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.441400516 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.308042294 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.429273457 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610619408 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.283830949 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400463928 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.669491384 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.129337188 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.419564489 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112364286 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4444603 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.417221985 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.411730534 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.409922037 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421142153 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490464204 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632730247 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.433708425 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.413850646 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836104028 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427456263 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.421024621 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.41468363 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493373618 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.928940639 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.757952258 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.196137075 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004543214 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158306042 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.023337258 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.697229214 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.40505361 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41420433 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33952651 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551319518 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.929524452 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67964708 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532999818 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.405718442 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427074677 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402883972 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411183373 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624819342 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677330974 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.275243968 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85897283 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.06908508 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.284789585 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.411721561 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.613682353 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899994113 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966687937 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525202648 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.414482211 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.139649023 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697341764 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.493601894 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.403988059 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.996637393 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.425916029 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.185772727 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.4187399 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407716552 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550230714 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680242992 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099362655 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.442917356 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.564451634 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.177359397 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.687389281 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.668486581 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.906625459 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.636625889 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.030020576 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.141699221 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.667394404 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474536928 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62770489 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.525247645 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551939126 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.40542176 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.285621333 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409206602 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24924658 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.116135775 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.41501366 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.011196637 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.686198597 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.409133516 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.407537329 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429054451 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.414206156 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.627255575 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.155849012 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.638956903 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.417967853 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.407873515 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.397084418 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.011126116 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.702818893 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343405976 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.409770998 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.658800454 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.661788542 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432971735 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.857830407 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.120256672 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965909283 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.380344905 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430529182 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407210772 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.140395545 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012772419 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.747345506 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922182005 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.072296929 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.42061708 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68684938 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.415087646 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.408693689 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686033574 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.412931113 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.420426577 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.645303632 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.023547245 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.230516928 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.422131302 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.71844304 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.353630702 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.634539483 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.444919283 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353721205 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409596743 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.850787087 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.439201043 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.538911898 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421932833 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.418918525 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417528376 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.145033896 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.764048231 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.417752227 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.391639114 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.40126115 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.42012628 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510653785 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987406187 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435706551 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.086116365 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.760441707 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.665550284 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.414832666 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.396326871 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.412574366 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412763718 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.128448383 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.382351792 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.418458217 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979627383 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.414112624 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.432210244 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.417015355 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.627619311 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621451435 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.409834126 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639979475 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.433552513 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434412915 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.310052319 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.179399034 seconds)
  done (took 1694.300245716 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.462570144 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.451777852 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.438925642 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.492083545 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.441578155 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.428954179 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.442514218 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.547995206 seconds)
  done (took 53.027421302 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.411854071 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.568222092 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.445933912 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.423622756 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.422076753 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.422217252 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.898510602 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.43722539 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.419687185 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.423183713 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.425360964 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.420369384 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.100162417 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.440516452 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.414773457 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.392880444 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.422019372 seconds)
  done (took 66.814110584 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.611525812 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.583398249 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.536163793 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.493727786 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.446235535 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.424215959 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.60894217 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.427795624 seconds)
  done (took 54.451564761 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.423095043 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.423620326 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.423975398 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.423821261 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.422660309 seconds)
  done (took 8.439297558 seconds)
done (took 2099.561569521 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.415969955 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.418841278 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.415087487 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.420902572 seconds)
  done (took 6.991451571 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.393822077 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.145604785 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.403925125 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.418299684 seconds)
  done (took 18.681945791 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.42466895 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.415198865 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.150986279 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.071714045 seconds)
  done (took 5.54563793 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.163497966 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.175456937 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.159704392 seconds)
  done (took 7.819425524 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.412134658 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.420070097 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.41803994 seconds)
  done (took 20.569993646 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.710299655 seconds)
  done (took 3.031741615 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.560852104 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.609689696 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.730907849 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.736869832 seconds)
  done (took 7.959057789 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.799840538 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.788179199 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.603744734 seconds)
  done (took 6.511548125 seconds)
done (took 91.273080933 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.384785628 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.417729436 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.624551319 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.354839497 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.645906175 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.625373688 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.826263841 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.322472929 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.864460617 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.854006479 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.357705571 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.643726854 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.562774234 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.416433809 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.56298 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.416154784 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.642850153 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.421546713 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.080316649 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.23955723 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.836126886 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.992049966 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.184478098 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.008781726 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.646168832 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.576099721 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.576020176 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.413746648 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.249664759 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.590442902 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.576892911 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.413919567 seconds)
  done (took 194.651608263 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.417687771 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.417207782 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.415356802 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.41596516 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.415154438 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.413760895 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.415369669 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.41632195 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.43803198 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.415091861 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.415221286 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.415119378 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.416606659 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.432534514 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.418222551 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.415172232 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.416958754 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.41502458 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.431373404 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.417425165 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.431687731 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.429826945 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.416637792 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.416826526 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.439266679 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.416881794 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.417717557 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.416842235 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.416847478 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.451177404 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.420248241 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.417501626 seconds)
  done (took 206.788540824 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.425482609 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.41953541 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.418305804 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.417711039 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.416118406 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.418556893 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.419138527 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.437634164 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.447209763 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.424111768 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.417971283 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.417653596 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.420020726 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.417952045 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.452249562 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.419754203 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.436294237 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.419084837 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.417125954 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.418172845 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.417274865 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.416880516 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.41781598 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.419438714 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.419086367 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.419603157 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.420320695 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.419394893 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.41784805 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.447939379 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.418812236 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.418865848 seconds)
  done (took 206.859615506 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.621511198 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.425779632 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.426214857 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.373860415 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.426736066 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.424621327 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.420756282 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.617613678 seconds)
  done (took 15.06396776 seconds)
done (took 624.686193456 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.768533555 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.482086608 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.630976882 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.447106082 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.253600614 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.467735651 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.445971473 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.622922205 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.365401399 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.63049317 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.691518887 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.464287258 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.837507894 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.445280584 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.710041157 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.550678436 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.366819399 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.496225213 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.774052901 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.002298801 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.716895611 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.92870247 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.644807068 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.371359933 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.848811621 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.922903415 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.20711754 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.358450568 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.464548677 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.78049947 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.138329341 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.465399935 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.49112233 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.511126273 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.567287402 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.548889495 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.442717939 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.510863839 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.650674953 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.688235131 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.026828089 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.18018063 seconds)
  done (took 96.248126243 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.411936133 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.412120239 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.410129775 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.410006354 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.412093774 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.411740832 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.410174269 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.412702764 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.410931132 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.410871464 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.410910762 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.412369324 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.412680507 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.412306323 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.410561747 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.411725121 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.412629108 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.412410163 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.410627759 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.411041489 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.412807185 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.411245297 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.412688781 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.411410592 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.41180657 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.413308018 seconds)
  done (took 38.03436464 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.43097658 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.682979771 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.856323161 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.438834419 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.433203644 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.435031861 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.514765228 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.43287809 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.435613434 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.436340665 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.588592125 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.435366916 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.469371148 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.880460361 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.433764211 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.43481973 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.432802465 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.43482945 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.690193794 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.443422201 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.537449648 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.433728883 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.514748451 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.443478497 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.458654271 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.436807949 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.437690553 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.022945459 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.453201778 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.590607736 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.268170929 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.518822491 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.977396106 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.888992234 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.275804898 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.442938535 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.435805034 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.592712931 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.437088764 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.433267689 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.515451117 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.434332373 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.86762146 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.112199323 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.453269343 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.435743298 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.039903809 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.617129835 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.69145955 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.442755043 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.896439001 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.43717484 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.438068862 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.436874904 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.691107665 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.442795739 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.43361985 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.053174012 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.459227292 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.516615949 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.43733826 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.436015997 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.701788048 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.439128335 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.686833414 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.437514179 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.444857993 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.456678871 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.869745525 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.439635147 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.139241297 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.455935546 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.438766932 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.590329365 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.689058393 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.075398745 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.45924401 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.703677353 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.996164064 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.535574825 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.442009173 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.014373074 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.539325299 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.441573871 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.438729584 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.438987683 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.439282958 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.484826724 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.516178807 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.072292075 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.149347434 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.077055393 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.538518166 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.447443228 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.437543318 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.052946086 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.457807327 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.439473266 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.867118817 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.143853792 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.454168556 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.448697488 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.14018914 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.458104681 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.524350736 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.44391742 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.878918761 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.439810141 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.486063363 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.441032351 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.444359963 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.461946086 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.523371694 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.443827853 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.440656699 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.108087658 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.618617797 seconds)
  done (took 189.320264324 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.430991802 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.431422369 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.434473018 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.450054335 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.432063739 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.4424366 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.43229704 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.432962491 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.437831314 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.432768685 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.434368314 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.435987906 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.435301047 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.436833914 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.446085407 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.440750311 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.045729495 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.433378734 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.434693778 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.435136695 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.243811417 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.439410133 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.436954128 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.434243074 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.435709576 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.437085753 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.445266752 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.441379357 seconds)
  done (took 154.989797954 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.442026049 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.0276126 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.460080482 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.579707557 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.467553174 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.43850767 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.57739278 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.502313314 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.461292545 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.439517871 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.439366904 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.75721665 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.444797297 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.979747116 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.644157404 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.600089259 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.976000916 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.461700068 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.442804179 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.441057149 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.580773275 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.446164105 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.758817981 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.030819719 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.464444895 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.031691482 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.42903237 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.444534376 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.442999516 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.035890279 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.46069966 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.757795234 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.524381326 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.504322347 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.056060937 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.99725298 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.999529018 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.59641911 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.443690293 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.442746899 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.440213707 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.426553195 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.033862834 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.462041394 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.444013269 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.02275696 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.462721555 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.444829781 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.451127791 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.44262689 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.506469332 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.52440371 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.781913955 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.041141993 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.543931614 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.457770603 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.586206844 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.846608974 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.449059574 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.98350823 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.427396675 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.04370595 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.463902056 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.427712743 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.445921877 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.451628424 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.600392704 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.581271516 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.983180073 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.465266853 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.982379936 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.620327787 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.446850101 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.443882674 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.445459094 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.041628764 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.001936122 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.620741903 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.585922049 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.651119229 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.429999935 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.446045645 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.428739624 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.526478667 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.446620689 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.042311738 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.002973128 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.464764173 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.447425127 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.448100275 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.448119847 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.632616485 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.060853006 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.54587495 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.974520171 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.782392302 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.766296355 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.448928779 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.508246366 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.463254978 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.767535721 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.449738522 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.507064863 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.906088156 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.76726799 seconds)
  done (took 172.170974881 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.696696007 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.662409858 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.564667354 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.598181961 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.064573351 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.033476443 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.795977203 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.587859244 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.561689452 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.714809362 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.636192314 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.537491879 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.669239891 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.528730667 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.200945856 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.537935679 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.561396203 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.607633982 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.607312861 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.49672966 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.136564197 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.746577571 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.647906922 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.392709217 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.54541909 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.240419868 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.037256038 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.047140033 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.63349818 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.782259204 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.994316695 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.61342391 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.463259071 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.167248774 seconds)
  done (took 69.459319318 seconds)
done (took 721.551481538 seconds)
SAVING RESULT...
DONE!
