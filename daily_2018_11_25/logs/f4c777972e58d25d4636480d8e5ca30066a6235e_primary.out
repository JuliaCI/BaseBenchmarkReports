cset: moving following pidspec: 30763
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.230400993 seconds)
loading group "string"... done (took 0.548922835 seconds)
loading group "linalg"... done (took 7.654342673 seconds)
loading group "parallel"... done (took 0.171062259 seconds)
loading group "find"... done (took 1.165895006 seconds)
loading group "tuple"... done (took 1.840058937 seconds)
loading group "dates"... done (took 1.25179577 seconds)
loading group "micro"... done (took 0.232280701 seconds)
loading group "io"... done (took 0.765795508 seconds)
loading group "scalar"... done (took 40.889896428 seconds)
loading group "sparse"... done (took 12.928146274 seconds)
loading group "broadcast"... done (took 1.154218158 seconds)
loading group "union"... done (took 13.489821547 seconds)
loading group "simd"... done (took 4.794278731 seconds)
loading group "random"... done (took 9.705224384 seconds)
loading group "problem"... done (took 2.152945704 seconds)
loading group "array"... done (took 22.702224583 seconds)
loading group "misc"... done (took 2.116980705 seconds)
loading group "sort"... done (took 3.467635218 seconds)
loading group "collection"... done (took 19.580720943 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.58000914 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143188548 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.150398328 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147499827 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.190080555 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.157235474 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158072173 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098233718 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.005274458 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.176638288 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153569824 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.521541808 seconds)
done (took 5.275692244 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.218062608 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094707488 seconds)
    (2/2) benchmarking "String"...
    done (took 0.10433486 seconds)
  done (took 0.937050093 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.076593672 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144067062 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094564724 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077560278 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095010866 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076988357 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094842283 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.079937758 seconds)
  done (took 1.406786246 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087282225 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097316746 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081346545 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096371347 seconds)
  done (took 1.105763753 seconds)
done (took 4.497124923 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.738832579 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.271324742 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204130913 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.463465681 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.19574926 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.215982334 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.687967365 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.341598903 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.253970681 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099837825 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.14405604 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.38632596 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138065835 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.689607358 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089091887 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.12471812 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.185501723 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.454880801 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082210914 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110191732 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117447601 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142652817 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.132701568 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09313452 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.18640897 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081509196 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.195222033 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108342719 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079775532 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.288230856 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.20049171 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.682906024 seconds)
  done (took 10.96791437 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110760641 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13482263 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098192103 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137352528 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136150883 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099950703 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083223843 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096607815 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122638721 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176514119 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114569194 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.137138072 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096266191 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081720878 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115932995 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246305035 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.123436282 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103904318 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101355749 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104016623 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122108735 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113697315 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108103836 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092228442 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167003606 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.226299469 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112901658 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128963917 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09972764 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112655958 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144865497 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14402454 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097214766 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080454791 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173072862 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125014865 seconds)
  done (took 5.223322108 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.082957747 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190369657 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122145005 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170346873 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.156670553 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.07940548 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142515295 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.096186383 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115896124 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257895356 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.114985826 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176080758 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143738159 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100291635 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097386936 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081887704 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.094007444 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079119134 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.658312269 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.122350652 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.149774113 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114610189 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102352088 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082816142 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364000786 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103188333 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.084285396 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097639429 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064979508 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158979485 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099181085 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.145068023 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121083374 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081436718 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136127728 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207803348 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111374921 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.135760077 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096347606 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079181005 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.17678385 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104799952 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.076646707 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097456177 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.101438945 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136328426 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134246812 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098339742 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.09724827 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204266949 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080101907 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114237341 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.922110303 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182539396 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.104942283 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095141489 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.326041171 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098141185 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097375874 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.07617428 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.267107168 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.193076406 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098535973 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078782468 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096784988 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079399139 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.406821808 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081858824 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.643352253 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083955621 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106161314 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082044042 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097031746 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10352689 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086537944 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115614841 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079339341 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099274013 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077911189 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096138858 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.079992432 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108676883 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104013617 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078940875 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164858358 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080893556 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115187869 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125832652 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082835404 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095978244 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129560364 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.077698598 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098434983 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.079448873 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133761929 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098568709 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107454673 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082141917 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143612945 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097438569 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.129767263 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096131397 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124184126 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099627894 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113327792 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112616685 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099533227 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083353594 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096093895 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076187065 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166230387 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082145285 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099503687 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.0798654 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110227674 seconds)
  done (took 22.384508866 seconds)
done (took 40.400478575 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.319306608 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103454484 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10394597 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10387059 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.10123486 seconds)
  done (took 1.549105794 seconds)
done (took 2.341018202 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.290830363 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172306004 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096415743 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167524299 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093224177 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.17320612 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159805539 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.112131189 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.202010728 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096128973 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.16383558 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094804541 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076339298 seconds)
  done (took 2.717203762 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094981244 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115519138 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082955033 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111273227 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075964885 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111836132 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09178736 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118012977 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109680857 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086368182 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093757967 seconds)
  done (took 1.882713956 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093874115 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113483828 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081515261 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110845835 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075972732 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111962838 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091702944 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11721499 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110670956 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085215996 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094593598 seconds)
  done (took 1.873713441 seconds)
done (took 7.256386302 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.09232548 seconds)
  done (took 0.874960854 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.942158251 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.046710353 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113428771 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150372911 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.300612402 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.194010598 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.489162852 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.1257089 seconds)
  done (took 11.350527302 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.145923958 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.085235881 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.101227813 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085370753 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.105263424 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085582282 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.101957193 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.10241341 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083602491 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.104134806 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082713658 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.10377126 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100252343 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.084925762 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.09985629 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.083935609 seconds)
  done (took 2.403542665 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118180398 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117461933 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10857147 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109616834 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085672447 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106718568 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107619221 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087637484 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103994013 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103583777 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089461104 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.10725907 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104225573 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078773167 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107014523 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108948028 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086064516 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107088312 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107608072 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089536451 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108707066 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095772317 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087032869 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107758754 seconds)
  done (took 3.332623746 seconds)
done (took 18.747786094 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162329429 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109534976 seconds)
  done (took 1.063130919 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096275471 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113860328 seconds)
  done (took 1.005248998 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098078985 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097175012 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.123210171 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109943055 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079845456 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098162725 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121016959 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079953939 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.09801928 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079069516 seconds)
  done (took 1.782548546 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083328453 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110822886 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101821027 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095372859 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.10613215 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094978619 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088667126 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100002189 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110562934 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077590234 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103114295 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114464374 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085605385 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117576355 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.10531284 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082976644 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104357875 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099789153 seconds)
  done (took 2.582889443 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.08106353 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097128953 seconds)
  done (took 0.974939162 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082527796 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095195409 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081587064 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098369679 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094409188 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077272473 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095739038 seconds)
  done (took 1.421084586 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.49337437 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135996682 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.261493437 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102201482 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.121405938 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302584887 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099727151 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083584843 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104378134 seconds)
  done (took 2.541249584 seconds)
done (took 12.166415628 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.0935688 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.118324631 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111304169 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.469000941 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107810929 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099988324 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.14713856 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.254310285 seconds)
done (took 2.208457608 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.142250134 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.325924104 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.116246433 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067492644 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.098867364 seconds)
  done (took 1.415362022 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081292889 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099773799 seconds)
  done (took 0.985514784 seconds)
done (took 3.35603869 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081400902 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.132267726 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079339191 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.098298711 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.07920371 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.09772832 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.076915236 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.100423959 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.078950894 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.096143766 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.095985223 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080778665 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.096222755 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080850694 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094931176 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078067804 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097657216 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.07752251 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094437259 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077620741 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094564237 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080394699 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094308002 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077653136 seconds)
  done (took 2.981405008 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100324984 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.0996387 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102212852 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086784834 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102316727 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085951735 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104445312 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097882834 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085530223 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101011711 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100465743 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.08554645 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100561532 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083396415 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100602927 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101475146 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086525919 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098283139 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081540624 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102487041 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102509395 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081297052 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102157571 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102487569 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085079959 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102043918 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081924406 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.09895722 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103012966 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083685865 seconds)
  done (took 3.659602949 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085363811 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094097135 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.07828518 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101907005 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077262889 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098940578 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077321459 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096876652 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079236175 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096550776 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079127753 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096202705 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077324081 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097725644 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077626062 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.10116895 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107965464 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079084806 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095635992 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078778931 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098639061 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077897497 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096172524 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078191261 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096566247 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077406162 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096177657 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078113787 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097013715 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078004143 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099894927 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080454122 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096554151 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084176945 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100300592 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076707401 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.100058569 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.07613744 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.0977157 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093530121 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.07864217 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093956631 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078516138 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.10187596 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.07905024 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098109151 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078019273 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096791962 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.07813437 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099391124 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077011924 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096337359 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.07963143 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098367776 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.080435266 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096288284 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095226987 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078033572 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096180629 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07825749 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094714224 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07829237 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097632354 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078660638 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.11185983 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084412731 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095901717 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079244102 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.09753592 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079649406 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099175629 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108729092 seconds)
  done (took 7.233566377 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084079057 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106957851 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07937437 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098732368 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075033577 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098095071 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099690045 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078647145 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098009798 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084513239 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09693351 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078933515 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098095442 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107642636 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079621044 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098283188 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084846003 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094971566 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079003807 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101045836 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077804687 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100067803 seconds)
  done (took 2.815089189 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.211079694 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105850786 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143044087 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106792491 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082457395 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10754937 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101730274 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087311168 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103127824 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082383229 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101508764 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102731652 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.081997727 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10116927 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10051451 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084975712 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103624804 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084213855 seconds)
  done (took 2.710503542 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092951243 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100358672 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101579406 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100718127 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099685574 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083540647 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105491296 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108606858 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084108414 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09930601 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089952654 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10203364 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100735643 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081383433 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101655014 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08101034 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102242097 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080294608 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10946182 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10539532 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104525324 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091468781 seconds)
  done (took 2.947044749 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097473754 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101732328 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117927893 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085137783 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095924433 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079343978 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106735595 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080616859 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108449311 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100662431 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081624915 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098692949 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087023891 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099014056 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104146639 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081404019 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101253092 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080606984 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102008756 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07682323 seconds)
  done (took 2.706110748 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103137109 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.210655987 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09948842 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092284081 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101316245 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081849334 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111121453 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100831576 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082310165 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127403099 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101089733 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081292555 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11072222 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107633751 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099822536 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092280607 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110250724 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109976725 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082466273 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101404487 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125508789 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081843781 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110751723 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100505234 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081491597 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101476867 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099330616 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089053773 seconds)
  done (took 3.718898121 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081565517 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098458603 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079413284 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096440676 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079003644 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096679169 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078879879 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096443513 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081475724 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096510864 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081036356 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098850015 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08370917 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.099513439 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080569007 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099650069 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080985244 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.09726696 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078320361 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096933983 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08065133 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099482556 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080870092 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097647046 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077434997 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100082284 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07787789 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097374972 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079790852 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097511274 seconds)
  done (took 3.493730043 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091397074 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10785545 seconds)
  done (took 1.021449564 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079458096 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115491069 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077922825 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104545087 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.0851883 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101876301 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108413098 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085187613 seconds)
  done (took 1.582063248 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097178558 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.1106869 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082867615 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112767452 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109840744 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097662476 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.170656918 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10232668 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.085599595 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099327437 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112856796 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081294704 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106255653 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081792308 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106282089 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08684572 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099069946 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104820384 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084915417 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098319003 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082584911 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110083513 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083897019 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097965699 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.101516717 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090722302 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113759631 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.081537311 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104201223 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107492276 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087337552 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094675543 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081637053 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101968948 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078655801 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110313067 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116431618 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084334663 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110866126 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081499095 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111712656 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096799915 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085838122 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106302765 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110058655 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083348338 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100194332 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076786201 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.09814196 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083814886 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095828986 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080892658 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095713385 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087893533 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105520792 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112256344 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08108926 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102642487 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084283066 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104599778 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087309772 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103864428 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102595593 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082181902 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107333485 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085990575 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11156019 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.09387955 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.077157266 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097629334 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094473242 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124976172 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.087052012 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101968528 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101499041 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.07947866 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104432043 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083621916 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107598807 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105980355 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082759498 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108542779 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08970842 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10165508 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083658004 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109470581 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099180091 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083555847 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099409607 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117545489 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080373098 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097896909 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079481799 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.11247708 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084726105 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101046081 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078915559 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109327305 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093830492 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083513456 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102190775 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082543693 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111896466 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105010228 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088399646 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110554114 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.087835217 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10161121 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103228718 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078757334 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101622936 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084460525 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107754628 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076138193 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104515159 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082025741 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101561425 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108800178 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080613736 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101470222 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088827559 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107202069 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.07890297 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098228046 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102914262 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082169143 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104923182 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.088914533 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100593961 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076401719 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097021636 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103119659 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083358041 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.104995386 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087423389 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105230318 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075294439 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099758612 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105654656 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09117117 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101610982 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082006782 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108468506 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.10193804 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082037347 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107576129 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08438862 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100584279 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087953145 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102703711 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076736703 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106523516 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103462155 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080969406 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104996366 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085240907 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104721705 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.081464074 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100116206 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106345429 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083157069 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100279948 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081734926 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100642201 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110901834 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085762351 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095318375 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.079243438 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.108826535 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.079328382 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101174644 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080875605 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103713803 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100322264 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081085478 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100086723 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084441172 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112761511 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104778005 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083859131 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.106632002 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092879356 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101902793 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.083696345 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101779769 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101387701 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.083457872 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110395713 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.086703705 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107578314 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102698444 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080555886 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107416492 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090275014 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100816247 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079271639 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100884387 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.084399724 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107577591 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.104614573 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.08322848 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099873062 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082494731 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106064085 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.104017698 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.083509927 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.100066418 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.087488288 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.101608099 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.088645128 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104137428 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111503783 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085472296 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097191294 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084880024 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100011169 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.107171848 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078914598 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.098720919 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081605793 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102482057 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.080702727 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.105235352 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077077124 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109366772 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108695531 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.083125785 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.100756082 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083365727 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10839868 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083667329 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10547119 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.084487241 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.10843239 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111399543 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081386057 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.105316014 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092416281 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102694618 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.074931099 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10763231 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099401676 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081852955 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100457797 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080051081 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105215375 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10957402 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089582056 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095848061 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085030256 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100476029 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.080868257 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098235578 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.085756733 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105544898 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.10030728 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089887111 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103037287 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.082778814 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105636539 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.081601884 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103402865 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.102651977 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086772384 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102507984 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.084492732 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101557604 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08512441 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101745633 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.08160525 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104645446 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100253242 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083856209 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107990768 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082281781 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102983273 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084192281 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103573392 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082071366 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.103480815 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.100204264 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086377811 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103283467 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082677307 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104537265 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.078001198 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109976015 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.080580495 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110356218 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.101549518 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.080137921 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107528225 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08436621 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107192743 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.10188292 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.084230101 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.10253009 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082513891 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104703609 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088996093 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.100540119 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111252818 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091024458 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10273988 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085047849 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.102212367 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083546161 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102044143 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.082356249 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.103501416 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.101304379 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083610417 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106733415 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.08504262 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102801576 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084004956 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104384757 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.081373358 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103889561 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095493185 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082769124 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.10140764 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083650745 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112867067 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.081667677 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105949352 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100477892 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084045476 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.101703472 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.080104735 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110732658 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110901899 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084627831 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110266265 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081693615 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104866571 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111754064 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.076992243 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.099357917 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.08140869 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.099800656 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090494309 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103609045 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.090857482 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102693393 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.080984467 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100262479 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.10243713 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081388203 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096201804 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081503929 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106176934 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08461442 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101727742 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082662033 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105501292 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102031886 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102061027 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101232847 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083170883 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103925177 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079209705 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101744274 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.080386812 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106127039 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102249964 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080631236 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.09910021 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082257519 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.103410396 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083699964 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102927535 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.08383048 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110252414 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101228519 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.08618045 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106298443 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077872313 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105221325 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08191926 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103011456 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.079953993 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.106831024 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104841115 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083793468 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111666787 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.08170336 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103446816 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10113079 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081757443 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101606233 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.08306767 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102331615 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081516725 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103354621 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090660069 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100557075 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104433226 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083963807 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.10272094 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090175802 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103873604 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085130364 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110987277 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105246007 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084750774 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110864329 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086103608 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107056402 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10247911 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084111288 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108529913 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082694738 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.109120138 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.08275197 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103978057 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.082703468 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.101381436 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101273525 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083808011 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101477069 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.088942754 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104453367 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081737236 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102500638 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.079939963 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.10459049 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105124289 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091363064 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.105456989 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085265367 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098811663 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079093904 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105734442 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.08031117 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105264563 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105666927 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089229053 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.105144279 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083989218 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102586095 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.09134772 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109741864 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106179914 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080335111 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.10660761 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084381413 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105967184 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083306931 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103773468 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10419217 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087670123 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.104918979 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082769691 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110108795 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.085665279 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105062904 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103197805 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084266932 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.103149751 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.07848448 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103764126 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085356998 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109459351 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.083966357 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103827397 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113235584 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082894936 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102619934 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086685564 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103050985 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.086376894 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098660145 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10350839 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084622135 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103858664 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078143228 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.102376331 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080379716 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.105866271 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082070703 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099457546 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113555612 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091944749 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106539068 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081353691 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102917563 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078148287 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099619356 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.080816562 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10580319 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104047434 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093607619 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.102491149 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082071345 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099611295 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082731375 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107094994 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104948039 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080669022 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097857511 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082570809 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.106089091 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.088748712 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102960264 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082368962 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107502298 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103399072 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082583675 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107485353 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080319654 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106766814 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09479025 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105555132 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102828889 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.090083978 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111565585 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.083535903 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099274675 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.082494078 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.10658923 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103205666 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084319208 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104611538 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098612259 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107762692 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.10153373 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.0827974 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.10675274 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082450984 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111951022 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084182272 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104313971 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107664757 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085679182 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112639182 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085073793 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112598002 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105232008 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085843884 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10242273 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082966649 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101801179 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081737501 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105087274 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084061892 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108991412 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110805079 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.081999127 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115587047 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111983454 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088647378 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100284605 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083153688 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103710358 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078758613 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105628914 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081215383 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102976866 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080325843 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.104120241 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103417886 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090472745 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104608839 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084688311 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103619005 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077170002 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.109581969 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085154794 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10550634 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.079543944 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.104513639 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103756999 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087950204 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107863654 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.08397736 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106000281 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084358965 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105760957 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.078263556 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.111407257 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102069681 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.08688152 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.103053445 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084339682 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105793165 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086521563 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110073201 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105437572 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086361488 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116278164 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085985189 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102163426 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.079889586 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.110562388 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101680216 seconds)
  done (took 57.937277124 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147400797 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080342992 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099313215 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079522445 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114362546 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098919801 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079754244 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099459333 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080978445 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102695092 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078755125 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100479293 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109616838 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12539869 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093157969 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105129613 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077658596 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101698502 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099288199 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080650914 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110932568 seconds)
  done (took 2.938643885 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104734041 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119185527 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116755055 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119156948 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089610376 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.11734866 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11525919 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1160306 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099042489 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112223473 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119309508 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114943546 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091727665 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112314185 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111735181 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092608249 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120145907 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110182014 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.11618982 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095920258 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115333681 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115477018 seconds)
  done (took 3.298365836 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084461964 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103046646 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085080342 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.09844493 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083361091 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098931597 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.086991251 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102217777 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085815226 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103311859 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081342505 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102975384 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104218317 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079828895 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102903477 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081805981 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151720331 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108183557 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.081939871 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106875991 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077468405 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.108138752 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099253469 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080436231 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.103297983 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087720979 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105374114 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.080940526 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104785315 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.080899698 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104801835 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080490886 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106481359 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.1033607 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083316033 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102701183 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083644052 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103005556 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079330685 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101819582 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084875404 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.10046306 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083388375 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.107073468 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081076057 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102629431 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083739516 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.105027386 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098370122 seconds)
  done (took 5.532540413 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104504657 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162203945 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085323021 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144736201 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121955505 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113794656 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087686539 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.1445357 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104303738 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082125639 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123684789 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120747311 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104130197 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089143008 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.108298373 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103519358 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086239829 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104138828 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088821571 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10535731 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109604223 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089850523 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120796477 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119047335 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108681565 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083650902 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104796568 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108800332 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098033556 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110763921 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110449005 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090474064 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122228609 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110316732 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082302947 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.108221707 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122771175 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103326123 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088302081 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101783387 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085784061 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110318208 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110394152 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102293073 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106190789 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108964523 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083661505 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102059526 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118362067 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086606729 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.115696118 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.121302645 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087343802 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.107189689 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109906493 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120354428 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085439408 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102945245 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.086893331 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118625941 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102383992 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08834657 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119898683 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107311398 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111881207 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100166854 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111152419 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10837906 seconds)
  done (took 8.217300772 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094876299 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112201673 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121225604 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12245169 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090892985 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112763698 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111732235 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090295092 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112596289 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117871912 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110872809 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134648606 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.0863149 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115783852 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110904279 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090948022 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112229755 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111695122 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090941764 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112405379 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112918968 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121083119 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090762263 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121740297 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142685701 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10770614 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090147309 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113051027 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121429475 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111599353 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123572385 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091603969 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112420769 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120732996 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124559607 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091035625 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105017087 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110775255 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092083318 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112249436 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106048667 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100912408 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113036205 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106614575 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090017048 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113042996 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12070334 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124805567 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115070387 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096745032 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112978518 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121566345 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11085582 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091222789 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121382865 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.148526907 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121973479 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121333984 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111469138 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101261261 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121789492 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129486622 seconds)
  done (took 7.767487212 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107047769 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116440866 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119270194 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101108743 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083729344 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110218375 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081400997 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103192124 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113264524 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094342443 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118639676 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109181136 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092220891 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118773135 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110191028 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113490297 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08873083 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110891408 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115002084 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108490424 seconds)
  done (took 3.005168095 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093925323 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125640934 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084441265 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114048803 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10901498 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090442887 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107906091 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107784248 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085971171 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10896005 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096045498 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117131745 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106385064 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091029998 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.11776882 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112742689 seconds)
  done (took 2.55906865 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096272857 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118752027 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120992154 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083694506 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105600408 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080367928 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107152569 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101317418 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081407485 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121807255 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.083693651 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.112426291 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105460936 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082425284 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102208835 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087064862 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103215609 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081486752 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.107081713 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120375491 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095394782 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105091974 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106415654 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087213357 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106400164 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089224917 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107018818 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103381805 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083943466 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106395651 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084870412 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114061229 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102585044 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084206705 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104701317 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082257543 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10664381 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084511833 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110131068 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104535828 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08412381 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.10589778 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08444113 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107606149 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079970657 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10783436 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100839647 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.09200098 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103963828 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084603657 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106292092 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086100517 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108367602 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116880861 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088386327 seconds)
  done (took 6.323303808 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099738223 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110414943 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079660274 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104747951 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087396842 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109611665 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108683474 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087829957 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107589672 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082746878 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10913692 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088369604 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108754868 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108705127 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087507559 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109804137 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080267448 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107900941 seconds)
  done (took 2.678643286 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090908438 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10596046 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092174343 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108145919 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084321886 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110431722 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080218072 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10656441 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103873816 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086211643 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106112915 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087361335 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104962132 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086471966 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107052131 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08389847 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109010087 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103283478 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08689553 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101860631 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087476624 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104998109 seconds)
  done (took 3.036264282 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118749185 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.126684693 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091729394 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.232112219 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103199775 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.13246213 seconds)
  done (took 1.703038413 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109152131 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122002018 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106481981 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107146024 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116583361 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086059846 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109076479 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108486599 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117344085 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100838768 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108924439 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11871931 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118357515 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095882742 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116177148 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115415876 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107395182 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088699069 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107028349 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12922955 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087350967 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119984594 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108811929 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086386205 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10912543 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118603167 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118061888 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122410702 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088685159 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118385834 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114301025 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087793935 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120386265 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122636187 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108814589 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097819015 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108984101 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129038085 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114948048 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096845934 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111070777 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115406479 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096567795 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115643973 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119151256 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107887231 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092663687 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109781951 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107476293 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136031763 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093753401 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119111576 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116630726 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118979467 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097074518 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.156715266 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101607904 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118982723 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116595058 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123433839 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117926109 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094973731 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117971448 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123829867 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116009485 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117251468 seconds)
  done (took 8.23179614 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102939272 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127868318 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108144469 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122996954 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098146173 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109386058 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109262502 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087617462 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109478093 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106773063 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153514337 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088482397 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118951995 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119177216 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086348394 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109800964 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109742267 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117405496 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087496964 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136124333 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109851951 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118915255 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118392703 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096877817 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123450264 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115602788 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107982744 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088592469 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108976916 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107775082 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093687473 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109365453 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117988758 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08663741 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119307571 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108964097 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086147272 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116312292 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110050742 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115467007 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098370735 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129193923 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11017003 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10873778 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101068687 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109589903 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109211614 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085918224 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109844381 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107431798 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101479866 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123548986 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123799059 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11935293 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108981097 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086842089 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109401648 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108529077 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087848696 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116839633 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118431095 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086724722 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.157748317 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088058651 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109621218 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117238063 seconds)
  done (took 8.108291758 seconds)
done (took 157.010965172 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.222151026 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.230709538 seconds)
  done (took 1.354006297 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097992242 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137122602 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095064527 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169791512 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.10653355 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119202195 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138547207 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09726241 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107607498 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085391724 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108106144 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.085959616 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.173201551 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084633243 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.10784654 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108097017 seconds)
  done (took 2.730037714 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200013425 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.256581302 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101178134 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.108360819 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088627607 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111840548 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104043719 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091985397 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110541651 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085543518 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109693077 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086229133 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.107018296 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086075813 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.11196451 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087405706 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107747769 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087477471 seconds)
  done (took 2.952002969 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112429309 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150773747 seconds)
  done (took 1.178462809 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117979532 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180757325 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318001778 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.1567502 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106648299 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128220915 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157174098 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131889588 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197302951 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.124456407 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123386998 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096917324 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.141319696 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116263503 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093399652 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.120350582 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142319205 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.091704263 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11646546 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116693918 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115806047 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107104144 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114498159 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094706329 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180585652 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120442093 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084588775 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107897119 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116446158 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094257508 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114245512 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.12498467 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098041536 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.178566781 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101352924 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.178179342 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.096924362 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112907502 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114019278 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09113613 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120255384 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117296042 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104117594 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120267595 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.083869807 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.120323126 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106147058 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.08503579 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115619189 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096851922 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.11621047 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113663247 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.15621166 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119067946 seconds)
  done (took 7.610218974 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.794687568 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156904379 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089125526 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.889645165 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137816398 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103179334 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.780896407 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135546143 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.23376178 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.758666016 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133978651 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121962798 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226735498 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.236050583 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.926116026 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.308918274 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.673656236 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10144031 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152377705 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152542171 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119256591 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138673179 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129647956 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430319267 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094552654 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113312401 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.094058783 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121246476 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158771875 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125971867 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114436101 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.180444656 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.245127049 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208135138 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115487358 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089185101 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11225454 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169199539 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264689787 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213940689 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181289669 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086713087 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111313701 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.099959582 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132728814 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109494218 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163225837 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.173142604 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.194994845 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092109481 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121312605 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120231391 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.09805802 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.187225055 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098740767 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.310464772 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.321711562 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111889586 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119483671 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106045955 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263419355 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123091966 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222778981 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117419968 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213994603 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110610263 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.759088566 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.189862557 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089652826 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118497882 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.097048011 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117583309 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121888415 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168844788 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.408415034 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124162643 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093998602 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112396445 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.20550932 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125699197 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110592103 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162941634 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093177578 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122754293 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125437605 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122714448 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.171167924 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.230206508 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124462513 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118844634 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093863906 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126092974 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115387716 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211273462 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219314065 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161822999 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210130655 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123907529 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.16458858 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.189001746 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098479587 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.194269356 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099318696 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127184439 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122384853 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216350276 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144506052 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101686412 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116157638 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118563572 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148953459 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106587428 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119930842 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.169835134 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.482821149 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167425282 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108811177 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105783437 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12081176 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161038859 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118400595 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.25906168 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099431128 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.190985505 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09727345 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.109723383 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120497822 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165727616 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122337314 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099225926 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12371349 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118419125 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.236403358 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217705455 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099340987 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245265115 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185524194 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119493587 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173015301 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121561414 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167977585 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119785956 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098554931 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117654646 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77437975 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100939997 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121227677 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116178956 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187712081 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089815971 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12465407 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125438346 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086300505 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.808755224 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127356909 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098870025 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.124923375 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119101949 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120678278 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097535102 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116243569 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.1641745 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232577725 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121245006 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097618141 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125531002 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.16068796 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.118390499 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126538943 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124809627 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104206616 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123254399 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114405004 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102156621 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192808872 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163172988 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.221126933 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.575351769 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113099166 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125385718 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228113095 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090932416 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.28969787 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119294343 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.203172091 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187675719 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.09821538 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.319401987 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.18875479 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187785907 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10522892 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.196052136 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087799549 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119627685 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165507111 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111585082 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094935663 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.184010518 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103310374 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125535494 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.962288873 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089696228 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249637364 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087261361 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.192428676 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095801315 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122536014 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288424845 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089518403 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13031283 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.16465329 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116086867 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125516747 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.856105219 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125975726 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122080588 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096685825 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.223891387 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164624565 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12053119 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120860353 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121071307 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.16565502 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210958642 seconds)
  done (took 44.256217381 seconds)
done (took 60.987228354 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277135746 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216768839 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.266377378 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170045382 seconds)
  done (took 1.946696756 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172462333 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150379933 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120550731 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109316533 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.152305392 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084167728 seconds)
  done (took 1.72967355 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.358818379 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275382563 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241309695 seconds)
  done (took 1.820812722 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.317611123 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.253217978 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.476403609 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.327234616 seconds)
  done (took 2.415657252 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210095907 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13277327 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.11222328 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103807416 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.200150967 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.249290675 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142642444 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203921811 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098777449 seconds)
  done (took 2.444059159 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197987882 seconds)
done (took 11.497734869 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.264453198 seconds)
    (2/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.224848671 seconds)
    (3/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.250820377 seconds)
    (4/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.230781128 seconds)
    (5/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.083863517 seconds)
    (6/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.224495822 seconds)
    (7/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.182017293 seconds)
    (8/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.158226294 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.193632083 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.136034437 seconds)
    (11/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.218966136 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.124613727 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.09288249 seconds)
    (14/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.128663945 seconds)
    (15/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.12536777 seconds)
    (16/286) benchmarking ("sort", Int8, false)...
    done (took 0.188084767 seconds)
    (17/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.135847616 seconds)
    (18/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.255430166 seconds)
    (19/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.128040848 seconds)
    (20/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.114880572 seconds)
    (21/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.088878986 seconds)
    (22/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.112843224 seconds)
    (23/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.190289142 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.112975648 seconds)
    (25/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.125445767 seconds)
    (26/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.127077782 seconds)
    (27/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.170114239 seconds)
    (28/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.118474401 seconds)
    (29/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.161637096 seconds)
    (30/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.095023304 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 0.222579484 seconds)
    (32/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117649895 seconds)
    (33/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.096569812 seconds)
    (34/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.123680766 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.093327329 seconds)
    (36/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.127098395 seconds)
    (37/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.195056286 seconds)
    (38/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.065496373 seconds)
    (39/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.230251758 seconds)
    (40/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.224076932 seconds)
    (41/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.174058549 seconds)
    (42/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.122152825 seconds)
    (43/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.095716427 seconds)
    (44/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.235738953 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.150062457 seconds)
    (46/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.153669663 seconds)
    (47/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.115067757 seconds)
    (48/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.130391393 seconds)
    (49/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.171718515 seconds)
    (50/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.11059088 seconds)
    (51/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.117412942 seconds)
    (52/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.139185867 seconds)
    (53/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093961494 seconds)
    (54/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.228418896 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134755737 seconds)
    (56/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.124586776 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.087080227 seconds)
    (58/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.205841727 seconds)
    (59/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.096448312 seconds)
    (60/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.111967987 seconds)
    (61/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.135867247 seconds)
    (62/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.112245955 seconds)
    (63/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112888393 seconds)
    (64/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.199169881 seconds)
    (65/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.148025205 seconds)
    (66/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.135466064 seconds)
    (67/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.143399326 seconds)
    (68/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094519156 seconds)
    (69/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.120919366 seconds)
    (70/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.090640914 seconds)
    (71/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.205893566 seconds)
    (72/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.187567611 seconds)
    (73/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.179381947 seconds)
    (74/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.177298391 seconds)
    (75/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.141552043 seconds)
    (76/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.157926414 seconds)
    (77/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.18506644 seconds)
    (78/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.148822967 seconds)
    (79/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.155995521 seconds)
    (80/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.06544899 seconds)
    (81/286) benchmarking ("sort", Int64, false)...
    done (took 0.111441052 seconds)
    (82/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.113616185 seconds)
    (83/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.120748359 seconds)
    (84/286) benchmarking ("sort", Float32, true)...
    done (took 0.228979127 seconds)
    (85/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.140895465 seconds)
    (86/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.088017047 seconds)
    (87/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.15408314 seconds)
    (88/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.160642822 seconds)
    (89/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.176767016 seconds)
    (90/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.174535707 seconds)
    (91/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120484556 seconds)
    (92/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.1140128 seconds)
    (93/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.121521266 seconds)
    (94/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066524283 seconds)
    (95/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.160954678 seconds)
    (96/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.181943667 seconds)
    (97/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.087961205 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.11925848 seconds)
    (99/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.093990096 seconds)
    (100/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.091212708 seconds)
    (101/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.096877602 seconds)
    (102/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.117342796 seconds)
    (103/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.096694461 seconds)
    (104/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.165604496 seconds)
    (105/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.183564241 seconds)
    (106/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.118517821 seconds)
    (107/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.118618545 seconds)
    (108/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.091165494 seconds)
    (109/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.148761427 seconds)
    (110/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.120357794 seconds)
    (111/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.06730614 seconds)
    (112/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.118041791 seconds)
    (113/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.086486924 seconds)
    (114/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.109075256 seconds)
    (115/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090707577 seconds)
    (116/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.088862405 seconds)
    (117/286) benchmarking ("sort", Float64, false)...
    done (took 0.148366508 seconds)
    (118/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.099552943 seconds)
    (119/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.092218549 seconds)
    (120/286) benchmarking ("sort", Bool, false)...
    done (took 0.181006748 seconds)
    (121/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.118871656 seconds)
    (122/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067349895 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117944174 seconds)
    (124/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093592159 seconds)
    (125/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.11795515 seconds)
    (126/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.097168214 seconds)
    (127/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.211313768 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.115086142 seconds)
    (129/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.09450203 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.135919106 seconds)
    (131/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.066112695 seconds)
    (132/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.110003748 seconds)
    (133/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.137800141 seconds)
    (134/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.08730254 seconds)
    (135/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.116574731 seconds)
    (136/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.176682612 seconds)
    (137/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.117757292 seconds)
    (138/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.084670494 seconds)
    (139/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118767468 seconds)
    (140/286) benchmarking ("sort", Int8, true)...
    done (took 0.219596866 seconds)
    (141/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.092667027 seconds)
    (142/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.117324277 seconds)
    (143/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.174966825 seconds)
    (144/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.15645976 seconds)
    (145/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.090562635 seconds)
    (146/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.085759954 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.119849206 seconds)
    (148/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086256223 seconds)
    (149/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11807136 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086392565 seconds)
    (151/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.183225124 seconds)
    (152/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.076020755 seconds)
    (153/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.105557255 seconds)
    (154/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.077234411 seconds)
    (155/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.195942446 seconds)
    (156/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068303006 seconds)
    (157/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.111195888 seconds)
    (158/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.109456222 seconds)
    (159/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.110081495 seconds)
    (160/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.093999482 seconds)
    (161/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.091955883 seconds)
    (162/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.086415694 seconds)
    (163/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.113153423 seconds)
    (164/286) benchmarking ("sort", Float32, false)...
    done (took 0.173746077 seconds)
    (165/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.162847676 seconds)
    (166/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.092776543 seconds)
    (167/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099954168 seconds)
    (168/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.112527038 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.085620721 seconds)
    (170/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.127848809 seconds)
    (171/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.083917287 seconds)
    (172/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.12044959 seconds)
    (173/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.110165502 seconds)
    (174/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.145592232 seconds)
    (175/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.09096815 seconds)
    (176/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076819875 seconds)
    (177/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.076999227 seconds)
    (178/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.110449067 seconds)
    (179/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.3086394 seconds)
    (180/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.119108936 seconds)
    (181/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.069425726 seconds)
    (182/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.114105945 seconds)
    (183/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.086785997 seconds)
    (184/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.123398292 seconds)
    (185/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066821696 seconds)
    (186/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.110877319 seconds)
    (187/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092826081 seconds)
    (188/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.093050528 seconds)
    (189/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.067424034 seconds)
    (190/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.094388782 seconds)
    (191/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.121006747 seconds)
    (192/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.124088083 seconds)
    (193/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067751031 seconds)
    (194/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066235374 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.110326465 seconds)
    (196/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.091170526 seconds)
    (197/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.092477712 seconds)
    (198/286) benchmarking ("sort", Bool, true)...
    done (took 0.221082577 seconds)
    (199/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.084505145 seconds)
    (200/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.118685482 seconds)
    (201/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.06664464 seconds)
    (202/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.143516364 seconds)
    (203/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.065964502 seconds)
    (204/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.113921368 seconds)
    (205/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.086219507 seconds)
    (206/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.095698786 seconds)
    (207/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.095533596 seconds)
    (208/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118562997 seconds)
    (209/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.066982034 seconds)
    (210/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117024387 seconds)
    (211/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.131431994 seconds)
    (212/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135402851 seconds)
    (213/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.110528102 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.09176689 seconds)
    (215/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.117569508 seconds)
    (216/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068522692 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.108560491 seconds)
    (218/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.095332914 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.107285571 seconds)
    (220/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.118905245 seconds)
    (221/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.074638522 seconds)
    (222/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.116289991 seconds)
    (223/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.065934054 seconds)
    (224/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.091334873 seconds)
    (225/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.06902772 seconds)
    (226/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.065429719 seconds)
    (227/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.129899457 seconds)
    (228/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.15232101 seconds)
    (229/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.068187561 seconds)
    (230/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067677368 seconds)
    (231/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.090383099 seconds)
    (232/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067358624 seconds)
    (233/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068103435 seconds)
    (234/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136325133 seconds)
    (235/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110945031 seconds)
    (236/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.077643284 seconds)
    (237/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.06627608 seconds)
    (238/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.11408094 seconds)
    (239/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.0778299 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.109468524 seconds)
    (241/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.112279561 seconds)
    (242/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.118262629 seconds)
    (243/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066345736 seconds)
    (244/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.10967977 seconds)
    (245/286) benchmarking ("sort", BigInt, false)...
    done (took 0.220812128 seconds)
    (246/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.086712843 seconds)
    (247/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.142358118 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.109088537 seconds)
    (249/286) benchmarking ("sort", Float64, true)...
    done (took 0.203985962 seconds)
    (250/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.11218609 seconds)
    (251/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.115554906 seconds)
    (252/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.111774983 seconds)
    (253/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.110835779 seconds)
    (254/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.075808984 seconds)
    (255/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.142177087 seconds)
    (256/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095380673 seconds)
    (257/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.112741474 seconds)
    (258/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075614933 seconds)
    (259/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.109787243 seconds)
    (260/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093451798 seconds)
    (261/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.109043642 seconds)
    (262/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.087725112 seconds)
    (263/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.065422048 seconds)
    (264/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.186944536 seconds)
    (265/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.110674969 seconds)
    (266/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068195641 seconds)
    (267/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.100655639 seconds)
    (268/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.068608297 seconds)
    (269/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.067063087 seconds)
    (270/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.090759247 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.09527524 seconds)
    (272/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108554731 seconds)
    (273/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.069113224 seconds)
    (274/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.107571522 seconds)
    (275/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095543179 seconds)
    (276/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.111423485 seconds)
    (277/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.156781393 seconds)
    (278/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.100182557 seconds)
    (279/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.090653849 seconds)
    (280/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.137355658 seconds)
    (281/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.090805964 seconds)
    (282/286) benchmarking ("sort", BigInt, true)...
    done (took 0.230241888 seconds)
    (283/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.092337599 seconds)
    (284/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068427839 seconds)
    (285/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.115997513 seconds)
    (286/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.067266503 seconds)
  done (took 36.228821376 seconds)
done (took 37.179701358 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100042157 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149576182 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095307744 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136527183 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124297058 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090841208 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119495021 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096957847 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124380708 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124608803 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097849084 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093896563 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096048712 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121163079 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097015206 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140011588 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124457222 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093161413 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119768839 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085083723 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120032616 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085841485 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113129929 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.068728381 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122351441 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.092714519 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118763768 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119844368 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088423136 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110384892 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090470534 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118864381 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086661584 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125062957 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093600701 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119839001 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096185414 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121707621 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087464445 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111473634 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117443916 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087470266 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116457559 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094590199 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115774853 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091745185 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118473503 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098728258 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.13968459 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11549133 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095694558 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120311227 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.09515775 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.11758499 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089621168 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120844205 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090120051 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140493918 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118870248 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091952859 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119414133 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094726 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116958787 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.09455673 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120341948 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120222053 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099053837 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115776934 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096909197 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116672756 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086629898 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120206617 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089710937 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111774225 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09510614 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122699949 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085566758 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.118292169 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.093722086 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.117784549 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109560412 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090476233 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112065803 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093922696 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113337875 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07047048 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.089998526 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.118012309 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.085007627 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.120822042 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116501158 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093815083 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112494827 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.097621788 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111075946 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091564005 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111851944 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.085922023 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113605361 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.089840895 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111388006 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089018307 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.12131642 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087589063 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118075987 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.097524957 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.112250098 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116651021 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087002249 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109272082 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101806263 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121616625 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.085904641 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116916012 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085802146 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119082924 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085397031 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111796585 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085540013 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111914861 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.091360121 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111722403 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087970618 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.11978312 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124321269 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088046043 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114034454 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090130728 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111330794 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092611351 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111026652 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087405892 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113607556 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.07838128 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112758315 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.08738888 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118033364 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090686696 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119373118 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088568486 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120906358 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.090624677 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118363949 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092261151 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111833768 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073958877 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116531054 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088908172 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113746288 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086863692 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.11370964 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086994833 seconds)
done (took 16.994100851 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088014066 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183518704 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150245141 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142475742 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.1066737 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113195642 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12082937 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.11789934 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114622499 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142275873 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.108917252 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.1329525 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147391394 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.08603601 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112203068 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092102262 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113675426 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101654312 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.147210284 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133752716 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164081558 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085516741 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147058174 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137069727 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119306775 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104819684 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112142638 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.09162327 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115200796 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.111919287 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.13385087 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.089365726 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.113109253 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133208661 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.10394514 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120466488 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08670091 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.120155265 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087022698 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113156738 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140555988 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.107275019 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.118658234 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.11766547 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091820483 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114123307 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089500652 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121590245 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.096936315 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117168331 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125897925 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154921999 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091173585 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122157137 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085463385 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.1241422 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120433127 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090506899 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112096464 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090446613 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111638693 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091583426 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127023669 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141772256 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091491192 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122280231 seconds)
  done (took 8.659585221 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105368649 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140281487 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.10441834 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131741665 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11234045 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088122636 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.116442776 seconds)
  done (took 1.808282003 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088864466 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133660348 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110713293 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137220938 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.130866999 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109551976 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123950568 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087857712 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132044396 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089141597 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134812166 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151729403 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.088965992 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121992373 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137864393 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089238285 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137950952 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089039867 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117717267 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110676013 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117076105 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135884375 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091222397 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115012537 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101852431 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115025358 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162069182 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093355556 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11536938 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092527307 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112425892 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.166553419 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102177047 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126421795 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086688639 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129204341 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.146452387 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086526568 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.129834045 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.092562705 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.129423387 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.088018729 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115936102 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.085048836 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119081005 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.123107533 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.08985914 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.113876203 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091539294 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133522246 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089721873 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128088293 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.087943657 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118887919 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.08861808 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121321328 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122571517 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091010539 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133166149 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090063002 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131502113 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104030616 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128880237 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130311651 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091908822 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.12838357 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102050722 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117874741 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089639354 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118387885 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130257871 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087612276 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115386651 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099110119 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116199786 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112140776 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138032083 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114538236 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100666618 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113758078 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089410713 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114051905 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111937134 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119165719 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088392697 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122075095 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091509178 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113264021 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.086860889 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.11839969 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.085660077 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117215008 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.09092461 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115307439 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116178859 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106482517 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11692867 seconds)
  done (took 11.892235151 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091514543 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114856031 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092698593 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.11479822 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090669683 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115361865 seconds)
  done (took 1.64019847 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115035934 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118266619 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.101567511 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122368948 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155595203 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.102468781 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.13133559 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.1248323 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.106026745 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127521449 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128937818 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104301359 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136263304 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120541901 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103162028 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120747737 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.12789913 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099909788 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127077642 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095729585 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137928235 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120712837 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095941257 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132572037 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117619505 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095973075 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126293639 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102353282 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128396722 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123036419 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096127455 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118728253 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095005729 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124355241 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.13051866 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.094873811 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122404853 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.11846876 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101181059 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118024829 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103703786 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123297406 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127043926 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093724827 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125812345 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120340014 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094895136 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.1255903 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102004155 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119864879 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118430854 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095294018 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119044676 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.092882144 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121909808 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123934583 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09472644 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130982099 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.119434689 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096363176 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118917355 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09278085 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125186282 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117212356 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104155224 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119995489 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094525025 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122078466 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121625776 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095850978 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119852606 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.09238192 seconds)
  done (took 9.265485441 seconds)
done (took 34.271148001 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.696633197 seconds)
  done (took 1.713198995 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.8310328 seconds)
  done (took 1.849417403 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.551571185 seconds)
  done (took 18.601783724 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.50376662 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.593851044 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.003211834 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.180792068 seconds)
  done (took 3.30409374 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.980063898 seconds)
  done (took 2.023406163 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.286685079 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232622964 seconds)
  done (took 1.547646447 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.790770487 seconds)
  done (took 1.830632191 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.3671199 seconds)
  done (took 2.396278518 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.329468841 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185654896 seconds)
  done (took 1.553142242 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.549743089 seconds)
  done (took 1.586435482 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.021839379 seconds)
  done (took 8.063999398 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.27011125 seconds)
  done (took 1.314622493 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303070472 seconds)
  done (took 1.339334838 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.665948727 seconds)
  done (took 4.709181126 seconds)
done (took 52.862143254 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099721376 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126952046 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101925039 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124966361 seconds)
  done (took 1.490368876 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101375925 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121867162 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10035368 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121958583 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125974166 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097084974 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123020829 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.099892257 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.12181501 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095529657 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12305223 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119391965 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099556974 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122912998 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093491628 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.12489673 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.097785161 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122344692 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124488323 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095601861 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119828165 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.096957492 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125539528 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093797371 seconds)
  done (took 3.709347519 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100878964 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.11915008 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096783324 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118546075 seconds)
  done (took 1.483738345 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101051043 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.143276199 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.13840791 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100882774 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143321439 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136013915 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092712258 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116959864 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09472078 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125181956 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090447399 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.151022352 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137323548 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099092939 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.129083152 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088128517 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117984129 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137329274 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.09980159 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127590317 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092359112 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127275716 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089842969 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141700165 seconds)
  done (took 3.864976019 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.17012355 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128970689 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139533815 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094321319 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160992991 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.13998102 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087778265 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141573307 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087691054 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132509665 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118651614 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134213992 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130101703 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.08751129 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115153307 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.086987333 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130843913 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129884166 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091651044 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.129361477 seconds)
  done (took 3.488712883 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098429307 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117278071 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088679285 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116930281 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099020378 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121785925 seconds)
  done (took 1.692317627 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092156437 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114585778 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090364117 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114357436 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095427039 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115253942 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088932493 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115294774 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090119318 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114878729 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089697313 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115706747 seconds)
  done (took 2.284832471 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.503004983 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.12161823 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120227581 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089406701 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.12187401 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089433914 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.130250179 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092126176 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.14204039 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.087285531 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.117263233 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090215737 seconds)
  done (took 2.751733558 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234409472 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127359898 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284582643 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368527497 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158989941 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177208716 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.284513515 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164938201 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.226971519 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167154658 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231389674 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198513845 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153122779 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190609769 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139872286 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145188063 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204461474 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248800168 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153564286 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207328406 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229187395 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169414177 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180580155 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15194385 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139598415 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172578475 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121317812 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10521586 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235187444 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176869972 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216782505 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163399971 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148016141 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211066299 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253178804 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221897877 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283465802 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138117828 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.148615225 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167780498 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266154905 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139647365 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230221793 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154294396 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104940867 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219017484 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168008439 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176844727 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.152277155 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139220027 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194836176 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2417313 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.191745335 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139886144 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.325475214 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153116992 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.176189012 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194537717 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252566749 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199237859 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213446255 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094924209 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215095446 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194528776 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184502916 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.173339138 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.208308824 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147595722 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200026535 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187452401 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164212561 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220138853 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.184165448 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140636049 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168267917 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17225632 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198589002 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228109696 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211933471 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.093795826 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167291858 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149693001 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133439297 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194641087 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098048859 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24071986 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144771142 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163003345 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214979511 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160010639 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161212628 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229581917 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202403187 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14947715 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083254845 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154163554 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155246597 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219121606 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112422991 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159110725 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162337549 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130709511 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183293946 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124596034 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183190361 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.118941189 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173639733 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1818241 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127670673 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162155529 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152241836 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151841334 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174977414 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197607265 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142411658 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132869107 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209191472 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177487567 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.151155352 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176597081 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229996486 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116022351 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149533755 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228234158 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242642663 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112475867 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230173299 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156595279 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107434829 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132956288 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180925871 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154006421 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161790496 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135386289 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182595872 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235523303 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.097471883 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139717174 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21841738 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10723258 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133792464 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163409287 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14824497 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.13857464 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.123062191 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.154198004 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211489812 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177977984 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155580432 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165763897 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152586902 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253538919 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141933302 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150067453 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122174162 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121654731 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.192729305 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226609044 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103643757 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233167352 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172512808 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202900013 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198987752 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108028968 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177321581 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130678973 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092080903 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223150552 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167799142 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161539941 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196569962 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228622059 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.182583294 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.209801384 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174837386 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173286845 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165517645 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156690779 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.138094614 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133405708 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198471891 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096202539 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.14574928 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133960491 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148270667 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142114189 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1074782 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224704953 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170682205 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190105734 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161731413 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150044112 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181260547 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129709087 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174062822 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.176601904 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148903115 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.226436873 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195970504 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185481284 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14459071 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228133217 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.0949152 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125514219 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141678131 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171203189 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106246133 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13728336 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163397503 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180925737 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208350452 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177422615 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211839763 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202622393 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190967198 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.093795584 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.16836434 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184787029 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205072483 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.16665521 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141656737 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151247641 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179568371 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158326735 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255315472 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168403151 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175512664 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237339957 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.150504898 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104461871 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152722996 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220680254 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154232626 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177197596 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148088426 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113494427 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162497123 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.134503288 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161436193 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211120894 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162923871 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190444963 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150522664 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184607166 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128409912 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163784405 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160279064 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165995909 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.080353227 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202039623 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206317575 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148658746 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167546743 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188723068 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131991849 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.309769393 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246723046 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196104652 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13855532 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156789005 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162327657 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165316479 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17196928 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178550791 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159772407 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18767691 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159204093 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137980508 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140859238 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147777028 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122935853 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132146174 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148962484 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177746189 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.141812759 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184510557 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162800375 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160839888 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172132723 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150406304 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145905094 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150945804 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215292405 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211118418 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211984321 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152372828 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180075169 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236396065 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097283687 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133371844 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133973315 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178600596 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108128482 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222856549 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.188844881 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233377016 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185366491 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221502598 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111702203 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120852848 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157461223 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174882541 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209407615 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152940422 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.16028792 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23350555 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.147558453 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104698099 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178526355 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.31890588 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119195223 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225653193 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080360978 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.284112452 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128189742 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132899807 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1643233 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209513789 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137266621 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.191051557 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17479359 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171744169 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165183485 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150266539 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192364102 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247271065 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200580953 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208744279 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105921335 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156416952 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176884918 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223509135 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159304347 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111448598 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234437674 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195368392 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.224177391 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.114049076 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168415736 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196807156 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130305728 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217027082 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134433696 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208024999 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135654398 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193979356 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154151112 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145519583 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176609662 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.217382137 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114537602 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219662659 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183815104 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136677955 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104721347 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197227571 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183073793 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15807314 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.098144545 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210037906 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.096204701 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224346171 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259287313 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107786114 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156028551 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148784551 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135043462 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155061581 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159173951 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111748385 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.168243517 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204541866 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136441596 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219790407 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20356298 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171324736 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202666637 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116845464 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692029701 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131564232 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194595976 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161389085 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237028066 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1505052 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174851017 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159470601 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169767641 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195688684 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161450066 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232403071 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222701203 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.180089515 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132342932 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159104944 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164383107 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143709786 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123461146 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196499672 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131291821 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154592957 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.207228543 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172307076 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.134244934 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112862552 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227991325 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160044445 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185975343 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18101798 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13890637 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17441946 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188105701 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135730066 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179840486 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239496405 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142417617 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122473708 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135658714 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157665768 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264193767 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124708274 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206226528 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184552334 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159602988 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168942089 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147808428 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223690253 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158451566 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186972895 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14864809 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160467323 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157514294 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1390809 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.101841461 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156200664 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168068734 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150815413 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15939955 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.168307824 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1977715 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124238875 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116033892 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317969243 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195717666 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246150128 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.105840477 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136816258 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163233447 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153004187 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.177248575 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178728883 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137391094 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137611638 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136387884 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.13183679 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.140823286 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128155563 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225054333 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16802793 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20935652 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.138202339 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278659231 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1119205 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157140468 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.11791453 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.103306564 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150837693 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146673645 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159256921 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.221351308 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238897015 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149637802 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.1347474 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151294742 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.097311834 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137484184 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166385222 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165422012 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178235867 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146095119 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080206445 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158272086 seconds)
  done (took 83.635231132 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165618357 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.134607684 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.149401747 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.205165296 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177237986 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270385603 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211824985 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.255607556 seconds)
  done (took 2.712577815 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093497028 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.148196771 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.159361765 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134510161 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092131478 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119472882 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.349346838 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133274179 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.118919001 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.12084554 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174948979 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094054919 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.558430481 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.09090117 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119550241 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109881436 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092391815 seconds)
  done (took 3.844370539 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.477864673 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.741162888 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.51790822 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097303019 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.238305203 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113071661 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.838048845 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.2019199 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.117573633 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.495976511 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.779991198 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.166342489 seconds)
  done (took 18.930184969 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.116122368 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136969552 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.122606341 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.15361993 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.141849573 seconds)
  done (took 1.820676967 seconds)
done (took 132.746180985 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104573988 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.406790034 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.07109123 seconds)
  done (took 1.658423907 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107869697 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.13766754 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107883371 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137595808 seconds)
  done (took 1.642714511 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098276984 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126680096 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108878386 seconds)
  done (took 1.479477098 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.325116202 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.190030918 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.170786432 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107851736 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128756147 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102959731 seconds)
  done (took 1.489698563 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.09783837 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128415624 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097513643 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130381079 seconds)
  done (took 1.605002836 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094900868 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070184981 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100784209 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074967388 seconds)
  done (took 1.487258399 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113814023 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132498598 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.102939105 seconds)
  done (took 1.500833748 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.129270885 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139171175 seconds)
  done (took 1.420595921 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105603903 seconds)
  done (took 1.253096143 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.117827797 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.168602439 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.189479558 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.166222173 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.236147639 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.165212014 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141840755 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.11347823 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.132650608 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.145599082 seconds)
  done (took 2.728971885 seconds)
done (took 18.203659466 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103528452 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.512836253 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413158698 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116608838 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721602207 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379365979 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.063739668 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146918745 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165719048 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093668835 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140174677 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.670172248 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.053280256 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.468729469 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.012154643 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.37328741 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676108038 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121337169 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119367162 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09409341 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.047485748 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091968223 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122502071 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091690232 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704505724 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425117253 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095049592 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.371795736 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092218603 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126611266 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382225698 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123169903 seconds)
  done (took 17.259130407 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.096196507 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174039585 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097070506 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138432394 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124146007 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09363244 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124869112 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092474669 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178906332 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122990413 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.10934716 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121990622 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124719546 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095590365 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142756933 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091924424 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125173345 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09191856 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121944532 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120265491 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112969284 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120803574 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093973414 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121647592 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093635306 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135225996 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093385159 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122213149 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119718141 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098561778 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127673532 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09473737 seconds)
  done (took 4.880104794 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140741723 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18273349 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128090596 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126093089 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169041898 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124214702 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.19921093 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11696411 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182817378 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123311505 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139204617 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092546308 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156753293 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093038751 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142814517 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121016444 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096377024 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122411974 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091524704 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124223673 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140001037 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093777078 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122341383 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093765534 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123189006 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108263614 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124601173 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120652191 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095227464 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126409244 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099083673 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125344108 seconds)
  done (took 5.210616393 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098338863 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.1256123 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.10976219 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138786717 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.093986819 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12679384 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097198213 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124987503 seconds)
  done (took 2.077312021 seconds)
done (took 30.574188406 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111754766 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.12751032 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106714303 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135326792 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101828683 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133353434 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090577994 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.135169584 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133524027 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102607831 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137388349 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092437876 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.12251395 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09229995 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134976993 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097289804 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132809324 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.10166361 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134425803 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132481795 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095398686 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133330095 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103641912 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134473608 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103673795 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133859969 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137752173 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099892268 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122711868 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.09482338 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125813798 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103698652 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124687292 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105561012 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127495967 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096714746 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124269386 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093601867 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133324659 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132849458 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100829907 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133411485 seconds)
  done (took 6.072980754 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.10852697 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139954648 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105114509 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080482909 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117707995 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080073527 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138163875 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078656865 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109402307 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108119452 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074228473 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106995604 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078484215 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101451758 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078351388 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075362314 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108684249 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076239985 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075952666 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106149975 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080308785 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072014384 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108946142 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079484576 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074669559 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110514936 seconds)
  done (took 3.642306696 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100311798 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134279771 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112902468 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184952034 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160400628 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099157656 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.13259356 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.108854975 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.138697224 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119813048 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096339468 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149281401 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109140684 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130290926 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.090765597 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137319851 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.13496353 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094666829 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12814068 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112654275 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139749232 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101788307 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142198588 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.1326762 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093601684 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122941633 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097815017 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.13479568 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.09776858 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.13215481 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096440851 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125727636 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122231565 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105447779 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125914564 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094060192 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143017293 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102443289 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131161255 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.09166779 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.129823414 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.120655363 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114753584 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161676983 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09102598 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129459201 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.094049116 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133134793 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120583386 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111599008 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131609465 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091413753 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125674013 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09130383 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121433267 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106285813 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.12425322 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094174685 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131453322 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125369812 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106288402 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125461381 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108354177 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122309259 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099262537 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121762545 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.091928282 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121224316 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.11395698 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124187429 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162277913 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093293562 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124777457 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101001823 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.131335946 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127080905 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093685578 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137832215 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102343466 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125487788 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101505841 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126142351 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094606833 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141237078 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.094925949 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125467676 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.092580215 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.129405008 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123544714 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094089823 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136504131 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091512836 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125469383 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109642492 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122003124 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.093353963 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129353579 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126243795 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092347808 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13719275 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097370987 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123954145 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102066067 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.122920943 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.093798641 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.13256865 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126348558 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092844656 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12618252 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098793434 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123210672 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093751591 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.1254779 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094187713 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133473225 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099651564 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128261677 seconds)
  done (took 14.870564427 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.229109073 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.224434665 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.236883071 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.264018986 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135853314 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113630145 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.242808052 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.125221358 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124810974 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160177017 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.174998046 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181355198 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.168674722 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.178559641 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171022763 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093307658 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.141983513 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.163233279 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215178303 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.258909828 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.14408327 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.09992126 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161933851 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160956702 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137998883 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132027776 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.109567004 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.136966176 seconds)
  done (took 5.869095763 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108292182 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155920037 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097762002 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145098598 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149779888 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.09195445 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.12898723 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.092895096 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136161793 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136371218 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092941331 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129063795 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099213561 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132660564 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122575851 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103729612 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133188389 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095656637 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127178753 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097385665 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133878837 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100995811 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128173132 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.090761863 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.133627796 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121292308 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087558849 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143451633 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.091376824 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.144966267 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120446941 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102261498 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137205458 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093627437 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122914836 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094988641 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125190409 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094576536 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125093 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091279046 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122621534 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.076924868 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122653101 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.105366212 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.129403817 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080086308 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130458765 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.097997633 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.125283608 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119486403 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096934858 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124579284 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.09707512 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129748728 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.095563792 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123460783 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.095902302 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.11529718 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099591296 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124961462 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084801929 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.090231704 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.129054068 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117785995 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101273519 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127978008 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092560236 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125970797 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097728345 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129593661 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095865098 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130582647 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091227198 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.12691825 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095255028 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130228131 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095451709 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123065914 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.092568525 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.124774285 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075283279 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124645078 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073869622 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127484496 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092005496 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122546838 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096107444 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130035651 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137855661 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095189145 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133172247 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094452806 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123402139 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.09636302 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113142336 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096535788 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.14001723 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140325051 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094810648 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121273916 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107976277 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125944461 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092444146 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106566828 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102903871 seconds)
  done (took 13.027462833 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128010413 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154738964 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.0943122 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.142422595 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157259915 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.15731802 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102573163 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131270379 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095743316 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143384474 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093605932 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.13343901 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093306411 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138149905 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156906229 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103890812 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125853881 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108485351 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128631806 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169790281 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.11186827 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143361383 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.109983706 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125114701 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098817563 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.141942385 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161886547 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107029886 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137813521 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142173759 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.10956442 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161179869 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.11156042 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.129893402 seconds)
  done (took 5.551640916 seconds)
done (took 50.196197007 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.273407687 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.519966995 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.261432352 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.256793549 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.288014934 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.295532753 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.272456463 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.260734063 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.438051586 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.260819169 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.499995846 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.92868832 seconds)
done (took 59.74718318 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.265897394 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.398501499 seconds)
    (2/2) benchmarking "String"...
    done (took 1.528524917 seconds)
  done (took 4.117919821 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.621697866 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.230997474 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.527116533 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.262587948 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.263129915 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.558513225 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.089132434 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.673613621 seconds)
  done (took 28.790906241 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.271736055 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.35367264 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.292117985 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.27025751 seconds)
  done (took 6.37551657 seconds)
done (took 49.360231517 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.244262742 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.312579582 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.280177682 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.26137528 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.380951826 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.28601588 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.657538015 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.317293752 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.29646122 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.248413451 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.297569579 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.274934875 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.262764592 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.680270308 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.266241563 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.283397171 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.291820821 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.803152817 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.685589966 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.267819685 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.286345824 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.291170325 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.271481881 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.287835776 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.315478285 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.264595785 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.283877413 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.272892884 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.011414916 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.266137801 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.293670376 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.877611607 seconds)
  done (took 193.309749252 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.264408745 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.259033086 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.350959233 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.311490251 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.772611581 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.466873178 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.401676481 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.861210998 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.289955918 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.295983738 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.441827242 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.265304528 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.497021912 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.242984045 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.295420935 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.271927577 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.482495193 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.517921864 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.320758551 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.443577658 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.286987116 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.370179502 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.321976513 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.41472498 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.275554042 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.376854023 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.291239217 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.272891513 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.47629786 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.424813069 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.303287454 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.328312775 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.924299153 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.125651966 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.29284927 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.285730595 seconds)
  done (took 152.01413917 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.313504872 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.266991573 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.267160409 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.267616433 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.267319572 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.302123365 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.26766281 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.861118497 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.881994736 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.776796227 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.492991102 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.784198923 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.571622555 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.26831686 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.365264612 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.281722345 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.268623754 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.268968748 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.283848855 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.314539322 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.269033313 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.267959254 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.860967751 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.280636796 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.271154496 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.45083974 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.287950312 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.302984352 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.661809041 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.26836434 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.303393942 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.606076283 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.323610211 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.26949409 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.713797971 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.739909351 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.387513057 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.270529402 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30301411 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.269001215 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.552397041 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.26886839 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.267501803 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.26958688 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.272797749 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.993304282 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.272852116 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.863410876 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.269309127 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.247946489 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.270070374 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.269891847 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.827919545 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.060371927 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.293159843 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.269232061 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.273170957 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.271100136 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.268380002 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.304259032 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.789673385 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.366343728 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.290536709 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.273538661 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304501799 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.270054491 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.471664838 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.273844418 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.413911894 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.346846704 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.381380357 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.880594601 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.273223345 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.371110217 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.393306902 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.271894442 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.27015786 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.270273841 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.270472694 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.383987939 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.271640293 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.710418092 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.452631951 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.292512244 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.784032447 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.373254371 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.271726931 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.724705142 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.275007126 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.272205302 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.058524661 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.271736735 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.371155395 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.271826112 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.272568968 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.272611965 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.715179397 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.887713032 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.582171423 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.277349135 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.771910056 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.274544937 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.733694972 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.858659446 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.028282543 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.277343738 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.386715236 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.454017922 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.294474326 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.273374276 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.77785251 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.277302001 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.331730052 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.273660493 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.67282038 seconds)
  done (took 375.413910432 seconds)
done (took 723.23962533 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.877823571 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.875936509 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.989044364 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.868330098 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.830011771 seconds)
  done (took 10.638877954 seconds)
done (took 11.836515043 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.475372438 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.47429181 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.337486785 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.476459425 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.303338072 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.494890529 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.455597797 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.293629746 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.381091473 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.363018676 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.381084408 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.331240853 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.303197345 seconds)
  done (took 19.268145571 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.608695307 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.611615327 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.340002708 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.615167488 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.316719217 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.605941014 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.47999106 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.505674068 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.496610062 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.312898569 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.28655524 seconds)
  done (took 17.378509142 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.608932839 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.611738633 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.34381034 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.607684968 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.31814095 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.598485693 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.486967069 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.5010245 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.501251661 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.312895497 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.287511775 seconds)
  done (took 17.377048977 seconds)
done (took 55.221347315 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.284602273 seconds)
  done (took 2.483456651 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.320646922 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.486656825 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.303575329 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.288453276 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.284774652 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.284530493 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.289100653 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.285246869 seconds)
  done (took 11.742830911 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.283941127 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.28079627 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.280796514 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.283078366 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.283830839 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.28429682 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.27978474 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.284250198 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.280214112 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.283078279 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.282228553 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.284829991 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.28121737 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.281808214 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.281241852 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.284716598 seconds)
  done (took 21.720175926 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.284138205 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.281583562 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.281449773 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.282550527 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.2810315 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.28234949 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.282595795 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.281971398 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.282462496 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.28290132 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.28396464 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.283255416 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.283651078 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.282162209 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.282894474 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.283474557 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.282856544 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.282813034 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.287826968 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.282936447 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.283941365 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.283509075 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.28354924 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.284014279 seconds)
  done (took 31.996614085 seconds)
done (took 69.142324359 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.559472683 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.07401766 seconds)
  done (took 9.835358246 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.285761254 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.285906482 seconds)
  done (took 3.77527066 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.28569379 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.286370626 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.285559351 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.286060851 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.286223359 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.286766524 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.286178349 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.286760833 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.286287672 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.286059467 seconds)
  done (took 14.065163975 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.284907263 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.286385785 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.284148308 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.28567379 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.286596695 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.283778095 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.285868646 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.285459749 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.287084245 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.286067191 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.286414103 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.285677737 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.286613807 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.285111938 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.286555498 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.283856413 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.284255442 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.284183336 seconds)
  done (took 24.342105082 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.287500134 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.287087016 seconds)
  done (took 3.777191993 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.28562825 seconds)
    (2/7) benchmarking "second"...
    done (took 1.285032235 seconds)
    (3/7) benchmarking "month"...
    done (took 1.284123927 seconds)
    (4/7) benchmarking "year"...
    done (took 1.285354192 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.284276028 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.285495639 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.284669219 seconds)
  done (took 10.198152516 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.289370281 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.459937263 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.547341345 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.900966046 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.288449441 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.290837974 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.152039641 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.29152274 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.293030926 seconds)
  done (took 14.717432694 seconds)
done (took 81.912903635 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.320783313 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.29904283 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.530988557 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.309289981 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.299849661 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.624355932 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.316250907 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.418599716 seconds)
done (took 38.324546038 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.293114034 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.272833475 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.162099404 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.28173822 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.368078166 seconds)
  done (took 19.290861694 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.368047484 seconds)
    (2/2) benchmarking "read"...
    done (took 1.62459695 seconds)
  done (took 5.197480438 seconds)
done (took 31.986304912 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.290064093 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.28973986 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.290005421 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.287462259 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.290555373 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.287672891 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.287085407 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.2906131 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.289644599 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.287673455 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.29042518 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.289773591 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.290455382 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290164174 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.28723956 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288514209 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290940166 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.287297003 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289459307 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.287290368 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.287611757 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.29114836 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.289077621 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.288681719 seconds)
  done (took 32.144838452 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.291801192 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.289703478 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.290911945 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.291990453 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.288379865 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.292500024 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.291156564 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.289040977 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.290353269 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.292009891 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.289358064 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.288640458 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.291506304 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.289436156 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29228413 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.291192326 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.292131179 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289555945 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292513357 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.290455948 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.292525519 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290257902 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.289941244 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.29280626 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.289970367 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.289749631 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.292864358 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.291583771 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.29177794 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.290162265 seconds)
  done (took 39.933939464 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.298424104 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.299757654 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.29327071 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.293089318 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.292408548 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.2926287 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.292944055 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.293226592 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.292666934 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.294084762 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.293227599 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.293696046 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.294472464 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.294192022 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.292974642 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.293578498 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.294767494 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.292990714 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.294625478 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.29403972 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.293386813 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.295138522 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.294399688 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.293615373 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.293509635 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.294361916 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.294284169 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.295211786 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.294568385 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.29362054 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.294770011 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.294492017 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.29407429 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.293699118 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.294353846 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.294513076 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.300531925 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.302195481 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.29471628 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.294567208 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.295310259 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.295326086 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.294712359 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.295439659 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.295718642 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.295735137 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.295482264 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.295671546 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.295915318 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.296540826 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.294588626 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.295881915 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.296134702 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.296726156 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.296736981 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.295782656 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.296664706 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.296160783 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.296352286 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.296192553 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.296712352 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.296466914 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.296740194 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.297232656 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.297895301 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.297488346 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.297715875 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.296594657 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.297864363 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.29722681 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.296980082 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.297171801 seconds)
  done (took 94.475278482 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.297313251 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.294380333 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.295575078 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.295096118 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29471232 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.298106628 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.294588188 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297604627 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294914807 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.297720883 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297722788 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.295647407 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295116832 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.297589673 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.297911042 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.295695635 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.297388293 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294758633 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.297122006 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.298933517 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.299008151 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.295564508 seconds)
  done (took 29.735794765 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.299813362 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.299815197 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.295435351 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.298451901 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.295599167 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.2986915 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.298570096 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.300838083 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299486064 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.296593386 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296032202 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298704648 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.296383794 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296641017 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.296885467 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.299161225 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.300420553 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.297795064 seconds)
  done (took 24.579453064 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.297823715 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.297410862 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.299086305 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.297007291 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.296743669 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.299859836 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.298593951 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.300567252 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.30057607 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.29711271 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.301338127 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.300909338 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.300374464 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2982281 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301121923 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.297738765 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.300580519 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29894577 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.302141213 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.299087075 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.299048028 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.301984811 seconds)
  done (took 29.801042736 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.301607605 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.300527085 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.297965938 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.298518698 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.298553583 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.301815485 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.300760853 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.297810463 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.304089937 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.301356665 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.300025104 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.302143912 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.300392418 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.299909455 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.299237749 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.299199494 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.303283507 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.300085992 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.302286586 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.300251069 seconds)
  done (took 27.226404638 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.302985753 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.303296552 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.303155828 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.302345386 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303946212 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.303524857 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.3040518 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.302885829 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.304170303 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.304250702 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.304166937 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.303639667 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.303884337 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.303879186 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.303606278 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303961096 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.304169713 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.305189437 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.304929642 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.305147357 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.304908336 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.304913113 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.304708414 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.305005852 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.305461664 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.305588826 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.305586758 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.304979777 seconds)
  done (took 37.73673723 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.304249522 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.305187873 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.302245692 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.302121258 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.302838425 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.302003361 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.303049399 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.302539561 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.304505472 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.302430011 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.304943712 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.304859523 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.304800874 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.305789409 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.305098028 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.305563718 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305452149 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.302315526 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.303689633 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303317425 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.305181708 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30640594 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.306422008 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.303890926 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304316746 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.306870967 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.303367823 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.305083993 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30626855 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.303316022 seconds)
  done (took 40.348483888 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.325818641 seconds)
    (2/2) benchmarking "in"...
    done (took 1.326504541 seconds)
  done (took 3.873853829 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.304545873 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.306972727 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.306788622 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.305074433 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.303471167 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.307315965 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.307374431 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.304487751 seconds)
  done (took 11.66735839 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.306638963 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.306674091 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.307197277 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.306639642 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.308235596 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.307080741 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.312680898 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.329371072 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.307692802 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.308090974 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.313634479 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.314024717 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.308812062 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.306656761 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.306660128 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.308661765 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.30682661 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.309918408 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.308646957 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.308490518 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.308671009 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.309845451 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.31012894 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.305721339 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.309557922 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.317638813 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.33208436 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.309584428 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.308180265 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.311306046 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.308969879 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.307011096 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.308927886 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.31011882 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.315562989 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.311230563 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.316995609 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.32978593 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.314678717 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.331991394 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.310277299 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.306767666 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.310955913 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.311073224 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.310703633 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.310153671 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.311000142 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.307718528 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.308686833 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.313285012 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.31553383 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.30987961 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.308448293 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.312302191 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.311410766 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.316528035 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.33329775 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.313918829 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.320020545 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.320991073 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.343757434 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.336563969 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.311599694 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.311517549 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.321425933 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.335704193 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.316824445 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.330886328 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.309423276 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.311613934 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.317427395 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.344097077 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.339420447 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.313026719 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.312672572 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.31256836 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.311001983 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.312008952 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.317893474 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.335827961 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.31171684 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.313037349 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.322168733 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.335726899 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.311776451 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.313232461 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.313075454 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.313137721 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.313321932 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.321550598 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.334739853 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.313165104 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.311784031 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.311975847 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.313849865 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.313586505 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.311654058 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.313373199 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.310342406 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.315054782 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.313754745 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.317069779 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.321197136 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.313601485 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.313277909 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.31947716 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.334569569 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.313273921 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.318296492 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.313562811 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.314221753 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.315970941 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.318061707 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.311816187 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.317744103 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.32217227 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.314523547 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.314566051 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.315192522 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.315209376 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.32532905 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.339946641 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.316367558 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.315347937 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.320329938 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.327591295 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.316073575 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.31686602 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.315970894 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.31320684 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.313714005 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.316522306 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.316077952 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.315562833 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.315409032 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.317231155 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.312831677 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.316031979 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.315991563 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.316159925 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.316305923 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.315513736 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.316418488 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.317493249 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.316196789 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.317392398 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.321142627 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.337507772 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.317152287 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.316291285 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.313397643 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.316971378 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.316858309 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.317415911 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.315801906 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.316035184 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.316892932 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.317142585 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.316449133 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.317820791 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.317469957 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.317673186 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.320435397 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.318354856 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.321098084 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.316882309 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.315177639 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.318696155 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.317551604 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.317157434 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.318162834 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.317111771 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.321080174 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.326383533 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.318525864 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.31885229 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.320195645 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.318902439 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.319405567 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.31934357 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.322703021 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.32586217 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.318733349 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.323749378 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.341001259 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.320250931 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.319217968 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.317987329 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.318170229 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.319043568 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.322490046 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.327579557 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.330545719 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.345507224 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.320670438 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.324401009 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.321747872 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.323949675 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.322438749 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.320742131 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.320667194 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.32039811 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.319374767 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.320902228 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.320808296 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.320831666 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.319201909 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.320238855 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.320067311 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.320612857 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.321266094 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.320677904 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.321061227 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.317826079 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.322491478 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.320394878 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.320796023 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.319191376 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.319751548 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.320884084 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.321724875 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.321778604 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.326197528 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.318696174 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.321835419 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.320541464 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.319869724 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.320741735 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.321383077 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.322706399 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.320513449 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.32640695 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.342930878 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.321669879 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.327654583 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.342756572 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.320629497 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.324289095 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.32259804 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.319969365 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.324961763 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.330588714 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.322734322 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.32307368 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.323635077 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.322995562 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.323032872 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.327968719 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.341671727 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.32181772 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.323049813 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.323748722 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.319439594 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.323469961 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.323020858 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.323099641 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.323883433 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.323901853 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.324953465 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.323328699 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.32304656 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.323661504 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.324016829 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.326513098 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.332105921 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.327326882 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.322919247 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.324585141 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.325318626 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.327552855 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.323713291 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.325604066 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.32438806 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.336234297 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.351361911 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.330276875 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.34629244 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.326248041 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.329696289 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.347098973 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.328519134 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.324380759 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.324772885 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.323779288 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.324726096 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.323555078 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.325128447 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.325764108 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.32670756 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.326676378 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.331170884 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.32701755 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.325389326 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.326167334 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.326889668 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.325905976 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.325785394 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.325584425 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.327016502 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.327413507 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.325089394 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.325516525 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.331663109 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.347421122 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.326522249 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.325902301 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.325751811 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.326061479 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.326402725 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.327481302 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.32993169 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.334982336 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.32960706 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.334883583 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.329171832 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.336214002 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.327316497 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.331373386 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.335589917 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.325890425 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.326390324 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.327495192 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.327841702 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.333811291 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.350128274 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.32957214 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.331914423 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.329027041 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.329693914 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.32822081 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.327235847 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.329570842 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.328479838 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.33461206 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.35019547 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.331997171 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.328581351 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.325721501 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.329857863 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.330546127 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.329010497 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.331272586 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.32844913 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.329098622 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.327491249 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.328526757 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.329611134 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.330127492 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.329891151 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.326871669 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.329828228 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.335559129 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.353605685 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.33424089 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.330150047 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.335901731 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.350181262 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.335883495 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.351694809 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.329282414 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.329985659 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.330578359 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.330704394 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.329267032 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.329852902 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.32971759 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.330859736 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.335093655 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.330242059 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.332473509 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.331144116 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.33088203 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.330411877 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.340619493 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.354406711 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.332458371 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.334703276 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.327590514 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.331645986 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.335947915 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.331227587 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.32912471 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.333805957 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.342141714 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.339963795 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.331279608 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.330829229 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.331132921 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.332779207 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.331786988 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.332084886 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.332138325 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.333041243 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.331901356 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.331714588 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.333316135 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.332734321 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.332871907 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.332549421 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.333029254 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.341720862 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.354098303 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.332741296 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.332623203 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.333706103 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.332318209 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.332848529 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.333567245 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.332785904 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.33322217 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.333753256 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.339910089 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.339748082 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.334310377 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.332510414 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.333945941 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.333433063 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.333740238 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.33515623 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.334521645 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.333760036 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.33366877 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.336045894 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.335070919 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.332351601 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.33462411 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.333293254 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.334132501 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.33751403 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.341748668 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.333711942 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.332506256 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.334326567 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.334765571 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.334360798 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.334343034 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.341312118 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.359888981 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.345722459 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.342809989 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.339357106 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.334991618 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.339146698 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.343286887 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.33311967 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.336151903 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.335687583 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.335958011 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.336843976 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.339221279 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.335552441 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.340493085 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.356083432 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.334937975 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.342727742 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.356725203 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.336907898 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.338060727 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.339292255 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.335785139 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.33365503 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.336045551 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.335718222 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.342803758 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.357888667 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.336741836 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.337791965 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.336296058 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.338889306 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.341368141 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.336986714 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.336652603 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.334369389 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.337211746 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.337870253 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.337773946 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.333611715 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.336436945 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.336387754 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.340321746 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.344063161 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.335527869 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.338485759 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.337639601 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.337051502 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.337647743 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.338547787 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.335721724 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.336122229 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.335647213 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.338201961 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.337716491 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.339105167 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.336814965 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.339408076 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.340256901 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.339165879 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.341581738 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.349123643 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.346016879 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.335970655 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.337251529 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.338443085 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.341265322 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.339139299 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.339886482 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.33859746 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.338897588 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.339434377 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.339178171 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.339537965 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.342758311 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.354184114 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.360997419 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.339764759 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.339529905 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.340630182 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.339731501 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.337577277 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.340953022 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.341070716 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.342681032 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.347937128 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.340786816 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.346001315 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.361205712 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.340971211 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.345208348 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.343365113 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.347754874 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.342568837 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.340058731 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.341368344 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.345903136 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.355228501 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.341250863 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.35104075 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.368885043 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.362104235 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.340683783 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.341684072 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.341294792 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.341173157 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.341856382 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.341583907 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.343158821 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.342377861 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.342901793 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.34453143 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.346539725 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.342503298 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.343525568 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.342296927 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.340874726 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.341992569 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.339166382 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.341920842 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.342370024 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.342634155 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.34342671 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.342996213 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.343367655 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.353823317 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.370490795 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.342956518 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.342460866 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.340320005 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.344207191 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.345844366 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.353167303 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.350835341 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.342564745 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.34348544 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.343479194 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.34369265 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.342412336 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.343036513 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.343369539 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.343516148 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.340490722 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.354024194 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.371934896 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.347186103 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.343801154 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.343994575 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.344939732 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.344378358 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.344719761 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.344339258 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.345095968 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.346962675 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.348302652 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.344737668 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.344321671 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.346790802 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.352856515 seconds)
  done (took 793.295696531 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.342282539 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.342837627 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.342481812 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.343782822 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.341861365 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.341920458 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.342544164 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.342014091 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.343404083 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.343082569 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.343316736 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.343052187 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.34207771 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.342395422 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.342635036 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.343787987 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.343240657 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.343701229 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.343531644 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.343525799 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.343678799 seconds)
  done (took 29.459073115 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.347970635 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.343201519 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.342998847 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.346113551 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.343968276 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.34634494 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.343482988 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.346908233 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.347384854 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.344126946 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.346999976 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.346865806 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.344621381 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.343598953 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.344414959 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.346688245 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.347251915 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.344242154 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.34722945 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.345903429 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.347115617 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.343642586 seconds)
  done (took 30.860829859 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.347752535 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.347181513 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.346698813 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.344188882 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.347120991 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.344332291 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.347555331 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.348584935 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.347605052 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.348602 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.347229729 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.349507751 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.355880735 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.353870369 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.34888195 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.348517884 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.493023441 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.348386002 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.34916776 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.349355702 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.347150548 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.353695069 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.368302614 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.346849352 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.348197967 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.348335282 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.349242229 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.349574296 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.348854308 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.35004632 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.354078935 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.349572243 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.348146075 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.351298855 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.349332519 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.350171949 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.354205099 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.350725097 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.347860625 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.34906264 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.359583689 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.37193419 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.350251716 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.354891352 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.3722198 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.350847387 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.352464132 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.357817202 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.348633086 seconds)
  done (took 67.607314414 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.351141085 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.350537851 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.347724548 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.350968053 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.350931314 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.350493811 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.350948162 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.350819204 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.347434278 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.348747716 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.351123669 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.348467293 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.348876131 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.350231962 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.351292799 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.349803014 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.349423201 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.349651231 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.348309836 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.348640795 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.34860277 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.352291673 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.352450041 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.348826327 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.352802268 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.349210333 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.34932575 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.353215191 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.349142591 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.350061484 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.35235215 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.352095281 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.352994761 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.349613506 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.350718535 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.353766951 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.352899408 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.350247008 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.354624105 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.350285389 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.352925908 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.352841509 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.352811411 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.353559648 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.351694079 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.351733484 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.352152085 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.350529106 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.351980203 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.353972537 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.353436548 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.351480621 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.354584335 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.351369064 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.352909991 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.354260758 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.352219534 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.351057686 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.353261332 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.35097922 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.351720342 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.354691201 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.352869162 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.354384396 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.355313669 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.352641765 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.352517112 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.355085673 seconds)
  done (took 93.165487879 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.355456177 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.354894807 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.35419608 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.355297973 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.35670569 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.354304085 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.355303303 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.354541534 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.354846342 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.354645609 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.354212456 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.356123642 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.354544369 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.354323099 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.354337768 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.35429006 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.354257821 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.355219897 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.356175642 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.355102105 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.355255767 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.354322535 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.354249995 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.354743485 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.355864195 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.355655174 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.356287584 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.355341578 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.355669132 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.355166545 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.356173687 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.355670549 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.354818269 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.35557481 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.355748634 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.355368884 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.356195224 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.35617685 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.355605041 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.356778206 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.356546434 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.356388055 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.355627024 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.355986342 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.359861453 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.35732534 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.357896853 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.35735878 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.357451194 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.355474353 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.355996631 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.356941996 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.355523932 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.355304484 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.356760554 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.357403166 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.35429161 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.354385722 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.354326983 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.354814295 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.355090067 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.355827162 seconds)
  done (took 85.314794207 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.355384604 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.35417956 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.352250094 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.351761821 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.356789712 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.352961235 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.354444344 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.358222885 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.352850454 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.350575312 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351946353 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.347523516 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.347735691 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.352088635 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.348262402 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.349125728 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.3492461 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.348014249 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.350931962 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.348338585 seconds)
  done (took 28.298499181 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.348667358 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.351329268 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.347723305 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.347809631 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.35033391 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.347300676 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.350682937 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.350784721 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.349767184 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.349884953 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.350939439 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.351000942 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.348885028 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.348548117 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.35132599 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.348697776 seconds)
  done (took 22.856322713 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.349093809 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.350336217 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.350228405 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.349202604 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.349335414 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.347441992 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.351224132 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.348099392 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.347903279 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.351384503 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.349287105 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.350767608 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.350492552 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.349932417 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.349149827 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.350299479 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.348092645 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.34789029 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.351815752 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.350210037 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.34991041 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.350134449 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.350516087 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.351640722 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.35042472 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.349151204 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.348973072 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.348313244 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.350015243 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.350660423 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.350224425 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.350450795 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.349181608 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.348263742 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.35147886 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.348380632 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.352018492 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.352004201 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.351771908 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.351703184 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.351154423 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.34889416 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.351555748 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.352452168 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.348928701 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.353302042 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.349753145 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.349278573 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.35009892 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.348794473 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.352057045 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.352489561 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.351945602 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.353366943 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.352769185 seconds)
  done (took 75.527554699 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.352878674 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.354058242 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.350005775 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.352793634 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.352045779 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.351039326 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.353509119 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.352038066 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.350648518 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.353273579 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.351380773 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.354309716 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.350939634 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.352664502 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.351506677 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.354714961 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.351311822 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.352392872 seconds)
  done (took 25.604471378 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.352435932 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.352149292 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.354676319 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.351623113 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.352555035 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.35496396 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.351808173 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.355227449 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.354297806 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.352391149 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.351197813 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.355208508 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.354736213 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.354847038 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.352848209 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.352516912 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.355063429 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.355447061 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.351638227 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.352686636 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.355835006 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.355087798 seconds)
  done (took 31.04493305 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.355284977 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.354401277 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.353506843 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.370655115 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.37461533 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.377626123 seconds)
  done (took 9.45166302 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.36369843 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355937152 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.35252721 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.356539508 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.355545475 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354728164 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354214256 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352873716 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.355980518 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.35421587 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352930682 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355640545 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355882504 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352069848 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356231501 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356733043 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354017473 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353415195 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354745224 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356340045 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.354362081 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356942125 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353934155 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353940908 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353724928 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354666637 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357211539 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355616062 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354666299 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357398862 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358158777 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.354281968 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357158288 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.356013873 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359001971 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358198181 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354877266 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358414383 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357968566 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355046383 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.35817952 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35783296 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358812624 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356518172 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358659308 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357035107 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355753595 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.355442993 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355681576 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360837656 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359376124 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356957153 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358158115 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358633531 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358884959 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360808596 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358525016 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359488848 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359457778 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356576453 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357605327 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358932064 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357735653 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357624396 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.364842177 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356526101 seconds)
  done (took 90.831773995 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358422751 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.357596197 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357170189 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358196077 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356568267 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357356145 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358188919 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356782469 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357932916 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358411776 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359906115 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357038036 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358821155 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.356599079 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357617464 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357852878 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357348979 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357849653 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358568487 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.363158385 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357440854 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357651572 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358295959 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357865353 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358332491 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361031255 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357440939 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361215384 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357877799 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357675965 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358039373 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357985513 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357896791 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.357688887 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359801731 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357786048 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35699396 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35809154 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358100071 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359804976 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357786239 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.363135883 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358294722 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.356865313 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358469169 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357646942 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358373803 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357672681 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357400991 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359805025 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35843792 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358867715 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357952808 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357234592 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356976402 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357144095 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359788505 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358744203 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358409691 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360273512 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358004832 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358683 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361907732 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360587439 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357663436 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357890794 seconds)
  done (took 90.923709966 seconds)
done (took 1846.971189799 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.415338749 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.451015546 seconds)
  done (took 14.137501389 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.520108672 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.476007926 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.357910553 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.393006902 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.358829788 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.368839258 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.357258287 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.358725177 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.35823891 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.359202225 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.359006992 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.546702 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.404852413 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.358910086 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.360255346 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.45495051 seconds)
  done (took 43.670687608 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.387163181 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.365315802 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.484031126 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.381304729 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.387774331 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.562069285 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.41971459 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.365060498 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.546647267 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.405547121 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.018352678 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.386724529 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.363110373 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.54142304 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.384051121 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.561687676 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.624009041 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.021652987 seconds)
  done (took 31.476904183 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.846392204 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.364400706 seconds)
  done (took 9.483481549 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.385935691 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.364912473 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.365396393 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.36304415 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.354285318 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.376296189 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.363803353 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.356718263 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.329575675 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.503137066 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.36814168 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.37125926 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.384001373 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.364937668 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.362406342 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.399674169 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.53781964 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.363728416 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.361973809 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.370513418 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.363800791 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.447614915 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.408297173 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.364535236 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.499462885 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.305493188 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.37052395 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.369693066 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.515097951 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.363895863 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.363757037 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.363384478 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.363997348 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.97011962 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.822656366 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.377883345 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.405504114 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.37190126 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.361035131 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.500747896 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.364748532 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.368217211 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.355910311 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.806425142 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.51203966 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.489932086 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.665948741 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.383131403 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.36420852 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.425591148 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.362634685 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.363114161 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.392461661 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.140156097 seconds)
  done (took 113.831544756 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.369590922 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.745768549 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.524038975 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.376280897 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.996469991 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.010059512 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.375565509 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.663304326 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.428362775 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.357359232 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.657104488 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.879126032 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.375676964 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.3810995 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.016285329 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.432053259 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.356523949 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.103631887 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.37324627 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.360415108 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.869947042 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.357792822 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.356813576 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.505207234 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.393731739 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.822045861 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.78848607 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.81308228 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.375160389 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.356268993 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.832833956 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.380530985 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.382576395 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.358452733 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.621600429 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.725451813 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.721226435 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.375332915 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.38738134 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.360250626 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.386710366 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.814140125 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.730876237 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.373985568 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.35473002 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.828569732 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.377105601 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.359064735 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.358222903 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.556507486 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.026500207 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.357139447 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.795808021 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.357956881 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.731086188 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.382677906 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.41753359 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.857975029 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.376901026 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.448930389 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.407034443 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.355642128 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.358900924 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.358824173 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.360215219 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.711985561 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.503404206 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.355551243 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.706663326 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.843798207 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.383656009 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.888211234 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.280354296 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.375118376 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.462464469 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.355640589 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.91503358 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.869687338 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.393286359 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.355398827 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.708080462 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.382763802 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.642061404 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.373334855 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.374846451 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.887456917 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.366182734 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.418887674 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.356478938 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.369662452 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.972909705 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.357248509 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.647716085 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.421872971 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.355418336 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.356299179 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.356381109 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.354055913 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.360769077 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.356029544 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.873050864 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.380875793 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.469235746 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.371059265 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.362806555 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.352894527 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.353283927 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.352811438 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.569276929 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.829357181 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.377408666 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.35494676 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.353404726 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.361048005 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.524353318 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.352439426 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.658942687 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.375891068 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.353182562 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.373789207 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.0587826 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.414036543 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.353757709 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.374656035 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.24066476 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.5622935 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.372466205 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.374699277 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.354581036 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.373340465 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.560572819 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.373560637 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.395517936 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.354083435 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.050416569 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.406040399 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.368920046 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.684511047 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.361528673 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.179381062 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.380139357 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.354116009 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.658199902 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.619471453 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.414433422 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.356617313 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.370231874 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.039282896 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.419185015 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.495817308 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.375024028 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.45068789 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.552979759 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.788139547 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.356295579 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.96432898 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.354867282 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.569081742 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.356128742 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.656158966 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.840600746 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.376977631 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.35633079 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.050512554 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.083955107 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.171380755 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.360373543 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.631776786 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.303491153 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.839643026 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.356626488 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.356228566 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.774238899 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.35849444 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.36106518 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.357306779 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.357732824 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.504124217 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.530540434 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.912888824 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.358609199 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.806179588 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.404882281 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.364040558 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.361979444 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.359343158 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.701529973 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.44794897 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.358149381 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.387612223 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.357184027 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.360516248 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.828165295 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.305353464 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.363380934 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.509383394 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.980563871 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.380182176 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.357805385 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.972994971 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.65349698 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.864602507 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.38087862 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.664106079 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.38704692 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.396177354 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.005283569 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.440633055 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.870886152 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.381718443 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.358582561 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.940398827 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.38002568 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.715363142 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.358456912 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.359702651 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.881949959 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.380242028 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.362900933 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.557930078 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.377717201 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.624067904 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.360597892 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.370663641 seconds)
  done (took 1117.066602396 seconds)
done (took 1330.937921738 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.359960394 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.364620514 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.345642025 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.366634382 seconds)
  done (took 26.712260572 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.370534637 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.36691566 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.368066453 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.366398293 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.368519813 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.366425472 seconds)
  done (took 9.482661579 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.41155152 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.365991457 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.366031018 seconds)
  done (took 19.419942832 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.568343363 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.674852311 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.719662876 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.573244939 seconds)
  done (took 10.81223625 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.369683851 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.368457996 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.368844333 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.369636928 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.370158827 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.373326343 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.369548495 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.369860374 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.373029406 seconds)
  done (took 13.608821306 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.371215267 seconds)
done (took 82.683359695 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.360326671 seconds)
    (2/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.348801615 seconds)
    (3/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.357830235 seconds)
    (4/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.979528189 seconds)
    (5/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.419515449 seconds)
    (6/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.572558822 seconds)
    (7/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.837839514 seconds)
    (8/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.149173861 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.210248924 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.612431112 seconds)
    (11/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.363709494 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.410452378 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.389132412 seconds)
    (14/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.732204198 seconds)
    (15/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.454840181 seconds)
    (16/286) benchmarking ("sort", Int8, false)...
    done (took 4.41458961 seconds)
    (17/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.002547605 seconds)
    (18/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.342469433 seconds)
    (19/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.4718902 seconds)
    (20/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.138336499 seconds)
    (21/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.427618412 seconds)
    (22/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.47291581 seconds)
    (23/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.501084428 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.305224798 seconds)
    (25/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.590605494 seconds)
    (26/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.209254327 seconds)
    (27/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.810835392 seconds)
    (28/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.359356764 seconds)
    (29/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.389281961 seconds)
    (30/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.446521636 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 6.362162209 seconds)
    (32/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.391229836 seconds)
    (33/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.446318588 seconds)
    (34/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.389748588 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.468567635 seconds)
    (36/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.378090871 seconds)
    (37/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.35591278 seconds)
    (38/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.345449548 seconds)
    (39/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.925298208 seconds)
    (40/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.465872098 seconds)
    (41/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.317072954 seconds)
    (42/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.505334089 seconds)
    (43/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.450348046 seconds)
    (44/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.987909758 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.010154487 seconds)
    (46/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.976263441 seconds)
    (47/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.719241656 seconds)
    (48/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.77253553 seconds)
    (49/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.359153491 seconds)
    (50/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.850253987 seconds)
    (51/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.649820023 seconds)
    (52/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.868210172 seconds)
    (53/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.483374562 seconds)
    (54/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.366048361 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.626099766 seconds)
    (56/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.727203342 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.945875469 seconds)
    (58/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.379633514 seconds)
    (59/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.434507557 seconds)
    (60/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.577565622 seconds)
    (61/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.097806439 seconds)
    (62/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.417591836 seconds)
    (63/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.424665072 seconds)
    (64/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.368575257 seconds)
    (65/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.549997545 seconds)
    (66/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.439192819 seconds)
    (67/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.983596856 seconds)
    (68/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.392849719 seconds)
    (69/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.365561766 seconds)
    (70/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.455247799 seconds)
    (71/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.183608521 seconds)
    (72/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.240243512 seconds)
    (73/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.556446232 seconds)
    (74/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.357483116 seconds)
    (75/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.376488926 seconds)
    (76/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.01301966 seconds)
    (77/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.727322225 seconds)
    (78/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.347237835 seconds)
    (79/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.14444949 seconds)
    (80/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.561953894 seconds)
    (81/286) benchmarking ("sort", Int64, false)...
    done (took 5.549807367 seconds)
    (82/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.721185273 seconds)
    (83/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.473575617 seconds)
    (84/286) benchmarking ("sort", Float32, true)...
    done (took 6.365053429 seconds)
    (85/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.176469222 seconds)
    (86/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.382615192 seconds)
    (87/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.550294453 seconds)
    (88/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.353790477 seconds)
    (89/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.387004523 seconds)
    (90/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.581934167 seconds)
    (91/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.380075672 seconds)
    (92/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.216256568 seconds)
    (93/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.39074577 seconds)
    (94/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.400882885 seconds)
    (95/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.359543803 seconds)
    (96/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.464030827 seconds)
    (97/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.470597145 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.721776451 seconds)
    (99/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.491190781 seconds)
    (100/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.36039541 seconds)
    (101/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.381924103 seconds)
    (102/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.433155039 seconds)
    (103/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.453539769 seconds)
    (104/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.354195035 seconds)
    (105/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.681125389 seconds)
    (106/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.591575354 seconds)
    (107/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.186682859 seconds)
    (108/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.382237258 seconds)
    (109/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.416135207 seconds)
    (110/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.417255377 seconds)
    (111/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.657255503 seconds)
    (112/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.418449642 seconds)
    (113/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.956926556 seconds)
    (114/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.473746825 seconds)
    (115/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.433233483 seconds)
    (116/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.186962218 seconds)
    (117/286) benchmarking ("sort", Float64, false)...
    done (took 5.690278294 seconds)
    (118/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.721364387 seconds)
    (119/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.461427946 seconds)
    (120/286) benchmarking ("sort", Bool, false)...
    done (took 1.887998473 seconds)
    (121/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.415664924 seconds)
    (122/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.028099359 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.626663219 seconds)
    (124/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.39741116 seconds)
    (125/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.397012886 seconds)
    (126/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.380677354 seconds)
    (127/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.349540353 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.117623241 seconds)
    (129/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.375325551 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.637787889 seconds)
    (131/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.350760005 seconds)
    (132/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.78160282 seconds)
    (133/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.386142733 seconds)
    (134/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.291288 seconds)
    (135/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.760203578 seconds)
    (136/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.350703031 seconds)
    (137/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.387742036 seconds)
    (138/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.147531542 seconds)
    (139/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.49082829 seconds)
    (140/286) benchmarking ("sort", Int8, true)...
    done (took 6.370292943 seconds)
    (141/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.837879355 seconds)
    (142/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.120541447 seconds)
    (143/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.607234905 seconds)
    (144/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.351161677 seconds)
    (145/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.126071752 seconds)
    (146/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.883550906 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.724770679 seconds)
    (148/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.144141023 seconds)
    (149/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.397431334 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.228809237 seconds)
    (151/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.388553401 seconds)
    (152/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.636558657 seconds)
    (153/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.908403482 seconds)
    (154/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.637780038 seconds)
    (155/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.361619937 seconds)
    (156/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.355130331 seconds)
    (157/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.778442975 seconds)
    (158/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.388320465 seconds)
    (159/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.939436867 seconds)
    (160/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.394991338 seconds)
    (161/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.351742998 seconds)
    (162/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.377814947 seconds)
    (163/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.46035177 seconds)
    (164/286) benchmarking ("sort", Float32, false)...
    done (took 5.351672126 seconds)
    (165/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.777084873 seconds)
    (166/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.170021043 seconds)
    (167/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.61212592 seconds)
    (168/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.37309297 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.025328881 seconds)
    (170/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.084743433 seconds)
    (171/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.494545865 seconds)
    (172/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.371322953 seconds)
    (173/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.393691744 seconds)
    (174/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.145521528 seconds)
    (175/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.098036478 seconds)
    (176/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.807740508 seconds)
    (177/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.826435642 seconds)
    (178/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.138587953 seconds)
    (179/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.479946145 seconds)
    (180/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.399552854 seconds)
    (181/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.353122212 seconds)
    (182/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.391754739 seconds)
    (183/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.372255437 seconds)
    (184/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.410328647 seconds)
    (185/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.431301557 seconds)
    (186/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.374563337 seconds)
    (187/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.459684918 seconds)
    (188/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.358798334 seconds)
    (189/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.375513902 seconds)
    (190/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.488823375 seconds)
    (191/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.415140363 seconds)
    (192/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.529452052 seconds)
    (193/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.354924437 seconds)
    (194/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.371165871 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.786348645 seconds)
    (196/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.4986532 seconds)
    (197/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.352817509 seconds)
    (198/286) benchmarking ("sort", Bool, true)...
    done (took 5.559637605 seconds)
    (199/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.44707506 seconds)
    (200/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.130976201 seconds)
    (201/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.355733203 seconds)
    (202/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.379570117 seconds)
    (203/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.754078096 seconds)
    (204/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.49362044 seconds)
    (205/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.377520107 seconds)
    (206/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.387566101 seconds)
    (207/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.000822878 seconds)
    (208/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.58523636 seconds)
    (209/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.949795399 seconds)
    (210/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.40160042 seconds)
    (211/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.4662052 seconds)
    (212/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.392088061 seconds)
    (213/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.376542253 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.399387219 seconds)
    (215/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.385783703 seconds)
    (216/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.958597765 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.013238184 seconds)
    (218/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.385308192 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.415985403 seconds)
    (220/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.583347524 seconds)
    (221/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.759297255 seconds)
    (222/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.402886436 seconds)
    (223/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.354339443 seconds)
    (224/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.953000872 seconds)
    (225/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.3674827 seconds)
    (226/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.847261881 seconds)
    (227/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.377145314 seconds)
    (228/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.166117514 seconds)
    (229/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.357913857 seconds)
    (230/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.249549765 seconds)
    (231/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.356526046 seconds)
    (232/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.356930333 seconds)
    (233/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.356772477 seconds)
    (234/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.419778741 seconds)
    (235/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.391894285 seconds)
    (236/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.67625317 seconds)
    (237/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.357478863 seconds)
    (238/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.441102461 seconds)
    (239/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.357686149 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.799815471 seconds)
    (241/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.396161432 seconds)
    (242/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.405377812 seconds)
    (243/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.42112763 seconds)
    (244/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.604566847 seconds)
    (245/286) benchmarking ("sort", BigInt, false)...
    done (took 6.394023042 seconds)
    (246/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.45348682 seconds)
    (247/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.559261878 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.803666753 seconds)
    (249/286) benchmarking ("sort", Float64, true)...
    done (took 6.393923134 seconds)
    (250/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.298424139 seconds)
    (251/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.404465317 seconds)
    (252/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.460777795 seconds)
    (253/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.200309728 seconds)
    (254/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.735792783 seconds)
    (255/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.002017041 seconds)
    (256/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.767491428 seconds)
    (257/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.501793785 seconds)
    (258/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.808540212 seconds)
    (259/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.397855656 seconds)
    (260/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.405428839 seconds)
    (261/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.291403925 seconds)
    (262/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.377285708 seconds)
    (263/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.340373264 seconds)
    (264/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.359340814 seconds)
    (265/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.114188236 seconds)
    (266/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.362603025 seconds)
    (267/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.651558656 seconds)
    (268/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.74861263 seconds)
    (269/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.749100862 seconds)
    (270/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.359334253 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.462559075 seconds)
    (272/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.461202769 seconds)
    (273/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.358167035 seconds)
    (274/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.509166225 seconds)
    (275/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.215657788 seconds)
    (276/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.500009757 seconds)
    (277/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.48214215 seconds)
    (278/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.738675876 seconds)
    (279/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.46599893 seconds)
    (280/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.231718633 seconds)
    (281/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.444072545 seconds)
    (282/286) benchmarking ("sort", BigInt, true)...
    done (took 6.379399182 seconds)
    (283/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.586059005 seconds)
    (284/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.359282179 seconds)
    (285/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.404133876 seconds)
    (286/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.454826778 seconds)
  done (took 949.590318438 seconds)
done (took 950.868250458 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.412092894 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.407402942 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.389806225 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.411714192 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.501580697 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.414458889 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.401275701 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.391574901 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.4380079 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.438943209 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.38968936 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.412576764 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.391445673 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.390802171 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.390502794 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.404998843 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.448193034 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.398065276 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.407730359 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.400336988 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.408386187 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.390607351 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.440253515 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.41271206 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.395641298 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.394126684 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.3946552 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.411454315 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.50370063 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.395328062 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.395088685 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.404009807 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.448825926 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.395515206 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.386139295 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.41154996 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.40438088 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.402502053 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.39576951 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.424790575 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.856387905 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.41229409 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.394179876 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.393569491 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.393544366 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.39709089 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.393455823 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.398062367 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.407184332 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.408030699 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.839952948 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.427817642 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.396133764 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.393239556 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.404230358 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.392856653 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.396279469 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.411194679 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.413804106 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.411059772 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.438297397 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.401562689 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.396284459 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.410193336 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.402370222 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.861438737 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.407278723 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.398807311 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.85886926 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.41894035 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.867620836 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.419500924 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.394944218 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.409707609 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.425919448 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.453827398 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.395088394 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.393109466 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.403054538 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.394029986 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.404590951 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.408356402 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.400381435 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.395918295 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.410369756 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.419618874 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.404852777 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.396881753 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.403815105 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.415526356 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.402742081 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.407054228 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.399471429 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.391699006 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.404959126 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.399400777 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.398807948 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.399283644 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.400523499 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.406163711 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.861323432 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.436235795 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.39328513 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.393103338 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.395267933 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.409654596 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.840037579 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.415166627 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.418871163 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.443672519 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.398160023 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.444587515 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.403737612 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.41503212 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.406765803 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.400822496 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.393106312 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.449848629 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.83429924 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.429280576 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.399101855 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.396089666 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.417279893 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.399536295 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.395395011 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.461213578 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.404164759 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.413798675 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.520514403 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.408890642 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.430023053 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.396394056 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.401264196 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.421276574 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.416844836 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.429331575 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.401861723 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.417411992 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.415659413 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.395313229 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.409051414 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.409569807 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.400206145 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.405361292 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.392564027 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.421596797 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.413138458 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.413368388 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.42033406 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.520144335 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.397902065 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.449216414 seconds)
done (took 235.296875703 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.460090112 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.395246339 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.480888877 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.397880468 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.496425861 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.499049582 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.395290749 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.396036778 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.394959483 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.773245843 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.395665821 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.396067153 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.398486967 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.395454671 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.479013889 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.399372022 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.395724153 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.738512196 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.398385381 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.46919745 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.397795471 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.395466409 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.398598841 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.777515798 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.395145756 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.396135039 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.474566188 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.398364114 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.742976906 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.394047297 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.396727611 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.74241043 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.495939522 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.416407128 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.408905848 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.407206903 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.499867919 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.418805649 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.478573906 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.479696845 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.480405531 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.437599131 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.393256755 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.392374661 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.401440382 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.399996312 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.398529494 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.427764346 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.395233482 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.397981637 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.738827232 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.410355905 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.407805136 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.397816343 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.39780585 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.421022908 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.39866724 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.399952244 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.489947144 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.402540231 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.469708337 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.779316934 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.776400147 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.401226986 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.400682303 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.39825252 seconds)
  done (took 152.789891387 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.467629095 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.474399252 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.511531102 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.420088546 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.451476283 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.517543375 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.421282229 seconds)
  done (took 11.569765758 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.406765077 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.402084648 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.450134555 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.451477416 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.401769174 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.549412679 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.401971685 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.413627492 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.399616947 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.454794793 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.403064843 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.404128887 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.409294818 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.395025471 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.449458793 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.412948426 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.51743385 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.402659624 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.402718628 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.555290775 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.400620955 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.409760367 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.454030391 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.414333488 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.404694992 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.408200918 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.966803292 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.402739375 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.401415902 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.404271796 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.401964071 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.441311824 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.404054322 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.396132122 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.401618661 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.520706386 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.404630243 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.402211296 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.404787222 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.401358505 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.403213093 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.40449391 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.404555257 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.402211407 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.403755565 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.427378843 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.404925502 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.404908761 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.404003404 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.404963477 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.454310108 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.405226526 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.403050684 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.402244448 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.459725229 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.412126336 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.405239012 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.401671055 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.40530633 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.402097588 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.556511643 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.452811524 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.405826186 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.45132182 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.405619446 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.40617113 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.406036156 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.405880832 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.459242117 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.405472019 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.452550213 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.403562953 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.558728102 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.429162691 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.407903425 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.408059954 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.408522562 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.406596065 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.403036602 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.411746479 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.40372765 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.406745222 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.411569204 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.403934908 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.404679935 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.509216233 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.516031814 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.405267912 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.417763191 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.413971038 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.405370294 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.46040621 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.407804719 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.405780785 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.457750413 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.522336532 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.461094489 seconds)
  done (took 160.113311325 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.412158278 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.415190988 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.409154765 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.422880665 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.407346951 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.408111233 seconds)
  done (took 9.789237053 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.41113671 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.409797051 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.408125472 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.407664983 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.408098078 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.40809693 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.408230695 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.410389358 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.411735413 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.409854642 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.409064435 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.410097931 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.409611965 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.409387622 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.409636394 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.410051066 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.409033869 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.408087872 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.409156644 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.409627442 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.504771246 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.409337146 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.410196201 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.411079209 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.412949112 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.410020951 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.419359498 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.411311825 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.409998392 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.41758099 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.430715913 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.409959289 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.411016272 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.415024017 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.413957017 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.41206287 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.414834441 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.41003023 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.408749715 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.411247034 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.41115647 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.410748362 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.411062109 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.411274393 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.411458797 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.415423277 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.41512786 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.418381842 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.410037059 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.411689466 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.411855884 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.411111007 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.412214961 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.411626032 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.412047695 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.433511634 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.415101241 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.412437852 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.411402471 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.414414484 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.413354716 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.412328049 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.412076928 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.416279002 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.420496596 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.413081254 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.413390993 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.416134182 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.412588273 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.412090549 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.413273394 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.410671358 seconds)
  done (took 104.094588444 seconds)
done (took 439.659318295 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.76962224 seconds)
  done (took 8.088057561 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.584214836 seconds)
  done (took 7.903318677 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.541374073 seconds)
  done (took 22.864951351 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.420476405 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.475137843 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.413596227 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.407963927 seconds)
  done (took 27.035574648 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.835033508 seconds)
  done (took 8.153766211 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.419415691 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.406969566 seconds)
  done (took 14.144894198 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.512435469 seconds)
  done (took 7.830781852 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.103654855 seconds)
  done (took 8.429666003 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.426410174 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.421798248 seconds)
  done (took 14.437261395 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.385633523 seconds)
  done (took 7.70413659 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.307282189 seconds)
  done (took 8.626846698 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.421339055 seconds)
  done (took 7.741864665 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.472883843 seconds)
  done (took 7.791700541 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.6070447 seconds)
  done (took 9.925793635 seconds)
done (took 161.997868377 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.405480714 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.40833662 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.408049929 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.406106142 seconds)
  done (took 26.946695461 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.447566893 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.447406486 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.449574911 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.458676649 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.450321752 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.447860499 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.439843247 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.440631541 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.459259154 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.453628383 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.44991197 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.450478663 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.448160768 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.441010603 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.451166808 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.451090631 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.460265953 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.450236004 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.440279334 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.451210572 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.415767376 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.459407401 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.452148269 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.416029299 seconds)
  done (took 36.051579782 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.93616593 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.486819694 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.567858803 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.466966295 seconds)
  done (took 7.779353934 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.467401253 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.468869523 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.480961642 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.520694617 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.553540813 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.480525784 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.442909258 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.438503468 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.424377476 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.469644231 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.544783711 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.485969321 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.562541019 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.417667846 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.604069078 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.416736003 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.416739794 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.470225795 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.520586669 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.53459946 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.417870472 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.469233076 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.474161601 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.487236307 seconds)
  done (took 36.891229315 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.417232003 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.435171271 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.416178585 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.415058606 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.424995809 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.41728111 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.417899683 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.418910594 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.41720574 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.426320896 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.418780985 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.431350012 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.416807905 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.417937362 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.424452671 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.418147676 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.424796539 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.416788913 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.417515205 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.424554606 seconds)
  done (took 29.740303677 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.412265092 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.264632674 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.764059216 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.666381666 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.410398907 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.411974254 seconds)
  done (took 28.25447473 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.489432206 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.643202981 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.418832835 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.779111809 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.87186116 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.435991053 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.419194724 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.66472598 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.989357541 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.979612744 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.483117612 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.488112921 seconds)
  done (took 20.985763288 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.417285991 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.416268231 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.42111507 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.431443459 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.47393854 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.44036455 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.426219415 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.412216604 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.482629217 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.496397471 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.442377086 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.476345888 seconds)
  done (took 38.662258417 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502784265 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.459935213 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.334277287 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.430067804 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.131812185 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626316406 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.432830967 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.894327893 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.418438984 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689673531 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419595856 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507075962 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.670210721 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430294401 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.417968186 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.413567828 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661892547 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926890933 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419595328 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.555705811 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446525842 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.427834587 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.655709676 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.449979139 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.627414339 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.558159051 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.677413737 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.191776302 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.718293574 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.43139318 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428151667 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416993834 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69132332 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087138633 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532524835 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427407737 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430283116 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.963880943 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.410775795 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.552550967 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422491728 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.437700407 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428224953 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41740845 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.351115329 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.428342514 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88516239 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.423143381 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.128791233 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.418261757 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429338184 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512625646 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.421324954 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.407997558 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.424447807 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.424004019 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.416783336 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50997164 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009102375 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.993863646 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.426002494 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.374171654 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.416734041 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.479425656 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071280059 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.540635777 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.42298131 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.424846519 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353082017 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.565775595 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440426997 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.567532596 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.442595321 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.068876456 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185688404 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.45053165 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.352902579 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99349412 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.429052256 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.354800077 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.647343763 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.197439756 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.356022177 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.363228228 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.355818537 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148610979 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430779756 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.848833067 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44090595 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.903456777 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.431171901 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437407871 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444030452 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.644483642 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.29841258 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420998745 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.434160536 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.548666484 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44328685 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.881450827 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354842352 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.425013956 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.677856934 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.633261376 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431900722 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.425368864 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.665099373 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42651642 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.438647776 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.431143487 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.433868948 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.022484625 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.455432263 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.998934816 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44160842 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.199779036 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178776602 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435560453 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.524285169 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.434559251 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669882188 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.202463726 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.584494512 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490625257 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.426583429 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.423714144 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.581756321 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.455088227 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.582151287 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.418229715 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423055024 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.433707542 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.422458113 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.372820981 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.424871119 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435769966 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.202290695 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.647268691 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423879025 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.718361875 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.359152653 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.571540015 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.432897464 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.64754177 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.656639675 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.444276859 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.683316 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423370927 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.442568319 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.435784916 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441779702 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526062299 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446290476 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.424663157 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.681262634 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.428150506 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.42728425 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.59120668 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.206465875 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428984638 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.430858154 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425134794 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03799485 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425351726 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.434967995 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.315896915 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.439591614 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493019979 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.432593731 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.435739675 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.285095382 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.462423157 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.430880375 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.434714865 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649458475 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.436440995 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.509591648 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.507808131 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.64205575 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.037968028 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462412907 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.36067365 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.137468448 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.120008064 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425158585 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.614875366 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.427205363 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437210683 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.436596136 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.425163666 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.029838877 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.451467203 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.509869944 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.435976672 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.437969845 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.43190891 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427823942 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.264050496 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.036048476 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.436483909 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.440032849 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570382401 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.441847774 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.362107791 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.944706637 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.433695088 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.428007293 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.206796325 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462833732 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.513102552 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921144381 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.687543634 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.44608391 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.44037471 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.630349746 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.46736395 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.437238236 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.438708445 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434722052 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.447338855 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438039458 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.440428378 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.523172062 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.796829713 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998287357 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212854278 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019889377 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3993784 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.439176382 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.312240281 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.895050035 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.363926639 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.087163074 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623444083 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.912950446 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.37376194 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650550994 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.647933921 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228006068 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.441707733 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658145461 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378696953 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.447151883 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443243327 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.641647846 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464384631 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.438550632 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.360051912 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.711596256 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.707489983 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.441585504 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.510188221 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.897426648 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.432761921 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.209118181 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.49500012 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.776261799 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.631854232 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.062137805 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.81755927 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.445879398 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.435321576 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922969485 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.440521764 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.957626809 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083971601 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.460556842 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.65328697 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.368404797 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.443200864 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.443503317 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.42766448 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.766045684 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.430709538 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.704500498 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.442504039 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.36598165 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.436244439 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991793257 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.310575388 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.439593909 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434011961 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199824871 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436239745 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.756148854 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.438793553 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.258942964 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454934341 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.368640314 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.367785745 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.126860901 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.435949358 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410128242 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954480968 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.448129246 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43889164 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.444115306 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282521473 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.689967496 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.448228036 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.049944942 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.682996774 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.438209527 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476226996 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.533612451 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.446695197 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.414356162 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.317645379 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.670640114 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.489879777 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.658139908 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.496807057 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.33752453 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.50022314 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.647070767 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.317596413 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.447141441 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.697809202 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.165630758 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.456105445 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200212853 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.483011666 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.435729635 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.447867505 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.437976492 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455222263 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525524006 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.446067249 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.445935073 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.446844344 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.616624942 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43863584 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.457647474 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.451443226 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53149548 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.048676404 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.268142605 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.21029563 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057172582 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246588603 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.070909036 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.47227625 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.436473926 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436550928 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.37267514 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.589378248 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.964516937 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.712019122 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.567750286 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.441452844 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.460030785 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.441107436 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.440886923 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653014195 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.712457104 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.418713653 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445646785 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.226038953 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.596934026 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.44952749 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.649739881 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9681806 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0306238 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.557655742 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.438159522 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.903840575 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.71207667 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.530277821 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.439884407 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.028781332 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.443702008 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.787525526 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.466457546 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441287249 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587544324 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.44805365 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108010456 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.470187582 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.595939535 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.211835351 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.562036614 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.698545331 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.928955237 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.449067881 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061175386 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.201088971 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.706524583 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509519235 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.452321548 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.549173385 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587940172 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.452634696 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.335762419 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.440511594 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286104359 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.150581941 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.449341527 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.056591108 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.734839854 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.438784067 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.453139749 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464257655 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.450702968 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.66385713 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.168979015 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.667744936 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.45086825 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.445102608 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.011562328 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057702683 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.478459365 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.37568591 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.445569005 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.699896894 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.697014579 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.465306037 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.895024247 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.153170012 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021386639 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.417428716 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464919139 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.451732431 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.179318746 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064177788 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.302978082 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976320667 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.104273562 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.459094612 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.720938915 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.447254351 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.443255305 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.722315292 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.446832613 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.450259765 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.458764039 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.06657444 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.255921514 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.459905982 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.66630464 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.385245508 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.669115295 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.459873423 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.379491615 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.443590708 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.631219656 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.448550922 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.57487758 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456416628 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.45403392 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445856196 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.181205388 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.71801479 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.450807976 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.429046744 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.440211291 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.446805303 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.56136185 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.723840257 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.450353556 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.119985137 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.79603031 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.700589406 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.44614264 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.427698337 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.447937364 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445657435 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.163385207 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.455619678 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.444249725 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036447337 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.456487614 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.459842741 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.450779745 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.661902854 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657248334 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.460330784 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.457990983 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.456534457 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464746215 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.345513334 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.214490695 seconds)
  done (took 1692.85865509 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.46581274 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.462663787 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.492422807 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.465152518 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.494369514 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.506055175 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.490982401 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.488091158 seconds)
  done (took 53.220223337 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.446151054 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.602473735 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.47766092 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.444967645 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.47328255 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.458053999 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.924044416 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.467678067 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.455270217 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.458096425 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.458959268 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.447291621 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.138713263 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.459628607 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.451215855 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.438935098 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.454880653 seconds)
  done (took 67.419453612 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.463297135 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.535373704 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.555897421 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.449678347 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.5888875 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.482416806 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.460152355 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.503429679 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.465569559 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.548018916 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.124017936 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.471170081 seconds)
  done (took 81.005335251 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.464909701 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.465396242 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.465220063 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.464927411 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.465991379 seconds)
  done (took 8.683538617 seconds)
done (took 2129.818593352 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.454768943 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.177478424 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.095032798 seconds)
  done (took 5.630559929 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.596986438 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.644748995 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.767364194 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.772081625 seconds)
  done (took 8.138705147 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.727570515 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.83675285 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.646345769 seconds)
  done (took 6.568410062 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.738828036 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.467505493 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.468372124 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.449760577 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.45227451 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.451778557 seconds)
  done (took 20.713516037 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.455412369 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.457443631 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.454496226 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.457933898 seconds)
  done (took 7.184139242 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.431183205 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.149784884 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.430722174 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.446152742 seconds)
  done (took 18.816621146 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.201718972 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.214194652 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.198197665 seconds)
  done (took 7.973603395 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.481616719 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.476580397 seconds)
  done (took 4.317427592 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.75271197 seconds)
  done (took 3.112722964 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.469817447 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.507875832 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.543615713 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.477869989 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.795910191 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.959722079 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.134509046 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.70901112 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.454744184 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.726188428 seconds)
  done (took 32.14042487 seconds)
done (took 132.083476473 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.343526495 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.82704456 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.650200118 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.314447557 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.684354306 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.6504703 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.665364197 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.280559447 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.823800913 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.812007343 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.359434174 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.68482238 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.617536527 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.827526609 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.617691894 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.701070687 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.691068795 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.393714713 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.005784707 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.217041449 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.674547175 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.952281632 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.185854912 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.973713243 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.687105436 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.605156737 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.534601015 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.453668724 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.179933736 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.551997008 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.606189041 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.396161948 seconds)
  done (took 196.330927763 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.454237189 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.453436459 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.470381314 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.454004251 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.454095605 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.454190106 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.454079089 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.471431213 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.475707614 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.456015622 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.457470724 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.467623893 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.455834628 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.460772289 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.455533614 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.455422025 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.455217562 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.454529163 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.471951098 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.475138094 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.456128187 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.474072391 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.467066302 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.462812433 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.45525172 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.473902362 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.461878411 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.454769074 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.453552264 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.455793525 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.455659272 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.465454551 seconds)
  done (took 208.106925764 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.462687802 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.455294408 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.455449896 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.456230113 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.456082148 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.474426135 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.459215978 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.45635856 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.483366118 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.456535305 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.461750876 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.459632858 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.459894643 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.46086139 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.471706519 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.457301694 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.473155572 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.459143736 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.455519927 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.456257149 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.468493702 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.456530275 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.480356648 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.456324314 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.457383726 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.474592669 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.475104085 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.470866045 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.45822854 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.477569276 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.457493625 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.475397151 seconds)
  done (took 208.204691651 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.66006304 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.464480036 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.465674741 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.422322877 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.466170955 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.464738471 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.463128185 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.654880876 seconds)
  done (took 15.427959478 seconds)
done (took 629.431218509 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.77569744 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.487005282 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.665713164 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.486320513 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.264360234 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.503029358 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.484773062 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.657631662 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.412277961 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.667562427 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.759686347 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.500279463 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.909272541 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.485520599 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.742964979 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.589284862 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.349706092 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.469885604 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.806174428 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.02252983 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.749384202 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.945246784 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.681334527 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.40887363 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.924840652 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.941789176 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.200971866 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.33953955 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.503751809 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.81366247 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.131908193 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.460881894 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.549932953 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.547129134 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.607833199 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.585184249 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.435622544 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.546772081 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.685466995 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.710670453 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.02039463 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.224249944 seconds)
  done (took 97.423610286 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.45083576 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.450169691 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.449257252 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.449771028 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.452471343 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.452364807 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.45096479 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.449514488 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.450967957 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.451069221 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.450349177 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.453327813 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.450959186 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.453026851 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.450872508 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.451887294 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.451281787 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.453727156 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.450900127 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.452149352 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.452203756 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.451901728 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.452700764 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.452323346 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.451533034 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.451645292 seconds)
  done (took 39.108578984 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.470412638 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.719702385 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.884489198 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.477224551 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.470332846 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.473346262 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.550692449 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.472422394 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.473877216 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.473331822 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.623797753 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.474901555 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.504016927 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.913854766 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.473799444 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.471577397 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.471792013 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.471614435 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.727940789 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.480382555 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.571023387 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.472089195 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.552543448 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.480168773 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.493049338 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.472011118 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.475188995 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.057187822 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.492455845 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.624921485 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.298736787 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.552726376 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.996271461 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.916436961 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.305714955 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.478047147 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.472465095 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.632918875 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.474702715 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.471412923 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.551376265 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.473045823 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.896940712 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.145331054 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.492993276 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.473445688 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.077514218 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.648026141 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.724156366 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.480500284 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.921086303 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.476210846 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.474579295 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.475000144 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.723930502 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.48103284 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.473385136 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.076900086 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.498956478 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.552371363 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.475187761 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.473414124 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.735220698 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.473953434 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.723750151 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.475321146 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.482586864 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.494027587 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.898210102 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.480798735 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.169699165 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.494920534 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.474822503 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.627277766 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.726180744 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.114459379 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.497728771 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.741910238 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.01109446 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.571489042 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.479539495 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.048907832 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.574757376 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.480400595 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.478757126 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.477851681 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.476166217 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.523094041 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.552582431 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.106078625 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.17820989 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.111126358 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.580144202 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.490517756 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.476151985 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.083923789 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.502149056 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.476835585 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.896392587 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.17255627 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.498435529 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.48353211 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.176797324 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.502338455 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.558692092 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.486270061 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.910959389 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.481393729 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.525072097 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.478494803 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.485076268 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.501970526 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.558063095 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.485344498 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.479442795 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.144225328 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.660745752 seconds)
  done (took 193.587223306 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.470111439 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.481706441 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.473093419 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.470787381 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.471296975 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.480673666 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.470751959 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.472586534 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.479067817 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.472116 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.473003296 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.47551086 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.474010074 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.475494563 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.503981707 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.479055388 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.131800844 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.473357414 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.474963932 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.489420129 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.275280823 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.477128907 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.475048272 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.489776387 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.475000761 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.473517763 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.481403161 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.477008625 seconds)
  done (took 156.196497292 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.482120367 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.054456362 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.50059682 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.61569784 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.503963792 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.47903757 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.613355783 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.542627589 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.499464732 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.477995097 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.478411953 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.788207127 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.482355852 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.005728105 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.678672878 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.633965438 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.00521445 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.500884455 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.479727056 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.47932225 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.617427714 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.485920482 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.789168899 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.064382747 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.505200173 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.055022718 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.466902482 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.482996099 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.48012784 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.062025146 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.501853053 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.795122551 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.5635243 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.542960872 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.076859056 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.024349804 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.025730918 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.6341089 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.481679729 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.480629876 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.480079949 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.465842075 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.071330156 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.505820413 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.482317663 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.060646579 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.507784381 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.483751672 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.490336526 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.481001965 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.543048725 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.563148199 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.819482394 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.08094122 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.586939691 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.495853197 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.616584918 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.874282799 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.486063056 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.00830872 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.466142457 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.067202194 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.5045494 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.466490702 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.484177271 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.488198034 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.636548257 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.619636786 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.0095729 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.502625525 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.008700748 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.65470248 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.482637637 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.481993888 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.485717814 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.075977777 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.032276051 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.65552502 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.621670601 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.684321427 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.471910538 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.483331644 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.469605448 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.563228901 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.485785749 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.077423618 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.032571614 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.505093762 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.486597604 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.486735943 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.4879247 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.666711585 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.087568198 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.583384919 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.001828996 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.819339855 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.802175064 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.488684141 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.546883907 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.504350307 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.798746813 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.489273848 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.546888482 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.942376561 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.800933667 seconds)
  done (took 175.984163522 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.734069193 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.737758882 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.583299356 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.642343296 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.089985547 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.058600565 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.801715533 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.643512741 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.600402255 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.749574814 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.664458622 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.580057109 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.708049299 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.563673639 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.242861103 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.574574366 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.596889082 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.636199128 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.650800804 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.512999293 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.160183345 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.782671586 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.675940446 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.418494641 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.583098286 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.295029677 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.051438723 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.041636684 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.657952145 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.849253497 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.021623645 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.614788603 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.455052383 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.190364301 seconds)
  done (took 70.557794786 seconds)
done (took 734.225050385 seconds)
SAVING RESULT...
DONE!
