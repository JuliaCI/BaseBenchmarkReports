cset: moving following pidspec: 2405
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.563765977 seconds)
loading group "shootout"... done (took 1.200549467 seconds)
loading group "string"... done (took 0.402087605 seconds)
loading group "linalg"... done (took 7.606508033 seconds)
loading group "parallel"... done (took 0.144201451 seconds)
loading group "find"... done (took 1.366717703 seconds)
loading group "tuple"... done (took 1.853485406 seconds)
loading group "union"... done (took 12.183322205 seconds)
loading group "dates"... done (took 1.244346897 seconds)
loading group "micro"... done (took 0.191149207 seconds)
loading group "simd"... done (took 4.131906003 seconds)
loading group "io"... done (took 0.994052712 seconds)
loading group "random"... done (took 8.247703732 seconds)
loading group "problem"... done (took 1.521791616 seconds)
loading group "array"... done (took 18.48734716 seconds)
loading group "misc"... done (took 1.448868082 seconds)
loading group "scalar"... done (took 37.777492181 seconds)
loading group "sort"... done (took 2.878413428 seconds)
loading group "sparse"... done (took 11.336987809 seconds)
loading group "collection"... done (took 16.846408495 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.482005152 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123340301 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.127096279 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.115379797 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.141921285 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11775441 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122920156 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083599833 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.87236036 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.137294203 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.108796323 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.422326021 seconds)
done (took 5.18261247 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.162719536 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084061372 seconds)
    (2/2) benchmarking "String"...
    done (took 0.07483031 seconds)
  done (took 1.283622019 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.060948597 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123010217 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.061874066 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.062015322 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.062114463 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06207707 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06130812 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.061583332 seconds)
  done (took 1.619784165 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.067900479 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.064071552 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.061348004 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.063265777 seconds)
  done (took 1.381098113 seconds)
done (took 5.653319254 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.231423903 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.099653151 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.282049636 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.387050806 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.451875888 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.088236347 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.070895685 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.066782759 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.1285964 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.320437072 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102418361 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.179957019 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.087692902 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.170852393 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.968974193 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.117649773 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082654789 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.120002208 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.090173365 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.126298466 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.406031566 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.073932307 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.06963439 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.066931634 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.064879955 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.644156184 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663019627 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.126622106 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080298305 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.097900794 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.112306805 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.636491511 seconds)
  done (took 10.372763329 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.089260164 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.086988164 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.063822351 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.119939226 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.091061122 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.066247996 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071124607 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.063951261 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085659866 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.118995757 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.085023621 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.095180819 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06124523 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.064367075 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.070917461 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.19209443 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.075124754 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.075504436 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.064144141 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076685782 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.103810255 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.076074381 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076221634 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076014298 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.125568366 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.167420828 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.093975069 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.094226369 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.063338976 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.07590805 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.109856391 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12376561 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.063509541 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06255671 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.117601972 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.092107573 seconds)
  done (took 4.419578049 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.921642395 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085592288 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.097383933 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.598206566 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.061576342 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.144867572 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.232184129 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072448038 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.357790241 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.139849472 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.136517442 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.082626144 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.140868899 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.1113861 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.066612119 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.207614239 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.110573105 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.351648954 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.06495309 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.063174508 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.062534523 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.065260436 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064429855 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.059961704 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066591536 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.088783267 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.083801005 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.151187662 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.917913639 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.243284465 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.063947593 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.157097655 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.083324347 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.370543427 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.066962612 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.080272852 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.396593945 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.119142484 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.062881716 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.168227035 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.113292045 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.062157116 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.110278744 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.075332263 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.065824656 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.065453449 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.064794721 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070565334 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.074499655 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.098432796 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.064344457 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.060648003 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.156523917 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.062613018 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.062530557 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.064327659 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.147163642 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.061762829 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.138015515 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.060992532 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.065110803 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.092540758 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.064736425 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.088207063 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.100198715 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.331216308 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.039574015 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.062702912 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.227219209 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.074583787 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.062676217 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067742392 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062891579 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.064168378 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.060306813 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.063196214 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.071051086 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.066165194 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.065544723 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.104919838 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.063892916 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.066184926 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.0633367 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.060975958 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067959665 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.096995633 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.062572436 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.462270739 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.09462851 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.063520235 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.074053246 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.101673917 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062095793 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.067551863 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.062858936 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.062709877 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062463939 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.063387588 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.177707927 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.088111301 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.065199589 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.107805542 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.024187396 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.064061237 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.061378887 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.067108049 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066675294 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.060484479 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.065278706 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063425564 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067278738 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064731519 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.061233389 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.109692053 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.063518903 seconds)
  done (took 21.270414502 seconds)
done (took 38.108858261 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.245657885 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079211346 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079216285 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078953705 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078988551 seconds)
  done (took 1.786696485 seconds)
done (took 3.004461683 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.102319142 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.060163437 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.096649274 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.094938385 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.063459828 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.060458873 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.094347093 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.060663835 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.093650109 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.095739799 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.098130637 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.097215325 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.060993279 seconds)
  done (took 2.30157516 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.065268784 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.077573047 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.079187208 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.05892317 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.06872832 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077983372 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.059129407 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.076574865 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.083903181 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.077825681 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.077670484 seconds)
  done (took 2.014458478 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.064577446 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.078014808 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083132495 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.059159671 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.069698722 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.078168639 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.05920045 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.077391285 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.080784408 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.077644963 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.07780614 seconds)
  done (took 2.0085531 seconds)
done (took 7.528971069 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.064085862 seconds)
  done (took 1.252013931 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.526155395 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.601647981 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.065121654 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.08506312 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.180500414 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.097491925 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.22864871 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.071295098 seconds)
  done (took 8.220005848 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.090334169 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070826754 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.066415638 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.066227587 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.065264757 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.064934837 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.065656336 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.066169226 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.066427259 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.065537046 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.066355517 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.066852648 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.065390377 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.065242599 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.065128716 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.065238891 seconds)
  done (took 2.375648781 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091152749 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092160482 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.069970581 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.071253527 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.068538988 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.068122311 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.070608948 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.070339202 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.067153648 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.068356275 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071379421 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.069473929 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.06904281 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.060665182 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.070050361 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.072289568 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067294906 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.070581322 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.071069154 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.072058577 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.071730578 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.060756063 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.069032075 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.070606929 seconds)
  done (took 3.018389714 seconds)
done (took 16.06914448 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.10993887 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072372373 seconds)
  done (took 1.380888119 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.065952506 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.067258345 seconds)
  done (took 1.341480134 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.0725023 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.057115665 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.079297049 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.068765637 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.058300929 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.058618051 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.079193334 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.059109718 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.05890757 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.059051922 seconds)
  done (took 1.860770829 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.059950646 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.067351597 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.064624929 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.066314586 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.064858947 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.058686791 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.0622517 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.059464946 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.06680948 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.058023009 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.064090719 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.079512906 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.064142543 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.081451534 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.064100715 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.064629671 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067048637 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.063858195 seconds)
  done (took 2.392594311 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.057891916 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.059180956 seconds)
  done (took 1.341157772 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06163775 seconds)
    (2/7) benchmarking "second"...
    done (took 0.059127233 seconds)
    (3/7) benchmarking "month"...
    done (took 0.062089834 seconds)
    (4/7) benchmarking "year"...
    done (took 0.062064769 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.059934259 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.058961803 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.059823174 seconds)
  done (took 1.636896419 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.40680473 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.116258576 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.335455389 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.06622575 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.076483535 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.242581817 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.060400262 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.065812673 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.065845429 seconds)
  done (took 2.690037798 seconds)
done (took 13.871103733 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.075749315 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.078839996 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.086221053 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.418373569 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.08980827 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064073159 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.109204495 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.178661561 seconds)
done (took 2.335604175 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.205083892 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.439710026 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.957327281 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.063090155 seconds)
  done (took 3.678191334 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.315066839 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.079381275 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074476394 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064269621 seconds)
  done (took 1.768682021 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.060612673 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067702543 seconds)
  done (took 1.359890192 seconds)
done (took 8.24512694 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06003043 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.05954249 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.059799706 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.059362035 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.060199177 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.059797091 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.059343878 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06048554 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.060087758 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.085726025 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.060207558 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060193151 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.060819401 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060675594 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060383387 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.060457653 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060399791 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060600872 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060472841 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06013628 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060964152 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.059970065 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060379876 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.060343312 seconds)
  done (took 2.728767109 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.076392501 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.062032936 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.063591296 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.063548924 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.063339312 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.063034766 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.063411488 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.062414065 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.064948268 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.062599973 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064908448 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06500551 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.062726124 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.064851035 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062606457 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.064897203 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.064456617 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062509616 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062497853 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.064661579 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.064179881 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062650529 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.064852785 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064458929 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.063976706 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063271251 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.061268748 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06163365 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06328954 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.063879918 seconds)
  done (took 3.156487216 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.060026675 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.055637673 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.05713949 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.065006013 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.056558875 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.057542719 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.057097049 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.055886099 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.056799066 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.057861155 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.056922423 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.057324434 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.05895215 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.057375237 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.057382868 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.058414529 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.061750642 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.074965056 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.058195261 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.057687362 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.061453158 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.057576853 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.057155499 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.057212535 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.05793939 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.057805739 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.057049462 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.057839152 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.057404318 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.05832177 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057817595 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06093437 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.061740132 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.057599537 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066280189 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.061637803 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.057476061 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.061283047 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.059136395 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.057692559 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.057481349 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.057211752 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.057433355 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.057655821 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.066497357 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.057606581 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.058902984 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.058336933 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.05797652 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.057326932 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.05749526 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.059662944 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.062513751 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.059142268 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.057456875 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.058885308 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.057208518 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.058126149 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.057188819 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.057329045 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.057226654 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06066204 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.059276152 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.058718838 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.074768732 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.059494661 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.066085324 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.057334445 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061268868 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.060430264 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.057971382 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.073496051 seconds)
  done (took 5.514703315 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081870163 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082762188 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06117922 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.060962872 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.05713719 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.057521083 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066247384 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.05810641 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062850159 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077747291 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058447881 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062354365 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062178383 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.061586036 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058407495 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062593026 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.06708886 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.057630899 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.057913032 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061757096 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058190194 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065783196 seconds)
  done (took 2.653370879 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.133891869 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062798576 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.09816302 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073887251 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065525319 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073832758 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063791601 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063952285 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0640214 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064482605 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064450727 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064108888 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06644239 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064196416 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064219236 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064541064 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063852271 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064601539 seconds)
  done (took 2.527453557 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07327238 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.061879702 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.083388741 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.061939583 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.062159916 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.0618149 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066342841 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.067121016 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.062710849 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.063213329 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.068364463 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063019247 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06282845 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063178506 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062780534 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.063036115 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.063031645 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063076158 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068134406 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067834693 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067758046 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068291726 seconds)
  done (took 2.691549072 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071533892 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06112895 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074743745 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063160696 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057716385 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057170918 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.062958463 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.061293146 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.062800584 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.061775868 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062841833 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058292425 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.064108018 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062685611 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.064763494 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062320311 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.062195944 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06250213 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063176565 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058165535 seconds)
  done (took 2.502567013 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082342447 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060475157 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059888513 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077855282 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060185548 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.060209909 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077930711 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.059317597 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.059501142 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080605826 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059672331 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060264365 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078021357 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079651674 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.060867219 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079595348 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078573201 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079155087 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.060915262 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060985096 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082360972 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.061123522 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07974312 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061119075 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061712177 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.061284687 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061548005 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079604571 seconds)
  done (took 3.173626676 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069343559 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.059105599 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.059607376 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.059364671 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.059719345 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.059360782 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.059913812 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.061144248 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061691752 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.060712215 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.060327908 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.060517253 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060766705 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.060448493 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.060697153 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.060365877 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060456767 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.060741454 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061017869 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060986294 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.060409163 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060666373 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.060520819 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.061104541 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061137462 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060384236 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061399071 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.060983086 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060600474 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.061479943 seconds)
  done (took 3.077814987 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.070414791 seconds)
    (2/2) benchmarking "in"...
    done (took 0.06863394 seconds)
  done (took 1.392883868 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.059558532 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073175054 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.057896907 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067847719 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067010772 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061411289 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068343403 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066709562 seconds)
  done (took 1.768635107 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.063931439 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.085203874 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.059093362 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.060430447 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.064215463 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115557323 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.073977556 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.068526224 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073933092 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06065325 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.060172395 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.071299975 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.059293928 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.070775518 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061421744 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066959693 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06479051 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069273346 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070032791 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.058116006 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069551508 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06041728 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.058245536 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.060678341 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.059729629 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.064871488 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.073524118 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.069725538 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066493449 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.057295733 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076655556 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058969826 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.059860123 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066767372 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.063922057 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.05870382 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092649143 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.058763425 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.064739725 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.058299258 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069532251 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076916841 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.070525369 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.075454007 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.060225599 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06098775 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.058212806 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.060483868 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.060538991 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.066423384 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058319538 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064713488 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.057762369 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.060377477 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.067988754 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.058605016 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.065008684 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.066494414 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070041668 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.06728651 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.065394375 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07171574 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.066133429 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.06807456 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.059532091 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075662616 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.060289878 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069179981 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070966252 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.059566212 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071383244 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.058219697 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.056902702 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.058038237 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088892548 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.060717773 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.059905531 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.05865121 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.058609323 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.060196778 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06697327 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.06524214 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064489327 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062678146 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073267592 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.066848604 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.0582814 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.067004315 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.075320017 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.060848093 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.058658859 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.073093838 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.060222162 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.058077971 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.074568602 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.066518199 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.060687947 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.059077365 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.060484751 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070822104 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.059814888 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.05670778 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064466078 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.060080665 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.061609455 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.064027586 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064403589 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.057956175 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066991454 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.063698465 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.059869259 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.056541235 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.061433193 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.059744594 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.05683131 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065468924 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.058090144 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071078482 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.062650505 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.069780616 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070137484 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.066536039 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071699496 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.05713365 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.056414945 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.073284552 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.199787052 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.061739338 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077252483 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059527121 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069581956 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059410385 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.060867342 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.066825855 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058007234 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061267699 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.059347984 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.065168687 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.061310312 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061045777 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06198908 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.065765794 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.069796622 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.0599591 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066059407 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.059089855 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072669947 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.066631857 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.062145099 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062921325 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.059978387 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069279816 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.064638324 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.066679602 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.058090369 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.059497479 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.059004013 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068255676 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067239264 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.060440491 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.068134669 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.062142719 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.059685516 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.059303232 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.060101043 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061335502 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06298734 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.060043314 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064913626 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.065712805 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.071875763 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070931894 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.065718902 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.057525841 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.057901632 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.060351741 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.058670271 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.062154276 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.066157683 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071890416 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.069143864 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07706847 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.058462725 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.066316957 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.060185417 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073651599 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070096358 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.059781056 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06458104 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.057423181 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060438598 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.066388147 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068826506 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.071454377 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071532571 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.062561197 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.061848937 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.058086629 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071225162 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.059074232 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065569383 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.066625066 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.063932575 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.058430974 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.060405257 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.066253925 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.061978851 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.059155987 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.072234711 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.065783338 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.058233701 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.070555025 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.05882199 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.067948374 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.058595268 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.061290189 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.062425474 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.061216508 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.0665835 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072682013 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057541988 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.059323145 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072650281 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.060965855 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060466785 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064841216 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.071589961 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.062414535 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.064872898 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067795875 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.066794289 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.062046154 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.066338773 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.059564659 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.066974297 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.062108922 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.068771156 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.058405944 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074634776 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.056998639 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.071340349 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.059231995 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.067986328 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.059221775 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066523512 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.059279442 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.073531857 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.059957547 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.059004008 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.068271092 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.056427447 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.065664423 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.057276874 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.061247632 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.063281987 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.065825307 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.059924107 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.204441023 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.063440211 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068028479 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064162198 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067226837 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.067746252 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.063455911 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.059680941 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066733982 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070079959 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.065853742 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.061123517 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.061463014 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.059931732 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.067279362 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.060840179 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.060463899 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065649341 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.062421869 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.063992753 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061197588 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.062049258 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.060988514 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066373079 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067295435 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075751453 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065808164 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.064938804 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.066593265 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058685414 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07265285 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.058829305 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.064852322 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.057830002 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.06628982 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.067215912 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.059022473 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07704403 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.060667636 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066039671 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071434588 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065325199 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.062086123 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075060619 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.062877295 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066058192 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.065652516 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.061917079 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.064157156 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.060503591 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065442711 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067401876 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.068346009 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.059519941 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.064696601 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066056313 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060539321 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.069165551 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.060849032 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065287836 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.060636725 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.057726178 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.062361899 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.069430705 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.062679223 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.062851728 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.05924556 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.057672975 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.058963107 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.067691286 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.062363561 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.065949952 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072123777 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057511684 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.060056126 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.0583799 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064203317 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075152364 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067314909 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065147116 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.062365174 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.057615522 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.060977794 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.06094854 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.059603456 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.063123542 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.05799769 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.058387039 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068179273 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.06079967 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.062101913 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058904935 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.060423267 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066390984 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.064383064 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.059195696 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064589434 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.058523288 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.062816764 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.057877304 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.061244997 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.062162192 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.058568127 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.061492646 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.067550522 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.073119577 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.063872704 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065557369 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.059850787 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065252256 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071965705 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.067392822 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059763017 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.066420954 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.057676674 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075073815 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.066437899 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065218735 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066646261 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.059235379 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.073891517 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06160289 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.066521758 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070933066 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059571722 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.065512456 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.057310469 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071161599 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.060998323 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.056995466 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.064132943 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063467542 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.205168223 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071237036 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.0608021 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.067436399 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066591839 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.062707671 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.061601312 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.060984618 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.066763033 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073717079 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.060523691 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.064645051 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066078066 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065908684 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.062897368 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070319237 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.065989692 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06000957 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.061045072 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.061733903 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.060649517 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.069809645 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059437487 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.062307018 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.062398448 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.058600336 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064219798 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073624758 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.066994112 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066912065 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.058616415 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.058541983 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.07497633 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.060986142 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.063117912 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.066553129 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.066748 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070072389 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067247177 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074123616 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.059892336 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.064457828 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069854794 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.060596794 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.059362563 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.061571682 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.060913456 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.0666767 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067477154 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.064557007 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061641834 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06452135 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070252082 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.060301634 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.062733486 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.064488798 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.059920415 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.06805298 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.065360179 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.065606665 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.060571146 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.05854355 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061057452 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.066108917 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.064742749 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.066202668 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059876788 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.067044299 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.072218088 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.064975741 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063188266 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058618738 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063065887 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066436396 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.064762395 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.058709635 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.062704995 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.061185976 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.067826691 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067620543 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.062545216 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.058850693 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074913387 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066137591 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.066826537 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.06119603 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.061304387 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.05965001 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.05840287 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.068579654 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.058856544 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.060934275 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.062378578 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.061460412 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.074671073 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.065506074 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072855841 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059999721 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06281441 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.058228679 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067349204 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.062551977 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.058946697 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067871348 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.058089742 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072910482 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.069990684 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.067836128 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058494225 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.062428118 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.065477453 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070948192 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066700803 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.065700695 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.062642194 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066631665 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.060085517 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.067508041 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.057673948 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.057130308 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.066850086 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064941639 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.068951583 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.057905388 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.066509749 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.059776319 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.064241698 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.06483229 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.059932761 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.05987391 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.059495748 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.206144902 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.063450643 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068232955 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.063983162 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075155473 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.06075978 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.069398067 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06690258 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.068760208 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070929131 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071232376 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.066490492 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.059442002 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065328768 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.066058145 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.061251253 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06279849 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.062729558 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079858694 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.061527693 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.061033111 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073177528 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.067220621 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.059177309 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.067361123 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.062928731 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.067556193 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.059938537 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.067601899 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.063961525 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.060510077 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.062568546 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.062287284 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.057978582 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.058940634 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.05922111 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067919666 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.062723787 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.059380648 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.07722735 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.060768277 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066468838 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069164823 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.064649052 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.061016966 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058353901 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.060371195 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069711068 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072169621 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.061527114 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065393435 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.060766967 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.066690538 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.057866497 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066229372 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.065629857 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065880567 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.058508303 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059522115 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071623124 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072379993 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.062501353 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.067416901 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.066547908 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.060685002 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.079263558 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066006868 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060375862 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.06847952 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061747594 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.05848747 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.057860893 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.061236055 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071985759 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.058734386 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.06216914 seconds)
  done (took 40.205239362 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.096168694 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.058700024 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.059245648 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.05915623 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071028892 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060017336 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058759179 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059841958 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.059630907 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061931162 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058780309 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058713404 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071002695 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073688125 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070264109 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063422339 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058965222 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059950768 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058433556 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059516675 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069969342 seconds)
  done (took 2.708898733 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.065528048 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.074852712 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071832406 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076330733 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067387944 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064559919 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071239688 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063797503 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071770854 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069011794 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071974747 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06391037 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068961485 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069290413 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069244023 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064327509 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071580671 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067556473 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.063880049 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071190815 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064274177 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071378838 seconds)
  done (took 2.851030808 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.059797363 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.059397286 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06625076 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.058436041 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.058885231 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.062842378 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.058259724 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.061968699 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.061320068 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.062264423 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.065358001 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.058949027 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.058066921 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.062830948 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.057937967 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.05893992 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.102182041 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.059414327 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.059441488 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.057881793 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.064589574 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066173175 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.058681622 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058389465 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.061995509 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.062425439 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.058068635 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.061616055 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.059292082 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.061617125 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.059594853 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.058917403 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.065914993 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.064821796 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06167815 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.061422657 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.060160062 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.059423393 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058735103 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.058180171 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065449356 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.06004749 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.058686268 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.059773359 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066585414 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.058227163 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.058233553 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.065739036 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.057889659 seconds)
  done (took 4.363305429 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.069976109 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107905703 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.063792038 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087550944 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.073312513 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.066414588 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.064284556 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089139084 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.059429148 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.060754038 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.074545958 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07453581 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062042087 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.06377392 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.065783279 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06161687 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063391321 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061241131 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.065530718 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061498055 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.065468756 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.065518075 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.072949526 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.0736181 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063658942 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061133007 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061758331 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06425655 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.073398839 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.066188484 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.063852052 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065155376 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.073867516 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.064512608 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061485436 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.060533463 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.072543996 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.061135554 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.060912107 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06049917 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.061458352 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.063891655 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.066125204 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.075137093 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062880021 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.066915139 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062513916 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.059682435 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.074097895 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.062023419 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.067197107 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.074846588 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063614466 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.062995616 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064063312 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.073906182 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062332356 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.060712001 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.062497115 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07327299 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.060357855 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06326863 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.074024713 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.062134525 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.066312533 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.074405832 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.066468815 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06343231 seconds)
  done (took 6.039045606 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068290807 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.088155233 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070684919 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07061793 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070009561 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070814102 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070041821 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070077229 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.069937665 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070443895 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070052636 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109410739 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.065750103 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075977963 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069516756 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069968203 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.069864029 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069828948 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069980776 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069866467 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070000251 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070559828 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070110291 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070790861 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073306635 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065204393 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069769691 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069953764 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070700595 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.06977273 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.073895994 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.06995853 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070032072 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070575708 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.073232936 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070124809 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.059902206 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069432871 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070175661 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069769836 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06553572 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070790097 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069669795 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.065473544 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069921617 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070083037 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070815871 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.073426282 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079077692 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070806135 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070166377 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070785819 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069888801 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070471433 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07077615 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.079223799 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070832852 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070998832 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070124288 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071400066 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071363258 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.079641301 seconds)
  done (took 5.806032279 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074057717 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066727997 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078707998 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061888573 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058752003 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068691297 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058593494 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.058441718 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0671941 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.067148469 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069308951 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068617406 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071121649 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069253391 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06870715 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071240272 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06863689 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069041378 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067230551 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068965423 seconds)
  done (took 2.724319403 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.070057332 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.076846656 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065160353 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069086222 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.064417309 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068961693 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.063614945 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06490241 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065085778 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064704964 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070416331 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070307281 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065046473 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068692785 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070426025 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069287895 seconds)
  done (took 2.447442267 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.064162622 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.066177311 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.067131724 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.061073231 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063642234 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059140923 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.060226786 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058327907 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.059936092 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.073339362 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.059936717 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071453408 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.0602136 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.058696256 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.05957664 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.065644658 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.059445468 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059829077 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.060422759 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.065975235 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.066608619 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.060816805 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.063618027 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.0601067 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.0652901 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.067227138 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061812087 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06355242 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.060065899 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.061002916 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065683634 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.066791428 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.059564244 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.060867114 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.058845097 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06041717 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.060149569 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.061142519 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.065728477 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.060158406 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.05846698 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064908739 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.060079178 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.062368714 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.059206016 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.060688691 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.059454343 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.065525129 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060716127 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065263876 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.060694064 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.062379367 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.060565922 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.067822825 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.063155849 seconds)
  done (took 4.796970868 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072361477 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064417052 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059628793 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.05878164 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.063996003 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.064799592 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064184091 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06431279 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064857821 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058480424 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064413492 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.063764748 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064314799 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064190538 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064507847 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064128253 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.05813113 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.063726817 seconds)
  done (took 2.518149648 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.068254082 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062347981 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.068200317 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064561918 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.063882423 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062694155 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059210249 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.059001586 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058960206 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063302063 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063128815 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.062936411 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058829392 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.063149938 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063376567 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063404591 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.063195469 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059854729 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063403331 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058970912 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.063046685 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058972308 seconds)
  done (took 2.740089501 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.085490082 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08026715 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.118813744 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.076786868 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083985744 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.068730928 seconds)
  done (took 1.883966156 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086333603 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10045636 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063583051 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064656549 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074388 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067530036 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067862664 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067727045 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074723638 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072173562 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067517964 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074429399 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074665445 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069644348 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074839438 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077719717 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068066103 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067817014 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063844626 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07755319 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067740329 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074218857 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067759827 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067502396 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067541906 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088321251 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077661721 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072803476 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07042768 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074741071 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077811234 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067527743 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074862935 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073110125 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064551213 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074625431 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067785992 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07780999 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074891653 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070292888 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063037117 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073576254 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072768347 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067896213 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075941437 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067780685 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070045644 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067639638 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067847902 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080804178 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074912855 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070275472 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074612431 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078465537 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078031086 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080617725 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072473437 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069744294 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074861223 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073086542 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069120903 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074050525 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068188776 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071791322 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078052573 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069679689 seconds)
  done (took 6.166246329 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093804327 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06363472 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068056246 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072468783 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069541981 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067731998 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067891667 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067642523 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067859307 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064280305 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10181357 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068464213 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070096755 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069955981 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067609735 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067595448 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067584559 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069685308 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064415258 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080781497 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067403171 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069933129 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069646704 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069924169 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07235964 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077832645 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067652636 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067278592 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067524422 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067697662 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069739868 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067813439 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069844573 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063941288 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06954656 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067315741 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067486778 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069590411 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067416664 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07477226 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069677439 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077940381 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067623127 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067762624 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072504691 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06741201 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067447522 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064172867 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067618065 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063901067 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072732363 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072402335 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072565006 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069199818 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067611992 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067715406 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067337272 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067623727 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067906188 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077961914 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070385462 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067794891 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080503635 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06744316 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067314203 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069699953 seconds)
  done (took 6.023757242 seconds)
done (took 123.693911813 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.204735163 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.181058478 seconds)
  done (took 1.74325906 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069610501 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094186202 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.072436199 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131525632 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066110687 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100858491 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.09942355 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.070846034 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06591414 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067502516 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067839944 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070256294 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134938008 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066100562 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065871519 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070145432 seconds)
  done (took 2.690113036 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099504653 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.177511161 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106664691 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06555045 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101920583 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073293772 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065712903 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076282691 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069395114 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068885218 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073825452 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07144697 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068554626 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071619245 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069953937 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073448387 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068361535 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073250105 seconds)
  done (took 2.856028767 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.088386232 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.082612724 seconds)
  done (took 1.556369328 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.149719933 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.099808311 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.139266413 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.314233802 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.135754697 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.278899215 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.130023845 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.125806884 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.110194335 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.120061831 seconds)
  done (took 2.981601236 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096515427 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.159413692 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.295982528 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115666204 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07278756 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.084386561 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117117628 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078080426 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077574546 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076763571 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076572653 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076206682 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.094289331 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073182966 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072976805 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.073525701 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.097712788 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072238243 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.072415684 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.072947694 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.097261859 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066324171 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073229985 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072035708 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.074631682 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074964468 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067715286 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065969131 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072857821 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072096192 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07592319 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.08175038 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075133772 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.101150837 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070551978 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.102293057 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.071764534 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070707145 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072417847 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071131135 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074258 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074474733 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074641392 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.073893986 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067224664 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.072076204 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067246154 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066018176 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076365435 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067374567 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076500867 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075540884 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.100985065 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067027562 seconds)
  done (took 5.926251453 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103138889 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103000722 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066701619 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110703274 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101631256 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067008795 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102303733 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096320443 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104377004 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066393198 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065800962 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.066084035 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075265867 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.079232872 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110119991 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102839206 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066897065 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.066444883 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104979362 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104895971 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065695955 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09794417 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.0939559 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103976587 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.062796473 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065310216 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.063532243 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.064242005 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.070999393 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.072921575 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065195697 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074842594 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.080968223 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.072070187 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063169207 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064977362 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065016579 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.074575283 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074431178 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075150228 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.073038737 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063842522 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064982977 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.065921568 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066514059 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064525639 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073417377 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.075018431 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.073379917 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065407781 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.065426683 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.065088156 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.065582798 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074079541 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.072865913 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.07529415 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074589106 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064690633 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064722757 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.0668505 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07522866 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075275683 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075266376 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066701706 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075758901 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065266794 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076998413 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08097179 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065202888 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06556988 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.064854755 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065134012 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065414701 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072788722 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.0725656 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065900692 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.064929893 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065112603 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.075070088 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072982194 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064576716 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072126449 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064406914 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06504685 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06541451 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065440573 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.072297614 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.074374497 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066330063 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064980532 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065092876 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065037105 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.064176198 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.072422823 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073860453 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.074172829 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.073351745 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066050933 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07325936 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073277457 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065627917 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.0725099 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.064896954 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064339259 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064367883 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.071806328 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.071037131 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.073234075 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064307196 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.063627651 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07170506 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.210104936 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067411067 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074018584 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076380351 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07461053 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065368371 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079787148 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066285054 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076132423 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064416476 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075914908 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066462994 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074864883 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06564054 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.064755933 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065568044 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.073764325 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066321333 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065942942 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066595046 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065607716 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.074602509 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077053627 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067044642 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073472413 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.074121442 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066444423 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.073345234 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065622866 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.074368542 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065613044 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066125883 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064576391 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077163894 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066090919 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065077527 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066212065 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07658312 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.064587524 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075417774 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074222683 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06473206 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07987707 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075870888 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073476069 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.076092384 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066791207 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06428824 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065329895 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065322464 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07243421 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074139016 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066101456 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065602571 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.072675054 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.076699626 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.064876494 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.072635889 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073002428 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.073940931 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065929692 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065422256 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076432441 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076612983 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.074020404 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.073673086 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074311344 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.0658325 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073195089 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074135985 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065353788 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078921285 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065823632 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.077599685 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074105366 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07307397 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072686971 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.073082168 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.073643051 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07360158 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.075529954 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063247354 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.063738543 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.071709778 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.063836302 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063580784 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.071329375 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06452155 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.064267605 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.076223281 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0641371 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.073767174 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.063323002 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.072510886 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.063009522 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064367047 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075841694 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064029473 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.063842697 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.071323595 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.063415958 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.070856749 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.073306429 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.070809164 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.063031383 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063676798 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.072899645 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.072970789 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06443237 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064447861 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06528606 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.071657794 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.071520739 seconds)
  done (took 17.602768696 seconds)
done (took 36.752092597 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.201898413 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153886892 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.186272395 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.110711257 seconds)
  done (took 2.136031939 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.094443384 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.09364758 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.075133375 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.061166657 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.083015409 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.062726069 seconds)
  done (took 1.897140294 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275120599 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.193877773 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171387577 seconds)
  done (took 2.063464546 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.210066137 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.193343461 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.458531165 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.29049352 seconds)
  done (took 2.672550804 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.129858557 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.080628298 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06176663 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.072808374 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.112881011 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.146101425 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.090064651 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.114610455 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.073325346 seconds)
  done (took 2.366281172 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.133102142 seconds)
done (took 12.723745205 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.194358048 seconds)
    (2/309) benchmarking ("sort", Float32, false)...
    done (took 0.156213678 seconds)
    (3/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.237989571 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.170127427 seconds)
    (5/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073970824 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069666965 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.144606321 seconds)
    (8/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.076850739 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.065234526 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.108737538 seconds)
    (11/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.095090084 seconds)
    (12/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.181542409 seconds)
    (13/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.110171484 seconds)
    (14/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.433901728 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071031621 seconds)
    (16/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.136983642 seconds)
    (17/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075368517 seconds)
    (18/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.248473734 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.114569428 seconds)
    (20/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.17555329 seconds)
    (21/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072098317 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.07234077 seconds)
    (23/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.218296443 seconds)
    (24/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117552872 seconds)
    (25/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077146028 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07155357 seconds)
    (27/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072621482 seconds)
    (28/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.168007535 seconds)
    (29/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.180917808 seconds)
    (30/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072159227 seconds)
    (31/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.166673137 seconds)
    (32/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.151101021 seconds)
    (33/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.165842284 seconds)
    (34/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.162802825 seconds)
    (35/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070937862 seconds)
    (36/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.073753679 seconds)
    (37/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.182963793 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.062347909 seconds)
    (39/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.155873193 seconds)
    (40/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.159730773 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.07836587 seconds)
    (42/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070473881 seconds)
    (43/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.07064049 seconds)
    (44/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.067577027 seconds)
    (45/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.1692885 seconds)
    (46/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.074353756 seconds)
    (47/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.072304763 seconds)
    (48/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.1379571 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071257598 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.10703023 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090167899 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089288411 seconds)
    (53/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.061046697 seconds)
    (54/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.061579628 seconds)
    (55/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.061142996 seconds)
    (56/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.167586156 seconds)
    (57/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.06185395 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.125718162 seconds)
    (59/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.215136029 seconds)
    (60/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.236005435 seconds)
    (61/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.071644761 seconds)
    (62/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.075971692 seconds)
    (63/309) benchmarking ("sort", Bool, false)...
    done (took 0.149862224 seconds)
    (64/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.062865249 seconds)
    (65/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.076783559 seconds)
    (66/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.144157332 seconds)
    (67/309) benchmarking ("sort", Int64, false)...
    done (took 0.063726412 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.082107573 seconds)
    (69/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.063228757 seconds)
    (70/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.062128246 seconds)
    (71/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072834032 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.070000356 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.062382981 seconds)
    (74/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.061285685 seconds)
    (75/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.071105995 seconds)
    (76/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.060850001 seconds)
    (77/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071842057 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093340615 seconds)
    (79/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.202983475 seconds)
    (80/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.060765816 seconds)
    (81/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.073081359 seconds)
    (82/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.06849472 seconds)
    (83/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.082035514 seconds)
    (84/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.069725042 seconds)
    (85/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088913627 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.081145047 seconds)
    (87/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.224278442 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065131944 seconds)
    (89/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.064064497 seconds)
    (90/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.063264188 seconds)
    (91/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.219394207 seconds)
    (92/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.063875982 seconds)
    (93/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.201537594 seconds)
    (94/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.136534275 seconds)
    (95/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.062063874 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087399983 seconds)
    (97/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087134689 seconds)
    (98/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.155875161 seconds)
    (99/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074606267 seconds)
    (100/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.240208746 seconds)
    (101/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.067366641 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.062959964 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.133255039 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.136736241 seconds)
    (105/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.063634516 seconds)
    (106/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066506391 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08547484 seconds)
    (108/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.076880356 seconds)
    (109/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.069771292 seconds)
    (110/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072279306 seconds)
    (111/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.203620619 seconds)
    (112/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071235669 seconds)
    (113/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.062269522 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085389955 seconds)
    (115/309) benchmarking ("sort", Int8, false)...
    done (took 0.168992166 seconds)
    (116/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.062078949 seconds)
    (117/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091771224 seconds)
    (118/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089898292 seconds)
    (119/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.071322994 seconds)
    (120/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.172138637 seconds)
    (121/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.192371189 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.082864252 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.097505159 seconds)
    (124/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.064027993 seconds)
    (125/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.064684513 seconds)
    (126/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068227522 seconds)
    (127/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.062329891 seconds)
    (128/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.079794797 seconds)
    (129/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073631432 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.114418384 seconds)
    (131/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071428996 seconds)
    (132/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.157223648 seconds)
    (133/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.063885706 seconds)
    (134/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.182957539 seconds)
    (135/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.062221445 seconds)
    (136/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07185259 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.127878872 seconds)
    (138/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.065369466 seconds)
    (139/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.140091428 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.06377055 seconds)
    (141/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072003276 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.062969057 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.170224207 seconds)
    (144/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.070058192 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071410871 seconds)
    (146/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.060899658 seconds)
    (147/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.075525733 seconds)
    (148/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.180382879 seconds)
    (149/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.063839011 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074594366 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.115667562 seconds)
    (152/309) benchmarking ("sort", BigInt, false)...
    done (took 0.238127248 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.070857714 seconds)
    (154/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067231754 seconds)
    (155/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.200772504 seconds)
    (156/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.062470751 seconds)
    (157/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.062949315 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.062389839 seconds)
    (159/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.138704719 seconds)
    (160/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.061472937 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.115926501 seconds)
    (162/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.061372761 seconds)
    (163/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.063353397 seconds)
    (164/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.092708918 seconds)
    (165/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.08956797 seconds)
    (166/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.061952697 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140285987 seconds)
    (168/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.063495415 seconds)
    (169/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.063163652 seconds)
    (170/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.071555418 seconds)
    (171/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.069005474 seconds)
    (172/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.063625555 seconds)
    (173/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.064733721 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.075539789 seconds)
    (175/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.199206168 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070036594 seconds)
    (177/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.073430763 seconds)
    (178/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.066107845 seconds)
    (179/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.074541629 seconds)
    (180/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.135645319 seconds)
    (181/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.062013073 seconds)
    (182/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.069013449 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.14212946 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.062177583 seconds)
    (185/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.134487825 seconds)
    (186/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.162093566 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.161239817 seconds)
    (188/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.071224045 seconds)
    (189/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.181596371 seconds)
    (190/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.062959197 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086479566 seconds)
    (192/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.237475797 seconds)
    (193/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.065631137 seconds)
    (194/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.06565261 seconds)
    (195/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.063185365 seconds)
    (196/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069144621 seconds)
    (197/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.170860158 seconds)
    (198/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.065140354 seconds)
    (199/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.061637546 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.114696204 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144108774 seconds)
    (202/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.065713548 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.063984766 seconds)
    (204/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.135138201 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06277835 seconds)
    (206/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.063953377 seconds)
    (207/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.061841556 seconds)
    (208/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.061500625 seconds)
    (209/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.063240576 seconds)
    (210/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.06990875 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.062851534 seconds)
    (212/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076399112 seconds)
    (213/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.062548175 seconds)
    (214/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.062820467 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.071082647 seconds)
    (216/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.164402828 seconds)
    (217/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.06292351 seconds)
    (218/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.137700806 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.084299537 seconds)
    (220/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.076199349 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088703948 seconds)
    (222/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.206822857 seconds)
    (223/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.062754395 seconds)
    (224/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069878745 seconds)
    (225/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.062348537 seconds)
    (226/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.06254521 seconds)
    (227/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.064907613 seconds)
    (228/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074597243 seconds)
    (229/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074096144 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137572623 seconds)
    (231/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.069725603 seconds)
    (232/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.074182221 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.111168825 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.062484686 seconds)
    (235/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063713058 seconds)
    (236/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.06652949 seconds)
    (237/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.188089809 seconds)
    (238/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071085336 seconds)
    (239/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.064053524 seconds)
    (240/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071643383 seconds)
    (241/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063860151 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.089520636 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.128915035 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119286052 seconds)
    (245/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.061187319 seconds)
    (246/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.061671097 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.118093508 seconds)
    (248/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.069405647 seconds)
    (249/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.062166312 seconds)
    (250/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.069646058 seconds)
    (251/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.061757765 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.062661675 seconds)
    (253/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.063286846 seconds)
    (254/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.1248788 seconds)
    (255/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.069611035 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.085072856 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088644615 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.061765322 seconds)
    (259/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.063881934 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.130854354 seconds)
    (261/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.063071415 seconds)
    (262/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.064301767 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.084827256 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.062658934 seconds)
    (265/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.062062951 seconds)
    (266/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.069372632 seconds)
    (267/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.160444004 seconds)
    (268/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.064938676 seconds)
    (269/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.063461775 seconds)
    (270/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.062955399 seconds)
    (271/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.065205262 seconds)
    (272/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.062996349 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.069187255 seconds)
    (274/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.062382756 seconds)
    (275/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.077365364 seconds)
    (276/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.075022538 seconds)
    (277/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.061997551 seconds)
    (278/309) benchmarking ("sort", Float64, false)...
    done (took 0.129425546 seconds)
    (279/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.063486542 seconds)
    (280/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.062863042 seconds)
    (281/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.06410449 seconds)
    (282/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.063668819 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.122324479 seconds)
    (284/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.064009843 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.12364516 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.130453259 seconds)
    (287/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.064491681 seconds)
    (288/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.062999094 seconds)
    (289/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.063488654 seconds)
    (290/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.063533204 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073812588 seconds)
    (292/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.062449452 seconds)
    (293/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.063786968 seconds)
    (294/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06193057 seconds)
    (295/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.076779624 seconds)
    (296/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.064022439 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.069341476 seconds)
    (298/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.133664635 seconds)
    (299/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.063434256 seconds)
    (300/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.063470945 seconds)
    (301/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.062586415 seconds)
    (302/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064352161 seconds)
    (303/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.159023765 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.061972023 seconds)
    (305/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.061743495 seconds)
    (306/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.061321249 seconds)
    (307/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.07358195 seconds)
    (308/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.063384986 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.085139113 seconds)
  done (took 31.898128712 seconds)
done (took 33.341572211 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082838007 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086221796 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.0719347 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.084287629 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080121498 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09576499 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07190658 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076871599 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079183985 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078003867 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077523562 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.070242473 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072753162 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073033045 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.071081682 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086651511 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077341635 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07164955 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071818969 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.062856377 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071161884 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.062711323 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.062299338 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069298402 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.074234158 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.069738289 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072090262 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072346482 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.062748967 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.063260487 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067597277 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072127246 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065533693 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076399147 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071839357 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071089431 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.072490522 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075405141 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.063096791 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.063321856 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073316205 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.063281603 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.070287909 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.067186119 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.066141992 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.067791448 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.069187043 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.073218694 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.083510731 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064917965 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.071400278 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.071891302 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.073227496 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.066683297 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.06635316 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.069674339 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.068712674 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086525197 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.071854834 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067095016 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072549686 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.071921229 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.068984467 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.070732282 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071422758 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073353578 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076377403 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.0690726 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073208958 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069819262 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.061832445 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07097778 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.065968846 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06126541 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07445105 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075678653 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.061874948 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.06715368 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071268676 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071579481 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.062837348 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066538531 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.061045108 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.065773766 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064715708 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.067298796 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067868087 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.069950622 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.061971084 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071694558 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070136799 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070958402 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.062123943 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076215627 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.062948109 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.068947933 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.062763984 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.063318623 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062268246 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.067770817 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.062494668 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067017944 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072064392 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06191011 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.067295634 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.076096505 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.062597261 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07006601 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.061900636 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.062795496 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07439947 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073720227 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.063029639 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066834999 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06225267 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.068376009 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06278901 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.062645864 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.062329243 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.062797058 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.067749734 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.062941859 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067178882 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.06843805 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076107053 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062333535 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067917395 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06699717 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.062973574 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069456929 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.062749482 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.062012363 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.061811673 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.075724944 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065842113 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.062259774 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.067002466 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066151099 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.069795023 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.060797194 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.070749736 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.067355994 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.210083067 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070808383 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063274877 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074928608 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068046781 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067778433 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.062737726 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062708787 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.061879628 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.062554059 seconds)
done (took 12.239241537 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.061946673 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.104763938 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.072162833 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.080436758 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.075996076 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.063924319 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.068089835 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.081920384 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066436681 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.082742304 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.084393956 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083632125 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.090819888 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.0628081 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.063126818 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.062876298 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.060728437 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.067849031 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.077031479 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.0821817 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.089915376 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.061114067 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.070526297 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.076416673 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.072062842 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.078263297 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.063015345 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.062240285 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.063859485 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.079215642 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.084426944 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06105511 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.062145001 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.075870252 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.07541789 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.069867589 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.061887652 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.066243119 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.062199297 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.061226159 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.062707141 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.076632675 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.065438568 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.06832719 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06216527 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.062729882 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06211431 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.065458031 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.074557971 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.06549748 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.069828848 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.073877529 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.064838165 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.061949768 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.060948181 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.067404526 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.063023066 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.064211623 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.063289753 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.063866461 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.063126227 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.0653626 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.06381664 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.063861322 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.06670909 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.067256275 seconds)
  done (took 6.092869913 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.078985326 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089204528 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.0778591 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.078244146 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.060969003 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.061637105 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.061730331 seconds)
  done (took 2.053670968 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.061824786 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.074757814 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078438821 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.077898172 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.071365782 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.079418206 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06222582 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.090781851 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06099405 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073646746 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.107067919 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079009419 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.065257201 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07306329 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.061747402 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.069731776 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.0618124 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069580287 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070526676 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.077751279 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066274883 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.087903721 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.074929256 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.062017629 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.082606873 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.067008729 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.061521592 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.062353661 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063389465 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.063053148 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063491299 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10018606 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.067161239 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075737555 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063375249 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.062444967 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.069696692 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067320692 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.067476808 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.069750272 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.069710155 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065318423 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.062646837 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06529281 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.066640416 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.068337305 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.062818102 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.065145318 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.064430965 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.076330418 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.062598486 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.069029394 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067094281 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069118717 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069845975 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068923433 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071817288 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.065082878 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.075682798 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.071869502 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06494288 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073412639 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.072928462 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.069748644 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.072429648 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.06809058 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.069141717 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.069874553 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.064597475 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.065568268 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.065449076 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.072939649 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.06385014 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.065747261 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067068862 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.065365542 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.068055648 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.080932667 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.080455076 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.076650269 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065221051 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.064730207 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068355648 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.080746985 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069020961 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065180165 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066958598 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.062899479 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.067692405 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064252589 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068323926 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.063526024 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.070242563 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.064274035 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.065380871 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071122113 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.061557398 seconds)
  done (took 8.28351645 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.064508664 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.063331529 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.064686799 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.063357143 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.063035542 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.063337532 seconds)
  done (took 1.954298675 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.085481139 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.063462745 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.076019016 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.0634874 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.096496972 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.069958279 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.070902679 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071795799 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.075166445 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.074679825 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.07031817 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.073471688 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.071203726 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.066441345 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.072044994 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.066131095 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.072682483 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068591994 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.076264741 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06660632 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.078698895 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.06655707 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066922736 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.07683154 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.067580069 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.065258028 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064637845 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.07628602 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.07605 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.076679658 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.066107475 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.067354264 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072290569 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.073586249 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.072170749 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072128263 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064650254 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07050249 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066890748 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.067810416 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.074560079 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066918471 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.067024111 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07012378 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.073459604 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071356493 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.068569294 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066990549 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.069656667 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.068404051 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.068213744 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.063377832 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.065983736 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.06826895 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070233011 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071288912 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.068355301 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.070063546 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.064282306 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070473536 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.063101333 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.06561683 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070992866 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.065526518 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.068527208 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.068434661 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070317746 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.064491542 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064681199 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.062626302 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.068213165 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.062474377 seconds)
  done (took 6.569770565 seconds)
done (took 26.480297262 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.004161718 seconds)
  done (took 2.52210946 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.559521704 seconds)
  done (took 2.118943295 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.653344036 seconds)
  done (took 8.210826389 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.295076991 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.340961362 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.709176413 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128893047 seconds)
  done (took 3.061536123 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.704542663 seconds)
  done (took 2.268677237 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.228745835 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.216978958 seconds)
  done (took 2.023429244 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.343759277 seconds)
  done (took 1.899878123 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.07274147 seconds)
  done (took 2.628716188 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.227370179 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.154530745 seconds)
  done (took 1.947971643 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.452565045 seconds)
  done (took 2.013743954 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.31336049 seconds)
  done (took 5.881296492 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.234928465 seconds)
  done (took 1.83756117 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.228771673 seconds)
  done (took 1.79196221 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.709036952 seconds)
  done (took 3.265851528 seconds)
done (took 43.035231703 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079644425 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081761674 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080336837 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077246875 seconds)
  done (took 1.850003578 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.072939466 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.067692891 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.071827066 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.072207819 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.069534384 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.071552386 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.071231877 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.067794418 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.069234099 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.068171863 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.066487294 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.067502307 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.070947078 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.067560273 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.070758337 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.072240811 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.067943617 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.067771808 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.070382133 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067366952 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.07088767 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.067549395 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.065981342 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.066728214 seconds)
  done (took 3.218186896 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077040705 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.070699645 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.072251155 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.069078641 seconds)
  done (took 1.859734365 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.07421198 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.08404466 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.086703904 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.091702843 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.074188734 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.074532462 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.082753236 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.083827731 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.063095811 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.086650799 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.065962127 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.064388095 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.064223294 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.084780116 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.08286124 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06071993 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.062658957 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.075312074 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.074056685 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.076883797 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.0658921 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.06300648 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.074205187 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.074022597 seconds)
  done (took 3.358130675 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077045241 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.061647574 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.07513107 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088073003 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089534777 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.061061952 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.07656778 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090033209 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.136252567 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.061255065 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.067249128 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.061239953 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.10188598 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.061823973 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07774942 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107795269 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110717148 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.065502769 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095130731 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.062884459 seconds)
  done (took 3.2022366 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073488472 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.065907058 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066805253 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.063200588 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.074357802 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.06974688 seconds)
  done (took 1.993326851 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.064356708 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.064366954 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.065018214 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.064490105 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070290065 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06435709 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.062886638 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.065055981 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.065221712 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.064757414 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.064489231 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.063369033 seconds)
  done (took 2.34424627 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.159496037 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067325613 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.065857467 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064313799 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.067408365 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.063534844 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078835363 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066085823 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.083729867 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.063415366 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.062564561 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.064868514 seconds)
  done (took 2.47914381 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098980697 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128592885 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095631261 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071029534 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169844615 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093517491 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.089167253 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.121376923 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09278259 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.068015313 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092226669 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13470995 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094355972 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.097421536 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081020064 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124850642 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108657776 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086188374 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11050023 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078289176 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.067799249 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131091487 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.068564065 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09158426 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100991306 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.097083667 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10957943 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132729259 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082474876 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.088585385 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081419698 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.072759991 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104153929 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.083378913 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.096637158 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092271813 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097018433 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083995079 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.084792526 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119045809 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153283583 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099431266 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099624098 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134103644 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077172929 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.107233409 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080369478 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098474317 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103896266 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092458305 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074578593 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09092325 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.105881953 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099786241 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.079153458 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080991187 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116651456 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.097554848 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094502664 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078418046 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10519522 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.085476217 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106228858 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267736938 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140111771 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10158907 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137053798 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122942965 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095953424 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.08890882 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.091149424 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074756446 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11011857 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097065351 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136249793 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108641835 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099610991 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.095517266 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081521878 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106650543 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112447739 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090803952 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091366918 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145421894 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107945083 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090285336 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095604716 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.140982653 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070545531 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147482054 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088263003 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12033619 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097122453 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137814874 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090868506 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.082847013 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104039458 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100187935 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086355184 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10245632 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083593735 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113056389 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091745757 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100734731 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08099108 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089609439 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085886213 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.096721951 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.074206736 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103203443 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115477865 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113462072 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.073981727 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107912654 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085598728 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.076519197 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092639122 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13942914 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082929524 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.074585924 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148390734 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.092295824 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.115279667 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108100768 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.081913797 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.269040371 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136784803 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09267489 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089914596 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07637902 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153601834 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075630777 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119139094 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080751909 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102181673 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105179141 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132032724 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13952543 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094762763 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077717757 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091757441 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.107424637 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086635625 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084926525 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076646128 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.109659278 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126435921 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.100106895 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079869491 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.092560438 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.068452107 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113770344 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075682704 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084252854 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095311121 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.087126221 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.089237494 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143202518 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.084119774 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108050822 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097570202 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.066430615 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09119567 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152403591 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082106051 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.110577888 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117175558 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083341036 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067027879 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.096491641 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.072409494 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108434155 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.092648881 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106916094 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077758316 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107091828 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.068173248 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073413823 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129780667 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102102285 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089272843 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.132430486 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10458899 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.088036642 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.103865542 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.095245246 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091569681 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099794749 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.262333522 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106662398 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.07411398 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130315956 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09208242 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.077498898 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087335791 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078527526 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.077565992 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099909143 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11496525 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088838452 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101421745 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103402054 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090083609 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.109473384 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089081873 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078302916 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132770446 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075621728 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.074000311 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087659806 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.106432622 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088705942 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.134504212 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.079410814 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136658359 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092031988 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080350155 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115440923 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.067983067 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.069366529 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.080910219 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091935715 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116012494 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079024725 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077695047 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118404757 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132048307 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097740349 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102515747 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.067523909 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08913992 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132344689 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.110712703 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081115074 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110015833 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084190412 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129383997 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096495975 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118606142 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103618108 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110755523 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.091231053 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.080862638 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.073255202 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0877851 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110879104 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086145512 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081532948 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.067276225 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074008823 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092586278 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090727908 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111661599 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08731541 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134311418 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07214272 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099878079 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259655158 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10871262 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090545287 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096346635 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.092782309 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.0915051 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091550527 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093048642 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07309323 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126486582 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103254625 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077623944 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089299888 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095507632 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106121342 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109005741 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109607976 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093085822 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106705983 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122693735 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098645977 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082293171 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083437081 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.094039358 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.084403957 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080243599 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.103932432 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11274924 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098295502 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109360766 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.09643315 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.092358067 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10719614 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093331532 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089542337 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.117851725 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151334328 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.101904674 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.103888297 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084144831 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105165387 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102652502 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109805165 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.108109188 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105955522 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.068142033 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.072985 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.067665502 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103622406 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076824916 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114776867 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074221243 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105842944 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096891887 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080065728 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.066472569 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101605012 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093177766 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.082059048 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123441036 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.114149442 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.072787258 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091073907 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106957033 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082586394 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12303172 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.100092017 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096525236 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.068444714 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.088957146 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07201785 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.264618352 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101390597 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.078334236 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.077070483 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.069967919 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107859784 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084501854 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110008332 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089405169 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100847095 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119782727 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132895912 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087031281 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095786408 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117561484 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113432212 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.081871109 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11218981 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135948759 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.11817778 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.078302383 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.082036505 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103405498 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105540608 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102685713 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075674176 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07948448 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109475377 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114396089 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.06792412 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084710012 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070204884 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.084273269 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11280028 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095721162 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082138791 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118908474 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07473477 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107822115 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09559773 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122927746 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120893665 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144269159 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094802133 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082258802 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074242788 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120909757 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.06835841 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114150408 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109310407 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08537368 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.066017638 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081219162 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.093327808 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.62557223 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106166878 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.073480763 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134029734 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08620838 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11474325 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084094685 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.116903894 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088718762 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100734227 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089845684 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28469581 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.081866184 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108840787 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.172487984 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108346531 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.105649377 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.071875145 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.08417076 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.070374148 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.076137491 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.078361586 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084550551 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106124516 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.082003841 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103078465 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.077634032 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.104231727 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088213295 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086636026 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.096322908 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077624952 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135965599 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084747658 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119193778 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104374576 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077045871 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.071828918 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.084199984 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.099592108 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081714605 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094666959 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078484912 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.075953304 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152832103 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102857781 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084780196 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102812117 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.090677266 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.086969763 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089114732 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115027606 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109705916 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071830578 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.087322299 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102209206 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077105946 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.073321841 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09650065 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.068972584 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089781681 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099223946 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096143522 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090007354 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.103037092 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077847425 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086739609 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10950606 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085100995 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.075911347 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076540638 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.076789383 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.07598527 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103545266 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108680062 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112060964 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105354223 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087554462 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090553326 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.075303062 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.217425606 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.234101285 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097208968 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.10561862 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076469471 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.132533013 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088741 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089262195 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096852195 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101299309 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153042265 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07434762 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109829885 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094477511 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110885268 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086538321 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107277367 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096098684 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092096553 seconds)
  done (took 50.202780409 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.092008504 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.146118843 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.150702561 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.077837938 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.091658886 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.115766371 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204804134 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188300324 seconds)
  done (took 2.768806219 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.065461599 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.077263225 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099302908 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.078506602 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.062005878 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.063373167 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.201742839 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079439286 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.063802563 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.101772137 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07420399 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.066080613 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.415000824 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.063088321 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.064552389 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.073795018 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.063421316 seconds)
  done (took 3.394175172 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.362818624 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.598990294 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.339108717 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.070568422 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.972432311 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.084099859 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.319706592 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.131816517 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.076158587 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.557838375 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.365093417 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.13020788 seconds)
  done (took 18.702906861 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.073493082 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072465422 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.076128134 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.076795355 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07144824 seconds)
  done (took 2.060494557 seconds)
done (took 99.030970458 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078839864 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.166197032 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.065161751 seconds)
  done (took 1.956780072 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.082192078 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.079756646 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.079289542 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.077152561 seconds)
  done (took 2.016336399 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.072251319 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.074048957 seconds)
  done (took 1.835870655 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.244917461 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.163525908 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.092902838 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081465871 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078907896 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079040451 seconds)
  done (took 1.939647407 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070490408 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.069750714 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.069762366 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.070253133 seconds)
  done (took 1.968575619 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.065588653 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.063518894 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.065914656 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.069532593 seconds)
  done (took 1.95254929 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.081712898 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.08136946 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.075981981 seconds)
  done (took 1.928892696 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.093878973 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.09532084 seconds)
  done (took 1.877620542 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.078410382 seconds)
  done (took 1.769001839 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.088287185 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.097374934 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.153113402 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111870356 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.151305104 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.1352943 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.076416091 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.077439139 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.072085315 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.070744173 seconds)
  done (took 2.723650846 seconds)
done (took 22.237144855 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07705442 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.370864172 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.357662222 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084156215 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669846251 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.353988764 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.983310215 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090042556 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.097469373 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066349843 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083526469 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.64705218 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.975052606 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.330608555 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.961839501 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.327096338 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648142776 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065845507 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065168363 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066300234 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.967177385 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06568981 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066118663 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065959618 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.684956441 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370699841 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067236071 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.327328656 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066996033 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06955852 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354513967 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067905175 seconds)
  done (took 16.158813617 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069322166 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120223712 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070202657 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.081343976 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.067528369 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067276205 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.069337198 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.066789566 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.107321218 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066226121 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083207177 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065427102 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070236358 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068085931 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087022499 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066801442 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068465017 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067548458 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066474908 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070383466 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.084975388 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066664339 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067493531 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067008253 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067738563 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080358353 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068356919 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066546248 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06695946 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069418084 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070426396 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068687452 seconds)
  done (took 4.054581467 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119625534 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126590108 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071339297 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104844829 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118658824 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068272413 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147480281 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090268907 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112459546 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066689956 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083544525 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066743854 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101867204 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068764423 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087114477 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067253124 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068536503 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06766572 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067063086 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068433823 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085911509 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066759328 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067965812 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067485235 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068250937 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08129775 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068336985 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067216132 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067347348 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069189741 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071516435 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068671648 seconds)
  done (took 4.336782839 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.068148721 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.070363 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.077916878 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.079166319 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.064898184 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.067565446 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.068628019 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.065466311 seconds)
  done (took 2.277546858 seconds)
done (took 28.533830067 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.076432084 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.065275142 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.068781485 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085514937 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.070750913 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.068415156 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.062256305 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.0718204 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.069324519 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.069316308 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.070449645 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.064259756 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.067939005 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.063286668 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.070561384 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.064474962 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.071156687 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.068675807 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.069633403 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.070597985 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.066844375 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.069962379 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.072536665 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.069417753 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.069615481 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.069717266 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.073542332 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.069931175 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.065600748 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.067538576 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.067541491 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.076002317 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071079033 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.071655492 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.064538583 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06448748 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069060709 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066290364 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.071070299 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.073652113 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.066632076 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.073861075 seconds)
  done (took 4.595623153 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08315588 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.086216937 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.077693933 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.077329487 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.093742795 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.077489142 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.083114259 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.076441347 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.074762838 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.083773292 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.070814815 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.077948024 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.076607062 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.070010014 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.075124885 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07204515 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.077820665 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.0721726 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075724878 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.075641092 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.084876328 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.070109772 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.076982309 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.076941157 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.072306619 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.077560286 seconds)
  done (took 3.737439182 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.071377292 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.081868066 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089544826 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.147524904 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111101542 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077683369 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078817619 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091417873 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09483924 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065347185 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069096732 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09025562 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08981023 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07181879 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.105698075 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.081612768 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081437829 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067559567 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072517719 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094362641 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08539552 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082675408 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091322269 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081547982 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.064456808 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.067201867 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071139551 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.07863936 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072135482 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076371693 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.069457632 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.068121823 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.065522995 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.076213767 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069348828 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06443018 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089067887 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077081459 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077860046 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.108062422 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.073111191 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.065833467 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092965584 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126467662 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.064374149 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.068480227 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.068317354 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076306261 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.065771338 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093043685 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078904809 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.064586349 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.065419443 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06606668 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.065930368 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080324293 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.066434586 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.066692079 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075601442 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070762975 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086467132 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.069362241 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083338745 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.063881134 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.073798669 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065930729 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.065941985 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.063458414 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095643172 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071367219 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113637694 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.065675476 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.063608961 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076415855 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075186671 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.071622938 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.064710122 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082648056 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076239506 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.068590644 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075945964 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.067518665 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.067029261 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.094126611 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.06305867 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.062716787 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.061579398 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.066197097 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.065510145 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.063792873 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.076362716 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.062962191 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.067798977 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.079400699 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.065065426 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.065732313 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.068270996 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.067250835 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.064401353 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078035486 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.068633333 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.065888956 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07622383 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.065473007 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.067432096 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078199407 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072335673 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06457254 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.066331635 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.068309111 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06612957 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069022163 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.067846035 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.067262523 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.071972674 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072241523 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070166278 seconds)
  done (took 10.548168788 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.159893736 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.151322527 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.067105492 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144223237 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.073535531 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.071035922 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.144136704 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.085245126 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.065748893 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.066256686 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.064716644 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.095779818 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.091128786 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.103192668 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.070461013 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.065598084 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.088813269 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.0982536 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.146696314 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142740186 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.089244512 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.072555874 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068048501 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067427194 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.066884764 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.074207454 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.083478585 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.073088958 seconds)
  done (took 4.349009329 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.074588521 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.089734371 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.069812818 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.076692292 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.085307799 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066550179 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.067180817 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.067256262 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080033421 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.075451321 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.065564037 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.068652914 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.067703948 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.066536595 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.064765653 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.071622214 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.072277664 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.064658668 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069364715 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07046464 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.075360999 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.090505641 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.069344691 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.064859739 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.067540488 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.065020165 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.074519231 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.077461099 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.065627859 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.081026456 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.063546218 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.069447751 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.079087572 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.066403727 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.065602037 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.065393364 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.065493242 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.065967701 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.065759881 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.063846625 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.064184718 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.070173863 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.064090758 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.073027025 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.077116436 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071424312 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.066929221 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.066146389 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.067552513 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.063320633 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.068230187 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.068052078 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.067606546 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.072859123 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.068746561 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.068285473 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069176716 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.091086752 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.071374603 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06490574 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064763183 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.064060916 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.068228917 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.075439681 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.081959927 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.06794691 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06403261 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.065458246 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071311896 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078544368 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.064672086 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070109589 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.062873334 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.066156288 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.068110201 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.067823072 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.066593482 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.064133067 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.065201937 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.065738773 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.065669732 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.065403036 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.065582013 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.067724524 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.063679365 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.064031741 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06568916 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.067536001 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.074511454 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.065074901 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.068956257 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.066787556 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.064059282 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.067751185 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.070972843 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.068038898 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.078531979 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.076722751 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066095619 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064278656 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.077999659 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.067843548 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.064924962 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.071146878 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.067384205 seconds)
  done (took 9.049927444 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089009728 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.066704868 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.081983652 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.089605958 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.075847304 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.071243983 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075956719 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06654781 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082051238 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.064883581 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.074031759 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06447235 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076835005 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075756179 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067176078 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075972206 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.068125404 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082497317 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.080162254 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.06487979 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074734441 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.077029759 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.077508193 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.079688055 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078911905 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.079862174 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.077647884 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.068581591 seconds)
  done (took 3.87228879 seconds)
done (took 37.857512492 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.785591723 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.954426053 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.776090767 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.971684805 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.987607073 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.904842845 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.89490237 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.780881113 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.884618537 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.830240783 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.072459034 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.284932751 seconds)
done (took 65.897447979 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.866863246 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.939166504 seconds)
    (2/2) benchmarking "String"...
    done (took 2.039174334 seconds)
  done (took 5.689086688 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.011476266 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.425905743 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.0400174 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.779069362 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.779896759 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.201747261 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.578129477 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.226969616 seconds)
  done (took 30.741645382 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.91872604 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.016709445 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.453157103 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.486957222 seconds)
  done (took 15.62917389 seconds)
done (took 63.743028797 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.823915741 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.773351667 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.783621816 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.801614379 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.789486933 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.777501859 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.780423686 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.778860647 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.813759583 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.861139032 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.778217555 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.781762387 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.777989022 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.789205407 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.39321781 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.837143265 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.790440676 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.778319895 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.7938845 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.802883818 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.784620619 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.779854108 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.27824914 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.964977549 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.388298789 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.010911312 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.246654635 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.186959209 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.788543581 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.778882974 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.812207599 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.012551197 seconds)
  done (took 204.248438872 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.779176123 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.597934544 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.672616756 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.820942682 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.120798742 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.952608965 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.876574727 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.183822672 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.776956514 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.798559861 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.931048348 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.774901842 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.963783641 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.719807565 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.815650222 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.870161193 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.919992479 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.982526332 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.815387903 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.939949513 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.784831427 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.758149234 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.695969127 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.929137986 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.80171451 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.783655215 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.783482632 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.790153614 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.959145095 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.89647499 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.781580238 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.792763901 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.937364879 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.644228868 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.784394036 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.784042251 seconds)
  done (took 168.93212392 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.971655983 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.789246706 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.782304912 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.838390645 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.906613783 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.781507259 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.43732669 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.785702851 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.293345168 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.786658546 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.780819603 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.781921496 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.781013159 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.780722944 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.795531022 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.859991322 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.782122997 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.797398234 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.784032632 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.807008351 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.780644972 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.781111623 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.782184318 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.780370159 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.783249265 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.781352315 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.782675731 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.108711867 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.017982277 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.779248545 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.782708759 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.655689085 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.795510665 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.007214243 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.785465626 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.875890704 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.835151329 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.907328767 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.783376954 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.001218596 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.855103536 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.778992474 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.782920463 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.850129664 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.792705698 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.780120112 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.787754947 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.788789969 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.84943929 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.038148148 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.779430957 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.905694159 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.264141364 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.778356509 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.784027219 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.783083843 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.39244355 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.783022201 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.783133251 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.789520814 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.791030521 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.784446984 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.785051842 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.171868091 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.851256779 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.901520175 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.181361417 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.78190074 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.116599512 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.909885635 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.78523047 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.784223519 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.785240526 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.786432008 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.783248839 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.784845359 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.787521474 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.907878451 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.789736341 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.908716679 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.866312299 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.90494049 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.788325067 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.783824451 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.794874049 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.61119365 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.855834802 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.816793326 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.615472207 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.784904914 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.158845926 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.547819405 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.781452382 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.783675075 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.800298301 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.783265021 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.785178491 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.786218762 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.868595306 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.782512053 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.90921484 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.510868 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.177181757 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.964030032 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.787116131 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.79320616 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.879511481 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.782582456 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.952352497 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.78082723 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.852595783 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.788172371 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.782943525 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.932247093 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.783501467 seconds)
  done (took 402.194146794 seconds)
done (took 779.120740187 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.380780458 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.351594514 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.473235244 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.369798058 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.342184954 seconds)
  done (took 13.633831505 seconds)
done (took 15.351757603 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.8018554 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.79349515 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.85171924 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.871653301 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.798613603 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.802195879 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.867820334 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.802430309 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.83651752 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.838752627 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.869534421 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.870973365 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.809158211 seconds)
  done (took 25.532210311 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.799067985 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.944898456 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.021046153 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.827448973 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.79427123 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.030888376 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.853132272 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.927636602 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.934585841 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.022354062 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.024622356 seconds)
  done (took 22.9045321 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.79731706 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.946796041 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.02896574 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.829500218 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.801111835 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.019741878 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.857390387 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.936807461 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.942577989 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.021297337 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.029917925 seconds)
  done (took 22.941044117 seconds)
done (took 73.098344686 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.793597947 seconds)
  done (took 3.514287579 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.822943111 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.959039905 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.789939012 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.78821644 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.788854005 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.790800752 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.789243225 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.792945495 seconds)
  done (took 16.242651218 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.79173777 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.792039531 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.791460882 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.79403959 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.789475826 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.791689857 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.792029935 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.791222943 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.79293176 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.79403681 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.792420808 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.795716571 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.790891348 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.792396228 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.792579329 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.791514056 seconds)
  done (took 30.399109814 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.79559804 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.792995042 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.78977389 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.795046329 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.793348168 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.790972285 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.792660604 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.792209089 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.79217501 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.795097272 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.795830185 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.792505434 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.7923943 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.792332985 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.793335801 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.795469458 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.791465997 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.79736611 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.798768135 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.794621463 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.797795093 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.797772599 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.791220465 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.796053964 seconds)
  done (took 44.77841963 seconds)
done (took 96.669668637 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.56922547 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.525463046 seconds)
  done (took 9.82250222 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.793802234 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.79630846 seconds)
  done (took 5.318552576 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.796435783 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.795081589 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.796712511 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.798327558 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.794921858 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.796595016 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.795385254 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.796491282 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.797961347 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.795726775 seconds)
  done (took 19.687405198 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.795889634 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.796315125 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.794291316 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.795209194 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.794993988 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.797972058 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.796557438 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.796190747 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.794290916 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.796444862 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.79443812 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.79636541 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.797807755 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.796130057 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.796015311 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.794961045 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.797424075 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.797552414 seconds)
  done (took 34.052923456 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.796308202 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.795963229 seconds)
  done (took 5.317221266 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.798094034 seconds)
    (2/7) benchmarking "second"...
    done (took 1.802796762 seconds)
    (3/7) benchmarking "month"...
    done (took 1.798322159 seconds)
    (4/7) benchmarking "year"...
    done (took 1.798222981 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.797106987 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.798335269 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.793986553 seconds)
  done (took 14.311467179 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.796787151 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.958853027 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.021765947 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.634021298 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.798500909 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.801777926 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.158286405 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.797030017 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.801385741 seconds)
  done (took 20.494268609 seconds)
done (took 110.727985439 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.630807951 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.795497113 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.081611082 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.910858622 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.81679804 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.094719879 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.840340705 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.079610181 seconds)
done (took 42.978481643 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.801091862 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.796750621 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.825091817 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.824490418 seconds)
  done (took 22.173736207 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.796869741 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.142398729 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.8251753 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.620775832 seconds)
  done (took 22.132036784 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.179091265 seconds)
    (2/2) benchmarking "read"...
    done (took 2.145362804 seconds)
  done (took 6.056431256 seconds)
done (took 58.894710504 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.79872159 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.797302936 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.795139971 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.7993726 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.798264295 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.798650671 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.800681979 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.800052573 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.801014287 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.799857096 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.795769797 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.79722351 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.799653139 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.798956954 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.801865654 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.796005259 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799018428 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.799428114 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799841874 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.798478168 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.798043921 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.798535967 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.799529271 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.79791744 seconds)
  done (took 44.897317274 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.796644649 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.800940837 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.800377629 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.800786394 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.79985263 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.794987918 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.800745381 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.797296771 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.7968489 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.796758222 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.797852642 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.799562349 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.799058866 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.801243878 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797534395 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.802951874 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.802682797 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797737019 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799973469 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.799664817 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.80022211 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799114794 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.801772067 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.801485046 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.800299958 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.799448859 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.79760284 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.799529538 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.801101522 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.799210404 seconds)
  done (took 55.715577124 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.800424374 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.802141718 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.805770404 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.799550505 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.806444531 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.803883913 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.801580121 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.800286903 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.801062395 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.801371511 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.801477244 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.801789052 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.801400813 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.802215214 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.803618483 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.802471261 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.803547704 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.804169331 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.803764058 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.804930332 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.804091684 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.803125212 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.804219274 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.805580906 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.805726556 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.804282039 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.80494041 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.805331195 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.804171878 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.803385659 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.806175211 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.799974321 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.803868257 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.802301109 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.804718929 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.805378181 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.805797059 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.802770379 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.805661103 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.802793031 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.805620522 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.804078701 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.804896907 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.805553254 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.80451007 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.803815263 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.805305341 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.80692883 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.805205821 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.80544107 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.80749447 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.80596295 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.806445458 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.806035484 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.805136887 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.804913719 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.806658286 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.805596202 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.806525446 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.80810943 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.806862957 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.806448228 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.805867549 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.805923805 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.805709391 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.807921496 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.80568215 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.807292615 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.803852762 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.807505753 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.807415604 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.806745866 seconds)
  done (took 131.659584444 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.803799237 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.805967234 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.804720329 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.805559053 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.805363079 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.806947065 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.806133295 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.804983034 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.806342394 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.802876738 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804438882 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.807306974 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.809336921 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.806151518 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.805647915 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.80799252 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.803727894 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.803363889 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.804534357 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.803116695 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.804015377 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.806490248 seconds)
  done (took 41.453243667 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.805486413 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.805779549 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.803934791 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.804533677 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.805821254 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.807304287 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.805185571 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.807690464 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.805049103 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.806088638 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.805760126 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805961043 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.805540739 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805328442 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.804279737 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.806314314 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.803910073 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.804976886 seconds)
  done (took 34.235332201 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.807825631 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.806654255 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.809460685 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.808472393 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.808991967 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.807780856 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.805498671 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.804597524 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.80558227 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.806781653 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.808466558 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.805063428 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.80602846 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807796596 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804497157 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.810461404 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.808010557 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.806688325 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.807971891 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.809345778 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.808655263 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.806198566 seconds)
  done (took 41.49747072 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.806968863 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.807518041 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.808844831 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.805949333 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.807598467 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.808234472 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.807298105 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.809690038 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.809885538 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.80794505 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.808403512 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.807063756 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.809040108 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.805734373 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.809886983 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.810886201 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.806796616 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.808706166 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.811271742 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.810166277 seconds)
  done (took 37.905333243 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.810899617 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.809096796 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.811010025 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.811009083 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.81099829 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.810549223 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.810067664 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.809236701 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.811655784 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.812925233 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.812017054 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.81105961 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.810721756 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.810790272 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.811539851 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.809735157 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.810229792 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.809811112 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.811848703 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.810189977 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.81236348 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.812296259 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.81219945 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.812846352 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.812672444 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.813128407 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.814097428 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.811478962 seconds)
  done (took 52.456690361 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.811670757 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.812297544 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.811119002 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.811905999 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.81273132 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.811728461 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.813037203 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.812376819 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.812041036 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.811543479 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.812822031 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.811884177 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.810743786 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.81358419 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.814633934 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.812741865 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.813876687 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.813835507 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.812832439 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.813446947 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.812962643 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.813600691 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.813019873 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.813696048 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.813267964 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.812060019 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.813283438 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.811675652 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.81266106 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.813456082 seconds)
  done (took 56.120880611 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.832596194 seconds)
    (2/2) benchmarking "in"...
    done (took 1.83420754 seconds)
  done (took 5.408765046 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.812042231 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.814215535 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.814850648 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.81414281 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.814487818 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.813133897 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.812329696 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.814702867 seconds)
  done (took 16.251630141 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.814050508 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.818308254 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.813718387 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.813215806 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.817787401 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.821715582 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.816639797 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.816403141 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.816415961 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.814464663 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.819835187 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.816586276 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.825880725 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.819237953 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.816108696 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.815438166 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.818541692 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.817287575 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.817080434 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.815498191 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.820442424 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.816255938 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.816386652 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.812960977 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.814218203 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.817059118 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.825449755 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.817451129 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.817070002 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.814264947 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.823583073 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.816586764 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.816333437 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.817174383 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.815831075 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.811280227 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.820055226 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.819160642 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.814387452 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.815084854 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.815397825 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.816140526 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.820469744 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.823689616 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.817230416 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.815338681 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.814327731 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.81590518 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.815294232 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.818846975 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.822811169 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.817622143 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.818425177 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.813220567 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.819509959 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.815535521 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.816360382 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.819421198 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.823312459 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.822897244 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.821411704 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.838552483 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.826585574 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.817768762 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.818692323 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.826941117 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.844076165 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.819062693 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.819412685 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.818180289 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.824612663 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.819275593 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.817546226 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.818420116 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.82838993 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.82561513 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.818046196 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.815989506 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.815038168 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.818979304 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.819640347 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.818548239 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.820352864 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.819799023 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.829082244 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.844619294 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.820403677 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.817570451 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.820978791 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.816727938 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.824546629 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.821516905 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.819661969 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.819479025 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.820023137 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.820233716 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.81932405 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.82088332 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.819087353 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.828165556 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.818779564 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.818885883 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.823589632 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.829302411 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.819824392 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.816822474 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.818863995 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.817312118 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.82566404 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.820923477 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.818112711 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.818233122 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.820319849 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.82306702 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.820103701 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.822967362 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.829490054 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.829312315 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.823133768 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.825217189 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.826103611 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.823501521 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.832441059 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.844733009 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.820972227 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.823572533 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.824293328 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.83434924 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.825433282 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.821564461 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.82425793 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.820082648 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.821779597 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.822173045 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.821247415 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.821509155 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.823410276 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.821830909 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.821985599 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.821359593 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.822513411 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.82422366 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.82445945 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.822955675 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.826392197 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.822281597 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.823678242 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.828368371 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.823509184 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.82183266 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.824550641 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.823817375 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.824085907 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.823469345 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.824528 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.822607178 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.822643068 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.823864069 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.825336671 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.822233499 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.824304875 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.823235222 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.828327799 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.824078983 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.823328138 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.821637205 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.824121313 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.823643677 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.823036652 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.821270807 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.825624065 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.821968723 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.826920374 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.821697916 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.820040072 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.820250405 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.824050129 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.824555416 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.829169459 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.837296554 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.828973549 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.835629918 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.826119007 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.831125197 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.824316809 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.826822082 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.826625964 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.825340072 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.825077977 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.82721456 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.825272995 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.828582486 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.847359894 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.838165897 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.826796566 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.825824257 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.830229973 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.826632741 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.831319496 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.825702361 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.825490047 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.826181861 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.828821895 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.82588248 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.825869539 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.827158651 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.826430594 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.824726348 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.828815617 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.826497491 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.823721803 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.82660716 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.825311731 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.829379021 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.82454164 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.823249082 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.82770821 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.821995907 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.836282664 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.831361665 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.826354169 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.827673902 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.827825867 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.828127709 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.82673965 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.827427238 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.832903113 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.829043597 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.828388595 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.83618907 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.830190227 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.827634387 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.828175972 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.827385548 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.829042889 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.828246221 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.831391141 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.837307845 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.829762591 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.8273112 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.83352478 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.827100455 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.830032142 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.828364662 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.829400225 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.826161043 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.828675626 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.83043747 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.827308051 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.835185692 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.830388485 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.830504556 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.828070716 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.829157063 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.828480805 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.830563462 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.827687711 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.833320492 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.839122096 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.835673243 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.829639901 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.829959276 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.831076697 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.829652533 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.831998299 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.831476581 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.840577411 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.839487743 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.832531223 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.827608795 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.829722936 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.830740434 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.828788901 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.829328614 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.838838625 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.83017067 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.832146531 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.833527629 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.830698928 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.828883286 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.836177131 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.832317504 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.835000552 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.831150268 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.83475684 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.830363179 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.830110967 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.833639896 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.832785972 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.831415782 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.83433573 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.831591693 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.831640871 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.829122023 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.838934503 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.831386313 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.830953185 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.83991811 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.83244532 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.832337611 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.83298571 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.834241254 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.83259112 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.834139368 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.830276263 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.832681723 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.830817585 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.83424332 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.841654752 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.835297555 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.840307652 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.836437715 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.842705272 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.832411229 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.831399717 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.832900088 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.834280338 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.841935463 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.834303982 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.831894018 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.838608986 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.83307028 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.832564272 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.833653196 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.829330835 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.832423533 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.830561852 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.832672367 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.835934106 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.834165348 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.831974689 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.83105559 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.830411078 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.832313583 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.8374132 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.83462631 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.831936997 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.834416576 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.835188462 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.833119676 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.833907286 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.834989605 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.831950447 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.832511016 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.833935217 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.841937688 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.835685947 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.832808083 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.835655941 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.831233655 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.842691196 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.833373294 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.836053193 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.83417193 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.835224851 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.835892214 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.83667647 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.835456204 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.832302696 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.834948677 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.833998008 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.847371051 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.843600902 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.839132897 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.835158739 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.835137659 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.835997649 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.844865043 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.860069806 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.834989285 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.835275838 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.841281934 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.841001348 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.837172874 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.842004396 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.839309743 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.842406894 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.835865818 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.834545781 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.839690292 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.848985849 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.834905935 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.836075172 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.834791491 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.839506248 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.837187443 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.837454034 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.837348562 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.836382014 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.837565519 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.847492052 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.836692148 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.834309412 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.837323881 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.832974341 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.832302084 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.833645921 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.836576797 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.836567873 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.836337193 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.835795783 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.837400166 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.842075446 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.837615924 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.842325826 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.848169754 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.839888187 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.837682434 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.836524857 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.839563673 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.842173443 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.838557 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.835830863 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.839503899 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.837039945 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.836526358 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.842193187 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.845717245 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.83766656 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.837513512 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.835851088 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.841641169 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.839860053 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.836643483 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.837794995 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.843118594 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.841902899 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.848978349 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.844864483 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.836536864 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.838563676 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.847943127 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.846522846 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.836035263 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.838447941 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.838240582 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.838786175 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.839908276 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.837997389 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.835055102 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.836599966 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.843071255 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.838000025 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.837519311 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.839843171 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.836354653 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.838639149 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.839980834 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.844285538 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.840278856 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.835259826 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.837546669 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.835605156 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.838518585 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.841377299 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.837166213 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.838659624 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.839241799 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.83956625 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.8409988 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.837879325 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.835827913 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.839493746 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.837285805 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.837416149 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.836926509 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.840349433 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.840521334 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.843282203 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.849855843 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.840116878 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.840897844 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.841116855 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.843433615 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.840702366 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.840107335 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.840638189 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.839073912 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.848921154 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.841343517 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.840525956 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.840469927 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.841812966 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.845789059 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.842260787 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.845439336 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.841993056 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.837367545 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.842529912 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.843271849 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.850653945 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.846229861 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.8457311 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.848597011 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.847013562 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.842992346 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.839858931 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.841178813 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.839571558 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.843179298 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.847284275 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.84193417 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.844736176 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.843132923 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.844384293 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.842383222 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.843235861 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.843344923 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.839105018 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.846770194 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.854334059 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.852018972 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.84483381 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.846696151 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.843404204 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.844349865 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.854174804 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.844260713 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.843398702 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.842739143 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.844206102 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.84345675 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.851522939 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.85231993 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.848008942 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.844136851 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.846926111 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.862431673 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.845370975 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.853811573 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.876204071 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.847106637 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.84420559 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.844874881 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.845627079 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.846603988 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.845092027 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.842177101 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.851652121 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.842708529 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.843251248 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.852657134 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.845227778 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.841622935 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.842464575 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.846156181 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.851992241 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.845176168 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.850673072 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.844650747 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.844349327 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.845747717 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.846684695 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.845955212 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.845115809 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.843360688 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.844652296 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.843746398 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.844660048 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.85059809 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.84578539 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.8444697 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.860295221 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.85713635 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.845589575 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.844998496 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.84489928 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.847560301 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.850697756 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.845216607 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.848923975 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.851953137 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.849618775 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.855345757 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.84625764 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.847207979 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.847741625 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.84551854 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.845174573 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.856849719 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.85897838 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.846852416 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.843927555 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.852299975 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.844674052 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.851039466 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.853434022 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.845427978 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.84772937 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.844876576 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.844218124 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.845225674 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.845129143 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.849241317 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.855698047 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.844616732 seconds)
  done (took 1094.238457704 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.844964825 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.844379989 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.844924773 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.8466582 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.843217221 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.847057136 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.846581631 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.844727521 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.844558149 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.844522539 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.845492175 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.845792225 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.844659151 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.8466731 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.847712201 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.845243173 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.845613406 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.846592401 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.845337658 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.845996982 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.846582715 seconds)
  done (took 40.532592138 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.845641233 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.844638864 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.845780492 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.84457544 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.845190907 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.846404111 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.845912701 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.845384934 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.846970554 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.84721696 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.847535482 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.845665367 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.84771374 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.848892026 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.845706056 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.847519977 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.847771661 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.848517758 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.847226075 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.849799998 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.846580052 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.846569986 seconds)
  done (took 42.402742614 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.847276379 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.851086342 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.848704968 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.847425789 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.846827406 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.846804513 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.844967499 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.849570149 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.846429567 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.847107034 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.855314822 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.855294439 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.847288935 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.847608485 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.847059243 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.845619154 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.995918798 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.847457124 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.846825901 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.848482945 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.847701005 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.854767657 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.849258378 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.84874136 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.846430686 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.847701039 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.848596521 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.848551417 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.850421999 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.848032388 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.85113614 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.846869337 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.845808006 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.850333801 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.84942703 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.847986251 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.851757265 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.847211102 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.846063938 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.848305845 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.854525543 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.872467907 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.845299096 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.844921032 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.852744459 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.838522235 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.840037735 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.843426537 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.849238399 seconds)
  done (took 92.50463326 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.841091283 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.84014799 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.840256898 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.842450666 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.839718502 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.841551328 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.841345957 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.838250215 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.838511879 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.839905858 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.83891719 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.841146247 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.838693476 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.839135152 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.837544432 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.837358581 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.841321428 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.838460912 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.840204224 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.839695554 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.839833366 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.84131127 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.841342442 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.840622752 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.839996633 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.841018996 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.840895096 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.840109657 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.840049426 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.840718131 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.840626371 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.83989222 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.840075284 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.840664378 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.837731825 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.838692045 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.837944839 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.840542511 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.839799368 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.839851281 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.838815437 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.840193977 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.838488327 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.839678754 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.836308527 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.837829579 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.8389111 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.83770108 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.838232594 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.84475376 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.836414099 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.835954255 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.837337129 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.835890211 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.836262942 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.83593967 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.836551879 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.83739501 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.83615438 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.836611177 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.836601351 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.837025759 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.836618389 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.83725034 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.83684647 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.839801564 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.837832974 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.835989158 seconds)
  done (took 126.820696093 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.836031726 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.836578897 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.836256664 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.837495572 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.837205356 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.835458594 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.836137636 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.835667374 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.837683336 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.836663107 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.836905841 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.835562062 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.836621787 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.838102387 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.836490404 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.838023404 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.836469283 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.837401432 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.839545739 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.836417284 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.837592088 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.836189484 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.837281283 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.841043851 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.836828269 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.838024058 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.837948941 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.838224024 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.837585761 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.840646174 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.837471908 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.837201389 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.838559918 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.836137855 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.838782199 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.838617313 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.837168467 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.837798574 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.837479776 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.837209235 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.838264048 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.837815517 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.839402103 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.839546932 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.837682956 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.841447389 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.841563176 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.839527917 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.840395848 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.840023812 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.838746459 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.838040288 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.838440868 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.838535486 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.837475683 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.838194915 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.838642178 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.836044564 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.835148326 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.834681023 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.835006604 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.835555405 seconds)
  done (took 115.700716153 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.829726775 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.829457337 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.829285025 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.830384049 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.830318143 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.830459696 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.830648182 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.831387853 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.830680684 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.831657318 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.827339681 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.829046723 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.828033714 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.829569902 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.828806541 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.830168546 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.829643477 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.826878488 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.827585262 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.828586063 seconds)
  done (took 38.351263952 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.827267364 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.823662995 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.828512851 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.827854726 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.826851359 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.831753987 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.826490876 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.829071211 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.827412696 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.826861836 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.82599367 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.824361122 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.826824056 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.826615231 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.827112684 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.826949763 seconds)
  done (took 30.989684392 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.82472341 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.825930177 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.82562695 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.825223532 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.827124236 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.824149028 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.825187807 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.828324281 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.824190742 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.824447258 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.828685735 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.825297952 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.825772405 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.825856973 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.825987255 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.827936357 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.824309307 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.823765928 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.824615219 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.82569726 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.824827827 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.825626187 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.826309093 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.824966167 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.824491254 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.826948681 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.826110862 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.827338909 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.823668072 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.824668893 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.824317111 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.823597332 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.826649021 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.824436485 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.82321013 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.826820059 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.824727957 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.827351244 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.826128242 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.823448095 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.823993006 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.82424319 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.822232937 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.826636176 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.822804404 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.82189728 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.826139285 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.8265945 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.826929925 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.822191035 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.821824294 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.821769314 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.822490325 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.825034394 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.824376364 seconds)
  done (took 102.135464754 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.82123045 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.820488315 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.821331399 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.825496723 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.82282462 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.825552791 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.821384286 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.822130826 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.822938564 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.824211047 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.82326964 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.822731262 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.824185177 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.822858431 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.822647752 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.822806593 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.823656236 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.820829472 seconds)
  done (took 34.564031892 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.822422982 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.825436639 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.821602642 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.821618486 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.822542666 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.820810709 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.824223876 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.821593804 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822091741 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.822378257 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.822535064 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.821052669 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.824750916 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.821680144 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.822371559 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.822263102 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.823450128 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.825128781 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.823271511 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.820378101 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.820969112 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.823820989 seconds)
  done (took 41.849104001 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.822663987 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.820781366 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.83661172 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.842145466 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.841457969 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.857713164 seconds)
  done (took 12.773450159 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822076979 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821566178 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.82556092 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822264655 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825378928 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819938223 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821910876 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823403907 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821156047 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823604531 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822224082 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821539792 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821900186 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82253484 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822163041 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82167892 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821560586 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820054773 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820233195 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821222409 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824395574 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823288529 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822610258 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822815196 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821934417 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821587702 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822851418 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820677442 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821919537 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822610862 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822237343 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823810472 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821183303 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822615392 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82149442 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822279012 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821943882 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824080747 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821530968 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820548987 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.825605238 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821442638 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821439216 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820629955 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821392175 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82166167 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820313413 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824379865 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822454412 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820892467 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821708959 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821343591 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819711986 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822133744 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821795937 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822397279 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821002686 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820778855 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820861916 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823239251 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820730932 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82203949 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820852855 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821421882 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823237635 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822560416 seconds)
  done (took 122.006421006 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820716991 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.820635279 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822172798 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821196563 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821713689 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819387451 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820025306 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821564567 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8229091 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823208939 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821122389 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819855386 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821303191 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822351837 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821978579 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821377029 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819781346 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822969668 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821074907 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822885596 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824915879 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822702943 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819183796 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820788143 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819645339 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821902002 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820986009 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821956038 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820428061 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82006831 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822329853 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82125057 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82242494 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.819775301 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82028478 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823343189 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823523799 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824228119 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821730685 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821440791 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823007631 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823104468 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821528144 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822439437 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823083698 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822085356 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823216662 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8206357 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821217604 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823327613 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823523901 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826068692 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825517231 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825584284 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822906794 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823823806 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823460457 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825969049 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821049717 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822094541 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823497107 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823637307 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823948805 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826479937 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824926643 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824232993 seconds)
  done (took 122.023440975 seconds)
done (took 2536.229946339 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.838400964 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.935406424 seconds)
  done (took 15.526946529 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.987260009 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.942295103 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.82742146 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.869164762 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.823816881 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.833117645 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.838808557 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.825095371 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.827021115 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.826473229 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.826423497 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.011134052 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.882693348 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.825296634 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.828981557 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.921604657 seconds)
  done (took 51.654894747 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.831395737 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.832002077 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.841500204 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.832544926 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.830889535 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.842776255 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.861732927 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.834283315 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.866038053 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.841878744 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.898511575 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.840722166 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.830934784 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.881200501 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.844236089 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.844970317 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.927802175 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.906722894 seconds)
  done (took 35.145395809 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.909511518 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.837206729 seconds)
  done (took 10.511762864 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.837922661 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.829939007 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.829206975 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.82837956 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.84071993 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.832753072 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.865472933 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.863644607 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.849957117 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.848974535 seconds)
  done (took 70.187388837 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.834384437 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.832603382 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.832564233 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.826912646 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.826804725 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.828701323 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.826653031 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.830340735 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.511654685 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.864120705 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.83652111 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.836462265 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.830097566 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.831479355 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.826788489 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.85514539 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.937114603 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.827138039 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.829460584 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.836318265 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.830248651 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.887417702 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.843902353 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.834375249 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.862559646 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.506317265 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.838436002 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.836242618 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.962439831 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.827853007 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.831766083 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.038899791 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.836461648 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.297048135 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.098693369 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.83263379 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.841413679 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.838117092 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.828502215 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.950036044 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.832302623 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.837782117 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.809529469 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.068878275 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.929602111 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.877733698 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.169955204 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.829918308 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.832662311 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.863633789 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.834010551 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.829605299 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.847692912 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.352043644 seconds)
  done (took 130.757586268 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.828146953 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.184371862 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.997097526 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.832789275 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.111464679 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.031725506 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.828027573 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.874393097 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.829447641 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.056414456 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.077353894 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.931177432 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.827969142 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.827367782 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.831063068 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.827951799 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.981468112 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.897900752 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.829478376 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.825807071 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.853034152 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.067455387 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.947294502 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.83211155 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.853107684 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.040548018 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.946672622 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.934655956 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.600786532 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.828098637 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.887768772 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.827836499 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.829956198 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.827036302 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.983034164 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.922662517 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.914810121 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.828621061 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.827848624 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.828921819 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.580376667 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.027375222 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.921521454 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.957732416 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.07895451 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.030965727 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.608068483 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.828235595 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.56093419 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.988823126 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.059354267 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.061024802 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.949594572 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.831930063 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.163978659 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.82882066 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.8298841 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.079214449 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.047761249 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.928971319 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.831400706 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.830330615 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.826815523 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.118444185 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.833076003 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.922062338 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.83370354 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.829428131 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.9247211 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.927769233 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.057103021 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.04341278 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.859621154 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.173053243 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.336189058 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.075032966 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.893099428 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.079292324 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.832045385 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.829940902 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.906418311 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.674685285 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.081842516 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.112506271 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.072901888 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.862624607 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.547978384 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.82968062 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.054615648 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.04896276 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.089844575 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.074705407 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.0757976 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.146922069 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.832595983 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.832146906 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.171596721 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.952479899 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.836938201 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.173694026 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.063958278 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.392815464 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.856553246 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.137539578 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.963025349 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.834474404 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.470657972 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.832511738 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.059256705 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.873028288 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.83382469 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.835002295 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.048330996 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.829383907 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.832977296 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.458494126 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.891664606 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.832112228 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.063514372 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.834578969 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.103098371 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.835425357 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.064435069 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.432781151 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.860289997 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.006876089 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.080677938 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.836849703 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.077139288 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.073182966 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.946294617 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.053132339 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.523625487 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.833853815 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.119388407 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.834884376 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.834235638 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.000956854 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.836230376 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.974869514 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.837329258 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.125926869 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.854930789 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.072398715 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.841058962 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.085240965 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.864793601 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.884812711 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.837241808 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.964077127 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.837768987 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.748953523 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.990051269 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.840213818 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.833939346 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.396055047 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.835803442 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.979442237 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.06185743 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.856817135 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.905723373 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.497464381 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.834532077 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.916296114 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.858277168 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.373197317 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.83432838 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.088482224 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.839755198 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.836631622 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.836118574 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.121562747 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.017103469 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.840803486 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.83463953 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.74173849 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.837386506 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.83525532 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.016875936 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.184772274 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.837126662 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.036891146 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.838727766 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.962788654 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.84306905 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.910723344 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.171544002 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.833971979 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.835815209 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.837079864 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.837923103 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.838146204 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.043776419 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.861645853 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.380809393 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.973712912 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.112417967 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.143402623 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.074848234 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.878429304 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.839850739 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.094261391 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.839328192 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.895527327 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.838497353 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.856692761 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.068002569 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.839987049 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.041475029 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.105972798 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.738745783 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.882041612 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.841393923 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.835921165 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.83612999 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.981352355 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.919979218 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.840934958 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.840406619 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.950809862 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.955234426 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.044471136 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.841604395 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.919951684 seconds)
  done (took 894.956089643 seconds)
done (took 1210.496304457 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.841138052 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.841370298 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.841488399 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.841944825 seconds)
  done (took 29.133933927 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.841855781 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.841830447 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.840522214 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.841074071 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.840485604 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.840804687 seconds)
  done (took 12.817283307 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.935079108 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.840183978 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.839653328 seconds)
  done (took 21.385695054 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.91520826 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.23990519 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.978262247 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.271265193 seconds)
  done (took 10.173623288 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.839845876 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.839385205 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.840491686 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.841275702 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.843471578 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.844038522 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.841071831 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.842153466 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.843470323 seconds)
  done (took 18.347033267 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.611633489 seconds)
done (took 98.239100659 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.004179595 seconds)
    (2/309) benchmarking ("sort", Float32, false)...
    done (took 5.537477058 seconds)
    (3/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.155964988 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.838891254 seconds)
    (5/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.080772155 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.905660063 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.970365875 seconds)
    (8/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.931266075 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.942310187 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.22596075 seconds)
    (11/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.854852383 seconds)
    (12/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.132814083 seconds)
    (13/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.651268075 seconds)
    (14/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.17513039 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.855731118 seconds)
    (16/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.873211162 seconds)
    (17/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.844401807 seconds)
    (18/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.174637128 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.729656122 seconds)
    (20/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.109679075 seconds)
    (21/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.863139004 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.002864327 seconds)
    (23/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.793940988 seconds)
    (24/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.91923529 seconds)
    (25/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.840267191 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.918313461 seconds)
    (27/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.283806622 seconds)
    (28/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.188423079 seconds)
    (29/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.052543038 seconds)
    (30/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.863096534 seconds)
    (31/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.84031544 seconds)
    (32/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.368243428 seconds)
    (33/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.939438439 seconds)
    (34/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.093878437 seconds)
    (35/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.920660581 seconds)
    (36/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.926009717 seconds)
    (37/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.220462288 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.232169987 seconds)
    (39/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.094458307 seconds)
    (40/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.715146001 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.142292174 seconds)
    (42/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.866280996 seconds)
    (43/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.974846452 seconds)
    (44/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.919450567 seconds)
    (45/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.917612603 seconds)
    (46/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.843344902 seconds)
    (47/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.043522519 seconds)
    (48/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.843689537 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 4.066841241 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.974629749 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.503057509 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.612227422 seconds)
    (53/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.952953961 seconds)
    (54/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.226994167 seconds)
    (55/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.02625471 seconds)
    (56/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.847244322 seconds)
    (57/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.977943894 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.974818052 seconds)
    (59/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.840605675 seconds)
    (60/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.081151557 seconds)
    (61/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.979601602 seconds)
    (62/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.259434135 seconds)
    (63/309) benchmarking ("sort", Bool, false)...
    done (took 2.057493608 seconds)
    (64/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.843871358 seconds)
    (65/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.456374144 seconds)
    (66/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.364078217 seconds)
    (67/309) benchmarking ("sort", Int64, false)...
    done (took 5.527340094 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.132863507 seconds)
    (69/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.84617321 seconds)
    (70/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.002733641 seconds)
    (71/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.147842405 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.101989348 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.189160497 seconds)
    (74/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.000629249 seconds)
    (75/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.861203894 seconds)
    (76/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.937861065 seconds)
    (77/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.8653745 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.45532136 seconds)
    (79/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.16784411 seconds)
    (80/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.937034618 seconds)
    (81/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.477278342 seconds)
    (82/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.029598719 seconds)
    (83/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.534564883 seconds)
    (84/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.867543346 seconds)
    (85/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.843880855 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.243318066 seconds)
    (87/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.861830135 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.190815913 seconds)
    (89/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.991678393 seconds)
    (90/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.987153513 seconds)
    (91/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.84697621 seconds)
    (92/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 9.304957851 seconds)
    (93/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.177305101 seconds)
    (94/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.114485827 seconds)
    (95/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.923269196 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.988903965 seconds)
    (97/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.855322177 seconds)
    (98/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.094034511 seconds)
    (99/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.27996871 seconds)
    (100/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.373057446 seconds)
    (101/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.932132579 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.174785141 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.870924059 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 1.981067362 seconds)
    (105/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.042394978 seconds)
    (106/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.906070941 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.808414545 seconds)
    (108/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.340838713 seconds)
    (109/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.866833477 seconds)
    (110/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.853540953 seconds)
    (111/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.243923478 seconds)
    (112/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.942544818 seconds)
    (113/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.029085694 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.723832691 seconds)
    (115/309) benchmarking ("sort", Int8, false)...
    done (took 4.74650186 seconds)
    (116/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.135927945 seconds)
    (117/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.873069211 seconds)
    (118/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.856271251 seconds)
    (119/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.92395579 seconds)
    (120/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.920328866 seconds)
    (121/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.591392161 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.844344715 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.824992907 seconds)
    (124/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.164246836 seconds)
    (125/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.641511148 seconds)
    (126/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.026852984 seconds)
    (127/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.166318891 seconds)
    (128/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.849375303 seconds)
    (129/309) benchmarking ("perf_countequals", "Float32")...
    done (took 3.940943553 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.411096782 seconds)
    (131/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.965841065 seconds)
    (132/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.92350573 seconds)
    (133/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.269092696 seconds)
    (134/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.167544117 seconds)
    (135/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.156470351 seconds)
    (136/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.852759273 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.882744847 seconds)
    (138/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.844977648 seconds)
    (139/309) benchmarking ("map", abs, Float32, true)...
    done (took 3.718357986 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.849948202 seconds)
    (141/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 3.617800225 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.844945971 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.868286833 seconds)
    (144/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.379178828 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.20510547 seconds)
    (146/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.948717859 seconds)
    (147/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 1.978757064 seconds)
    (148/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.151143972 seconds)
    (149/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.160102466 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.191824716 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.850511591 seconds)
    (152/309) benchmarking ("sort", BigInt, false)...
    done (took 6.888492308 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.872620246 seconds)
    (154/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.905120597 seconds)
    (155/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.848238355 seconds)
    (156/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.892860184 seconds)
    (157/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.017371065 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.252549283 seconds)
    (159/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.112575516 seconds)
    (160/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.959135335 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.84812442 seconds)
    (162/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.893421414 seconds)
    (163/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.256987679 seconds)
    (164/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.882869037 seconds)
    (165/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.439648786 seconds)
    (166/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.951540725 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.849355039 seconds)
    (168/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.958399226 seconds)
    (169/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.848595077 seconds)
    (170/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.855564157 seconds)
    (171/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.934131222 seconds)
    (172/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.849381086 seconds)
    (173/309) benchmarking ("perf_sum", Float32, true)...
    done (took 3.659232761 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.084382 seconds)
    (175/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.097120519 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.158018029 seconds)
    (177/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.851154776 seconds)
    (178/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.947417434 seconds)
    (179/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.87047092 seconds)
    (180/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.005209397 seconds)
    (181/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.319392714 seconds)
    (182/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.853459562 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.847564949 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.161137178 seconds)
    (185/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.327670178 seconds)
    (186/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.991910772 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.852946997 seconds)
    (188/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.336677407 seconds)
    (189/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.132423436 seconds)
    (190/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.729711018 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.79637226 seconds)
    (192/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 1.986264045 seconds)
    (193/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.321042886 seconds)
    (194/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.638983232 seconds)
    (195/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.475222528 seconds)
    (196/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.865812965 seconds)
    (197/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.848809584 seconds)
    (198/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.275384728 seconds)
    (199/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.484720749 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.798491784 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.971998935 seconds)
    (202/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.947813393 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.859011408 seconds)
    (204/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.190798246 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.859872036 seconds)
    (206/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.10573721 seconds)
    (207/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.640830499 seconds)
    (208/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.081296181 seconds)
    (209/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.867227049 seconds)
    (210/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.318780612 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.257113772 seconds)
    (212/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.86170592 seconds)
    (213/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.342094078 seconds)
    (214/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.181465011 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.940747623 seconds)
    (216/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.314969807 seconds)
    (217/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.940323694 seconds)
    (218/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.943830897 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.06518554 seconds)
    (220/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.787095023 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.654344711 seconds)
    (222/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.164212455 seconds)
    (223/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.261942596 seconds)
    (224/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.094897418 seconds)
    (225/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.783305282 seconds)
    (226/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.247454869 seconds)
    (227/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.159907473 seconds)
    (228/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.534970022 seconds)
    (229/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.159787763 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.861697409 seconds)
    (231/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.889474034 seconds)
    (232/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 1.991838159 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.987348497 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.100066302 seconds)
    (235/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.016869256 seconds)
    (236/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.930568161 seconds)
    (237/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.862974244 seconds)
    (238/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.903540596 seconds)
    (239/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.103000228 seconds)
    (240/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.89091204 seconds)
    (241/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.348764367 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.244365168 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 1.990031001 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.987479373 seconds)
    (245/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.262158683 seconds)
    (246/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.476001499 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.099144929 seconds)
    (248/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.883257633 seconds)
    (249/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.487862816 seconds)
    (250/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.992471563 seconds)
    (251/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.070824639 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.177850033 seconds)
    (253/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.867645939 seconds)
    (254/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 5.686695163 seconds)
    (255/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.869063947 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.923806976 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.490048093 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.976351789 seconds)
    (259/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.189993422 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.869566283 seconds)
    (261/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.049553676 seconds)
    (262/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.866050006 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.909712262 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.189061859 seconds)
    (265/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.970895184 seconds)
    (266/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.879153818 seconds)
    (267/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.86327716 seconds)
    (268/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.866228522 seconds)
    (269/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.620923331 seconds)
    (270/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.681205622 seconds)
    (271/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.900691166 seconds)
    (272/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.186003471 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.885287827 seconds)
    (274/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.176168301 seconds)
    (275/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.800241489 seconds)
    (276/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.352648818 seconds)
    (277/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.081458719 seconds)
    (278/309) benchmarking ("sort", Float64, false)...
    done (took 5.637228893 seconds)
    (279/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.989966771 seconds)
    (280/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.001765172 seconds)
    (281/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.126730385 seconds)
    (282/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.016965273 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.998517216 seconds)
    (284/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.965748196 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.971619116 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.866585261 seconds)
    (287/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.673860011 seconds)
    (288/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.034844334 seconds)
    (289/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.150102333 seconds)
    (290/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.975268632 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.738215182 seconds)
    (292/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.017502208 seconds)
    (293/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.972785604 seconds)
    (294/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.94889174 seconds)
    (295/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.708905761 seconds)
    (296/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.873618417 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.942402331 seconds)
    (298/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.942923494 seconds)
    (299/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.017179978 seconds)
    (300/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.084361319 seconds)
    (301/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.107032429 seconds)
    (302/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.334518886 seconds)
    (303/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.144881844 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.080719809 seconds)
    (305/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.009130859 seconds)
    (306/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.027039176 seconds)
    (307/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.561767116 seconds)
    (308/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.121393911 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.781349602 seconds)
  done (took 1008.331165792 seconds)
done (took 1010.179861681 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.900007406 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.886133082 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.869685088 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.890185768 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.982701464 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.913730657 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.883265975 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.873299351 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.920203197 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.918982917 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.868408241 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.909709971 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.870261478 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.869487949 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.868065259 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.885862432 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.183361286 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.904335164 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.887785899 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.880238845 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.887270922 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.867735889 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.918365953 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.910649251 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.873213801 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.87462431 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.873490059 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.887945814 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.983368147 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.87415382 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.874210176 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.882440059 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.181170267 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.904830389 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.867469549 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.889577906 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.881528696 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.882280531 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.873992863 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.90272581 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.332358711 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.87674293 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.870317627 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.870345158 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.872133146 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.878125206 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.87160915 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.879681968 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.892424675 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.893665722 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.331055979 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.900564029 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.880165426 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.877743543 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.891862387 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.878568443 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.880670873 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.893616233 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.896742472 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.896350744 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.177961375 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.91982159 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.880976183 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.899376498 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.887505243 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.370028935 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.883768185 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.883456508 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.335601441 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.893934412 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.365848394 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.896142461 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.880408765 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.892780828 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.912350268 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.187196124 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.910947698 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.878306631 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.889688804 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.876767898 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.89057147 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.89506479 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.883814908 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.878575789 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.898484184 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.923209137 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.891916962 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.879045827 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.89167127 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.898615936 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.889702135 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.891687837 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.88373833 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.877222631 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.893356319 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.884092046 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.884047094 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.882892368 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.883970046 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.893828271 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.338187935 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.906215898 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.876287528 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.877579136 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.879819478 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.894436631 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.336384504 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.890255494 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.90309891 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.932417063 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.88273867 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.17965357 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.919510214 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.89865603 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.892217632 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.884294662 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.879832346 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.178209616 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.373315778 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.903222866 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.882047336 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.879904327 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.899127218 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.883687869 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.880663525 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.194132829 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.918113643 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.898420404 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.003494614 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.89448446 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.91503577 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.880863484 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.885720323 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.926492294 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.899047003 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.914589408 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.885487025 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.898536801 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.900126469 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.880132263 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.896461546 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.895235274 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.883159727 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.890585674 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.879232014 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.927971558 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.897000316 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.897841018 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.903151593 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.005095481 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.881434316 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.182576135 seconds)
done (took 295.536283722 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.961205047 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.881375046 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.996219765 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.87959479 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.966646533 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.952181611 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.880256962 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.881023043 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.881214835 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.376289862 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.881305687 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.889892407 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.881990573 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.880159534 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.949423439 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.880538676 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.881603998 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.324592924 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.882829818 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.962348356 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.881174613 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.881994251 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.881559262 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.396748395 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.88113605 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.88127042 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.96526851 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.882558101 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.329085387 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.880949163 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.882037707 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.343085598 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.961874289 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.909283888 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.889670854 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.887566629 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.970773233 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.894017719 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.947244928 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.947393825 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.999021487 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.916027595 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.882746817 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.881230679 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.886666893 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.884317321 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.882646705 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.916157407 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.883194937 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.890543106 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.323913166 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.888637799 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.888119303 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.884767442 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.883224077 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.909728826 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.88294814 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.884621974 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.963475486 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.884038037 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.950714312 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.38352064 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.380418704 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.883591308 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.8845131 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.884031787 seconds)
  done (took 186.16136166 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.949305309 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.958800269 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.949566309 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.890045056 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.933138745 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.951892442 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.889472668 seconds)
  done (took 15.336332156 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.889994893 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.882972988 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.931935016 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.933532503 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.883913479 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.061687499 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.89647656 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.889573025 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.912735942 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.886027363 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.519848797 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.934801229 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.889188217 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.884212937 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.896787584 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.942136212 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.888473308 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.885492586 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.00051103 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.034933239 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.893441004 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.890282244 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.911524405 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.896373996 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.885760725 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.886536804 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.886868859 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.892314684 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.88519406 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.885990633 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.884519247 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.937098967 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.885799313 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.882890238 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.886002633 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.885802969 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.886218728 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.88632686 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.885763473 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.884957676 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.885671932 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.885808992 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.886296277 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.885874137 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.886176867 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.910167742 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.88573369 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.887117253 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.887172619 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.886405654 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.913927843 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.886186687 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.88727088 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.891817861 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.929930145 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.894977193 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.888747716 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.887072497 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.887921507 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.887415233 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.887080877 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.037622446 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.936461416 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.887783263 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.93607449 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.042401136 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.88865324 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.887860634 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.888637155 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.976207203 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.887336289 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.937996148 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.887888554 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.002138535 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.888017105 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.068006091 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.91199545 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.893050446 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.892385569 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.888783646 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.894659429 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.887457119 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.891036803 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.894981036 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.893776691 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.888399519 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.889458791 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.891124478 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.895796832 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.888572621 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.93801991 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.888914342 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.89067504 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.029154131 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.888436588 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.005004479 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.915699369 seconds)
  done (took 207.621935178 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.89561196 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.897310166 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.890690413 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.905728944 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.890301836 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.890222666 seconds)
  done (took 13.18919694 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.893833154 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.895054493 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.889951576 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.889970271 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.890064641 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.890769305 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.890533051 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.892201518 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.894826583 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.890113581 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.890409848 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.892412922 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.891835182 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.890926563 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.891862065 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.890494095 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.891896225 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.891107112 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.890410243 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.889992427 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.097777183 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.889784487 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.891833889 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.895706848 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.89623272 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.889600117 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.904007793 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.890864736 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.890900938 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.897453502 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.896085743 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.893501584 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.897886165 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.898301604 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.895243177 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.895939669 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.896323437 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.89295499 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.891470068 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.891572355 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.892632325 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.892150236 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.891366068 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.89281529 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.894602127 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.901200985 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.897463741 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.904390825 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.893602684 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.892720604 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.891708297 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.892646144 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.892862231 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.894296709 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.899037024 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.899144586 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.89677419 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.892855181 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.892836845 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.897367936 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.897074124 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.893545112 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.895087153 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.897621564 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.902217263 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.894899011 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.898000779 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.897476373 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.894870401 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.893098832 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.894731517 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.893596159 seconds)
  done (took 139.398560606 seconds)
done (took 563.537665383 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.07258765 seconds)
  done (took 8.894321431 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.075644853 seconds)
  done (took 8.989605861 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.765949994 seconds)
  done (took 10.589015327 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.911081627 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.958649174 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.899226787 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.896375489 seconds)
  done (took 29.500807069 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.221736284 seconds)
  done (took 9.045095692 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.906257541 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.90359916 seconds)
  done (took 15.707140976 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.994425232 seconds)
  done (took 8.818491202 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.299274753 seconds)
  done (took 9.139829088 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.91476443 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.905274183 seconds)
  done (took 15.66753502 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.896668298 seconds)
  done (took 8.720712444 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.210542764 seconds)
  done (took 10.116919172 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.908652923 seconds)
  done (took 8.774015577 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.90039652 seconds)
  done (took 8.721217441 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.034161335 seconds)
  done (took 8.853768202 seconds)
done (took 163.362678009 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.899980327 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.890129306 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.889905818 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.890959901 seconds)
  done (took 29.391606141 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.925537851 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.927026277 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.934328229 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.925928619 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.915694188 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.916703776 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.926262882 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.926144896 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.916888542 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.923743305 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.925583428 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.92388132 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.925817141 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.93424086 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.93433861 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.923955739 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.92677649 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.925917556 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.916852661 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.935969863 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.924260433 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.92709556 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.892492101 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.89166554 seconds)
  done (took 47.968363696 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.084130245 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.963649925 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.046249134 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.944869022 seconds)
  done (took 9.860253902 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.89261325 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.955494416 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.943529064 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.939828421 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.943391163 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.994583484 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.944426831 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.028549856 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.020600389 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.01963797 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.899747633 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.914155781 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.917605272 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.940313895 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.998748388 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.894257506 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.895344179 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.008736747 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.955474711 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.074576447 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.892945761 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.947926459 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.944486869 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.945651836 seconds)
  done (took 48.734901483 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.894686659 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.901636022 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.900747235 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.894832377 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.894500791 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.894555772 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.904112643 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.897721867 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.917857593 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.896793461 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.896214029 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.895384354 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.902266084 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.896145121 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.894493147 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.908072432 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.908645855 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.894145766 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.898993869 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.901868094 seconds)
  done (took 39.817302282 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.892656665 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.739772508 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.23810988 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.146707598 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.894243402 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.897682947 seconds)
  done (took 31.633489198 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.909609832 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.904372283 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.895170609 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.952840845 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.038277764 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.905938682 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.895541569 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.907302 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.942421961 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.965010136 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.918884881 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.92568215 seconds)
  done (took 24.986035145 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.895259975 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.900967854 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.899836044 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.911206775 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.905655576 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.903527925 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.903336385 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.895741209 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.913037011 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.915720565 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.904087422 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.90806792 seconds)
  done (took 44.68474214 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.602313878 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970339582 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.894515276 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.768953853 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.352938523 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.454712645 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.790088988 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.583042037 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.362732545 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.821755873 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.098509974 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.89616877 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.98776712 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.896915838 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166500743 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.22332271 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086205318 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.140350409 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.749098028 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.938950636 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.0992709 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147343334 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.187609785 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896597104 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898723159 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.925453183 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.534409115 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.648057399 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.93116715 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.426240984 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.152491328 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.850756797 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952768216 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.900707137 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.910668465 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901223984 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903951677 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169842809 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.929968665 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029767167 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972233949 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.146666709 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902451074 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.31824663 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.601825834 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.161458375 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.008998609 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.897536452 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900174663 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897696844 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.823775857 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.980025569 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.900183819 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905690602 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.599479772 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.899732682 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972185193 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.899185322 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10097948 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.705523077 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.58590236 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.902313355 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901176268 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.47493778 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.976100356 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.011837394 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.602401866 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.272324133 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.321141002 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.996871469 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.900793901 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.900657288 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.254460521 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.876842362 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.646644723 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936469984 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.035788412 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.917051655 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.538258957 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.196035922 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.30033752 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.458215837 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.818522098 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203905802 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.795386456 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.897036438 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116154689 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.733783629 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.825400186 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.131134459 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934745602 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904869898 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.164072763 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.649691265 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.012855056 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.913157884 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336090718 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919116813 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.906426106 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903428864 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.113815446 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.513156511 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.939478726 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.024132678 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917809673 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.983781903 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.828558606 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.915279662 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.903039672 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.804668289 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.90646605 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901060946 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.94348737 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.772873806 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.954992066 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.841269599 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90557195 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.996727271 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944759375 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.858047102 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187883242 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.246108641 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.564347444 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932692328 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.030124178 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.241015544 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.126207285 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.907331493 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.116143227 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.441088367 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.284041298 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.944653635 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.181268342 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.961424215 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.182312754 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326402457 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98087869 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.673462832 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.707704327 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.119992366 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917832079 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.904092237 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.90694553 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908577677 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838304731 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.549159886 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.244821085 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.067905652 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.115722938 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.438754884 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.89727518 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.904806577 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201460598 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.042573192 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.890823947 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.550086019 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.531277033 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.704993195 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.930245652 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.254465739 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.312007499 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.876038314 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91850765 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98046457 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920176734 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.909831628 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.254395863 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.263059234 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.906765447 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.906426579 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.853128055 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911920134 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.907198733 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.438227047 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.87403229 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.907535539 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.917405189 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.778162033 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979196846 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.907845019 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.90820918 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.444273139 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.408628585 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.909887822 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.569589741 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.938889921 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.981859312 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.16845013 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.241663864 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.029875718 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.607200516 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.284942402 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.020653629 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.609688482 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.833504295 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.906339099 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.84794525 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911509923 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.909232818 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914102828 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.096445442 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.224173465 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.206967913 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.358874266 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.971476014 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109536632 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.614206504 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.868969159 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.911138482 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914494704 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.912352111 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914003043 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.423164787 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.210326347 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.987592949 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939398035 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.916208364 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038033824 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.922602935 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.836147391 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.912122836 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.911427877 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.526772542 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.949978375 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.857064384 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.194965839 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.789007826 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.033562905 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956966309 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.920682913 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914917622 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.613091625 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.953082914 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836960842 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.5394875 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957727627 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.668710236 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401098591 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.496725855 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260204081 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.219579895 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.230655307 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.976619773 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.125526954 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.994615931 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.967243673 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.999185805 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850062988 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.836862055 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.559953943 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.242451502 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.179686779 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922222425 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127934386 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.620376082 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.140564619 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940179279 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.794399957 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271440828 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.890222385 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927785757 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.462674088 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.030238229 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993677411 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914786998 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.863374762 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.248929766 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953273919 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.617273758 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926084448 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.263282429 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.530003111 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.989584419 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.267846433 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119973717 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.91406527 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.287311561 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.334206558 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.960878242 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.917542047 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.903656002 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.129180173 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.492293781 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.765146598 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921510165 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.270355624 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.24562246 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.819883737 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.915366776 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.271552847 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183397646 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91335419 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.24368202 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.297974107 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.017617861 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972219433 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141241547 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.873923877 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221086772 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.46396189 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.40962214 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917781986 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.840265533 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.613326704 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.116766322 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.915170616 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.880258505 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138566127 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.151102608 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.594555139 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.13532649 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.157251489 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.925503541 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.178421054 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985957113 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.011553755 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.20979693 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.345811526 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.165483884 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.141924643 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.457351386 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.131668061 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.375963096 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.082599607 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.917077397 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.121047311 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.132477858 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.129911783 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.275325414 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084574342 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.625098139 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.921465811 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.123403126 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266647361 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972065824 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.276546357 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.082069156 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.000843458 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92277782 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978850676 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.921210605 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924694041 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.277466143 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.442005083 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.930655019 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993165061 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.0288664 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.42983818 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.919765691 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.922929282 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181891363 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272680216 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.287805943 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.900197191 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.918142679 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923133878 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043536336 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.843071837 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921766641 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188542093 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.918956388 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.52914648 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.076416882 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933382704 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.213573253 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.303077676 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.787424966 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.887402074 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923107088 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.14334574 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233755988 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.312507419 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.041470399 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.189238202 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.254277944 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.953913524 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.273881899 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160019744 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920742483 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.791744064 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.921024205 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046724124 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.121063061 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.18589541 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.42421965 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.680658021 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.185564568 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.78839266 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.922465529 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.632016175 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189342839 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.183713432 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.968231381 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982716622 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92345153 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.54162469 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.648808278 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050867492 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.779753423 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844425554 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.047772631 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.136730624 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.159806406 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.629170403 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.921767548 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.258573513 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223877962 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232576266 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.969349785 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.820272238 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134202151 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922055858 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.923738881 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.191809456 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.178413515 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.166341245 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92404911 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.921471363 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.727371912 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.8473103 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.922262389 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974070588 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.146969244 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939896993 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.434290048 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.619463405 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225187684 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970017917 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92389157 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.234030475 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.445131143 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.480705041 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.927087923 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.178294773 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.950720011 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210096334 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.922331821 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.544570677 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.236171444 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.921774686 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.645415741 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.177564598 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188180932 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.854082925 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930509571 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135033595 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.783921337 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.921781367 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.904943137 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.551679443 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16458565 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.657197497 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.477332878 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.923434807 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.923782606 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.563294924 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963146532 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.578995753 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.960256049 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937081961 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.440905456 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.63419041 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.209213928 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.163981218 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.654975342 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.514190805 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.922979092 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.920276607 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923180243 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.839754122 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.105776631 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.10828212 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211785745 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.957066041 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.558201477 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96555347 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.274101029 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.038865036 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294032127 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972105784 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.442838761 seconds)
  done (took 1685.226122371 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.930797922 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.939702077 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.965779638 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.932735028 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.945327734 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.927501092 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.020136622 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.945766426 seconds)
  done (took 57.459962085 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.928098565 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.942885768 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.933507997 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.928333329 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.939353415 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.92819103 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.091542896 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.941274073 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.932187017 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.93391208 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.930216582 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.928164949 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.224913215 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.950525911 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.943592925 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.932986004 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.933108004 seconds)
  done (took 75.204462425 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.93317267 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.182380553 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.993062498 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.931893364 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.886613021 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.940635826 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.932962334 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.985359108 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.937310189 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.170510494 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.233777181 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.963786265 seconds)
  done (took 90.951293496 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.935430577 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.93095904 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.931171845 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.934400474 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.930922824 seconds)
  done (took 11.526975087 seconds)
done (took 2199.336955333 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.160748948 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.989774003 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.034181203 seconds)
  done (took 5.88409496 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.080895549 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.1237101 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.2382952 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.997396201 seconds)
  done (took 10.307099345 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.233726414 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.305457124 seconds)
  done (took 6.39948255 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.302501924 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.941931301 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.345628813 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.934596663 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.933887164 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.936699024 seconds)
  done (took 22.671278173 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.931967975 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.931420316 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.932005022 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.932514138 seconds)
  done (took 9.586887944 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.932426957 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.656580456 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.935217136 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.945511692 seconds)
  done (took 21.330961745 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.08503859 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.049503167 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.074606077 seconds)
  done (took 8.069500588 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.073567324 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.776041827 seconds)
  done (took 6.710023902 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.07390912 seconds)
  done (took 3.930257091 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.956366631 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.197288036 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.408735095 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.466050742 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.592037816 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.746498806 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.252333621 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.176989184 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.347532606 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.369880475 seconds)
  done (took 25.371287968 seconds)
done (took 135.871999906 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.274968352 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.943923634 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.124100771 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.284090917 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.14824978 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.119806531 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.143749211 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.273322252 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.951987297 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.941649769 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.279916121 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.144733238 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.08403164 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.936237966 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.091082426 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.940360333 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.143216515 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.279045743 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.963679636 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.182456056 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.146109259 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.92559846 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.122164725 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.934926318 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.147842067 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.066958114 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.466392653 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.93613986 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.102919805 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.473535296 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.063399066 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.332845331 seconds)
  done (took 169.826652673 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.910235526 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.909723196 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.913312896 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.907523811 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.458677891 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.905281081 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.903543943 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.901732945 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.353101162 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.341757465 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.903758097 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.442925654 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.899399592 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.896374525 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.893268454 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.88945872 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.51893139 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.888734721 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.887882093 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.888336399 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.887085815 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.260472251 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.884944547 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.267332371 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.499924068 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.8819506 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.882911115 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.881967815 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.882272811 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.882596488 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.882205089 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.882182277 seconds)
  done (took 210.431470394 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.881767599 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.882302372 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.882242767 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.883241918 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.882677868 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.885115686 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.883609806 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.884555691 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.69293248 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.685003852 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.883232817 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.883096214 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.884031342 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.883415084 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.883230733 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.883817434 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.883288244 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.884507637 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.884972446 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.884395115 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.888310279 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.552918547 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.882860626 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.561930008 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.883713505 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.88699997 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.884504569 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.88424693 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.884008113 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.883251349 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.884294957 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.884554251 seconds)
  done (took 221.057358596 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.122970406 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.885178552 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.886328653 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.80566757 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.886606145 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.884603182 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.87236187 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.132818615 seconds)
  done (took 19.292255515 seconds)
done (took 622.479187914 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.299975172 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.129595941 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.07266915 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.910453492 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.169731311 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.958618748 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.905908982 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.970744763 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.735692636 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.983692314 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.568916401 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.930316674 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.660718533 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.935938646 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.033765994 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.96511039 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.454209368 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.557772184 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.054100601 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.987777616 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.093219922 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.858263673 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.984007653 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.774930369 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.586829147 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.905648722 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.942047628 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.455799797 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.92088856 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.072652008 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.603629409 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.211623366 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.922509044 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.907300001 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.958304615 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.940034236 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.130159571 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.919573382 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.036345954 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.645675486 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.991906289 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.646483539 seconds)
  done (took 103.60897489 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.897565053 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.894032106 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.892035752 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.892935444 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.901880344 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.893676398 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.8921623 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.893840313 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.893288395 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.893400283 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.893954779 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.902258519 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.893549948 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.903156404 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.893695822 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.893932619 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.89386793 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.902457836 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.894338579 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.894226051 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.894312792 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.895108259 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.889540712 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.894448612 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.894262662 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.893926474 seconds)
  done (took 51.104267029 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.88804184 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.061050264 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.13365436 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.909489263 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.890636352 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.89320342 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.909432811 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.895589191 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.893228423 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.892761991 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.994096057 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.896577748 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.908906608 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.136814402 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.906245777 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.889838607 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.890111417 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.891851368 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.071354911 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.90675784 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.910727816 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.89571226 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.91032255 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.904134611 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.894290853 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.893542831 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.892929216 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.387898648 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.898966239 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.994904605 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.939799742 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.912702079 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.332104738 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.142749626 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.943718249 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.896878426 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.888873151 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.999096867 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.895128452 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.889879339 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.907929192 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.895074135 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.136922465 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.428867234 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.904750186 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.888856466 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.39748472 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.007544835 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.930947951 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.902655091 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.140714065 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.908526603 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.892677512 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.892095194 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.928275597 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.904617827 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.891614165 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.257600473 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.903706238 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.910237295 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.89622839 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.892496104 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.075855492 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.899797578 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.0624126 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.899975227 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.897347751 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.894664793 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.140068714 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.90789517 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.449034442 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.905553796 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.891152593 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.995633997 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.067922309 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.424770688 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.90210025 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.076841306 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.344983745 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.915671959 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.897668917 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.376949307 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.916535651 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.896995806 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.89414948 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.890584534 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.888309579 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.932041685 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.90523849 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.342131968 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.435887896 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.272974548 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.915361876 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.900915035 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.890349141 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.253822117 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.899240375 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.889043483 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.126863444 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.450757841 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.905198847 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.897118809 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.420269498 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.906386953 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.910160474 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.899924759 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.145158032 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.907250706 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.933356817 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.889529447 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.897335768 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.894378422 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.909746372 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.89891091 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.890129155 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.409716843 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.013347332 seconds)
  done (took 235.381719363 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.890799946 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.888876652 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.890387714 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.889278773 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.892032009 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.890910991 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.887770602 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.888664628 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.888740007 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.889462412 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.885306861 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.888197036 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.888519186 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.893534515 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.943241106 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.8883214 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.48887013 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.888161911 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.885064 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.887764418 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.528291645 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.891542879 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.886712558 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.885839259 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.886641953 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.885905179 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.894865473 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.936712157 seconds)
  done (took 168.053880969 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.886268224 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.998493455 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.907374926 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.915941808 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.894076159 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.886976891 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.982995847 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.903390689 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.892731198 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.887190616 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.887482644 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.946598 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.901434983 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.983724489 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.917488616 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.994981151 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.99044146 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.894766761 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.888299796 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.887519365 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.91673569 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.89790619 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.947747543 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.012253457 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.907788982 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.999069823 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.909332174 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.888272383 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.888465188 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.998268298 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.907973693 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.94842116 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.919761245 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.907017157 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.004281003 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.003387929 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.990621053 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.990177817 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.894090328 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.889447431 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.889075646 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.89145712 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.000144993 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.909784659 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.890443303 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.0031869 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.908818941 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.88948584 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.888651422 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.888686456 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.902794221 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.906220527 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.952865646 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.021302711 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.928779204 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.913380999 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.986672966 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.011612478 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.890497126 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.986486204 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.897900139 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.002600529 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.911248788 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.892140204 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.89396366 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.893659026 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.920201251 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.995681985 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.992745001 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.897164695 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.986965655 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.925204002 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.89821172 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.892357323 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.890990915 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.002241566 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.007896241 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.926178257 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.927895375 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.920564232 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.902668345 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.891470102 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.893129263 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.907981688 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.89573811 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.002619247 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.00669109 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.896763719 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.891741712 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.891509666 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.892243694 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.91537647 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.010846285 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.927883862 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.997164653 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.956211233 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.968171579 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.909399172 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.905549839 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.895553742 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.953673199 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.90839301 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.904014251 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.178333282 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.952759694 seconds)
  done (took 204.882017342 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.294153412 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.939380113 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.948763055 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.209361798 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.256985363 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.875119897 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.940250738 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.940914588 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.972778633 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.161965006 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.01244615 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.958870813 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.925860933 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.913806263 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.940155839 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.972545724 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.954591227 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.277924012 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.141895052 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.417562852 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.934067788 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.207273936 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.257883693 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.518333826 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.989614225 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.386407868 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.562465168 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.103368771 seconds)
  done (took 63.844000649 seconds)
done (took 828.692096301 seconds)
SAVING RESULT...
DONE!
