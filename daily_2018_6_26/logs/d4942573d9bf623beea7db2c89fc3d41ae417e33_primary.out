cset: moving following pidspec: 18324
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.980723942 seconds)
loading group "string"... done (took 0.543880248 seconds)
loading group "linalg"... done (took 8.947160585 seconds)
loading group "parallel"... done (took 0.171984543 seconds)
loading group "find"... done (took 1.45020628 seconds)
loading group "tuple"... done (took 2.081587265 seconds)
loading group "dates"... done (took 1.362445787 seconds)
loading group "micro"... done (took 0.217102116 seconds)
loading group "io"... done (took 0.626893433 seconds)
loading group "scalar"... done (took 42.61413434 seconds)
loading group "sparse"... done (took 13.350108577 seconds)
loading group "broadcast"... done (took 1.087190327 seconds)
loading group "union"... done (took 12.102329423 seconds)
loading group "simd"... done (took 2.505395576 seconds)
loading group "random"... done (took 10.181833635 seconds)
loading group "problem"... done (took 1832.691180855 seconds)
loading group "array"... done (took 25.747100437 seconds)
loading group "misc"... done (took 1.123724078 seconds)
loading group "sort"... done (took 3.784837708 seconds)
loading group "collection"... done (took 18.867313609 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.625484525 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.119289996 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.167783168 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.346476299 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.21213816 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.146317274 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.164114961 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.557792741 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.975550771 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.210274096 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143957201 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.548464572 seconds)
done (took 5.950333718 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.252534893 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.434099691 seconds)
    (2/2) benchmarking "String"...
    done (took 0.11224598 seconds)
  done (took 1.212431174 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.092609381 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.179666229 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094771216 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.109912672 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.110805508 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109568683 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093984344 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110550279 seconds)
  done (took 1.478125484 seconds)
done (took 3.712919101 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.492051905 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.846224088 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.499460894 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.130883228 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.157829143 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.147022107 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.305404716 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.158831051 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.121803707 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085208935 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.170091181 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.369036366 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.475724735 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.94807349 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.083310211 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.127057519 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.082137208 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.700114849 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080357033 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.133001248 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.523070699 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.114664245 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.117789187 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.142838283 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.189942092 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130028449 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.165630355 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.096313161 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.657927936 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102549075 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.18496536 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099244497 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.163837762 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.249194661 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.09503893 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.093772987 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.673083974 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.17810976 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.112838371 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100605787 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.671785641 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080454699 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.192158165 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.102269916 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.108652237 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.187868085 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114583617 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078701931 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.102007602 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.090609309 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.156037674 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.44381841 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105554812 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.144788948 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.108952565 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.674184662 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098556142 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.155711446 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.139804354 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.097853374 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.099419481 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.107452566 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.153503676 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.111608026 seconds)
  done (took 19.403337714 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.118322461 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.140151257 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.093716886 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139109706 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138009121 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096381531 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083756084 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.094354053 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123504089 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.186038654 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.120406983 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.143008794 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091578829 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.079567894 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116379266 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248420226 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107742879 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120737814 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.079871864 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106887239 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.139682358 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095766683 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108390409 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.109068003 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168585867 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204910202 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107669905 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123240458 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.093416773 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097568841 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142458643 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.160479894 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075067947 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.093499616 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.183200909 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120725561 seconds)
  done (took 5.137045481 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.143863162 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.199380914 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.097599049 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.208027892 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.178985928 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14641376 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.166923653 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117705638 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.267310738 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.183543827 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166996303 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130190584 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112263611 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079954463 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097346121 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.163964253 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077846814 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.675386944 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.179419677 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.14971698 seconds)
    (21/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.099409593 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.106756392 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104687422 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098013552 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084810746 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.097901355 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084528551 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.132788635 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.329617173 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.175720954 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10298396 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.424006367 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.084318641 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.116117263 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105747449 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130440476 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.116175105 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140616826 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102142701 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083067896 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.23105256 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.092607664 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094568126 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.109005381 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134287036 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.1326217 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097976125 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.093328668 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.240183518 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082675664 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.120671818 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.108229733 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197864572 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.097290435 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09984966 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.360874223 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.11926037 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087851682 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.099437403 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.308401653 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131315738 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083400539 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077773608 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102834355 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.094685427 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.376640171 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.091108366 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.339847751 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.095319708 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.157049479 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099592148 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105866678 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085871618 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101978499 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102616811 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.096756276 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078649941 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.09808727 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079800129 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.104070353 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.116515657 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084450404 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096560167 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148303554 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.115434147 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117046557 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110077158 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100131269 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078946245 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13064305 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096891966 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083314671 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.146444468 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106009423 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.115412552 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084188827 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.1436534 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096695347 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.081345438 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.235077319 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083250136 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126630771 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101949744 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113104807 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.120069058 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09810235 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084079668 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095250803 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.07985783 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164487519 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080363158 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.078709326 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099995412 seconds)
    (114/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.097080505 seconds)
  done (took 24.211679942 seconds)
done (took 49.422206503 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.465654693 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.095151889 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.112849671 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.112445799 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.110441934 seconds)
  done (took 1.644244375 seconds)
done (took 2.361177842 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.355516188 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172906267 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101797533 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.196425939 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087332377 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.201984852 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.164938023 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.118630865 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.199560255 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.100193262 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.176556185 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09989405 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087738944 seconds)
  done (took 2.811389791 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096947934 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120669435 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081391836 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110447621 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075695745 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108782569 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091815468 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.129296527 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092170888 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101992504 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075625592 seconds)
  done (took 1.800646551 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093881547 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113392261 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081064345 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10608598 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075839807 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08956032 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106165545 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115578604 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090287136 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102556015 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07560699 seconds)
  done (took 1.76699577 seconds)
done (took 7.08833615 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.046484059 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.482257713 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.120914911 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.168355585 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.352934536 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.214650322 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.525760833 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.134751347 seconds)
  done (took 11.956324209 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.133655478 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101676078 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.080267957 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.101433704 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.079932993 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098740511 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07953189 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.095702734 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.082793178 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.094809382 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.080887997 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.098372833 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.081982332 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096035043 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.081385875 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.099049898 seconds)
  done (took 2.266919779 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120830457 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116956455 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.102966172 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.10743205 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.084199102 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102078813 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.086818716 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.101930062 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.082375717 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.09985514 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.105454429 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.088712188 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104389723 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081841432 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.102480414 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106053149 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.083040785 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.102617047 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.087891008 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.103567697 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.089519644 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.100306764 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.10440011 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.090040085 seconds)
  done (took 3.181367066 seconds)
done (took 18.121116821 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.171076816 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084455418 seconds)
  done (took 0.974652212 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.10461834 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.121016781 seconds)
  done (took 0.951945619 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.108446982 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.099016225 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.135346668 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.113962587 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081415118 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096744298 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.112689707 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.097856484 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081037909 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098018224 seconds)
  done (took 1.750350932 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.087957213 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.103767999 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.089210941 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.119749648 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.108905903 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083431729 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.101852818 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085173042 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.103294723 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079710543 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.105359925 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116185612 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087629593 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117592398 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.086647937 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.104094355 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.108225129 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.085351306 seconds)
  done (took 2.500709854 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.082693376 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.085998102 seconds)
  done (took 0.896463739 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.085378467 seconds)
    (2/7) benchmarking "second"...
    done (took 0.098444309 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084370885 seconds)
    (4/7) benchmarking "year"...
    done (took 0.10168836 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079777476 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.095644952 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079212403 seconds)
  done (took 1.353730187 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.51088281 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.256919561 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.333071267 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.097504231 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.153120086 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.369051364 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.135953725 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.112663424 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.113130697 seconds)
  done (took 2.851185482 seconds)
done (took 12.003566005 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093721938 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.192180888 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.548643273 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.117983249 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.079790165 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.161809497 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.261326082 seconds)
done (took 2.184151067 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.357045991 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.12406199 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.090580274 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081563839 seconds)
  done (took 1.379193891 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081508078 seconds)
    (2/2) benchmarking "read"...
    done (took 0.105901043 seconds)
  done (took 0.922154236 seconds)
done (took 3.037605922 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081139275 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.135455021 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080425459 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.097939255 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081481626 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.09779468 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077886322 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079912164 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.096352427 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.08024728 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.097398401 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.080958846 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097881991 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078490399 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095068472 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08071918 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077976288 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095603132 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080431071 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.095243691 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078170678 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09820638 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.07784213 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078273456 seconds)
  done (took 2.89156493 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102400992 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.222264927 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.085758644 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.102155082 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.083730259 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.102290492 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.100736979 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.079135967 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.101557728 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.08066893 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099998865 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083200839 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097889185 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083886538 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097807821 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099094119 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084914878 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095894673 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080880592 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100138267 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.085981893 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097164642 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.084590086 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104411231 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.102256449 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084705648 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.10083713 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082151803 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104889319 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085302413 seconds)
  done (took 3.653133016 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.089801328 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.077677737 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.097690324 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.090193293 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.096179205 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.08315592 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.096363437 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.079756962 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.097513344 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.07969563 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.097927696 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.078617153 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.095854252 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.078768656 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.07818487 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101397329 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.112445636 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077021136 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.076063798 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095483933 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.082990738 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.093796266 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.079461034 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.094649385 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.076325528 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.094223668 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.078168024 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.075990376 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093975627 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.075876863 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099396584 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083760993 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093712219 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.089558014 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100112538 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.075957884 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.102030532 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076101805 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095017941 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.076466338 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.093253661 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.076661756 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076068234 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.10556949 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079577085 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.094950492 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077190212 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.095353523 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077306087 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097052487 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076106 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.09333915 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078762486 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095221565 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082669483 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.093203853 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.077989625 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076096436 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09453396 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.076632536 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.092522832 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076014334 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100222793 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078143096 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.117492158 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.088334399 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094983347 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079224948 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098548893 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086318915 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095914736 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095805895 seconds)
  done (took 7.078936771 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084402885 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106875483 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079206873 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096044018 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074861681 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077248292 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101533528 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094271306 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07883169 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112793944 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07774555 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09573709 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079457407 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098644827 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077186889 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095958621 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087043872 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092418316 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077364972 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098134628 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077167104 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10079472 seconds)
  done (took 2.70835554 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.226745984 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106479609 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143496766 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.114143016 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096879257 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111493763 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10176293 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086107716 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101232065 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089126341 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105158791 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084397743 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11440842 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104477624 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087159457 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10540487 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101572178 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089460378 seconds)
  done (took 2.711735547 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.096798836 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09986658 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105322281 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098369624 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.081337783 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100454101 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087847976 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11593772 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.102012889 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.081019879 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.108436246 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083665781 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100236339 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081603982 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100209194 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080907437 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100032609 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080783575 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108019826 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103644531 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086492412 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108721578 seconds)
  done (took 2.859111483 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.1003659 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103310668 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.114662588 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.104544713 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07867632 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100189682 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090165449 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.098467662 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105888367 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.081698555 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097558223 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079184137 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.104309071 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.080312725 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103760663 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080554958 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099617959 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080732776 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09937274 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076841748 seconds)
  done (took 2.626232381 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126674329 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117964865 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099905162 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126910821 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114338508 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.097013646 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12557442 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114481783 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.097024864 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127301346 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096150706 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114005982 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12508118 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104297704 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113997827 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125631028 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108560535 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125086531 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114098085 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097513734 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127360361 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114394728 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107443172 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114017499 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099414508 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114416584 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114023331 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.104143691 seconds)
  done (took 3.916749772 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082968953 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.082049264 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.097953689 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.08018321 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.098593915 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080294986 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.098424629 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.080841234 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082262962 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099665007 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082285244 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101382729 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083005426 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100684413 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083028805 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100724533 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083077367 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.079834695 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098292525 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081027868 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.099858324 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082271379 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.100525972 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.078358314 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094640954 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.079724368 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077841578 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095984504 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080696701 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098053608 seconds)
  done (took 3.417140435 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091673971 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106255487 seconds)
  done (took 0.950769619 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.081457623 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117914463 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079621456 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101846585 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086711128 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098421011 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.091443163 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103377015 seconds)
  done (took 1.51411087 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.109411262 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.122846235 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.089274358 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112556349 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.100347046 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.118136963 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.166182122 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086658372 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105851374 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08138206 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.118369758 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080273764 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108917916 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104045192 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089983077 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113120331 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.079485024 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.108647186 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.088808269 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101172197 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086465745 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115155822 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092004553 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.105978856 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083765651 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.110994998 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.11332012 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.092959685 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104893773 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094098366 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.107587796 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.075788203 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.103878031 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.086991065 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.097885394 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.099957099 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116462156 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086106856 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108943823 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104652987 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090479533 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094276392 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091906843 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106626286 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093963745 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.107116832 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.087071312 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093869196 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082179811 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.103165136 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.076721262 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102404666 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.075488273 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108668716 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090684713 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117997958 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084363034 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103833757 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085846308 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102175355 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088394281 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104047248 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108872595 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.085257019 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108972847 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091527529 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107232059 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077112044 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093106174 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080289345 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108300798 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106370828 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.111226544 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086718305 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105578659 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079348797 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104722436 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087309528 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107425418 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.11077064 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086127075 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107371908 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093507393 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103710568 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086515814 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106502123 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.083516902 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.10244569 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082146505 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119153367 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084816277 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097408098 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083134259 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111302152 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086241696 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102859908 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082514837 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109143868 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076053087 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.104630528 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089335409 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106203601 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.11136835 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088402276 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104914639 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090562767 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.112100478 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087029637 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103145648 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.07812736 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105207816 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084469327 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.108699895 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07592265 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104863697 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086006838 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.104275141 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092804656 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.101085005 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.087297114 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11047874 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094166793 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.102082835 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078729048 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.104406887 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086311381 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108241963 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094568617 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102310487 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.07675094 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095088883 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.090774906 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10361276 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.08858885 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105688088 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105038871 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076380295 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080347521 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105243055 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109928979 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.0854345 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.105453968 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092981391 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.106695924 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.08566264 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110124025 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084883904 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.10012694 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091392957 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103743193 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077525394 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108835312 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086327519 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.102301703 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087528736 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108793146 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087139277 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.105960141 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084334578 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105161593 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086821791 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.10036223 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086593872 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.102944896 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112246479 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.08680037 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.104565672 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.079819614 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088375146 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.101251582 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.086070663 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101202381 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087413867 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.106073782 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080114259 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.103251549 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08549591 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116958463 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.112514158 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087803793 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108045827 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093153979 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.104445635 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.090426131 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.10363933 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088301995 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105871385 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091502362 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107884495 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087907313 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104414031 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079009107 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107074954 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092240834 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100672406 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.08052839 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100700408 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.08655706 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.111880939 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087532963 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.106334649 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084487178 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106947104 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092047646 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105589813 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.085655958 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.100178609 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.086933848 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.110283527 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.088597195 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106170909 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094964831 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.1069676 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078658476 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10955006 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08325419 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109305757 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.077419782 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.102928563 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083697582 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.107353352 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.08514872 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104236176 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.07674028 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110396164 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093669379 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.106337283 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082538381 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.105602689 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114724606 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085843645 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10858222 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087702311 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108004755 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100985583 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.100477627 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087217798 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112442107 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.086715584 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095124654 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090482451 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.103653437 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081828126 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.1041987 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.084667013 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105472151 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089762404 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.10747497 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.075906529 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.104708584 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.085079288 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.101807723 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078442267 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.111715396 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.0880005 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.10553815 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114528397 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089168585 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.106083267 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089281455 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.105499117 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.088484001 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.107425657 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091119655 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.105843156 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086527568 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101457806 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08774057 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100750498 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081433728 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104268904 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.08769667 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.105988746 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089715919 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.104460026 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093660694 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.106329471 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087880051 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.125233227 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102525231 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083883065 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106963151 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090279854 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.104539122 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087868798 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096913642 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093975597 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.104790569 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093635777 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.104746884 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.080774582 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106456379 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087040476 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106923341 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.088513888 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.106685502 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086210778 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.105049963 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088564371 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11443287 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.083632916 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.113069445 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088807035 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108531814 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.105886716 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.088065819 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104380261 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.083748616 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.104805856 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.088958953 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.10696969 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086433756 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107029336 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088053103 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.104391894 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085529305 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.107360495 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.088906888 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.107345416 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077321646 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.10138437 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084733148 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.106237575 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091499886 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.10710827 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086143314 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.104281188 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089900295 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.104041885 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.08026854 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110114116 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090334811 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.107317125 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097459119 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.102016776 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088518511 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116735932 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078265261 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.103999895 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.08248168 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.103366391 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093874119 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.107803523 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094186523 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.107148828 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.083591581 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098813058 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.089450915 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.103851243 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077302285 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099928214 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091013186 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104136269 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085558204 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.106606829 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.091222405 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107683175 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092075679 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.105585866 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088169726 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.107082339 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080452953 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.102179376 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.084850749 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105972283 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.089005089 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.102792896 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081281845 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.105626193 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088138883 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.106462857 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087240402 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.105396598 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094083408 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105660333 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088723486 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.1112658 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078453817 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.107396799 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.091661421 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.108448946 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08833964 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.108293925 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093288665 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112216801 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095578855 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.106799249 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091724172 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107437069 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084089341 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.106300343 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.088244274 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.107220377 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084190858 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.107426395 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095121992 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101297204 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088167128 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107473629 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085196398 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.107629183 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.08876018 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.107091033 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091953955 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.108813753 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087918782 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110261408 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087160163 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108240429 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106943412 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.08655665 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110778464 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084434121 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113404968 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.089553401 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.107539716 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087336417 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.103169524 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087570652 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.105983073 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086980247 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.112844706 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.088790649 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.102043218 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.084431524 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100161648 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088142578 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110827275 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094592913 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.10705831 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089463734 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097815224 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081575045 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108318602 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.085187375 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105645632 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.091118798 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112097443 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088962168 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.104660217 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.087104563 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113537485 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09272117 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.110518304 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.104063187 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090973162 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.1075497 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088373444 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.10452066 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.088893984 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108293076 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.091001047 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.105864262 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.084419205 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116000772 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.093611507 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108600855 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087070336 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.110443154 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.087452695 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098460431 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.089818617 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.10759022 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090697119 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.108454899 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087009 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118270511 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101123391 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.087883667 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110954776 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087779269 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.11283383 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079320774 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.107488948 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08992759 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108352332 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080537279 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.10272801 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.085109844 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.107042931 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085813486 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097751548 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09912161 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112208551 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089227613 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10583368 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087168901 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.09852239 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.080375631 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.103243722 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090098239 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.106425057 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096475603 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.103266176 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08632149 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098575349 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08854703 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107869923 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.091361669 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.100448043 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.080374417 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.103612393 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089747967 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.1144444 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087051492 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.106502821 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090930025 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.106986007 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082703744 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112776738 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081268161 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.108693522 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100579688 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.108718043 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091163293 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.111771266 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113589352 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.090855909 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098124911 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.090229086 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.106750819 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.090208623 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.108698751 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.091426471 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123860921 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089662974 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.103764415 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.08700647 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.108150124 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.084957401 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.115392664 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09024809 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.109561569 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090778869 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.107399436 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090194169 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114573929 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10941358 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.089891208 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.108258564 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.087887363 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107055825 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.087707811 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.106532377 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.092236501 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.108931713 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088790568 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110603473 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085870207 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118499207 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095523628 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.110361534 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.081731942 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.10528968 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085207024 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099083456 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.090515965 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100955125 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.087191827 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.105623072 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.088039769 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.109380187 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091546038 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.107868195 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.091343276 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106805364 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079091144 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.111062762 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.090406544 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110178366 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.084326326 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.107571182 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.090956103 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.113233775 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094442545 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.105602948 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.09047342 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.107392563 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091561007 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.0997545 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092021828 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106553144 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087246756 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.105537914 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089019994 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.109232295 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091725158 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110078886 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091472435 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.10841736 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.093713107 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111060273 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081699105 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.101044552 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092806171 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102645999 seconds)
  done (took 58.886255255 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.156443859 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087614764 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09956944 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080861334 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125278179 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081495831 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099862194 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.081773566 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100864133 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095233883 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.100049025 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079933018 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121444946 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127913929 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125365941 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114157281 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080889011 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100607602 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08047582 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100945365 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101736475 seconds)
  done (took 2.943401017 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.112145594 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.122630699 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116157617 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102497295 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111558754 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117644853 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096970363 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118350838 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.120606442 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112806026 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.102282475 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1181619 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.111593745 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.092875843 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111827587 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11444058 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102464067 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110622567 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117908431 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097217025 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115126419 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115021952 seconds)
  done (took 3.244118277 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.09895767 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.091742593 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.11323322 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.082172101 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.107499108 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.081908397 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.112681675 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.0851592 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.112263355 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.088485815 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.105560079 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.089013581 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.11251566 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.082701591 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.106313908 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.085826453 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.111959008 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.088702506 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.109128194 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.082810482 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.129135748 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.102067481 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.083779214 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.085803756 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.118668475 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.109106037 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.089073545 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.087839891 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.10594608 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.08824318 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.104402521 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.091587561 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.111941039 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.085603456 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.10556723 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087677774 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.107738269 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.083249454 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.104217 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.092958002 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.102960207 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.090453758 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.114883596 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.08499134 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.104158326 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.090825272 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.107161482 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.083204375 seconds)
  done (took 5.504074877 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.129497963 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159228302 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.093766336 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.156583688 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.129573953 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.118627262 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092904814 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.149192211 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.106955495 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.088437135 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12600846 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.123312909 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089894659 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.117678895 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093481224 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109976827 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.111675331 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.093917691 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.120642102 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088635902 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.117398357 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.112389432 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.103883702 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.12063656 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.113440301 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.089320028 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108239168 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.098323843 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.120222466 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.114115913 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.094964983 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.119101897 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.129496351 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.115328822 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.092276987 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.111577262 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.105621651 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.109411055 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.110401681 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.087415527 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.110736689 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.099783828 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.113187599 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.125236543 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.091608967 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110488117 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.092593443 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.11094401 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.126145815 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.096566582 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.118102916 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.12272368 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094610408 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10960639 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.095155371 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.126631611 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.109284116 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.087852766 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.112907259 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.120066368 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.090510587 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.118961906 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.12691352 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.09568265 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.11734804 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.12179276 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.092193286 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.112886001 seconds)
  done (took 8.479319849 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101897611 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.133558149 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125817949 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105188568 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115211951 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113784569 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095825207 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.114365324 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095022568 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120859741 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113712631 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.165317127 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08901916 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119651613 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.094407939 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.11540141 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113599547 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095088097 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.114182912 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094656009 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.114366176 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125005621 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094768289 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125710157 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127229638 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107392764 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095359894 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113902648 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105131667 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.115035273 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126478021 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.113046041 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095467176 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.125206873 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.127788764 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094518695 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10413276 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094853273 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.114377642 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113979181 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.088569371 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123577626 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113931119 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.08887805 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113798656 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.095654501 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.125572898 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127985274 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119936779 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101876593 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114251799 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125027339 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095294071 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.11437327 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.125679719 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.133579573 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105794773 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125783807 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113240298 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.106115802 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126555764 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.133078517 seconds)
  done (took 7.802410351 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092284745 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085887844 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.103871075 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.083618236 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105219432 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08415616 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105316445 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.086829528 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085016882 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.106673437 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085507117 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103008631 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08423755 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105611627 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083586997 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103014149 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084861563 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083200094 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10507947 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08385879 seconds)
  done (took 2.678598953 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.100858912 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126543378 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087005305 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114257593 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089921064 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.114073359 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107743087 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09034753 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10648638 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090239458 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.118576196 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098840567 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108049203 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112738511 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09962172 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114733749 seconds)
  done (took 2.503691635 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.112314573 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120102208 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.132206366 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.091718217 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104415584 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.09408952 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107124244 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.082801486 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102733644 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.09555244 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.112784948 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.097452574 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106081214 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085969476 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.10703565 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092999613 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101746883 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.092245523 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106528236 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.112322093 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.113626435 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.108949184 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.088834932 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108483676 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.089732348 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.114788538 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.093740087 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104733979 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08531278 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107011574 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089321673 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.115071992 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.082896263 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.113217677 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.084357551 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.10546848 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.085788077 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.108367964 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.112785239 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.08740896 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083176538 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.11052743 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.106204928 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.08872384 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.101625483 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.08776057 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101084616 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.094369241 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.107705126 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090701255 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105838427 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.095733644 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.113677951 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.098705077 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.117121422 seconds)
  done (took 6.38144387 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107567236 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110632686 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090975031 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10346321 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089806401 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.11424319 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.09080681 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.108739631 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088820052 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.103739469 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089303614 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.110434037 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089287609 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110417107 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088823002 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111376026 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081990646 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107947872 seconds)
  done (took 2.620029098 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099214331 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106433625 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094661633 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106166861 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086392875 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107984027 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08288092 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084567814 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105709591 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086649323 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106741082 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088715256 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104829616 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089186361 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106567844 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087126057 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108029762 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085430849 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.107276175 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083028707 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10854042 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086057969 seconds)
  done (took 2.945891938 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.111129683 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.140473645 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.101627768 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.149779223 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.111913829 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.091601108 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.121526692 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.09055337 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.129772833 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.110261685 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.091234204 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.109841581 seconds)
  done (took 2.188304698 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118915473 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146030777 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0841156 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110035246 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120219027 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093181875 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111612118 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092415944 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124906184 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125394612 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091981246 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126228728 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124584998 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123765637 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100252911 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121688729 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112413717 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092905348 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108561575 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135196951 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092936233 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125550074 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111692383 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093158574 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112357361 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123491236 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105453212 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126409185 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112618446 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10408345 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122585294 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11236294 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104585769 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127151295 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11004469 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125254023 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093428787 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134171898 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121243107 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102949864 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.11079633 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120162186 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104533078 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12118834 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12376177 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092361022 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11998574 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112095725 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093651881 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140252916 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121190912 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12395378 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099801272 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12645817 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124754446 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141161962 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125966568 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124178457 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100527035 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125761006 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12432663 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120879614 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103363617 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126613734 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121144476 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124111911 seconds)
  done (took 8.427469947 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136871677 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108276941 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092721864 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127733046 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124935234 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112550064 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093669603 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112805132 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092144857 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111281773 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.160558128 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113813265 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10468029 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124592414 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113470907 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093768428 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113528854 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124100218 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089915724 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141896515 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112638884 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12412985 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104633557 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125795733 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126643593 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121629938 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093705754 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113526675 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09419442 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114934688 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119321078 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094691182 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125153506 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106268656 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104601494 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113705282 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093108393 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122000312 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113640654 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100132152 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125540793 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135553647 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113514663 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093833664 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127133952 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114729388 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093897937 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110498596 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092762476 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110666865 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126466578 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126706186 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10615102 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125411901 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113004927 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09303091 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115303443 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113975259 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094334079 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121526538 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124138385 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094116936 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141235374 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113757716 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093781936 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126421149 seconds)
  done (took 8.297850691 seconds)
done (took 157.962282149 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.113861738 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.145812498 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.102779854 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.17281396 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088245945 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.145157409 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121085419 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.125208706 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.087331026 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.108949157 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.088922051 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.111683118 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.154498869 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.109111282 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.08891693 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.111882697 seconds)
  done (took 2.706091265 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.190563942 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.288661952 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107411531 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.114057497 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.094466989 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112129975 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.092186692 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.116687211 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.090284411 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.123556157 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.111020929 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091807091 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.121735549 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.091591508 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110186265 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.090818199 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.122073075 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090150223 seconds)
  done (took 2.997258296 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.121269772 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.159548905 seconds)
  done (took 1.122612738 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.132634373 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.187914398 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.306748625 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.165580057 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.1182956 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.131763025 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.166068479 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129115111 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196877851 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.13176369 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110464535 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.117333427 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140408043 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.100669265 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.118885991 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096063646 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.14365969 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.117515139 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098026146 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116639425 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116033991 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.117627304 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.121159311 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.097977081 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.186714985 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131418968 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.1174318 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.096374855 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117068684 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.097253559 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.122458455 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.130111779 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.109270118 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.193555334 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100558988 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.188661781 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.103024606 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.116435587 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095836591 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.116649355 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118673014 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.099509836 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.132406175 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.114918877 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.09687952 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.124150893 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.096779402 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.117373326 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.102148297 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.126537024 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.122836732 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.100620527 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.189919995 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.123948118 seconds)
  done (took 7.803596505 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.851588628 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.159363535 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115800093 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.951238555 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147484867 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129588344 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.839248048 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115993623 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.268667992 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.075321812 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135777423 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.129257588 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235363701 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260295266 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.151416783 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.342868687 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.716646787 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.129172913 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.123349966 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.158607593 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123416961 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143592895 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112440264 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.450034694 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117304253 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113668765 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.100333121 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128237487 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169523762 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.114938065 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097742912 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.207825854 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.272982197 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185949068 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116487094 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091512999 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113963101 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.175067979 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271968957 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222775683 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180376824 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090083745 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113661233 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.105792794 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135255253 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11038013 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.171796666 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.181003502 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.201291864 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097098056 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127671692 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102014548 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126596586 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.168101078 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.112770809 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.341358016 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.344775654 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094050564 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122661106 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11092402 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269773358 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.114659202 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.209875844 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141257993 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219214941 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09171526 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.788287784 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.173129214 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114505069 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122697025 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.101731122 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120526959 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103259639 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.175448354 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.388446033 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129871766 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.118316203 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091997752 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.233188274 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092857974 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113691967 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.17096272 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115180093 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102035634 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130104352 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127405346 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.180001763 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.253825174 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.134011119 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121060821 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.098733207 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127666124 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.093272871 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.242264578 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.201086854 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.186242475 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.223009369 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127543569 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.171344725 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.172488741 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126629056 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.177976537 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123289754 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132044165 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105861292 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221232783 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147656782 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.114625561 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099431671 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121503363 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.151199991 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.096354147 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122001626 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.176254801 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.493947044 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.17293835 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.088939534 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.119387557 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101121159 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.190548733 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100636037 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269535034 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123168973 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.174999154 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100404318 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.111694056 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122690898 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.172202175 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128207965 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102313441 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127589709 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.1209865 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.257755919 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22499627 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108736847 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242985589 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184389925 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123899871 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.181846985 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100917925 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.199329395 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102658154 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126798341 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116595433 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.76142331 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.129031824 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12251407 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098672518 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.198846345 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114517135 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.09467318 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.114690915 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091338399 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.820819938 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.096014316 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.112577056 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.09497157 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124996036 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10086969 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121774586 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119224031 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.170062856 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237271921 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106310931 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123092958 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.114369619 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.168614874 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095218541 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.115935968 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.094087554 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.116355917 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102339446 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11949222 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094135137 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.2019132 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.166497129 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.22491759 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.530758066 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.115530893 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.092518558 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.235102511 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115466272 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.311378 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101936532 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.230780432 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.173908917 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.112138839 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.342265265 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.178392679 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.201111072 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.096216142 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.200865443 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090526628 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121295498 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.169508049 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.115373442 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101290171 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.165256492 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.132931188 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.130131341 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.15760413 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094140677 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235834727 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.113562679 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.176310995 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117494983 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1063867 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.315218984 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.116128151 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114476861 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.19188296 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097427074 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.115874546 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.778511943 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.116205949 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.104430227 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12515057 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.228255669 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.174481321 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123448092 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101072697 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129526013 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.168991977 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.239357846 seconds)
  done (took 45.729803989 seconds)
done (took 61.193721985 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.317898534 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.274146025 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.313565721 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.203525533 seconds)
  done (took 2.051557431 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.191416536 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.160547422 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.130589867 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.114895278 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.161068373 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.0919356 seconds)
  done (took 1.717605574 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.502556456 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.384806635 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.35123225 seconds)
  done (took 2.109058689 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.273679238 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.292105301 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.366294967 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.458105779 seconds)
  done (took 2.369156302 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.220145986 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.130698328 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.104429516 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.144800419 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.178436912 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.182133818 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.149070243 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.157948892 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.135523208 seconds)
  done (took 2.321589592 seconds)
done (took 11.439088604 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.322802716 seconds)
    (2/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.143284959 seconds)
    (3/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.263778753 seconds)
    (4/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.225831344 seconds)
    (5/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.119915763 seconds)
    (6/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.132505015 seconds)
    (7/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.245709848 seconds)
    (8/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.137864905 seconds)
    (9/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.29854783 seconds)
    (10/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.114377693 seconds)
    (11/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.224746768 seconds)
    (12/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.254255739 seconds)
    (13/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.120796161 seconds)
    (14/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.161758068 seconds)
    (15/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.118212167 seconds)
    (16/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.247857696 seconds)
    (17/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.110821245 seconds)
    (18/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.118991304 seconds)
    (19/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094099181 seconds)
    (20/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.187609694 seconds)
    (21/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.131151705 seconds)
    (22/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.250660672 seconds)
    (23/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.107586474 seconds)
    (24/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.104555943 seconds)
    (25/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.133898115 seconds)
    (26/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.185700494 seconds)
    (27/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.176312851 seconds)
    (28/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.150930462 seconds)
    (29/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.232602775 seconds)
    (30/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.15295028 seconds)
    (31/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.16673099 seconds)
    (32/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.150170026 seconds)
    (33/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.280513032 seconds)
    (34/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.078392819 seconds)
    (35/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.128680684 seconds)
    (36/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.103358313 seconds)
    (37/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.129094823 seconds)
    (38/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.250019311 seconds)
    (39/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.199480212 seconds)
    (40/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.078544236 seconds)
    (41/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.117555028 seconds)
    (42/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.141358451 seconds)
    (43/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.097695788 seconds)
    (44/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.106778391 seconds)
    (45/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.098181971 seconds)
    (46/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.07724873 seconds)
    (47/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.153573249 seconds)
    (48/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.152231979 seconds)
    (49/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.25217908 seconds)
    (50/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.173630817 seconds)
    (51/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.24698941 seconds)
    (52/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.203689248 seconds)
    (53/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.217019891 seconds)
    (54/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.197240393 seconds)
    (55/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.08061604 seconds)
    (56/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.238684553 seconds)
    (57/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.161389979 seconds)
    (58/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.195031693 seconds)
    (59/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.110412568 seconds)
    (60/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134515717 seconds)
    (61/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.149102742 seconds)
    (62/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.09986881 seconds)
    (63/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.11850799 seconds)
    (64/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.096867356 seconds)
    (65/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.152709841 seconds)
    (66/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.109043206 seconds)
    (67/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.1195987 seconds)
    (68/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.079681579 seconds)
    (69/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.167010221 seconds)
    (70/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.133373191 seconds)
    (71/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.099963671 seconds)
    (72/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.151600198 seconds)
    (73/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.098451845 seconds)
    (74/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.119806265 seconds)
    (75/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.111725876 seconds)
    (76/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.208868511 seconds)
    (77/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.12254857 seconds)
    (78/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.162568795 seconds)
    (79/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.224773289 seconds)
    (80/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.209894171 seconds)
    (81/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.103641648 seconds)
    (82/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.156641235 seconds)
    (83/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.080527269 seconds)
    (84/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.146872694 seconds)
    (85/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.102587533 seconds)
    (86/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.170091816 seconds)
    (87/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.110332413 seconds)
    (88/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.145920213 seconds)
    (89/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.129190747 seconds)
    (90/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.204585247 seconds)
    (91/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.117877359 seconds)
    (92/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.200854056 seconds)
    (93/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117730814 seconds)
    (94/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.146651983 seconds)
    (95/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.100479867 seconds)
    (96/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.130867782 seconds)
    (97/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.081685256 seconds)
    (98/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.120871026 seconds)
    (99/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.122686918 seconds)
    (100/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.101707252 seconds)
    (101/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.107900334 seconds)
    (102/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.120753931 seconds)
    (103/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.080080065 seconds)
    (104/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.114831456 seconds)
    (105/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.100026293 seconds)
    (106/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118444274 seconds)
    (107/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.098931169 seconds)
    (108/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.118152739 seconds)
    (109/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.19673671 seconds)
    (110/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.12710876 seconds)
    (111/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.129471159 seconds)
    (112/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.08047688 seconds)
    (113/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.115066201 seconds)
    (114/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.080667275 seconds)
    (115/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.101286387 seconds)
    (116/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.205416426 seconds)
    (117/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.108304857 seconds)
    (118/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.120931509 seconds)
    (119/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.127648146 seconds)
    (120/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.122171239 seconds)
    (121/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.161592376 seconds)
    (122/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.139076397 seconds)
    (123/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.118953815 seconds)
    (124/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.125806194 seconds)
    (125/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.197837032 seconds)
    (126/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.102888703 seconds)
    (127/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.107380738 seconds)
    (128/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.101669964 seconds)
    (129/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096703971 seconds)
    (130/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.102486523 seconds)
    (131/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.139313484 seconds)
    (132/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.11977092 seconds)
    (133/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.080230826 seconds)
    (134/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.1016649 seconds)
    (135/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.208704481 seconds)
    (136/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.111002602 seconds)
    (137/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.122961107 seconds)
    (138/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.080736595 seconds)
    (139/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.136702215 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.10022069 seconds)
    (141/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.11028409 seconds)
    (142/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.112868009 seconds)
    (143/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.204287494 seconds)
    (144/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.195266357 seconds)
    (145/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.079889027 seconds)
    (146/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.120790808 seconds)
    (147/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.080731541 seconds)
    (148/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.115188593 seconds)
    (149/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.108735393 seconds)
    (150/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.129045388 seconds)
    (151/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.080474974 seconds)
    (152/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.10299424 seconds)
    (153/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.10675759 seconds)
    (154/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.117653373 seconds)
    (155/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.137017676 seconds)
    (156/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.104214404 seconds)
    (157/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.095066213 seconds)
    (158/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.169878597 seconds)
    (159/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.079071962 seconds)
    (160/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.119806171 seconds)
    (161/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.150616184 seconds)
    (162/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.100791785 seconds)
    (163/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.122252976 seconds)
    (164/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.197113135 seconds)
    (165/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.081230854 seconds)
    (166/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.080125495 seconds)
    (167/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.119207429 seconds)
    (168/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.080648273 seconds)
    (169/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.130922196 seconds)
    (170/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.122169108 seconds)
    (171/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.094618105 seconds)
    (172/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.117563329 seconds)
    (173/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.116026972 seconds)
    (174/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115627348 seconds)
    (175/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.088661121 seconds)
    (176/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.079350044 seconds)
    (177/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.123311976 seconds)
    (178/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.080116917 seconds)
    (179/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.119199662 seconds)
    (180/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.097301178 seconds)
    (181/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.116677544 seconds)
    (182/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.107460247 seconds)
    (183/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.123238656 seconds)
    (184/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.080068515 seconds)
    (185/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.118859679 seconds)
    (186/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.08076573 seconds)
    (187/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.130560009 seconds)
    (188/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.079935176 seconds)
    (189/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.123414975 seconds)
    (190/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.122289536 seconds)
    (191/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.093316348 seconds)
    (192/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.079412784 seconds)
    (193/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.102319299 seconds)
    (194/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.081143146 seconds)
    (195/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.102760715 seconds)
    (196/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.081260641 seconds)
    (197/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.159545886 seconds)
    (198/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.089939202 seconds)
    (199/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.113176893 seconds)
    (200/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.089434857 seconds)
    (201/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.080577957 seconds)
    (202/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.103153456 seconds)
    (203/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.08957293 seconds)
    (204/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.130113701 seconds)
    (205/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.0895257 seconds)
    (206/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.102717289 seconds)
    (207/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.135512972 seconds)
    (208/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.137148142 seconds)
    (209/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.080464736 seconds)
    (210/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.121223991 seconds)
    (211/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.105221617 seconds)
    (212/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.123814388 seconds)
    (213/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.116738 seconds)
    (214/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.126905081 seconds)
    (215/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.081260704 seconds)
    (216/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.127175633 seconds)
    (217/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.089743692 seconds)
    (218/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.116616005 seconds)
    (219/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.081275348 seconds)
    (220/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.103935348 seconds)
    (221/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.080504113 seconds)
    (222/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.08870381 seconds)
    (223/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.103631282 seconds)
    (224/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.11436599 seconds)
  done (took 30.660545609 seconds)
done (took 31.532272159 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.412561773 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.134805712 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.129116417 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.103594207 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.146684563 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.106711964 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.128575282 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.106607532 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.126707209 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094078477 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.117404842 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.127261181 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.104967004 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.145210801 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.10620228 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.119954368 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.09589922 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.128390673 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.127236876 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.106659478 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.147103984 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096725331 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.125817891 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.096094094 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148529896 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096978167 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.127318732 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.104333722 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.126172325 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.094768114 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.128413495 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.11900131 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.105600671 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.130298236 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095326958 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.119439704 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094800586 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.110099954 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.096378792 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.12102609 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.103026528 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.118796037 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.106318392 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.120795428 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.097986434 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.118819267 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094054976 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.130805117 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.093399175 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.127665335 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096818118 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.133222795 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.117122614 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.094669135 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.116984786 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.097393644 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.127286367 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095559873 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.127826871 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094917279 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.11988732 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095506358 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.122706509 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095252456 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.120612642 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096901973 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.120011371 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.098313931 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.117731928 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097820996 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117181668 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.096879389 seconds)
done (took 9.38019594 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.109686158 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.191199999 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152897857 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.156231336 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.153388437 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113557826 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.130596682 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.152519145 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.104368228 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.148935278 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.149829156 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.142189029 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.133887538 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.128244052 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.137376977 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.103733763 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.126219151 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.137388777 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.137615595 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.148057247 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.15377622 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.128863794 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.125653814 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.147006275 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.125344453 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.13351482 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.130507818 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.126329619 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.106416167 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.134185516 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.118979027 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.131653043 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.129514567 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.115174014 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.134623789 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.100775311 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.138223211 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.122910476 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.104049997 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.127615605 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139102514 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.115806558 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.123994048 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.134052664 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.104588283 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.13074384 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.103320446 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.125293387 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.103974531 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.121460314 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.131272595 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.124812018 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.143353761 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.128739241 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.107579616 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.127194626 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105785058 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.130071983 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.128424464 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.107421103 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.127212628 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.10566569 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.133721561 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143676029 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.126244367 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106755953 seconds)
  done (took 9.383130074 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.123668078 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.157591795 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.133068723 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.112393977 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.129784623 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.092281519 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.1160692 seconds)
  done (took 1.79157537 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.099631865 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.148105285 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.12779656 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.150965259 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.139016563 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.131115017 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135470316 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.094719847 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.142996556 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.1279544 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.123491879 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.173646899 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.118889164 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.106809175 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.153792569 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.117384989 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.130203765 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.117939144 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.102512073 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.152620498 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12355026 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.117300495 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.131806118 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.095588745 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.140457264 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.096664997 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.186665631 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129973368 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094262882 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.125057141 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.100111848 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.213648871 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.117716082 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.128579569 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092817008 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148037951 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.116413574 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.126104917 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.144202952 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09922877 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.141142452 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.101041226 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.126127343 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.124381476 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.102428839 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.134049314 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.10663502 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.12709349 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.100312879 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.147734172 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.129112858 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118674741 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.119819833 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.098907714 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.128859594 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.101564211 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132941565 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.09981216 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.148127162 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.125650224 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.122170854 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.146357845 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.141571073 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.12214773 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137194193 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.116928987 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.142069673 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.124658462 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.103129549 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.126082256 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.122733909 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.123319524 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.129409146 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.110765229 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127688261 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.123602356 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.147744767 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099441829 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.132449183 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.098727101 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.12328189 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.095026032 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.135999048 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099608193 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121878011 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.136520679 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108250079 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.124643007 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.099159208 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.142846475 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.122692099 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.106934609 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.130417276 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.098897189 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135052949 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.147344501 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.105702442 seconds)
  done (took 12.993614911 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.103385815 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.096694473 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.126538719 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.120742212 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.09685788 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.096485211 seconds)
  done (took 1.578034939 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.132383021 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.123476624 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.111146717 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.126286999 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.164094694 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.119678992 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.146008646 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.128795287 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.115973129 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.135260774 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.1200218 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.146567349 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.15019792 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.103380723 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.144231585 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.103582194 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.146007573 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12373767 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.110321821 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124014999 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.112568739 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.127440716 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100269394 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.143173035 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.103479605 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.129416982 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125699898 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.112041153 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.135391346 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.105041666 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.12747916 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.1028378 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.128471611 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.130244521 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.121518535 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.128342875 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097931272 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.130366783 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127696575 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.104103507 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.145380704 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100730208 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.133708072 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.105725862 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.130186523 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.126994162 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.105754671 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126945598 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.120855145 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.129524958 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.10638103 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.127140355 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.103390385 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.130044294 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.103463817 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.131131539 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.128138277 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.121780011 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.127381296 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.103450243 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.124308334 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.104143264 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.131186914 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.128116408 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103410396 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.129722841 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.103868513 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124172289 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100878992 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.127385616 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.106738806 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.124323641 seconds)
  done (took 9.723700547 seconds)
done (took 36.390484733 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.100114423 seconds)
  done (took 2.029080026 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.869856768 seconds)
  done (took 1.802055382 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.11621578 seconds)
  done (took 18.081880006 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.53092522 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.615438774 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.978961502 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.170010896 seconds)
  done (took 3.228004325 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.964297944 seconds)
  done (took 1.915851144 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.325885634 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.269250562 seconds)
  done (took 1.533372726 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.840260596 seconds)
  done (took 1.78474041 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.581682477 seconds)
  done (took 2.522054341 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.365806897 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.205613608 seconds)
  done (took 1.52593091 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.594005234 seconds)
  done (took 1.542900238 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.703635286 seconds)
  done (took 15.656168665 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.241648153 seconds)
  done (took 1.203404223 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.312742561 seconds)
  done (took 1.262338699 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.592050347 seconds)
  done (took 4.543609047 seconds)
done (took 59.567721219 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.111308183 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.133481159 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.110015106 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.131285275 seconds)
  done (took 1.431512617 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.116153463 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.127215218 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.107199485 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12738338 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.112501902 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.128380163 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.102691344 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.135367845 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.103300872 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.131019675 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.127383314 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.103928129 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.129062675 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.103417226 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.126581531 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.104923333 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.131261444 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.103433513 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.129634568 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.104073213 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.128909796 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.129135632 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.10725713 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.127969814 seconds)
  done (took 3.799315476 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.11065191 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.100063801 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.127494304 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.09911588 seconds)
  done (took 1.395457255 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.116720223 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.143538664 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.117601973 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.135435361 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143603577 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.118031791 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.125247848 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.10088396 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.129438823 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.110497726 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.12546475 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.144180563 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.118587069 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119391598 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.112935056 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.118031286 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.096411256 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.143336466 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.110153961 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.136643741 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.099724541 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.134564101 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.107611715 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139220453 seconds)
  done (took 3.908660474 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.180335968 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.138046014 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.148312587 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.172071166 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.125345799 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.123496571 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.124123331 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132547508 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.12775081 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.099586782 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.124187798 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.154496135 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130028886 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.126286585 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.100658955 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.130413145 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.106875357 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129756602 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.101562359 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.138165798 seconds)
  done (took 3.578622785 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.112715074 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.124462475 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.096025298 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.123708671 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.107321519 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.127578097 seconds)
  done (took 1.65801939 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.103825659 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.094671376 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.120608668 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.094310936 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.124577783 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.095239705 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.117801917 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.095040617 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.095020393 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.120294348 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.094829696 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.119222935 seconds)
  done (took 2.234402112 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.229694112 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.122300956 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.125660684 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.100809041 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.130053003 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.099147552 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.139779798 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.099121095 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.181560878 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.125245411 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114501183 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.178261541 seconds)
  done (took 2.606530274 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223976325 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105085626 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280739891 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.382255166 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165945526 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173950794 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.282838099 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173743698 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.194409363 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144858769 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212054104 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164234683 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161364932 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186640822 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123417852 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.193134418 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182196761 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208984613 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157833055 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247317935 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173704167 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175215764 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198653547 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159177753 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120676874 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16525045 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.126572877 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110182512 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179269419 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176078578 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204978754 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128753278 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144787701 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231812068 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220332087 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184616362 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.310138847 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141530691 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.19922966 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.199740406 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283435995 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148650761 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20253573 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163180192 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138298702 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188121853 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163303047 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.187640638 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.113102558 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149631124 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191145751 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183239471 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.213637252 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119358566 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.330138768 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130188275 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.15358834 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188457171 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197517316 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232559671 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175006349 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.105167541 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19383905 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223836421 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188451816 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.127156434 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.174578068 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133478389 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185317659 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212721608 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185011719 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174958384 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.216068011 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142257885 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170988384 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186256315 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135120897 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188167873 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167808272 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.129054404 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158211343 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119183883 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134966354 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.192536788 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104416897 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24649565 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117420839 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.296638018 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241709419 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165214399 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168071631 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171084468 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174504904 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12888848 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.126464204 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154373472 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.178078671 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163588877 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113165768 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165452256 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15319146 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.106312103 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160660229 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.131370922 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167325901 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.11542515 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17461385 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171659752 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.136554262 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17294274 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158186693 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.141597999 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176972445 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228504533 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114701605 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140580477 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21030117 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166259995 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.144439926 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192795746 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20359315 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.181291818 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144176727 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17602073 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204055352 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150654263 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205832043 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148669524 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115124832 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.157745686 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166243476 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164924386 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.163220678 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109853641 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.160040443 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210167091 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.137229127 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145023617 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181536633 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107854729 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135814394 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151103495 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117492929 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.151063052 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.157512866 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.117968076 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16369885 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166196032 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162055008 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165150158 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151233002 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199243947 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141247574 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.167689695 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128767917 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.126397622 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.187133511 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202950319 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138016329 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195950793 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.177301859 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205526757 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170281655 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139958365 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190432098 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137776179 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.101208709 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173403294 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167456322 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170715337 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.199906843 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226915841 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.175781073 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.133750473 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156278553 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17436074 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.193073249 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163889944 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.154149399 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170032491 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173987191 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.102294359 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.132773451 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133526923 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122336855 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139904857 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139811973 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189582967 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172250954 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196001587 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167960082 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147243665 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200247404 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105764996 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173346063 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.205987823 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11958022 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.202734454 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224796011 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147899188 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151133969 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178052413 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.128601077 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106197137 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.14078804 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174365409 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139678561 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115893366 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151936528 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199865401 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182256005 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157910557 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236938206 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17670773 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210766516 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.102264168 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.173179779 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188621547 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166356252 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.194254978 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11977945 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.168468181 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195850557 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152523483 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201691689 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169752257 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17701182 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233388644 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.138169992 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139577566 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157825713 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176913242 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147182771 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180138223 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127277408 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14405264 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161525515 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.116392099 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134886715 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187693977 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153031454 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186500044 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.174330609 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208997957 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110851425 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152092372 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168387965 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125832822 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.126288508 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178539096 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204043264 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152100063 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1665943 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192518267 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138259292 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.324094344 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205821714 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192060184 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146395705 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151587077 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169521792 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177125053 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17229383 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192255715 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123304344 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189572424 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167593936 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.152366708 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142470427 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127943398 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159408299 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.160069513 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.141435832 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.160295198 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.124683277 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218273108 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125211001 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167582083 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172035567 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.156048143 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.161977686 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120732009 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218213746 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167907909 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184664942 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.164976339 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.185010304 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196989345 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133383174 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107887145 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.136753288 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192176726 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140766284 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167147536 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.191809407 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207062766 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167071947 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178238188 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146785716 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.103917316 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167955212 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156605179 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206585539 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14965036 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.144159371 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208370639 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.159630826 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109993541 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172424467 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316552496 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126394567 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190885509 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.130449104 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.287834442 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107877586 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138618318 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178216373 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179990364 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.140204338 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.166469791 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169124641 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15441916 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178748743 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1460097 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198308776 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216353281 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178463201 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210193032 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.123866788 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16742895 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170657581 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193772984 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152951515 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.15294198 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144069086 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228061825 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.203336178 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.112709402 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172206906 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171676332 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168229295 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18158802 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142914915 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196845085 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139562072 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175756078 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1193159 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132844154 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167633699 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193109876 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14091623 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193708087 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166973965 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112549283 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134720307 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159575906 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166618042 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124413522 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.139264436 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186279094 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.137259565 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171650975 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188782268 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110982717 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163479017 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153983771 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111274905 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151850896 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152563018 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115608597 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.180035749 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19888046 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.139335885 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194583124 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180445007 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173131302 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168275731 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152770159 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643107922 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.135538215 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199877898 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1568314 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19619954 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1581424 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174225045 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168463976 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130455144 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176658596 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157994349 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229229545 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174356424 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.167537316 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138362389 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124825145 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154624695 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.138895045 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132398885 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170842845 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149541192 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.144454479 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.166079764 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12679925 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.153608728 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147471203 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202493506 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155640281 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192009382 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193130311 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146605805 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146317371 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212607223 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110298732 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.170100523 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179936831 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151862496 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158741402 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.11027353 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.144463146 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189207206 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.104030463 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170176336 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169072925 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170203282 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172527769 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.143336857 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167837816 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122187948 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169923116 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135146231 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.162813578 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16573793 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111124089 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.135186721 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16260244 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167553733 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.139489364 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135270575 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.15390775 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222576563 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.105005253 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142814625 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290574678 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167194038 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204186608 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.161492015 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114410602 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153486641 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163362828 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.162075298 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167603943 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.109352306 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140963681 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.110880822 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.192796589 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.170060622 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167313889 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193023371 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169427264 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198264987 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.14531919 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.274722679 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120693206 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165053454 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.138969973 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.109368744 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149785753 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142374657 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125697779 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.226013142 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187578126 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.133441301 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.154024418 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135566074 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.104853032 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141567594 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179754934 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162813446 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166157363 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123142237 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.127082033 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152138157 seconds)
  done (took 81.142474354 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.182273235 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151607634 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.155699261 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.207134825 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175972537 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.263647458 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.214687856 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23580675 seconds)
  done (took 2.628720873 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.113101755 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.143778174 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.149783263 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.13201766 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.131967752 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.354649201 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.142680106 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.105687703 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.192150906 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.143632974 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.129897456 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.623719396 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.102119214 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.134609384 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120147182 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.131428496 seconds)
  done (took 3.888025008 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.208726329 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.531658515 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.825320585 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.251824481 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.233252791 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.161592771 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.728657821 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.193222817 seconds)
  done (took 12.174720383 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.142731524 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.1507708 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.266682597 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.183519743 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.167600337 seconds)
  done (took 1.960765988 seconds)
done (took 123.351605925 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.109548128 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.132012963 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.104985785 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.133644683 seconds)
  done (took 1.512630672 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.123916044 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.091085746 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.119104859 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.087856991 seconds)
  done (took 1.466883592 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.499328788 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089028306 seconds)
  done (took 1.67160519 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.134092857 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.144321631 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.12571692 seconds)
  done (took 1.460023339 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.115522839 seconds)
  done (took 1.168369523 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.118485049 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.111667762 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.150864901 seconds)
  done (took 1.432028728 seconds)
done (took 9.758217501 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144561792 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.436171893 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.39691024 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.14723252 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.72843671 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.388782972 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.05295095 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.162056544 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172095578 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100123018 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.144989834 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.680140582 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.074648898 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.348897223 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.059886431 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.442673502 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.711263614 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100883551 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.134240117 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.10084722 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.032891301 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098532489 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.128359172 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101142139 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.706933297 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.403259603 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.128703297 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.474964453 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09891299 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.130477818 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.389913438 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126251321 seconds)
  done (took 17.386100453 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.145534402 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.188699236 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.13510549 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102312606 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.131674235 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.101843729 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.135882818 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.113175325 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.186906255 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.127158952 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118858766 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.127251616 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104444266 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.127733036 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.121375243 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.126734084 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.102375085 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.129227601 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.106287943 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.128888949 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.119169416 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.126653419 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101388305 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128527916 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099474907 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.140629955 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099483113 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.138970201 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099492942 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132403507 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.131621276 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.101562013 seconds)
  done (took 5.031795038 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.151128645 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.197077433 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135571687 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135017096 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.177079643 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.127829342 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.213704061 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.135831995 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.190746658 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.128094503 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118729764 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.127506736 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.16422965 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.100524225 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.149822696 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.099608158 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.129245487 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102563116 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.134725511 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101596886 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.147485673 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098568319 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.129823739 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102533561 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.127594849 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.11376817 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.128245552 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.138557486 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100567639 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132002488 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.1066032 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126971605 seconds)
  done (took 5.334504875 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.108761236 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.134417411 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.117936029 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.144712403 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.103337817 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.134906809 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.108109286 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.13077872 seconds)
  done (took 2.04054676 seconds)
done (took 30.843588441 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.124198699 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.141135561 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.115101855 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.13720064 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.135906629 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.12481728 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.112518282 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.098009026 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.138373456 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.11591022 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.128956306 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.101151057 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.142793478 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.105504239 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.143569024 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.109764587 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.149355183 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.115523057 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.130100618 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.1100023 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.129523084 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.148456876 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.106797019 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.100702258 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.154231269 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.129614309 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.118304253 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.131812519 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.105501473 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.101026162 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.144495179 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.132004222 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.101776941 seconds)
  done (took 5.132759418 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.133241191 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.173949971 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.097886107 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.126524662 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.167365231 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.098003988 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.155646482 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.098687805 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.125512217 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.098854591 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.096910704 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.154253374 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.159034753 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.130721671 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.174613739 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.163247226 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.124695027 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.165799686 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.149782977 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.137870969 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.156912382 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.096812192 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.161499078 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.168946538 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.0969923 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.126365377 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.142476078 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.15866338 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.170792795 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.160550807 seconds)
  done (took 5.243311879 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.112522786 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.145071148 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.126819267 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.201601718 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.169886348 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.115898982 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.142550351 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.119418066 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.157523117 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.100393329 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.140255483 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.160731167 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.118148975 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.139801945 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.106950753 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.143246943 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.120602281 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.131465361 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.107822093 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.14904728 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.119205519 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.142043961 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.115533884 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.139932395 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.100340184 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138748346 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.106568292 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.143705918 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.135765146 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.111025751 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.132580897 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.105277828 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.131237522 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.112698385 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.133002645 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.109254107 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.152346236 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.111037595 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.143030277 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.165138355 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.111128133 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.133901168 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.123986399 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.178213942 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.102792778 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.137878325 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.112080536 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.139454788 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.099932344 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.149748248 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.115731119 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.129947191 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.144555376 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.101169441 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.127607309 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109129793 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.102159692 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.131984777 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.110637235 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.13615243 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.149041228 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.110493811 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136692527 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.103273677 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.135151131 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.101906695 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.12740855 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.106582047 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.153172017 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10711266 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161854343 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.102647131 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.135904915 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.110301315 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.135873565 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110953293 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.129945054 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109802019 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.139134507 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.107454111 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.139485169 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.105033068 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.134404696 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.120179058 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.144085962 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.137400273 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.107922119 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.136639864 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.104137046 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.13119647 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.115547352 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.131910134 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.105431978 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.140129982 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.10266561 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.133374993 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.107539462 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.134929456 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.10057 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.150753381 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.107069402 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.129953466 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.119403991 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.131196001 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.105516328 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.139391832 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.115092204 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.129801908 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.10601395 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.137004973 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.100680829 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.136161063 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.104481459 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.128808833 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.114451493 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.142550366 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.106692955 seconds)
  done (took 15.839465796 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.25590969 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.230967081 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.202691444 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.315020201 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.154412988 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.128694818 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.22797217 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.183214861 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.131601374 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.170997239 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.187555194 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.193184402 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.101564796 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.16406245 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.231926227 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.323056586 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.164657197 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.172117403 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.14233005 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.154398013 seconds)
  done (took 4.920361549 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.123051488 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.171182216 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.15977717 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.128864581 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.132454955 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.115898409 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.133130786 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.147431857 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.103695476 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.138131174 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.101812687 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.139834068 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.104986031 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.13435294 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.119460365 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.148270978 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.106113069 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.138496467 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.148058342 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.108281277 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.132356902 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.15322582 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.112287381 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.160934737 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.110127994 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.14680508 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.101856885 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.138885687 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.09885792 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.131679392 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.107728488 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.14647336 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.138083809 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.103341391 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.137505656 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.102827828 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.127679215 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.104437828 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.133170496 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.106593096 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.148239462 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.105023324 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.131498123 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.103437442 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.139826059 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.099149252 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.135026987 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.109707992 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.136118556 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.111567404 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.138129775 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.106917002 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.13941437 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.11471432 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.128581333 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.112377049 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.145109086 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.135342867 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.10952999 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.13002884 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.101341897 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.105315905 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.130565645 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.107378195 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.136823709 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.147949161 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.111609537 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.131671712 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.107741786 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.135443743 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.105571572 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.149305804 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.151922218 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.101351939 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.127849968 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.12456496 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.128572843 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.091519219 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.112536902 seconds)
  done (took 10.973042687 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.134273242 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.132101755 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.121852305 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.167565171 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.117456633 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.14073447 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.103165141 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.153217164 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.108749971 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.14123852 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.109223331 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.147638462 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.159219565 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.116449592 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.132341658 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.117556492 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.136123211 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.143937896 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.152171124 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.162769843 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.113864907 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.137424341 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.11633444 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.143456493 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.134580827 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.145282167 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.165794489 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.10870847 seconds)
  done (took 4.858990342 seconds)
done (took 48.021593648 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.172698422 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.369817133 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.158378114 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.157433253 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.205327514 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.173398208 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.153353751 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.353641529 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.79663621 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.143999494 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.15896953 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.165068582 seconds)
done (took 27.086339214 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.20197251 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.743598276 seconds)
    (2/2) benchmarking "String"...
    done (took 1.470640269 seconds)
  done (took 4.2888263 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.152648987 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.153850382 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.402547307 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.155647131 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.17226124 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.1727498 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.156286974 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.160041375 seconds)
  done (took 15.450530269 seconds)
done (took 25.170164746 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.175036092 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.342209349 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.421912283 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.167756366 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.156621051 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.155612918 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.140996494 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.181787313 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.153070354 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.154060889 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.151800316 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.436521655 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.153945895 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.547921237 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.151247607 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.16297558 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.168384508 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.398236839 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.155212913 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.194094826 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.155265384 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.141274102 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.166453577 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.191131179 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.17589919 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.160233842 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.150721391 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.138049606 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.373241247 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.154170139 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.194911778 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.158189799 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.162105067 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.157320964 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.259277705 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.190944697 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.341991083 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.148220827 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.149224367 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.162336623 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.348877465 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.555762997 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.159790363 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.142152682 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.155172362 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.207606287 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.148132253 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.865968164 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.163269208 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.144072915 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.203186763 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.54915815 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.170124242 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.163402674 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.170160584 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.393609041 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.177974914 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.177498836 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.180756889 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.159582248 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.160264739 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.15450692 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.217457525 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.160007891 seconds)
  done (took 140.30792706 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.159209374 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.161201854 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.161779935 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.181549884 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.154990398 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.160713238 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.158867061 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.158246023 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.159102895 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.161617598 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.157322396 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.161272966 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.161602999 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.120656939 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.162748298 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.175877289 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.155114108 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.157658998 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.160082016 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.160318439 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.180321725 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.154150624 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.173663606 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.155616275 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.189893404 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.246251895 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.188756783 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.166769745 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.15282475 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.161675507 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.195573241 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.17564101 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.737462703 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.014616217 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.168785955 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.166355462 seconds)
  done (took 78.494325556 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.555708536 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.155263467 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.159011126 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.162520204 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.191196618 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.161041229 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.707821427 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.708374289 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.893785112 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.205618858 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.399762463 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.383268033 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.158343761 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.254246815 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.173626799 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.155494873 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.162563621 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.180272034 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.185035875 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.163394046 seconds)
    (21/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.160991856 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.162362599 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.708034211 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.177426047 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.32935846 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.171724975 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.191895572 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.555623192 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.175423936 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.175133633 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.194532431 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.888166391 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.487340429 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.207508507 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.161733205 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.490415431 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.273097481 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.161724841 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.194523283 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.161570812 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.444216027 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.158547083 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.165842661 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.168954416 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.793209233 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.161780031 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.713126239 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.166548072 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.09162852 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.162424906 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.165624762 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.496660556 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.759914954 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.175428405 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.166741136 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.169344524 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.166623944 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.169673262 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.197628115 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.560456566 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.27661331 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.169349842 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.172502761 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.201054636 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.166199397 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.402996753 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.1632 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.76344559 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.229778989 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.285893727 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.708749718 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.167639463 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.261565048 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.281176034 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.162860634 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.167114046 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.170006357 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.167269754 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.275666675 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.163267019 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.562463481 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.332783582 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.178791241 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.42456786 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.258586826 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.164140118 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.529078497 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.167568492 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.167916842 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.88113087 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.257777796 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.164860034 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.168531346 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.168551867 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.56986095 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.708218026 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.413304292 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.169228456 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.167861915 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.571045109 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.166731045 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.576141532 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.69370099 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.795126545 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.16456919 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.279756435 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.333956185 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.181639899 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.168722119 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.425259511 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.163878763 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.229017068 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.164347266 seconds)
    (114/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.169361657 seconds)
  done (took 361.179069389 seconds)
done (took 581.057371941 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.902195094 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.842649882 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.973984876 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.873130858 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.843447695 seconds)
  done (took 10.522056656 seconds)
done (took 11.605842418 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.356892312 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.358134836 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.230720403 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.359585673 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.202241455 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.37732465 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.338878313 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.191262103 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.272228984 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.252595717 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.275497546 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.223917911 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.207834224 seconds)
  done (took 17.735048686 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.424531771 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.16820148 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.25209323 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.412590455 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.208458153 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.426202034 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.470433253 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.168880237 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.314718111 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.18524438 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.186311995 seconds)
  done (took 17.307632054 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.427943573 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.170174817 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.23916337 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.410858126 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.211566547 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.436521591 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.47714095 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.17192929 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.32258308 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.213620395 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.186390104 seconds)
  done (took 17.358193999 seconds)
done (took 53.486326402 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.210074555 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.335386171 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.198762917 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.187048761 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.181094243 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.18180206 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.187928102 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.184330689 seconds)
  done (took 10.756055638 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.182760707 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.183276023 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.17897127 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.180088569 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.178051959 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.178380234 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.179810705 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.180215077 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.183485356 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.179319886 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.180993047 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.184917076 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.182216507 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.181341263 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.183941508 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.183626464 seconds)
  done (took 19.991826293 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.182949964 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.179999516 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.178814466 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.178067243 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.179819441 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.180385417 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.180034697 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.179333441 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.179832149 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.178479761 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.181666119 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.180408822 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.181860751 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.181418185 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.181037758 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.180521578 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.178977425 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.180043862 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.186335797 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.179889179 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.180757945 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.182410805 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.181079855 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.180656717 seconds)
  done (took 29.428257608 seconds)
done (took 61.264286517 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.17518773 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.176527003 seconds)
  done (took 5.442828671 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.245235025 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.24380754 seconds)
  done (took 3.581886865 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.185247048 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.183899906 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.184896821 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.185353831 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.184452745 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.183212013 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.184042649 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.184345552 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.183328899 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.182539479 seconds)
  done (took 12.93350511 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.185399427 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.185192512 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.182654948 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.18658703 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.184481827 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.181163064 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.185556551 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.185069461 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.183642239 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.183571675 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.185229651 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.184287226 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.186183414 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.182916917 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.184764474 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.18153634 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.182033149 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.183078793 seconds)
  done (took 22.406285141 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.199943622 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.204935547 seconds)
  done (took 3.498970963 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.322695191 seconds)
    (2/7) benchmarking "second"...
    done (took 1.223305731 seconds)
    (3/7) benchmarking "month"...
    done (took 1.298104224 seconds)
    (4/7) benchmarking "year"...
    done (took 1.290180476 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.224003329 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.204840827 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.22536054 seconds)
  done (took 9.882520863 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.185372812 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.377466086 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.489987902 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.741717216 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.188418904 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.189724438 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.040814677 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.189742014 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.192472928 seconds)
  done (took 13.689316949 seconds)
done (took 72.525158172 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.176400745 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.194416971 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.18669245 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.190893749 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.533289276 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.235124358 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.172828355 seconds)
done (took 15.782959143 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.170057533 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.165526544 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.168429086 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.178622724 seconds)
  done (took 9.77900149 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.188238696 seconds)
    (2/2) benchmarking "read"...
    done (took 1.529940266 seconds)
  done (took 4.815126452 seconds)
done (took 15.688782269 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.188462313 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.1875479 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.187938466 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.184399014 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.189229009 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.186008649 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.185913096 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.188882506 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.185284828 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.187959605 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.186689003 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.187543923 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.187236637 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.184853746 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.183755924 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.189261077 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.186898665 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.184204018 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.189735434 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.186709147 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.184269858 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.188166695 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.186920695 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.187152024 seconds)
  done (took 29.582784439 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.189087197 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.186466586 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.190910247 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.192096265 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.189956744 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.189476696 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.19114297 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.187517529 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.19079533 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.188944036 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.18742836 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.18707267 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.189648667 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.189603522 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.191208254 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.186941684 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.190932527 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.187465345 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.192054803 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.188459373 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.190253314 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.187375195 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.188522233 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.191088806 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.189096785 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.19140853 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.193053463 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.189525205 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.191574017 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.187516041 seconds)
  done (took 36.785468857 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.196351146 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.20092709 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.190915974 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.190168666 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.190077257 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.191194437 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.192509211 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.191743573 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.191865418 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.192099831 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.192218445 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.191643682 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.191852024 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.192426671 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.19335484 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.192423091 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.188930682 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.191918469 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.192324448 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.191070477 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.190889545 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.192960861 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.190223062 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.192975302 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.191535802 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.194407915 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.193144492 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.192668147 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.192398695 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.192520868 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.192686733 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.192146759 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.193496257 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.193373865 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.194411441 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.192798208 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.199689852 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.201828047 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.19337892 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.191725465 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.191533089 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.192280934 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.194290912 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.194102894 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.191644755 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.193689603 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.194236548 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.193742118 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.192236501 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.195132625 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.194082124 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.193282132 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.192953102 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.192274653 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.194098815 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.195565411 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.196399712 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.195518566 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.193356691 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.193466907 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.195971593 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.194995319 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.196609821 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.195018114 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.195120879 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.194752857 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.193879315 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.19546677 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.194611518 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.197308127 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.194245317 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.196436163 seconds)
  done (took 87.035505105 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.196796205 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.193140347 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.193895303 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.192824051 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.194099549 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.196235147 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.194173481 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.194340142 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.195166248 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.198051136 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.197980812 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.194935464 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.192011936 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.196598447 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.194129598 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.193300755 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.197381566 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.192838 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.196236748 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.198455476 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.19865159 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.196151024 seconds)
  done (took 27.40103106 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.196876402 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.196540694 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.191796156 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.199708563 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.197196327 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.195305839 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.199740681 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.197208508 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197073997 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.195197289 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.195865003 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.194775061 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.196341451 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.193389204 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.195670592 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.195427156 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.196122406 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.197122749 seconds)
  done (took 22.635987939 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.197745058 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.198530341 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.200630465 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.199230657 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.197736399 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.20012793 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.197145256 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.200852366 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.201367343 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.198171903 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.200971547 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.200474612 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.197709421 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.195826972 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199971849 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.196539879 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.199526084 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196818957 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.199988615 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.196351897 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.197723187 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.199830588 seconds)
  done (took 27.481781222 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.200041981 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.199475758 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.19559577 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.19811371 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.197183916 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.202532145 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.200271696 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.199528588 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.201303969 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.198854229 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.198012902 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.200392404 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.199465598 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.196660881 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.19640365 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.198450701 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.200772036 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.197937076 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.201450108 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.196702783 seconds)
  done (took 25.086204159 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.201420023 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.200604893 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.200947487 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.202601942 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.202456992 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.201113037 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.201346248 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.201188039 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.199954194 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.202150434 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.200784496 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.201728337 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.202734226 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.201579301 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.201364864 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.201584033 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.20203105 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.201066074 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.204277424 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.202862232 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.203413618 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.206080162 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.202621113 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.202681965 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.203480987 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.201055073 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.203422355 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.201709135 seconds)
  done (took 34.768597045 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.204328524 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.201934247 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.198881026 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.200121936 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.19728856 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.199278503 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.199609373 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.197036577 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.202103011 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.200363852 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.203144039 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.20207897 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.200137806 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.201331813 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.201089427 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.201951766 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.201155 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.199813167 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.202836858 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199216986 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.203216764 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203514595 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.202613278 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.200425556 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.202991693 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.203598501 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.201691739 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.200554888 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.202384976 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.199696774 seconds)
  done (took 37.144466347 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.248688661 seconds)
    (2/2) benchmarking "in"...
    done (took 1.247901858 seconds)
  done (took 3.607046904 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.202693585 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.201906504 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.205096364 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.202292702 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.20104947 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.203252505 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.204367846 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.202858828 seconds)
  done (took 10.735746665 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.201596043 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.206464171 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.205248313 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.204818194 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.20541055 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.205323359 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.210085422 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.223892545 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.206409889 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.206561025 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.212603494 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.214859018 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.206414186 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.206809905 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.209148369 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.209155427 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.205913252 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.205919588 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.206361236 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.208410823 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.209726474 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.21002281 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.209326854 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.205494032 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.209178099 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.218194953 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.211375679 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.208523422 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.206069161 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.209680463 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.207750929 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.205058185 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.208036171 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.209740444 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.206427803 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.20673314 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.215476229 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.230237046 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.212411012 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.206744643 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.210101855 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.203650508 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.210833063 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.210339324 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.208261467 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.207436194 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.208472321 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.203901265 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.20723026 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.212419259 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.213527821 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.207497884 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.205027301 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.210412859 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.209814711 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.215116652 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.223238204 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.21086753 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.219036955 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.222997625 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.222443242 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.229988767 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.210610519 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.209149445 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.220389569 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.237061775 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.215921026 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.225613738 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.209617567 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.211208929 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.214925026 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.223892588 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.236097241 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.208087523 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.208145156 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.21080376 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.21042026 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.210940564 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.214986256 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.229056676 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.209832531 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.207182144 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.21959181 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.234290824 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.210994222 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.212038835 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.211005793 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.2114935 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.211401754 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.222524431 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.22707085 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.212050453 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.209435235 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.210709489 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.210621096 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.210100641 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.207834467 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.211114647 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.209585669 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.212016888 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.210728625 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.213634421 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.222923282 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.211755057 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.210136961 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.215688331 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.211481394 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.20818984 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.216537693 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.213759041 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.211289463 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.213050869 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.218553919 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.210233271 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.214930545 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.221209214 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.210941568 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.212358235 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.211734267 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.213762058 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.220833126 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.238498262 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.2165368 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.212702413 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.214210959 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.224886981 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.210361145 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.214741149 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.209397686 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.208967908 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.208859115 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.213772945 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.21361912 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.211866332 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.212488494 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.211227497 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.211650679 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.211845954 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.213645525 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.21247236 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.214267121 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.209443266 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.210680941 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.212122943 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.21238167 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.211057803 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.216446196 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.214187205 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.21590632 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.215404509 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.20925276 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.211157724 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.213427939 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.209695209 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.211527434 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.213918795 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.214388563 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.212795369 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.211959628 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.214606367 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.212364071 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.214542198 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.219172712 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.2122181 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.215623458 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.213074702 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.209867754 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.2120443 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.213924919 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.213778822 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.213971042 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.212154933 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.219005256 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.223143977 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.213032102 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.211979796 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.215586597 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.212525132 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.214821689 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.213194846 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.215036258 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.223419074 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.216068585 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.22001526 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.217715137 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.215124365 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.217682264 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.214188605 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.213956382 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.213992715 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.219558329 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.225522603 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.226551874 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.241317746 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.21673576 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.220576304 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.213998437 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.220409443 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.218020664 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.219658966 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.217180268 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.215045274 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.216354119 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.215657823 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.215694436 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.217100553 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.212294061 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.217092117 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.216254122 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.217628466 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.220334836 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.218011931 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.21602314 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.213857219 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.217709368 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.218136063 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.21849188 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.215790053 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.214058001 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.213508402 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.213860904 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.220268499 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.224525883 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.21736762 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.216777569 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.218745261 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.22203033 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.215599857 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.220942554 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.21697587 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.218364874 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.226433594 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.237931823 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.217032256 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.220647023 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.236977525 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.218490385 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.220371302 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.21830994 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.217372931 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.221322874 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.229157109 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.218736658 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.216964018 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.218750122 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.217173364 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.217304827 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.223844864 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.2173516 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.219182514 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.223299134 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.219076829 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.218576295 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.217681827 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.219560267 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.217849823 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.222294221 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.222447015 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.220443458 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.221298383 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.221518815 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.222483673 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.219144024 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.224166181 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.229908725 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.224673626 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.223633143 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.220951124 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.222714973 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.226499044 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.221231384 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.220518608 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.222373571 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.233207588 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.245296832 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.228833775 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.240566571 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.220730829 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.224626993 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.239508081 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.226711474 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.222828577 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.224272315 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.220702057 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.223612759 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.219723952 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.223089099 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.220389434 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.222689751 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.224700567 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.229226721 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.223026016 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.224524782 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.22182299 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.224232235 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.223598742 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.221314902 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.224058732 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.226426892 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.221563602 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.222229847 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.223113521 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.229713576 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.242398705 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.225372579 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.223540018 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.220712189 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.221050326 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.223318519 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.2224533 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.229867093 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.231894747 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.225186235 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.237182242 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.225517519 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.234347916 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.22909565 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.228646907 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.233082078 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.221046144 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.223736715 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.224306673 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.226460171 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.234113368 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.243430701 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.226148687 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.229433373 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.225668279 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.224602653 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.227992202 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.227606457 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.2274041 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.223816018 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.231171118 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.250634011 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.231158909 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.226504795 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.22719949 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.22673853 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.226918129 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.226002981 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.228277979 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.228317792 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.227741123 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.225842072 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.224270126 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.229474995 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.222791823 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.225988516 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.225045569 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.227392954 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.227926171 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.249788439 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.232789571 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.228519591 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.232999118 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.229448867 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.231182875 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.248021734 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.226258999 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.227213155 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.228977945 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.228511389 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.228401353 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.227334929 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.23113415 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.229818305 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.23313858 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.228268456 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.230435011 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.225150905 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.227035317 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.226912888 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.23818623 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.253100377 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.230072087 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23383329 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.226403477 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.229731917 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.235711122 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.230821882 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.22931622 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.234696731 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.242373588 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241501058 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.229565497 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.227184953 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.231494975 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.22796403 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.230900886 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.229687693 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.23003472 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.231404878 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.724405455 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.231481272 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.233533118 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.231646413 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.230784925 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.233242169 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.232776129 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.242113071 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.231503217 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.232540771 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.231979217 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.233301269 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.231471887 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.233534155 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.233661536 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.232899401 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.233647125 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.232297789 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.240979193 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.239493736 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.233505663 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.233583151 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.2309637 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.231573559 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.232315128 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.231882989 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.23232841 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.231569687 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.232808988 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.230714269 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.233486804 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.232228485 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.234304921 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.230207222 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.232354775 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.233727298 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.243017806 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.23161102 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.232887113 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.233526875 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.232105666 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.232550385 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.231856261 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.241118926 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.236291454 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.24249911 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.244607541 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.235811386 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.232462407 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.236387365 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.244568377 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.230634939 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.234943928 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.232464695 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.233853606 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.234808491 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.236031027 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.232906474 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.239981579 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.234008178 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.233364918 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.241455574 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.257360632 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.232220241 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.236413295 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.234068341 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.233244399 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.228606087 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.235571623 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.232097723 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.241118503 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.254670873 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.232292472 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.232117112 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.232277165 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.234634704 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.237249854 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.233961213 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.23597128 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.231993895 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.235164424 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.236599742 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.235795539 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.232990538 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.232543784 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.233606585 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.236908997 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.24379369 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.23067254 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.23566163 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.236651814 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.233354817 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.233514598 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.235338306 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.231954449 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.233322056 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.23481819 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.232703552 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.236287907 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.235135745 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.233694115 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.238095132 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.23617525 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.234247851 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.240354246 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.245840341 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.24744455 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.232130767 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.234098622 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.233896251 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.236702869 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.236819203 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.236568748 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.238200061 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.236285248 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.233906372 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.234455402 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.234325826 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.237272584 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.254576948 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.258860383 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.23528553 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.238848061 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.237762578 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.232676971 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.233052847 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.235549951 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.238209786 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.238740802 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.246504812 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.238659545 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.24199421 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257624087 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.23542723 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.242139685 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.241281774 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.245897097 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.242211881 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.235829362 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.239426049 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.242049091 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.258629004 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241474682 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.24921558 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.268144799 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.257864578 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.241903812 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.239121101 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.239309043 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.240497765 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.235135954 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.236881185 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.237009313 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.238735672 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.238094082 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.240489442 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.245776472 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.24079632 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.241723971 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.238958715 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.237269908 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.239769232 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.234313419 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.236582303 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.239563146 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.23902754 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.23914503 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.239146767 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.241655364 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.250491407 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.264784403 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.237604188 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.242010463 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.238075055 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.243043844 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.245118847 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256925461 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.251065208 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.241434108 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.242735231 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.242993776 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.241503112 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.239917815 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.242597793 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.240965451 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.239064309 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.23965037 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.25419872 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.265057046 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.245166651 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.243401273 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.243105124 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.242224459 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.241864003 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.240307152 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.242471581 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.242085057 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.24612758 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.244933348 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.242634415 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.243135847 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.245864469 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.252953875 seconds)
  done (took 732.263487413 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.241558075 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.244663133 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.237821248 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.242365749 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.239973277 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241871567 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.243382105 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.24035267 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.240652146 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.2411447 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.242080783 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.237979957 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.240516744 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.241501984 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.240814038 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.238602752 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239776482 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.24038211 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.240150103 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241056755 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.241142476 seconds)
  done (took 27.20676815 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.242996283 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.239930788 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.240582059 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.241108169 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.240259766 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.243571937 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.240355601 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241743407 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.243911306 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241857299 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.244107437 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244263922 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.236559024 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.24129221 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241436871 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241777268 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.240807434 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.241435552 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.244087735 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.244088024 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.241372833 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.24043443 seconds)
  done (took 28.468216437 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.242824064 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.24148831 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.242583423 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.237809204 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.242257587 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.24004035 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.240900274 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.246811602 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.24369148 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.244554678 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.243349766 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.244733667 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.252786545 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.252104516 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.247272109 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.242752262 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.245918585 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.242865932 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.242621757 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.240382356 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.247704596 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.258627846 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.239959691 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.241113858 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.243420341 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.242727496 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.245687363 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.242610716 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.244080507 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.248525732 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.24565835 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.244598831 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.245917979 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.246242808 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.245789087 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.248124077 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.242690973 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.24109466 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.240012892 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.255376594 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.269743224 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.246435128 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.250027119 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.264988834 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.245197501 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.248663235 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.250922627 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.244710364 seconds)
  done (took 60.960132442 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.83356793 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.856300305 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.854533468 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.858695794 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.85623275 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.860678333 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.861846998 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.85927953 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.84700098 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.848569776 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.851707969 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.841850374 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.851928809 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.85096445 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.849477613 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.84550353 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.850424267 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.84571087 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.854816902 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.854193642 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.851656759 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.853044793 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.851605543 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.843336532 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.850404415 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.858745537 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.852807189 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.85467162 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.850637205 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.850238535 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.855825918 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.860563158 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.85987647 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.849700686 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.85204422 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.850790022 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.858143905 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.852113626 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.859851193 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.849638776 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.852418235 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.857136592 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.858926134 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.865332325 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.87032167 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.855535857 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.856895093 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.857834975 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.860938542 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.859792459 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.864218007 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.85717695 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.860015933 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.85994887 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.860411028 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.867458453 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.863644817 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.864801766 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.860594936 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.864585497 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.865813171 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.868257605 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.863570559 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.867324191 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.863955265 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.861948801 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.862133849 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.86549303 seconds)
  done (took 127.391215324 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.24721961 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.247689464 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251196739 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250581613 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.24862903 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.249362712 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.249881668 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.249667094 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.248925753 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.250385151 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.249100757 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.251294001 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.248919162 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.248563518 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.24901547 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.249722524 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.251028918 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.249828724 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.251869375 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.248640986 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.248997747 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.249326894 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.250679802 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.250554995 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.251077131 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.248486778 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.250014721 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.252797974 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.250214877 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.249698721 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.251795752 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.250765559 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.251377985 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.251744854 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.250247998 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.250661983 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.250246597 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250600722 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.251415681 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.253265911 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.250761488 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.252482451 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.250334539 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.249983193 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.252196654 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.251143562 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.251369952 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.253835265 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.251504172 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.251458226 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.251104332 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.253646311 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.253517537 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.252943193 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.254678931 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.25497755 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252864045 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.253042036 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252713707 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.254383723 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.253661802 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.253612237 seconds)
  done (took 78.719047611 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.252907053 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.251729477 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.252727039 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.250770737 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.252233567 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.250842537 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.252033445 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.252464858 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.254726315 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.252332679 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254831006 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.25174237 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253165616 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255356179 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.251353821 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251925859 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.251250796 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.252958569 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.253495637 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.250959797 seconds)
  done (took 26.209313886 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.251057108 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.255538571 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.251749039 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.252177085 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.25556608 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.252590149 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.255110191 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254420234 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250810341 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25590266 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.256096152 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.253805477 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253796349 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.252614338 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.254326169 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.253265639 seconds)
  done (took 21.218294882 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.253436751 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.256811269 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.255313935 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.256559228 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.253827136 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.252675712 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.256871898 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.253052361 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.252068901 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.257001145 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.256820604 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.25644972 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.255946828 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.256720468 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.254666203 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.256784047 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.252556816 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.25460057 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.25738545 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.254691181 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.256939549 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.252924266 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.254284357 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.255770808 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.255360799 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.256540525 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.253873559 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.254102369 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.254953091 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.256602936 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.254628683 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.257065362 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.255103793 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.256524167 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.257603841 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.254914682 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.259101084 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.258004062 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.257496286 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.258134057 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.259918992 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.255183577 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.257885968 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.259434192 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.258318425 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.25848786 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.257830531 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.256059181 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.253392134 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.258949921 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.257750967 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.25764144 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.260404186 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.259779647 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.2604703 seconds)
  done (took 70.259778178 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.263740376 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.26165484 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.260201256 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.259103382 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.260578954 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.255733176 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.261053942 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.259654961 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.257075998 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.2613599 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.255000187 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.259989663 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.256466642 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.259103374 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.256869508 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.258411968 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.257735291 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.257483212 seconds)
  done (took 23.827099778 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.255975627 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.257203878 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.260486756 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.257850299 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.256710143 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.261025418 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.257826975 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.260486452 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260293533 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.258541963 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256411229 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.262525396 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260998586 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.260517805 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.259600929 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259572785 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.261162447 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.26273448 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.25873895 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.259847517 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.26271445 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.262524005 seconds)
  done (took 28.879634975 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.26087526 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.262424498 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.261322828 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.278523836 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.28519328 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.26190774 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.26187047 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.25973053 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.284293193 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.32084925 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.314336046 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.284278885 seconds)
  done (took 16.504431712 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258540874 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262195684 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.259377784 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262680629 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262596852 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25879366 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258435912 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260578067 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264295009 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260661529 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261769988 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263155331 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26469849 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259818844 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262919051 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263267883 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262786898 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259580843 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261187628 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265040152 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263220792 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262894101 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261392863 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261000129 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261907865 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260995722 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264081452 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261801912 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263459942 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264994841 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264771137 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262719598 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263721797 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263439711 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263461422 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264264868 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262313852 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265698775 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264121999 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260997524 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.265112971 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264145957 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264246314 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262543151 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264113753 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260913867 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263134282 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261664567 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261943837 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266877216 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266336346 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261968081 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266121622 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26690261 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267635562 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262699781 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262716696 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26339102 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266105057 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262287477 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263004303 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265656765 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263665255 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264716419 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26620525 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264807569 seconds)
  done (took 84.532078493 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264685746 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.261689405 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26450189 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263694158 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263429098 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263935966 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263073908 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26469326 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264482122 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264258793 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267096903 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264919935 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262726741 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264338765 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264593841 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263890014 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264716837 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264937878 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263939975 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268211116 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264524031 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265209442 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264923413 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264472267 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265971042 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267327257 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264410522 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265456895 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266311672 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265088892 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264727401 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26621937 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266241343 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.265274858 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266337102 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266367593 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26617888 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265719492 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26686886 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269679685 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267594563 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267730177 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265399983 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26498344 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26757729 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26661981 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267437445 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266614561 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267065834 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268892405 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266621536 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267374072 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267269591 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266147911 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267395374 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26648934 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266921953 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26772959 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267672114 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271223753 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27020918 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267067261 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270946244 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267794204 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267035538 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268712044 seconds)
  done (took 84.735115706 seconds)
done (took 1754.532755519 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.435904081 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.387100297 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.271016129 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.279589803 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.269730723 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.29274974 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.285253219 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.268973492 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.269894754 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.269017153 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.269026284 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.45714134 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.263953138 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.269340084 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.270904244 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.366646384 seconds)
  done (took 26.103062771 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.298903497 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.274995816 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.388922075 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.292462785 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.298579912 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.461059232 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.334091119 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.272893077 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.450825344 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.321780217 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.269869827 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.297852441 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.275057914 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.275437439 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.292063478 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.461109088 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.534756186 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.27855586 seconds)
  done (took 28.255116419 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.739533527 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.274877289 seconds)
  done (took 5.19052339 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.294449323 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.273027478 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.275709624 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.272826997 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.265326074 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.284339153 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.273630549 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.2779101 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.265898642 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.40829733 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.281591167 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.286557271 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.29579537 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.275511109 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.273480961 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.315013576 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.433374408 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.275229891 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.272956718 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.281553584 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.274879576 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.386996053 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.323206883 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.279583554 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.403956569 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.269371823 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.28536509 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.284610948 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.416325122 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.276334678 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.277349691 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.275655604 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.277024733 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.213896944 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.772265807 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.27152899 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.302401481 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.287016476 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.27452167 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.434782023 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.279494849 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.284158724 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.270075101 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.775528623 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.450886976 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.402518827 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.294862171 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.283522694 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.279575351 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.344839244 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.283583111 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.281354581 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.321269145 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.113691816 seconds)
  done (took 82.324591974 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.286156025 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.269258358 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.453162106 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.294728947 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.269930122 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.269186498 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.270770726 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.565579784 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.301384873 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.272738248 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.601254399 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.84515054 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.28850377 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.315910893 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.11927994 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.33488149 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.273120246 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.287344835 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.272771387 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.273798102 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.833738004 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.280768668 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.272289746 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.462482769 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.312850478 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.798498166 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.275081255 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.291852553 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.278362884 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.274580475 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.806580514 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.299151501 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.329212016 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.276405583 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.557654333 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.665498985 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.624686068 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.279729772 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.307259272 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.28027658 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.284435151 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.783740153 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.653891673 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.275539186 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.275574662 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.800601761 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.27650892 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.28302618 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.283428321 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.527793815 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.275827506 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.275029242 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.292211113 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.281806106 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.27482819 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.344451936 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.344453978 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.799686558 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.276478172 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.275274201 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.295612786 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.274713785 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.274619073 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.27961222 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.278842674 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.642698829 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.417510019 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.282569199 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.641810412 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.797998557 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.292208976 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.873222819 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.29721398 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.311055933 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.491682712 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.2754595 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.277184737 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.808629998 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.280474822 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.276307122 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.625244272 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.279916434 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.614704821 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.299364578 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.277418505 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.84578962 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.281156705 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.352136003 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.280421355 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.284967214 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.276050438 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.277521759 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.560966945 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.328756184 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.276475213 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.277497273 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.277669036 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.276359664 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.276142501 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.277848061 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.865786457 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.295545399 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.2760954 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.27823582 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.27541492 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.275330243 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.279981559 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.277422531 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.546060427 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.277696277 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.285218488 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.279013331 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.278537522 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.290390852 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.460479022 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.277552739 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.592731013 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.282528446 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.276399718 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.279589737 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.280628965 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.281764125 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.278753995 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.282190026 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.17312823 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.585231973 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.299097478 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.295931147 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.279678988 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.281904683 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.290721741 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.283394602 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.333405225 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.280007704 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.050812897 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.298490126 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.301298442 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.279019371 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.29166006 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.292862786 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.283715984 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.28105633 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.570777535 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.557988163 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.428366361 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.281568839 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.278834228 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.053053824 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.345929906 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.462421437 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.304388855 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.281949045 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.533395809 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.521812601 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.284133862 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.280961427 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.281723502 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.544663959 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.286143909 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.604918159 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.835629035 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.29862063 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.281709634 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.052702312 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.988095673 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.287910897 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.281582525 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.614513609 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.299784275 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.277144048 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.278218916 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.284234533 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.28199663 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.303609209 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.286989897 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.283566606 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.279869211 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.326114644 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.473913854 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.298430105 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.289185755 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.801100952 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.290547081 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.284204537 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.291273753 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.282461977 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.282194176 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.34366321 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.284033338 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.302224977 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.284033807 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.286502915 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.85399617 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.281873437 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.291058078 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.474875789 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.97971439 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.299364864 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.285192267 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.300100134 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.184138613 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.82592157 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.298783659 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.60193788 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.28671801 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.321592311 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.283921581 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.31194246 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.830560163 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.292297657 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.299827997 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.948976361 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.301862648 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.837048348 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.285886378 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.284078029 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.902146453 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.30056788 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.288385207 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.28526891 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.285770843 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.581973714 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.285173067 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.301396142 seconds)
  done (took 486.747807749 seconds)
done (took 629.792913417 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.284502781 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.284442857 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.2760919 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.289185519 seconds)
  done (took 10.330067368 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.291436038 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.294623864 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.29131574 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.291669931 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.293157324 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.293752499 seconds)
  done (took 8.951018255 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.284968234 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.284409283 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.292595435 seconds)
  done (took 8.057226915 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.51266915 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.315280318 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.637201642 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.311751125 seconds)
  done (took 8.975094025 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.294150942 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.296920739 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.296025499 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.296962768 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.296729384 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.295628837 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.295866174 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.296032047 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.296429969 seconds)
  done (took 12.859451319 seconds)
done (took 50.365196736 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.272673565 seconds)
    (2/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.501506867 seconds)
    (3/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.177061068 seconds)
    (4/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.453091053 seconds)
    (5/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.518682109 seconds)
    (6/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.311379439 seconds)
    (7/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.516837935 seconds)
    (8/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.333091393 seconds)
    (9/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.937542851 seconds)
    (10/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.43853138 seconds)
    (11/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.339658781 seconds)
    (12/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.368262752 seconds)
    (13/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.383594703 seconds)
    (14/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.369252438 seconds)
    (15/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.322608913 seconds)
    (16/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.371368927 seconds)
    (17/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.500412229 seconds)
    (18/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.300293333 seconds)
    (19/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.303619781 seconds)
    (20/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.309946132 seconds)
    (21/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.306964629 seconds)
    (22/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.274923942 seconds)
    (23/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.314601948 seconds)
    (24/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.273914004 seconds)
    (25/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.30525188 seconds)
    (26/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.352638856 seconds)
    (27/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.031798394 seconds)
    (28/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.482036057 seconds)
    (29/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.945384374 seconds)
    (30/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.318017797 seconds)
    (31/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.336615863 seconds)
    (32/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.39789493 seconds)
    (33/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.634059919 seconds)
    (34/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.366331126 seconds)
    (35/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.315993622 seconds)
    (36/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.300764632 seconds)
    (37/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.310610905 seconds)
    (38/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.27626423 seconds)
    (39/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.135985019 seconds)
    (40/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.037599723 seconds)
    (41/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.321746437 seconds)
    (42/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.303633539 seconds)
    (43/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.329143357 seconds)
    (44/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.169104068 seconds)
    (45/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.359562387 seconds)
    (46/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.306672309 seconds)
    (47/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.330678003 seconds)
    (48/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.323372011 seconds)
    (49/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.467889566 seconds)
    (50/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.43139809 seconds)
    (51/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.992763467 seconds)
    (52/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.395457242 seconds)
    (53/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.275426354 seconds)
    (54/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.998790716 seconds)
    (55/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.946451563 seconds)
    (56/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.044167257 seconds)
    (57/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.392025443 seconds)
    (58/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.039335554 seconds)
    (59/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.327937179 seconds)
    (60/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.303409142 seconds)
    (61/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.292076468 seconds)
    (62/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.395977285 seconds)
    (63/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.304011376 seconds)
    (64/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.425980261 seconds)
    (65/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.294685208 seconds)
    (66/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.3254725 seconds)
    (67/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.304436298 seconds)
    (68/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.938703131 seconds)
    (69/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.342172576 seconds)
    (70/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.413932405 seconds)
    (71/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.313258504 seconds)
    (72/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.360042384 seconds)
    (73/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.455732258 seconds)
    (74/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.305503754 seconds)
    (75/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.427440124 seconds)
    (76/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.978414393 seconds)
    (77/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.296184066 seconds)
    (78/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.325639573 seconds)
    (79/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.952676324 seconds)
    (80/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.444871284 seconds)
    (81/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.501658041 seconds)
    (82/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.298552858 seconds)
    (83/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.653275115 seconds)
    (84/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.345694543 seconds)
    (85/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.049401175 seconds)
    (86/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.393884156 seconds)
    (87/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.34232325 seconds)
    (88/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.45130535 seconds)
    (89/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.401613844 seconds)
    (90/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.418262122 seconds)
    (91/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.520902381 seconds)
    (92/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.481344305 seconds)
    (93/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.305970983 seconds)
    (94/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.317791999 seconds)
    (95/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.374877713 seconds)
    (96/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.387577516 seconds)
    (97/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.282229576 seconds)
    (98/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.399589947 seconds)
    (99/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.32898544 seconds)
    (100/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.422268532 seconds)
    (101/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.321201038 seconds)
    (102/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.355537283 seconds)
    (103/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.48493942 seconds)
    (104/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.402849134 seconds)
    (105/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.344623554 seconds)
    (106/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.308661186 seconds)
    (107/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.395948505 seconds)
    (108/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.300152744 seconds)
    (109/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.446304289 seconds)
    (110/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.31851345 seconds)
    (111/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.300207932 seconds)
    (112/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.937641365 seconds)
    (113/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.380446768 seconds)
    (114/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.37456368 seconds)
    (115/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.290379382 seconds)
    (116/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.382987384 seconds)
    (117/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.401301324 seconds)
    (118/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.29983458 seconds)
    (119/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.316710394 seconds)
    (120/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.396423423 seconds)
    (121/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.362768211 seconds)
    (122/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.348317395 seconds)
    (123/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.305944096 seconds)
    (124/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.350229424 seconds)
    (125/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.398643915 seconds)
    (126/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.515744707 seconds)
    (127/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.306526582 seconds)
    (128/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.372681846 seconds)
    (129/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.330246808 seconds)
    (130/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.375423983 seconds)
    (131/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.426917325 seconds)
    (132/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.308589112 seconds)
    (133/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.956750952 seconds)
    (134/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.378887777 seconds)
    (135/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.281237857 seconds)
    (136/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.313386701 seconds)
    (137/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.296943016 seconds)
    (138/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.483006935 seconds)
    (139/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.424376863 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.36701739 seconds)
    (141/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.483990646 seconds)
    (142/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.530961847 seconds)
    (143/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.044746455 seconds)
    (144/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.341331167 seconds)
    (145/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.406906924 seconds)
    (146/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.48132227 seconds)
    (147/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.452143857 seconds)
    (148/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.373169819 seconds)
    (149/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.391414793 seconds)
    (150/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.320900936 seconds)
    (151/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.177388954 seconds)
    (152/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.32536424 seconds)
    (153/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.618624514 seconds)
    (154/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.312112701 seconds)
    (155/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.350696372 seconds)
    (156/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.28525374 seconds)
    (157/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.350494484 seconds)
    (158/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.340641441 seconds)
    (159/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.443900482 seconds)
    (160/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.330624033 seconds)
    (161/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.321577135 seconds)
    (162/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.372397509 seconds)
    (163/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.411297358 seconds)
    (164/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.993513375 seconds)
    (165/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.446715505 seconds)
    (166/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.302343411 seconds)
    (167/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.337337595 seconds)
    (168/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.34955358 seconds)
    (169/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.356638282 seconds)
    (170/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.407222801 seconds)
    (171/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.446095302 seconds)
    (172/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.310838893 seconds)
    (173/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.40695573 seconds)
    (174/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.360122703 seconds)
    (175/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.401161315 seconds)
    (176/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.048254032 seconds)
    (177/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.318107579 seconds)
    (178/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.167157079 seconds)
    (179/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.336823541 seconds)
    (180/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.324291101 seconds)
    (181/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.350807871 seconds)
    (182/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.315253831 seconds)
    (183/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.35114871 seconds)
    (184/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.481265131 seconds)
    (185/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.331578525 seconds)
    (186/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.012533751 seconds)
    (187/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.348018153 seconds)
    (188/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.303077992 seconds)
    (189/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.484825998 seconds)
    (190/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.358394017 seconds)
    (191/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.390826266 seconds)
    (192/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.415530208 seconds)
    (193/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.415804 seconds)
    (194/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.286441868 seconds)
    (195/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.120329576 seconds)
    (196/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.396508815 seconds)
    (197/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.386957505 seconds)
    (198/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.400587368 seconds)
    (199/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.306726352 seconds)
    (200/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.460958117 seconds)
    (201/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.045138019 seconds)
    (202/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.338993368 seconds)
    (203/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.4513915 seconds)
    (204/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.502103196 seconds)
    (205/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.564855439 seconds)
    (206/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.451386364 seconds)
    (207/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.386238624 seconds)
    (208/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.522030424 seconds)
    (209/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.427853273 seconds)
    (210/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.327817327 seconds)
    (211/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.508246596 seconds)
    (212/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.316917196 seconds)
    (213/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.679503646 seconds)
    (214/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.392484013 seconds)
    (215/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.350229241 seconds)
    (216/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.384842918 seconds)
    (217/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.457023496 seconds)
    (218/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.36648148 seconds)
    (219/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.390499866 seconds)
    (220/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.288743093 seconds)
    (221/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.364198071 seconds)
    (222/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.475347913 seconds)
    (223/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.43565918 seconds)
    (224/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.358290851 seconds)
  done (took 360.748857579 seconds)
done (took 361.944868449 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.358908601 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.484484907 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.326443802 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.32890897 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.355237259 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.305910425 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.346167728 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.323546195 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.313616034 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.31410176 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.307251681 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.317906748 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.330623423 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.345932604 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.421263228 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.322115293 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.328209612 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.315394142 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.350660449 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.370032764 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.353737482 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.357192382 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.322954302 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.328861143 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.358890588 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.357877483 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.336329407 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.312046685 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.312499337 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.352109176 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.302172543 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.351190947 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.360546812 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.362676992 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.353008064 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.313137045 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.356443322 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.486687612 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.346264851 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.345685833 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.315765886 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.361644143 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.326885267 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.326045369 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.364349629 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.33336243 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.360687987 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.435864262 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.307064591 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.303644369 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.368518389 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.373796379 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.318542252 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.30385999 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.318339931 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.439299458 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.314339523 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.361915892 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.315602822 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.358257092 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.425721561 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363761797 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.375472833 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363902936 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.317917539 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.333949719 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.314341966 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.373386483 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.310690767 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.357472058 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.358404154 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.319792733 seconds)
done (took 106.167726863 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.378564474 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.314233886 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.427183447 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.311705485 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.417876655 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.414520689 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.312546957 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.313139632 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.31155317 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.692539226 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.312389727 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.313524158 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.313187424 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.30907065 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.400132205 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.31604038 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.314441358 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.666610671 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.315885316 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.380633719 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.313446469 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.315955013 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.315158067 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.706995753 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.314867468 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.312540321 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.387959096 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.317786318 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.662665165 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.311710524 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.312114478 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.669766976 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.408084933 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.333512392 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.327929277 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.324966734 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.419162886 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.334520357 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.39929931 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.403105815 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.426110624 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.356821678 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.309833429 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.31681592 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.318803776 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.318472819 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.314596594 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.344558459 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.314676937 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.316122457 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.657735955 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.328722908 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.314935031 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.315829509 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.318177607 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.345770582 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.313832809 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.31895424 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.409919961 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.320106424 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.382324367 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.694738298 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.706885804 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.320074608 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.313305494 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.317161766 seconds)
  done (took 103.356440047 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.386718316 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.39264145 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.43121376 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.336391932 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.371194071 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.437697848 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.333942112 seconds)
  done (took 10.907714853 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.325019309 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.32243841 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.364586764 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.369286724 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.319367843 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.529259936 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.319217659 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.329252816 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.316481052 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.396516151 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.318771343 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.322539858 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.32521291 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.314542846 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.367996812 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.330205669 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.434390344 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.321448897 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.320811528 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.4734306 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.318847073 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.329236622 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.392167973 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.332142635 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.320996271 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.326951212 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.276586193 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.319848983 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.319109196 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.322273149 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.321048544 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.42983659 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.327040216 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.320553488 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.316804036 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.479026681 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.320635393 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.31911422 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.322715653 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.320957771 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.320903907 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.321892355 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.323431148 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.317857656 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.321239955 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.345010843 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.324475788 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.318441432 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.321409687 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.32250529 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.397322189 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.325622902 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.319733222 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.322419647 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.399731898 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.32787641 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.321600905 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.319981518 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.322299985 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.322140698 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.475205347 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.371316453 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.324323975 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.371341798 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.326318626 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.326356633 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.32225865 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.32461912 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.415451391 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.322156745 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.369321398 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.320630039 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.547732832 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.348555608 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.326355377 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.322743463 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.32614983 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.321788728 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.318189789 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.328849683 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.321433676 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.322285947 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.330713567 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.32257811 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.322364013 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.510103789 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.480160054 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.321079815 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.336982977 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.331316095 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.324640113 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.399022199 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.324201516 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.324495231 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.378032877 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.440196002 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.404457139 seconds)
  done (took 136.998456441 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.332581155 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.332395226 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.328394661 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.34907236 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.329489964 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.328497083 seconds)
  done (took 9.223571394 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.329929268 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.328417364 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.32690409 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.327633272 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.323501861 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.324798672 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.324332673 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.32618221 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.329656369 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.327451701 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.325916645 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.327332358 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.330902141 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.328053364 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.329002373 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.329220726 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.326308326 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.32581511 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.3295274 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.328400278 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.326171038 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.324530979 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.326376416 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.329501043 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.330905936 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.326867351 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.335187161 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.328120951 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.327113022 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.332961056 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.348013457 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.327415304 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.330277381 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.333314752 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.33168812 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.331967835 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.33345545 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.328442666 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.325955364 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.327357921 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.328300981 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.327526936 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.329570317 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.3292291 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.331149048 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.334689914 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.332256869 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.337202214 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.330912436 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.331014334 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.331078127 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.328116825 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.32766428 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.331272125 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.332584446 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.354032548 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.332874255 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.331749312 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.328157796 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.331525252 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.329304004 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.32806003 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.330913551 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.33538585 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.325695901 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.332158587 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.332749202 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.335387337 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.330149856 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.332386498 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.329971093 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.327890639 seconds)
  done (took 97.995725033 seconds)
done (took 359.69294646 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.188339066 seconds)
  done (took 4.4149991 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.425356013 seconds)
  done (took 3.656840598 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.139115106 seconds)
  done (took 23.374529277 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.347325337 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.395883934 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.322924502 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.322929989 seconds)
  done (took 10.617763777 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.634274751 seconds)
  done (took 3.862252508 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.322282149 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.324483882 seconds)
  done (took 5.87794436 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.638404202 seconds)
  done (took 3.867521133 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.748548096 seconds)
  done (took 3.98473373 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.346694652 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.336438942 seconds)
  done (took 5.922089477 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.312873932 seconds)
  done (took 3.542825002 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.684242361 seconds)
  done (took 17.913388676 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.333240373 seconds)
  done (took 3.569337792 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.350543527 seconds)
  done (took 3.580040582 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.06109652 seconds)
  done (took 6.290930929 seconds)
done (took 101.700652642 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.322028249 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.332119638 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.331302725 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.334084958 seconds)
  done (took 10.550811506 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.386351936 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.387055926 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.386178885 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.386849147 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.384433136 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.385642106 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.361543795 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.360542645 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.385128264 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.386104847 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.384938018 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.38631582 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.388186085 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.357489635 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.382429894 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.393170315 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.386962026 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.387101814 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.36073617 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.387273612 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.336451315 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.385303923 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.387154603 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.335633788 seconds)
  done (took 34.300654137 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.853189535 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.406558232 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.490486151 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.391248839 seconds)
  done (took 7.374233042 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.412210633 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.411073707 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.427490894 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.464076573 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.475153023 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.440945765 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.361207382 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.355242896 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.340593111 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.413331697 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.46348092 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.404479684 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.494022531 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.332920031 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.542188607 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.334649251 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.335863115 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.413234417 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.46309518 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.477470543 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.337277228 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.415406025 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.414343714 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.406575404 seconds)
  done (took 35.169169854 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.343686533 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.349128059 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.333158963 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.350852108 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.333364479 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.334732381 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.336773499 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.34243837 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.334534049 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.333815568 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.333812745 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.34917738 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.338047894 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.336746707 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.345047583 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.335428495 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.34060619 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.339978691 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.337862642 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.343364386 seconds)
  done (took 28.028315181 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.329823476 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.327596784 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.681514063 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.587345938 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.332085455 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.329324204 seconds)
  done (took 13.821281262 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.411166515 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.571013428 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.336900839 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.718139592 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.811298816 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.342705549 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.338465718 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.594640919 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.943048392 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.916953492 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.405888938 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.411225538 seconds)
  done (took 20.035795228 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.332768878 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.335429252 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.335158749 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.354182954 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.394225119 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.357690381 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.342604371 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.330029294 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.40002455 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.413880099 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.356454243 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.396966661 seconds)
  done (took 21.58485035 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429357098 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.331970574 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.347744303 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356661061 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332770553 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.180966114 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.360895051 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.057842708 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.358782723 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608845897 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33818015 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438155339 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.594218544 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337444779 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.341037385 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.320269217 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.593301199 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847820769 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337268427 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334879956 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376064532 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.33722215 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.339856241 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.571841171 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.344410953 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334668734 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.597365988 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.336504141 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63981746 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.356395593 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346012333 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337544242 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610245136 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022197838 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460904 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.562947382 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352604504 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.337550546 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.348210754 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.340556488 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357502042 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.344562837 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348221544 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336805111 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.334649865 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352105787 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076356884 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.364011624 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.335133182 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.335646682 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620557278 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440900169 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.340459197 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.337139396 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423751404 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337703112 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.340639032 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431868941 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920745036 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342209781 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356689542 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.343487168 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357032583 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339028196 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980867271 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.344037509 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.342059174 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.344336288 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338963919 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.341345047 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361945237 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340354906 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.364472945 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340369281 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135585752 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.350852809 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348224932 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915129537 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3438097 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.346120999 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.573382498 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337653316 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339764612 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.337705678 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.339802302 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081075757 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34919846 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.325471548 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.364307287 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.068956864 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.589508266 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369531556 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373233549 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.564493555 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.325979577 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341765802 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.341614124 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347430652 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362367431 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.071277554 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361964756 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.345286288 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601010211 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.552468551 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351602584 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.338483542 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866191828 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365316518 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.36318754 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.347805774 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.575856248 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.965214655 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.35905974 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342515775 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365439318 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.342802397 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151065173 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348909342 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.45035325 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.348163353 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641235582 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.204062351 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350390074 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410753067 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347392722 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.342833251 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346163161 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348351906 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.343691686 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.563582946 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376510265 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.360559841 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.345816334 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34377111 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.34242145 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356078692 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.35180899 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.56837699 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34505566 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64400045 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342952012 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345252665 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343489525 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.567130238 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.349482517 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.687772912 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607159597 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349976651 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.354805676 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.362590349 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363962861 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45046081 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365870225 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.349731679 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.607076047 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.349503005 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.35033398 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346152109 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.351379087 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35008361 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.352592843 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364455493 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962966422 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318159282 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352691284 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.2400644 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.360268528 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414384671 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.350738561 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.578267498 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.350112132 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385441306 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.35399833 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.355968141 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579726627 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.358952452 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.348792921 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429541527 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.840566815 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.98661448 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361487293 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.346478236 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.343608913 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.345135772 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345345151 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346990601 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.346336414 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.57822333 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.367532368 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.36290065 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.970824322 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350571918 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.349702848 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.359565974 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.360992369 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.354301623 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348659271 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.343289986 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377806632 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356485171 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.366533026 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49317438 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.364258275 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.346870947 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.866704787 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.354922077 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.347297002 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.348055519 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384888105 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.352620922 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17732444 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.612893292 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352790038 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652257918 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.356628825 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.372085978 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.346809931 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355276097 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357729576 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.367045487 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359402145 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.362200107 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.354052165 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356986286 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929327477 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.108017422 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914572937 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3507487 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.361266376 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.356430494 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.122942147 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377238627 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349699989 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.59831372 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.101003987 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371501335 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850171385 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.375434943 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154899721 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634128203 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.592293751 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353370779 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.362711858 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642780912 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.570456661 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387066815 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.355873208 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357615515 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.338459374 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937085292 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375506892 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443449956 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094110237 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380884556 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362409591 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.362405506 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.355215419 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790880239 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.376901743 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351134585 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.356263775 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.363509147 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19355347 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.358595905 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352652822 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991807637 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.356530945 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.88308684 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378174223 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.586566006 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.37115492 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.358063891 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.350770053 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.363690418 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.615773499 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637792668 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360782113 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.352661673 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928597462 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.226830385 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.358628129 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354501107 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161437705 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360776555 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.685348932 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.361320097 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.355408633 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359755304 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.355270208 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353033492 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.351247148 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.361663879 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325452674 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874663303 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.372954404 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363401027 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369769951 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356576877 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.613119895 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.369746767 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.976440207 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.587507178 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364546435 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377951251 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.358936406 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368985437 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.347206551 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.356449965 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.356708206 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438718469 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.581868345 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.35780341 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.34522193 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.402147599 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.56920876 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.357093911 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.370155622 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.625209473 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.36075958 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.379411935 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113035168 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389328757 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.35736208 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364959473 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.364132535 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378381448 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428218413 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.590892424 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.376566748 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.369798907 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797224424 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396373471 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365958936 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.373233561 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45506906 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372320531 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.377689168 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.134647997 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.983101088 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173568701 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.99201565 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642298081 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.365383878 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36643336 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360309824 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521691433 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360934696 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63328045 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35921455 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.360862956 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382039899 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376173824 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378509101 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576408177 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637197121 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359140705 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357721893 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364993116 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.359929486 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.370512542 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.573726604 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881942276 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945419884 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361639427 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.362060734 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.107202203 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655381078 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363643976 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360801882 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361284463 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.384772858 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.373450893 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.372494414 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361696025 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511590906 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644631819 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069025857 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.397933029 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.390710408 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.878977267 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367211797 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.624655525 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362226869 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.615124983 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.994589766 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.105542483 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.629658693 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433897599 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596808906 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.368150653 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523067213 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.373718159 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.362930092 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362295929 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362807305 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.359915236 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.372211124 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991510555 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.631749236 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.367576391 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.374059982 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391792624 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.37337094 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.587315348 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147906842 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.596446024 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.374745823 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.370404486 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.364196205 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.997682441 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65253481 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370893859 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.368893578 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.624963501 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.370712227 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388757783 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.882099304 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.362174781 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947060166 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.341678984 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385808981 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371628235 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.1205004 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997263267 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.363506265 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908431833 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367305885 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369474785 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643882416 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.369303784 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.370870127 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648496373 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.369907859 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.373515295 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605069166 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.995205799 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17921778 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.390382206 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380081115 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.373735663 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36690838 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396000623 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366189269 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377903809 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.818356554 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394668901 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367904619 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379850381 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.367498558 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376532117 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.372045943 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366346072 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.372404438 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.394720154 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.367559592 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.374368072 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470551978 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95066303 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388405771 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.036784211 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.695039881 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.626011348 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.367923465 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.360199428 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.372137853 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366276633 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367184221 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368584783 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.368892157 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952332201 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.374990263 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.378625823 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.373136171 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.366797196 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.582610109 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.36994585 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.630933072 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376293025 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385750362 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.354662087 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36768067 seconds)
  done (took 968.911487187 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.407192548 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.391215563 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.410783526 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.401667426 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.424872116 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.480843045 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.448031802 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.384681332 seconds)
  done (took 20.620542634 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.384467088 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.378393334 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.381230799 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.380061183 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.375279695 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.865404887 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.396544178 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.379746094 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.385714294 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.384686942 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.37878481 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.35585675 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.397412411 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.379294938 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.372370537 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.381255915 seconds)
  done (took 32.855268788 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.483095169 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.5592098 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.589476372 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.380823072 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.411543146 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.371906718 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.681062835 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.390738495 seconds)
  done (took 27.141246134 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.382994442 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.382939274 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.384970451 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.379488923 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.385120534 seconds)
  done (took 8.188827906 seconds)
done (took 1229.809526164 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.371744878 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.373639129 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.374070831 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.3745134 seconds)
  done (took 6.765732199 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.355377097 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.355551888 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.354587842 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.369064246 seconds)
  done (took 9.704214703 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.117582144 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.065453055 seconds)
  done (took 5.452725881 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.876916488 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.878232085 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.875533701 seconds)
  done (took 6.904004806 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.687405691 seconds)
  done (took 2.95960334 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.294901486 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.371419891 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.059166425 seconds)
  done (took 7.997986046 seconds)
done (took 41.051485888 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.372326878 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.621156213 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.525542786 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.37975408 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.535917946 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.527401805 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.150043109 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.380904025 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.382372367 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.378449605 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.370999966 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.535687089 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.204718094 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.623046806 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.222015985 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.714686622 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.537493583 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.384126762 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.385741976 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.38535858 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.15310751 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.378236868 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.377533869 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.381484916 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.537903868 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.520697222 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.377366224 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.714618932 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.372713898 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.379123522 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.518683147 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.374106823 seconds)
  done (took 82.975876914 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.384193718 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.373865862 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.392824941 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.391475428 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.374692269 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.376902173 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.396573586 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.386863431 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.375217511 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.374415437 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.374499795 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.373328806 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.375262059 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.39572638 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.3765053 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.394041251 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.374779499 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.392962906 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.397314908 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.37560505 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.39936674 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.387090641 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.375860899 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.393690698 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.405133418 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.376036816 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.394098301 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.375072414 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.408770623 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.377432159 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.378114918 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.39326359 seconds)
  done (took 77.596911086 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.375948474 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.393339165 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.374842756 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.386272028 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.375500905 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.394382784 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.381038776 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.376892961 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.376708792 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.377965844 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.382332084 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.37650683 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.397120019 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.384970613 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.378653116 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.376526255 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.400418434 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.376933266 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.395669885 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.392004433 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.379579892 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.378834224 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.37703836 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.378361601 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.380312894 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.384535539 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.379535854 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.379807913 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.378784489 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.381588882 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.385185019 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.378698004 seconds)
  done (took 77.513846036 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.659255913 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.385927047 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.387700862 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.378865133 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.388031886 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.3859021 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.380910805 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.662424461 seconds)
  done (took 14.907890208 seconds)
done (took 254.267077845 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.378907704 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.613859706 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.407816549 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.380634745 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.411235168 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.409118622 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.617277597 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.4252162 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.61283523 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.400175881 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.407248398 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.380876678 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.667133015 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.546744321 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.341240117 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.380612916 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.735168445 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.414275073 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.658869893 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.670805438 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.410651764 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.386330001 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.311119625 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 1.755027452 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.387106659 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.472189007 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.497204757 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.616128761 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.554655121 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.477703936 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.615782468 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.384985562 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.393501753 seconds)
  done (took 62.401583492 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.388143906 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.502267197 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.390397756 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.390621715 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.505258364 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.391605943 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.389704742 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.3890936 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.389398774 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.39146544 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.390004808 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.391062481 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.389560159 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.432551493 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.509109507 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.407017091 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.388856476 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.502284913 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.388518288 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.381906143 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.433016876 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.393218019 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.391297558 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.434261917 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.390474834 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.39252715 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.50676748 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.389277336 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.384149947 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.501659259 seconds)
  done (took 43.807559212 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.390127568 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.64265972 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.836165801 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.398125682 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.389286193 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.396029388 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.474044928 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.394789061 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.39590749 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.395566381 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.549835959 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.393902775 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.42859897 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.862360102 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.394296679 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.393126113 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.39405649 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.392564545 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.652228896 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.400438662 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.495552592 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.394941451 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.476485091 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.403878677 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.414452474 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.393701739 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.398976615 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.965279776 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.395891406 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.549836852 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.247233602 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.477024208 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.94355741 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.842110258 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.234605113 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.401238276 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.39686105 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.555702692 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.397373597 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.396387001 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.47763937 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.396529775 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.843299324 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.058234171 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.412247985 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.394286055 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.990063142 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.553429516 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.656101532 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.404123376 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.870638124 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.398889949 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.396846001 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.395543521 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.654547374 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.397384709 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.394212211 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.012054797 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.415446296 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.478885981 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.396541354 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.39650342 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.651051898 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.39616507 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.646760972 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.399739864 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.403236244 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.418958595 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.85253946 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.402015409 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.070828246 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.414378534 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.395192718 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.553011154 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.648479014 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.025679534 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.417150031 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.658045871 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.955117169 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.475841373 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.401990158 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.960751144 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.478474016 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.401941655 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.398792885 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.400153458 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.398019481 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.499870586 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.475860167 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.006758214 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.067321 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.034252225 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.500083061 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.404874988 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.400968386 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.016176043 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.415360814 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.400723909 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.84393339 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.074402005 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.4167058 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.40585532 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.08549124 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.419251548 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.481653346 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.405876456 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.855661465 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.40299915 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.449307598 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.399163144 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.406898503 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.42119456 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.482481388 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.402448734 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.3989545 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.061658957 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.578657828 seconds)
  done (took 184.475763898 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.407722997 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.394500118 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.394159284 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.390766383 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.392718005 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.4042113 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.394454615 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.394132442 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.398903209 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.391065966 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.393195073 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.405102696 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.400061364 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.393281475 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.408989094 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.392321664 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.391749758 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.393763043 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.414486085 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.392204329 seconds)
  done (took 45.241253447 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.40015682 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.99103021 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.538606829 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.426484228 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.399562237 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.402289089 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.458499546 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.400814897 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.399537026 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.719440698 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.585692918 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.417729836 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.397720312 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.398583286 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.540865222 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.413849617 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.718460167 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.993208779 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.403020204 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.016975773 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.397359138 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.402558506 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.4016234 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.025453826 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.739015362 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.487406921 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.46450927 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.02799926 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.408529438 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.398961961 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.995278784 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.408206306 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.403356501 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.994317287 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.420410929 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.407014775 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.400999161 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.463461981 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.465724965 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.725942218 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.073643605 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.48225591 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.413359059 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.768474882 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.411485313 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.390358698 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.01691953 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.429131703 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.392436107 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.404958283 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.409307371 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.561454726 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.406999605 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.559710004 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.400584841 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.40698177 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.014882945 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.565937381 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.544816624 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.617153848 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.42446627 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.484780474 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.405320852 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.00120449 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.422436947 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.4065896 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.406796566 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.593374483 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.02029282 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.488414175 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.7241517 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.723609064 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.408306383 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.465655668 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.421386239 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.795884666 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.466700518 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.843066001 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.733207751 seconds)
  done (took 125.262781744 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.658946028 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.5183732 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.569462125 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.033804842 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.401963137 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.534397208 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.518958755 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.674465459 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.399356689 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.495326994 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.62476731 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.482068137 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.147430488 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.479898172 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.503484897 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.559245179 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.557104213 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.403746368 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.087948681 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.601103487 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.444973579 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.53066826 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.99675592 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.59272724 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.409156874 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.951559951 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.370554556 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.094640768 seconds)
  done (took 52.943019482 seconds)
done (took 515.406815996 seconds)
SAVING RESULT...
DONE!
