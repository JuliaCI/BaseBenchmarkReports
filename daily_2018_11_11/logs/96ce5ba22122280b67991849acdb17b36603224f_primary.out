cset: moving following pidspec: 17897
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.299680487 seconds)
loading group "string"... done (took 0.559285802 seconds)
loading group "linalg"... done (took 7.617842815 seconds)
loading group "parallel"... done (took 0.171980121 seconds)
loading group "find"... done (took 1.190750854 seconds)
loading group "tuple"... done (took 2.110676637 seconds)
loading group "dates"... done (took 1.337700846 seconds)
loading group "micro"... done (took 0.248391535 seconds)
loading group "io"... done (took 0.701715738 seconds)
loading group "scalar"... done (took 40.973138229 seconds)
loading group "sparse"... done (took 12.752000537 seconds)
loading group "broadcast"... done (took 1.136066538 seconds)
loading group "union"... done (took 13.709673158 seconds)
loading group "simd"... done (took 4.78800699 seconds)
loading group "random"... done (took 9.679601751 seconds)
loading group "problem"... done (took 2.155552764 seconds)
loading group "array"... done (took 22.524916179 seconds)
loading group "misc"... done (took 2.115517166 seconds)
loading group "sort"... done (took 3.450613926 seconds)
loading group "collection"... done (took 19.40583657 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.579971126 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142261998 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149504663 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147271869 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.18858867 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.15629625 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158193007 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098943028 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.948124498 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.174877896 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15463779 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.521125564 seconds)
done (took 5.142973561 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.249793348 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095428999 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103595908 seconds)
  done (took 0.866442724 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077560091 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.1454764 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094046416 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078699224 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095169701 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077974802 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094148324 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.080361616 seconds)
  done (took 1.339475804 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086393716 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097000116 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082359682 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096129932 seconds)
  done (took 1.034119653 seconds)
done (took 4.2480617 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.738397934 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.272270771 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204192698 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.464223668 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.195390095 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.215646128 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674553983 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.356661373 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252338113 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099878628 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.144002242 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.385835753 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136403896 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.679119644 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.09037195 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123225742 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176192306 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.450906566 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082723787 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110659052 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116466288 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141583774 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128524988 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092621235 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.1854816 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081517952 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194780637 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.10926757 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080016354 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.288872641 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201014369 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.684684438 seconds)
  done (took 10.867825465 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110432289 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13337151 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096846176 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137616226 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134159753 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099342804 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084419191 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096435004 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120483856 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174444084 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114383706 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136165454 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095605365 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082488353 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.11489797 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24462672 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119355022 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103970764 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100781405 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103216756 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121700436 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112300511 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.10899684 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093893309 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166105336 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220351618 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109643551 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124734333 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095432973 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111159367 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142958865 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.140815809 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093152701 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080728879 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172139396 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124233484 seconds)
  done (took 5.112521552 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.07205464 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188603904 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121004961 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168442636 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.154722525 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080388259 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142670302 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095232553 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114140515 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255371231 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.172640513 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176685664 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.145065439 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10262203 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09884747 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083882206 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096609535 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.623621845 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.162650589 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.135824452 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.098954687 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106593589 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.10175852 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.371663249 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.088223434 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.098581821 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084050692 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.084097963 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165331738 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083766618 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.163188115 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.102555839 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100832526 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132422305 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.198711519 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12922967 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119439781 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098471901 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.07923731 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.195733266 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088203323 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.093932853 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080293603 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121215138 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134714759 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118105165 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100321429 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.09858323 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.208634614 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096192159 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098209521 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.960094785 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181739041 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.104874242 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097878245 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.325552282 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.104134773 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098402841 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077565517 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.302181714 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.181346475 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.09776676 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079621446 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09641303 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081414784 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.401297314 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080915186 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.042464093 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081619919 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107470791 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083104123 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096417271 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103545143 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087614812 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093712831 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.099363371 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.096517664 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080764926 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096947294 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077891256 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.100747523 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.106177332 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087755324 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097382936 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147790581 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.092542153 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.099348855 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127960783 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.09852948 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078606413 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130553774 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098287643 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.079998031 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132448755 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097585335 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.091676468 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100037659 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142905704 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096696194 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.165296919 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081478412 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127812099 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100182489 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113565875 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111795715 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099298394 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084303339 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096251831 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077950626 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164996772 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081432851 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099571676 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081087838 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.094083487 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109677343 seconds)
  done (took 22.903693575 seconds)
done (took 40.627190815 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.31702731 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103343947 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102299616 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101928875 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099409586 seconds)
  done (took 1.476639076 seconds)
done (took 2.201929239 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.285907203 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172635711 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094820119 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166686993 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093126165 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.172266995 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159223552 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.112056725 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.200474805 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093434828 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162632762 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093233884 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076553125 seconds)
  done (took 2.631240123 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094544478 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114576866 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082753648 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110321651 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07687364 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110910444 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09286953 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115500597 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109045051 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086591128 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093537044 seconds)
  done (took 1.811300088 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09401961 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112348998 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08214943 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10970028 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076113581 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110033588 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093077309 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115318453 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109403025 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084801322 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093837564 seconds)
  done (took 1.804642318 seconds)
done (took 6.960560942 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090610259 seconds)
  done (took 0.810014936 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.920914961 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.874271081 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112896293 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148667256 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.299388208 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.190369206 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.474931492 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.127379914 seconds)
  done (took 11.072477092 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.143928572 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08473368 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102724453 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.08396637 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.103906235 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082351971 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099719688 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101886695 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085096152 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102873056 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083643405 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099387994 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098474944 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.082999918 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.09805102 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085326282 seconds)
  done (took 2.323679333 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.11919231 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118468777 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105334292 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107764336 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086538732 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104716367 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106021512 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088794463 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100999899 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10305349 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089799465 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105585981 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103185621 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080516552 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106992075 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107402156 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085551071 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106364712 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105715787 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089495491 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105894059 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095132324 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086562911 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106355143 seconds)
  done (took 3.244691204 seconds)
done (took 18.174621622 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158360622 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107749837 seconds)
  done (took 0.99337119 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095130775 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113103643 seconds)
  done (took 0.938477374 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097163461 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095924662 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.121324726 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109195814 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080338022 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096030951 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117633054 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.0806587 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096330299 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079911828 seconds)
  done (took 1.708171731 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081553968 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110007092 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100981707 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095851273 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104807571 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093808837 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086777763 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098194888 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109681481 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077169779 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10207388 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113988796 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085795667 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116915778 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103922646 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083261085 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101827184 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09832642 seconds)
  done (took 2.499122958 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078238573 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096710816 seconds)
  done (took 0.909105664 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081513842 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093869407 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080962776 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097373741 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09321937 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076599829 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094961234 seconds)
  done (took 1.351864528 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.487030313 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135771271 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.253228231 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084001621 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119227115 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302190182 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097633351 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084921351 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102951405 seconds)
  done (took 2.458080392 seconds)
done (took 11.589467048 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092622373 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117869574 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113769448 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.461963858 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107357969 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097811305 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147766276 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.244624894 seconds)
done (took 2.125224324 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.143692831 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.32620291 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.113915457 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068133747 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.098053117 seconds)
  done (took 1.348786175 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080531482 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10280195 seconds)
  done (took 0.921995812 seconds)
done (took 3.158413395 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080375424 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.131810779 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077632316 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.099795878 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079569869 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.097217438 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079608706 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.095400615 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077597577 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.095969827 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.097439173 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.079345481 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.097209315 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080349368 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093421399 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077354488 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096089714 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078207713 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.094457755 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077608217 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093917001 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080458413 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095257973 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078830505 seconds)
  done (took 2.909154203 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.09959399 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09951196 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103171483 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085110523 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101794245 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086161716 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102243617 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09800174 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08595565 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100177152 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100945656 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084171783 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100237075 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084717164 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099643702 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100675005 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086629309 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097718436 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083556703 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10040171 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102048964 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079698832 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101636401 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102344901 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083924777 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100974969 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082597448 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098139709 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102608327 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083597847 seconds)
  done (took 3.580710828 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084929237 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095849164 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079895019 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102747394 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079956207 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099441567 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079054879 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097407542 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081151785 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.09734325 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081921156 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097300944 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.080244686 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098720515 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080388062 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101646936 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.11002914 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079409509 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097753741 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.081059008 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100724904 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080250665 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097923422 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07989436 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097759765 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079683765 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097811536 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079801739 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097549856 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079438836 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100215308 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084152237 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097617462 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086977518 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100978814 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.079598153 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.101626537 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079090596 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096582516 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096231359 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.0793754 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096402603 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079090089 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104561692 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079986068 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.100075815 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080150674 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099383522 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080403512 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100999219 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079630706 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096692229 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082247596 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09848167 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.083690277 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.097177903 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097579517 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.080341485 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098212442 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079776043 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.09680531 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080661264 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099754816 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080912913 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113612578 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086489197 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097023511 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.0818043 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096853378 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081348206 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098244246 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108991263 seconds)
  done (took 7.283682296 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083567571 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106760419 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080599327 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09782186 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076218588 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095468449 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099529139 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077833503 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097049745 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084121891 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095044732 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079906668 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096218088 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107895087 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078675473 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09680281 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08572182 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093064635 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078456966 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098840639 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078425455 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098914351 seconds)
  done (took 2.738029959 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.210361674 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104673881 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142768622 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108631627 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082115156 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107055141 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101702738 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087086636 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102191056 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08306712 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100400342 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102307465 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083131399 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100515027 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101362189 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084537279 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101555636 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085266931 seconds)
  done (took 2.643833446 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092925084 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098048223 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103127583 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098735955 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098035492 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083173119 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104684028 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108281927 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083871989 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098825232 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090255948 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099733782 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100723809 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080235168 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102310834 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081731035 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102015721 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082089375 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107748858 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10377268 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10422218 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091858142 seconds)
  done (took 2.874237965 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09775577 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101777544 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118807498 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084148246 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095431323 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079622344 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105578041 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081735918 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.10743153 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100932444 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081866513 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098898919 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088358801 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098662387 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105742759 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082372743 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101575226 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081048566 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101549255 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076916632 seconds)
  done (took 2.649290898 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102878409 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.209984686 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100868349 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093136407 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10056367 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082400159 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108391877 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099715703 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083212082 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123777687 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099663413 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083571974 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109682773 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105712108 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100385419 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092584321 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108722371 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109137251 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083373719 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100022564 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125400599 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083390579 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.1090496 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09965694 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083103005 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10022846 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099877074 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089687996 seconds)
  done (took 3.64979933 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080920792 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10075422 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079512097 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.099167454 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079898915 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098860424 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080569901 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.099185466 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083112968 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098888602 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083565247 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100542906 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085905882 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101348997 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082649605 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100717938 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082138775 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098673764 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080589611 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098928118 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081682626 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100222679 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081666983 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096960214 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078689545 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099431982 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078506892 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097014247 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081244868 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095766378 seconds)
  done (took 3.470364951 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090799069 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105425583 seconds)
  done (took 0.958364552 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079369387 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115065056 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078957905 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103105827 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08725182 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099516245 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107488847 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086492699 seconds)
  done (took 1.519592103 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09617658 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111687368 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082912109 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112422168 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109474315 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.09504039 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.164916182 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100769492 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086998168 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097984806 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113696839 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080046108 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104576994 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082264515 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104831442 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087764786 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097307284 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088337861 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102517859 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097033591 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082364734 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109842128 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08469355 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.095970517 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082853692 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.108755425 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108676947 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083395298 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102933894 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107862571 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086924765 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093830631 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081377346 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101083275 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080166361 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.109853245 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111261093 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084422518 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.10857001 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083793229 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110954961 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095163157 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.08746372 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105153992 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091494266 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100064602 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082894946 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094731452 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097410735 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083715578 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095420989 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081963909 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093427215 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089178389 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103272809 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111953566 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081246434 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101212411 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085224972 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103226501 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088660908 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102228874 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085327778 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099991072 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106824106 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086680739 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108440986 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076892943 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.098008746 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.08093284 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109072547 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123158736 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090287134 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101323837 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084303805 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097438497 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103747971 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083085327 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107434805 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090273571 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.101053419 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107476363 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089561035 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099955821 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083874729 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108778572 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098544263 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085255104 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099502479 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097757971 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100268774 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081755796 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099086484 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109865988 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085027164 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100965743 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079878786 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107635646 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076876173 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103106199 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083159222 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100738481 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109018405 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087945004 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106309112 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107084412 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088840902 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099621 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084741086 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096908335 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083483525 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101731228 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.087893285 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.09336157 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103693988 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084043182 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100925577 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089421393 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097249335 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082472313 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106951575 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106932175 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080677702 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.099063097 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086782408 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.102868163 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088409816 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.110078605 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.101438275 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.07862795 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097859539 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.088772653 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10388325 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087671161 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.1067682 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103372961 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.07668987 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.10063323 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.085800903 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106520352 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.082806071 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.10034941 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104349605 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082696432 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100031384 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087322036 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102196856 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.082270976 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104652165 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083420749 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095063911 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105159171 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084540271 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099371768 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086576831 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103212715 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.084576863 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100839596 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099602264 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087697222 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102450908 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080946217 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099844869 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081760015 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110063887 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102545299 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077977945 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096604091 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089796582 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.09770744 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082330755 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099733233 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.084764004 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102339072 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.101816535 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083475695 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.104032742 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097929167 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108353929 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10452459 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089353664 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.113154106 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084830338 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.105183423 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.084837569 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104931332 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105172522 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09260473 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.109594345 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089753839 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105837161 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.08185395 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109032757 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110382142 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.08257815 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.099849604 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082925273 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.106449124 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106729135 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086387181 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101769924 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08099941 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100671041 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087405563 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.10194676 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100012713 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080824916 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.10455624 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081259788 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.108984566 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101150584 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092255593 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10660478 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079425043 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107305468 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083001609 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109141411 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.080512493 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.098380954 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101309963 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.085744971 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.103056586 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.087635963 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097458436 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092335696 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113339968 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.084867932 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.102732894 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.104336142 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093478442 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.105068574 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088071443 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.107749628 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.09115047 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116750562 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.1016659 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087116957 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.111979952 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.083487109 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095582273 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105823739 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081219249 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101637536 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.082807242 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099516121 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085716165 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111363784 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.10532095 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076846871 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.10560541 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.083720661 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.10296957 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080618308 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.110584865 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.08967188 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.106183867 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113487096 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088091798 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.106218116 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089883123 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.104201392 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.087198474 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.105821564 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107830777 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083550097 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103555652 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082304914 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103105879 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.08353876 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.102290435 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.08566037 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101849421 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100719759 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088984788 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101110037 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084142311 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.106059684 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086327251 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104850784 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085556709 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.104602383 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108235802 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086426355 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.105364488 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087728894 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.099697313 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093511908 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.103722253 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092696442 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102135734 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.099700697 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.08790888 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.105279677 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.089965806 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104632537 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.105397959 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085646477 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.104476651 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088433308 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113505127 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.08328838 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.113364354 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111207062 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086310805 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.108444077 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085176951 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.106158497 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.08543093 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.10688911 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.086343973 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.105341065 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.104212814 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.091222751 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.107905788 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.086122409 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106785528 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.087480917 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.105450034 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.087149336 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.099987462 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085164126 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.104133369 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.105567867 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09345437 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.106306245 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089489322 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.103681542 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087016395 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.103621905 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.081830676 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.113558711 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113847186 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085486497 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110202407 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.102663258 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085475575 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112444664 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078913598 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102335406 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.08373 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.102611359 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112470709 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087002845 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.113244466 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.0848248 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.104574076 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.083049683 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.106606162 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.084474082 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099734519 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.083957163 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108320797 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.107222361 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084609965 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.105299703 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089404269 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10609925 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101346797 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.104229845 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.106396719 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.085798955 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.101540193 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084525388 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.103105536 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088582375 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.105231872 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.082185166 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100711727 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.083242092 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.104570859 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.08605396 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102941221 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.104978821 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091201679 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103703913 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.08692947 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105384266 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077359339 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.10394758 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101095101 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083178428 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.10150319 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087560084 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10588313 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085204856 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.109730328 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101267347 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08371385 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102793211 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081072156 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101728192 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082930872 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101728418 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082568256 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105251667 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108798556 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081596986 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.1036627 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083025911 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102481922 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.087714041 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102862616 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085926725 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109644194 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105825458 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084492273 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.108245736 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086698521 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105255814 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102798515 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084857585 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10776401 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083160055 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.110684178 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083008913 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.10286394 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102749411 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08113948 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10142846 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.082693332 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100942227 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.08813541 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102710767 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083080346 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101313879 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081678664 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103289112 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10623494 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092513987 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.105548414 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086714074 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097736501 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080557153 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104206769 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.101102693 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085644211 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.107645997 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090297588 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104840542 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083726719 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101185587 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.108528317 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089687271 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106283964 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080822575 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106577539 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.085157347 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105855455 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103903134 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083449887 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105656046 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.089020343 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103784986 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083181144 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111017448 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105649421 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085050953 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104573882 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.083766092 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102145916 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079672385 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103284707 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085983694 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109747075 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.10372287 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084183938 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112301786 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082459207 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102019911 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087896771 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101692003 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108202625 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079599472 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102043226 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085430337 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103536644 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079181466 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101747682 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080886607 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104316571 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081756059 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098070637 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110409207 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091455971 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.103632372 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082546335 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101002562 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078532647 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098005693 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082176494 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103250403 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103130555 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.092988992 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.102032331 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083250841 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097304755 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083476353 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105365483 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105485353 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081402562 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098402233 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081977869 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105014577 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.090659686 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.1010682 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.083368209 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106125869 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104678282 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081703203 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106207555 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080414512 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.10593529 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093687176 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103989677 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102932865 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089195631 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110950701 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.085195089 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098050577 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08416977 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.104524752 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102216316 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084967446 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.105170087 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096801306 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106165907 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.082395613 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.1021141 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104025429 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082462654 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110510815 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085354869 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103619539 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088880086 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.104396705 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.1123135 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086802172 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108380757 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.086193517 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.105161698 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10154736 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084232033 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101422881 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082396496 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.107790246 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086961314 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110205739 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.113515797 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08434968 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114856937 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.094419681 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.110121571 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.083531845 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.105627847 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086532302 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.103572747 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107953296 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.084945103 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.105418748 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085377733 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.105766782 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.087363761 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113791219 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.089224288 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.107558629 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106415879 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079434558 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.109491033 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086686965 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106076386 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.080172737 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.104822117 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.0858152 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.110822792 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106454989 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.085458986 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106887447 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.086461246 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106165152 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079265864 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.110156714 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082803333 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.105553714 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.081995923 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103631563 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103398159 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087841062 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108709334 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084788008 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.105735485 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.114285069 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087029626 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100114004 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.081368975 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.109899123 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.08177694 seconds)
  done (took 58.216890884 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14766262 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080184449 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098493496 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079685856 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115729672 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101442795 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079823612 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100632533 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.079792378 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102377462 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079553616 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098341093 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108938753 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122990353 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093700922 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103437359 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079143839 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100190929 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098274972 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080759506 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109120263 seconds)
  done (took 2.875574238 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104586806 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116895526 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114695352 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119226542 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089159877 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115819638 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114173382 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115318595 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09806813 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111586652 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117768333 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114649725 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091300567 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110971103 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110559252 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09376169 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119520796 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108896213 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115975972 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095828803 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112207714 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113753543 seconds)
  done (took 3.216656726 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083894808 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103474551 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084511238 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098976774 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083703508 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098154417 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088640399 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100790095 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086739093 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101341094 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081734122 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101173058 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103989619 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078178807 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102421655 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080836846 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152166676 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107000496 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.0839033 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105312483 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.07816632 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.104887015 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.09879797 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079877669 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101363257 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087344011 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102991774 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082551618 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103023257 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082420032 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102966958 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080913295 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104212346 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102883296 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082418154 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101276503 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.082905724 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10300073 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078301825 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101144787 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083693075 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.100002342 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084057124 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.106008684 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082574496 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101119236 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085869399 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103201493 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097273651 seconds)
  done (took 5.44622022 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104780432 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160820559 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086002068 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141809768 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121283201 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.11337915 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088070749 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141862821 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102084543 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082389049 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123236324 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119952218 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102940648 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089139548 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111161552 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103179537 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084473878 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102349029 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107825615 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083357169 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108994125 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.09062925 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119026572 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.116526499 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10789463 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083385792 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103618017 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108547316 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097980731 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110168386 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108923418 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091203367 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120292379 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109031767 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10231212 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.085805565 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122425306 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104692968 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086736076 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101570818 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086568057 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.10937049 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109526947 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.10316101 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104406375 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107506633 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084686275 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100938595 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116580362 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086988666 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113659205 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120317734 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108716536 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084949635 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109806586 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120900639 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084721615 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102483916 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087102344 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117517698 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101142574 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087832452 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119182024 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107191447 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111493404 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.0983948 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108542843 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.1074321 seconds)
  done (took 8.104572602 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093435664 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.11056166 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119182614 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121260092 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090729263 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111676576 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110864287 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091158224 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10976839 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11605773 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110989653 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132935254 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086375436 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114366063 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110526717 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092010539 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111513044 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110135413 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090699215 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111861068 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111238091 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119723988 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090903178 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120980299 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141611953 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105912811 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091604155 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111154334 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121432572 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109981817 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123774374 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091625878 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111422772 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121035878 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123858301 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090581221 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102945318 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110269954 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091184478 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111589519 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105315676 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100513669 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110472824 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104731651 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0913799 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112508739 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121346874 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123930393 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11439097 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098253803 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111987551 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121804596 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111130127 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09216978 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121194461 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147878775 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121106117 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121461069 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112239736 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100644219 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120979001 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.13047238 seconds)
  done (took 7.669545357 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107809402 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115517148 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118415571 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099544308 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082371187 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107988254 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083343864 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101961363 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115201126 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094557631 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117824346 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109164127 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091800098 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117574264 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109130441 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112550181 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088896859 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10951788 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114003182 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108278928 seconds)
  done (took 2.93302171 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093705032 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123975035 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084932292 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113130707 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10831405 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091098923 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108413697 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108732733 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085971586 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107854216 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097984897 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117165171 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106687812 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092336758 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.11672587 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111709629 seconds)
  done (took 2.495566107 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096717562 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117080185 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120573284 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084508704 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103807477 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080511089 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106046015 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100087018 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080636975 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121419031 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085534015 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.111242544 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105423673 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083209681 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101288051 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087716597 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100575871 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081869916 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104479526 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119501979 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.09657749 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104249817 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105822458 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086988137 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105836664 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090614092 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106071076 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103059155 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084416698 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106039366 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084497559 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113790584 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101599019 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084459787 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103016801 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082287093 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105275565 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086263842 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108267475 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105548889 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083347067 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104707217 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085317202 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10589537 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08151345 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105905899 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100030511 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092610942 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103596989 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085226352 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105698782 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087851867 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107461212 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116079902 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089005253 seconds)
  done (took 6.242126455 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098651025 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109860569 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080602657 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10323411 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087576371 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108068194 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108357321 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087688585 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107195409 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083893265 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106772608 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089520988 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107825188 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108492809 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087105763 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108865595 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080430332 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106006335 seconds)
  done (took 2.606183569 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090234946 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104927102 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09295667 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.10578309 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08487297 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108334135 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080151784 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105202625 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102838776 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08558862 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105475274 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087411378 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104338709 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087399445 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105076513 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084147812 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107787042 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10412295 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086110488 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101345181 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088171001 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104199488 seconds)
  done (took 2.961274868 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117607513 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.12480528 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092414834 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.229566561 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103358273 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131571403 seconds)
  done (took 1.635636936 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109181867 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120962797 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105693228 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107222788 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115385017 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0863713 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10783511 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107582503 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118532112 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102042982 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108743632 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118649675 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118824199 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097149299 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115346393 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115034148 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107658757 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087403544 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105841959 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130097757 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088792127 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118335787 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107009638 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087432343 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108753679 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117489268 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117270628 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121930761 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08784297 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118605431 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115762047 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087711834 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119564692 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122677861 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109008157 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098711715 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108142939 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129725037 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115773857 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097475498 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108835117 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114840272 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098050815 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113580371 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119364563 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107619373 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094006657 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109371701 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107803757 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135443334 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0949437 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117014627 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115129277 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118555442 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097781333 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.15633443 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102632601 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117665579 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115365564 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12259006 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118516393 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094462632 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118861131 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122860527 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115395421 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117891827 seconds)
  done (took 8.155107204 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103619044 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126196282 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108496006 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123058277 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098457086 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107438956 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108621924 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087727309 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108844465 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105942551 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152981171 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088278536 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117972198 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118366204 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087640119 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108429269 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108398871 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118494107 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086841381 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137045584 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108448782 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117760047 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117509995 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097613219 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122188569 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11555757 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108783871 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088611781 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108242426 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107825519 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093199371 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10877752 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118000894 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086414332 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117893751 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107733903 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087011263 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115408829 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108632982 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114792308 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098403734 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128026407 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109372697 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108127657 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103218588 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109759623 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109088901 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086506668 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109633308 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107129418 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101174718 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124596104 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122643523 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119421247 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108102353 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088194455 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108909238 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108156225 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089650854 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115922916 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117857906 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087929204 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.157684343 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088745087 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10848731 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117520344 seconds)
  done (took 8.027035663 seconds)
done (took 155.599438558 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.237421255 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.230670719 seconds)
  done (took 1.304740016 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097375436 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136018362 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096458601 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168084282 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.10595094 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118997043 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138786557 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097551893 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105767251 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086397105 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106441658 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087395915 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172521184 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084631888 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.10712243 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.10741973 seconds)
  done (took 2.66343273 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.199831022 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254052151 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102895979 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106154748 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088858611 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111741182 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105757614 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.090573018 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110015578 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085081125 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108968753 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087163981 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105482382 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.08611299 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110381163 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087623716 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106875156 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087776327 seconds)
  done (took 2.880695275 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112855988 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146482537 seconds)
  done (took 1.111555068 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119137369 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181731 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.317182092 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155400211 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107070083 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127584136 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156186536 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13232628 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196635103 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122751623 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122735753 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09794984 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14025362 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115622682 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.09437125 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118198192 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141910604 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092690841 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116338013 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116126604 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116319598 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106471326 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116134378 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.09266151 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18165338 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120669512 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085156642 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106607788 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116151501 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094833039 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112737625 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124801123 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097259465 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.177237684 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102807495 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176748793 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097685142 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.111597483 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114486433 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09065834 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118280959 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119726321 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104627746 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118179167 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.083994606 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.117905029 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106332769 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085987634 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115543459 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.09820907 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114845547 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113567099 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156258849 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.11788681 seconds)
  done (took 7.533488607 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.79188469 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156905731 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090725604 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.885984317 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139205581 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104185474 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.780628859 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135246155 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.233017259 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.760957211 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134902293 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122510692 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229579294 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.238283473 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.957866472 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.314395439 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.67517351 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102832412 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152556373 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153293572 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119127456 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137562478 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129526196 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.427877411 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095458076 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112163743 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096775621 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.122518124 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160914264 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126188045 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11455433 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.180263919 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.249972795 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207147139 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116828006 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090253975 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111759555 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.171145466 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268861484 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215434434 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180973983 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087321816 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111176372 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10138582 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133436086 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108163476 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.166339182 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.174127838 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.193302039 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093143059 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121847461 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119696509 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100255223 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.188097711 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099340668 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.322258881 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.312892771 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112374127 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100319691 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128869736 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265923623 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123106539 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224470213 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119042516 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213427876 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111855123 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780180133 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.190409363 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091406173 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117784887 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098300553 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117336554 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122285347 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169132147 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.395027233 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123722654 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.09435797 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112197315 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.214366891 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126288373 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111310698 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162553942 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.094093126 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122386316 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125435795 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122943438 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.172661212 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.231193539 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124322666 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120139554 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094476581 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125891059 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116521329 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212777356 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220940524 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.164057843 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.209471437 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124253492 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.165187663 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.191006646 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098084626 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.195604423 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099900543 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127497133 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123617103 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217053655 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145776923 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102196724 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116578222 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118435558 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.14939184 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107205061 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120096634 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.171571341 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.479370638 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.169665853 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109154975 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.1070787 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120437068 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162516943 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119574442 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258705535 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101907697 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.190056306 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098274646 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.109338559 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120312573 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.166200858 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12308639 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100624755 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124428765 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118581005 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.236842681 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218983818 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102326143 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245927503 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185702098 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119768584 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174411284 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121085551 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169370753 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119538401 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099959826 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117867738 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.798750096 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102657335 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123302672 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115270634 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.189090024 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089945937 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125352688 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124951065 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087874856 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.781128476 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128240008 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.09889253 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.125090065 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11907682 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121030347 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09638329 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116508631 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164454891 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232241577 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121758362 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098498714 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.126376032 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161231636 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.118215277 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126305379 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125824558 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104411923 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123110207 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115626264 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103889046 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.193171688 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.165473894 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.221455832 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.569478928 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113091348 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125472744 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229599968 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091503006 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288339464 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119696283 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.206031596 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187786041 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099245956 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.310308741 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.188860143 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188493871 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105801115 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.196414084 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088230096 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118198828 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.16584343 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111542951 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09649535 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.18424107 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103795377 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.1248684 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.959856459 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090076004 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.246421991 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088276607 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.193137165 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096386891 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121935429 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.294925982 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091254045 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130068165 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.164735164 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116173547 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125905746 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.719621805 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125777555 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123666404 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097738458 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.223295317 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163638063 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120805248 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119601926 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121393592 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.165124583 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209174372 seconds)
  done (took 44.207398548 seconds)
done (took 60.543118577 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276801143 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.21674603 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.264733414 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170269482 seconds)
  done (took 1.878386608 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170881787 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148835697 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121727406 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107034562 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.15002615 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085545466 seconds)
  done (took 1.6587043 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.356241619 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.272555651 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241228834 seconds)
  done (took 1.752546275 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.288060603 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.248040138 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.475102638 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.32423067 seconds)
  done (took 2.337360543 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209275578 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133184155 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110618413 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.10397229 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.19858057 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.249444214 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141740709 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201371915 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098857377 seconds)
  done (took 2.373122966 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196655864 seconds)
done (took 11.076602837 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.296766975 seconds)
    (2/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.237267455 seconds)
    (3/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.154167552 seconds)
    (4/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.208148241 seconds)
    (5/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.10305851 seconds)
    (6/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.12276967 seconds)
    (7/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.157600239 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.194694978 seconds)
    (9/286) benchmarking ("sort", Int8, false)...
    done (took 0.199194115 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.128150956 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.09364926 seconds)
    (12/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.217704223 seconds)
    (13/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113150525 seconds)
    (14/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.204038382 seconds)
    (15/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.248989092 seconds)
    (16/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.201470692 seconds)
    (17/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.208828988 seconds)
    (18/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.229146834 seconds)
    (19/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.221995524 seconds)
    (20/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.096393159 seconds)
    (21/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.143281363 seconds)
    (22/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135795987 seconds)
    (23/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093722006 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.147445951 seconds)
    (25/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.183635148 seconds)
    (26/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.136371223 seconds)
    (27/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.129483709 seconds)
    (28/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.217044936 seconds)
    (29/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.090688512 seconds)
    (30/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.220077118 seconds)
    (31/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.17630969 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 0.223931899 seconds)
    (33/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.17025691 seconds)
    (34/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.087448607 seconds)
    (35/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.11785449 seconds)
    (36/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.066932909 seconds)
    (37/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.202199396 seconds)
    (38/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.19880293 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116645143 seconds)
    (40/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.100142896 seconds)
    (41/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.180704862 seconds)
    (42/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.196404776 seconds)
    (43/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136545434 seconds)
    (44/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094335864 seconds)
    (45/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.140536189 seconds)
    (46/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.187694592 seconds)
    (47/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067082548 seconds)
    (48/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.114580715 seconds)
    (49/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.130955244 seconds)
    (50/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.089350714 seconds)
    (51/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.095024974 seconds)
    (52/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.125284651 seconds)
    (53/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094496434 seconds)
    (54/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.117392373 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.095068737 seconds)
    (56/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.217007323 seconds)
    (57/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.185025284 seconds)
    (58/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.130780038 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.085840987 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.139282559 seconds)
    (61/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.191836589 seconds)
    (62/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.145613042 seconds)
    (63/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111383259 seconds)
    (64/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068820209 seconds)
    (65/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.185913025 seconds)
    (66/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.220756269 seconds)
    (67/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.086610414 seconds)
    (68/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.121577033 seconds)
    (69/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.159499986 seconds)
    (70/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.165419578 seconds)
    (71/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.110472543 seconds)
    (72/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.151694811 seconds)
    (73/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.092889385 seconds)
    (74/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.172695802 seconds)
    (75/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.083178547 seconds)
    (76/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.163943888 seconds)
    (77/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.120892626 seconds)
    (78/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.077822652 seconds)
    (79/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.076724234 seconds)
    (80/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.11777418 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.085242317 seconds)
    (82/286) benchmarking ("sort", Float64, true)...
    done (took 0.228360089 seconds)
    (83/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.111123613 seconds)
    (84/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.086764844 seconds)
    (85/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.151680222 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109716872 seconds)
    (87/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.077948719 seconds)
    (88/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.099149349 seconds)
    (89/286) benchmarking ("sort", Int64, false)...
    done (took 0.110237951 seconds)
    (90/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.120483834 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.086496849 seconds)
    (92/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.111317165 seconds)
    (93/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.103679222 seconds)
    (94/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.149618658 seconds)
    (95/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.229506294 seconds)
    (96/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.098350948 seconds)
    (97/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.1191849 seconds)
    (98/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.186848897 seconds)
    (99/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.067461782 seconds)
    (100/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.111186903 seconds)
    (101/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.102230513 seconds)
    (102/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.090260022 seconds)
    (103/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.166659219 seconds)
    (104/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.15527853 seconds)
    (105/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.172000225 seconds)
    (106/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.099425651 seconds)
    (107/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.066298666 seconds)
    (108/286) benchmarking ("sort", BigInt, false)...
    done (took 0.244136823 seconds)
    (109/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.148652748 seconds)
    (110/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.118352574 seconds)
    (111/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.172381684 seconds)
    (112/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.096438558 seconds)
    (113/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115380062 seconds)
    (114/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.086279395 seconds)
    (115/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.114482592 seconds)
    (116/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066991866 seconds)
    (117/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.205495753 seconds)
    (118/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066146981 seconds)
    (119/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.1207282 seconds)
    (120/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067602361 seconds)
    (121/286) benchmarking ("sort", Bool, false)...
    done (took 0.182084507 seconds)
    (122/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.118639671 seconds)
    (123/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.129536539 seconds)
    (124/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.114714483 seconds)
    (125/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.172865674 seconds)
    (126/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.111442006 seconds)
    (127/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.120599578 seconds)
    (128/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067142459 seconds)
    (129/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.091458532 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092630825 seconds)
    (131/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.11668613 seconds)
    (132/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.134101137 seconds)
    (133/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.119501719 seconds)
    (134/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066775284 seconds)
    (135/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112549039 seconds)
    (136/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.067503994 seconds)
    (137/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.089763204 seconds)
    (138/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.083810892 seconds)
    (139/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.11499163 seconds)
    (140/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095183725 seconds)
    (141/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.119725725 seconds)
    (142/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.121236959 seconds)
    (143/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.119201693 seconds)
    (144/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089693232 seconds)
    (145/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.117180274 seconds)
    (146/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.128669249 seconds)
    (147/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.086863013 seconds)
    (148/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.120432357 seconds)
    (149/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103053443 seconds)
    (150/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.092452181 seconds)
    (151/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.133835496 seconds)
    (152/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.112786654 seconds)
    (153/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.087627431 seconds)
    (154/286) benchmarking ("sort", Int8, true)...
    done (took 0.222963565 seconds)
    (155/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.102167502 seconds)
    (156/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.087647761 seconds)
    (157/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.119366968 seconds)
    (158/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.124425563 seconds)
    (159/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.169317302 seconds)
    (160/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.0915097 seconds)
    (161/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.087307525 seconds)
    (162/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.175182594 seconds)
    (163/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.092473673 seconds)
    (164/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118835279 seconds)
    (165/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.088024079 seconds)
    (166/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.11086378 seconds)
    (167/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.17396017 seconds)
    (168/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068337255 seconds)
    (169/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.090636601 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.097074474 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.109834493 seconds)
    (172/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.119884153 seconds)
    (173/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.067284517 seconds)
    (174/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.106681421 seconds)
    (175/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067865524 seconds)
    (176/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.090229901 seconds)
    (177/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.098602958 seconds)
    (178/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.075032086 seconds)
    (179/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109713058 seconds)
    (180/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.085022928 seconds)
    (181/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116495165 seconds)
    (182/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067169064 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.109202869 seconds)
    (184/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097229027 seconds)
    (185/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.120786809 seconds)
    (186/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116491234 seconds)
    (187/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.09087785 seconds)
    (188/286) benchmarking ("sort", Float32, false)...
    done (took 0.396038866 seconds)
    (189/286) benchmarking ("sort", Bool, true)...
    done (took 0.221580561 seconds)
    (190/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.086584394 seconds)
    (191/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.150625651 seconds)
    (192/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.068178088 seconds)
    (193/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.109921471 seconds)
    (194/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.094069098 seconds)
    (195/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.182843617 seconds)
    (196/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066958321 seconds)
    (197/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.090312565 seconds)
    (198/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.086731017 seconds)
    (199/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.133575143 seconds)
    (200/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.06710298 seconds)
    (201/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.090845521 seconds)
    (202/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067245116 seconds)
    (203/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.094973308 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.117969892 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.095223287 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.110020872 seconds)
    (207/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067488387 seconds)
    (208/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.089460105 seconds)
    (209/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.065957244 seconds)
    (210/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.152752124 seconds)
    (211/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067559846 seconds)
    (212/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066257716 seconds)
    (213/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116232555 seconds)
    (214/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.086191203 seconds)
    (215/286) benchmarking ("sort", BigInt, true)...
    done (took 0.228038358 seconds)
    (216/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.090500631 seconds)
    (217/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.151473371 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109200687 seconds)
    (219/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.13555043 seconds)
    (220/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.067126552 seconds)
    (221/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067024367 seconds)
    (222/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.183524374 seconds)
    (223/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.135399938 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.086381253 seconds)
    (225/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124844049 seconds)
    (226/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094924699 seconds)
    (227/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.111010062 seconds)
    (228/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066586727 seconds)
    (229/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.110878304 seconds)
    (230/286) benchmarking ("sort", Float64, false)...
    done (took 0.148144958 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.111125564 seconds)
    (232/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.136703293 seconds)
    (233/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.067210126 seconds)
    (234/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067656544 seconds)
    (235/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.089740478 seconds)
    (236/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.086487504 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109370928 seconds)
    (238/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067687057 seconds)
    (239/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067428113 seconds)
    (240/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.125793672 seconds)
    (241/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066791081 seconds)
    (242/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.138022178 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116587702 seconds)
    (244/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094896003 seconds)
    (245/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067258072 seconds)
    (246/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.112089405 seconds)
    (247/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.068020756 seconds)
    (248/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.089924217 seconds)
    (249/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.09591819 seconds)
    (250/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.100228707 seconds)
    (251/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.087712461 seconds)
    (252/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.181063258 seconds)
    (253/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.068597296 seconds)
    (254/286) benchmarking ("sort", Float32, true)...
    done (took 0.229382843 seconds)
    (255/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.119772587 seconds)
    (256/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.092768488 seconds)
    (257/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111851371 seconds)
    (258/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094453267 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.11070001 seconds)
    (260/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.133742088 seconds)
    (261/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.086798174 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118607015 seconds)
    (263/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.112553366 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108102187 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086585496 seconds)
    (266/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.09862577 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095378403 seconds)
    (268/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.08891161 seconds)
    (269/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.111822354 seconds)
    (270/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.138289825 seconds)
    (271/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.089345791 seconds)
    (272/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.116497672 seconds)
    (273/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092302254 seconds)
    (274/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.109347558 seconds)
    (275/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.077139843 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.115060626 seconds)
    (277/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.091252838 seconds)
    (278/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.090249981 seconds)
    (279/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.105327363 seconds)
    (280/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.110673309 seconds)
    (281/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135117672 seconds)
    (282/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.089272499 seconds)
    (283/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.075984015 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.115413043 seconds)
    (285/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093233715 seconds)
    (286/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.091210743 seconds)
  done (took 36.025385885 seconds)
done (took 36.911573151 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100120087 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147120448 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096142527 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135776567 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.12333314 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09140386 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117584209 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097425809 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122149294 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.12423375 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098463907 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092052293 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096606378 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120264378 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098563686 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139752282 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124092098 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093689767 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119046622 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085660405 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118204217 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087134658 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111146885 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070041322 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121122307 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093769117 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116050386 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.12030475 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086545093 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.10997515 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089763573 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117519038 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086932716 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12423985 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094466706 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119947865 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097629279 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120545307 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.08940969 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.1104076 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118987765 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086710695 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116782082 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095477383 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116046204 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092505515 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118437077 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099835646 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139526989 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115271198 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094422236 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.119100789 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096074844 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117195284 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091242523 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118916868 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092354232 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.14004858 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118973016 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092319281 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117461036 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094488405 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.11554527 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095379518 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118855233 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121062232 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098721493 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115622113 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097761771 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.1158349 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.08679547 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118541456 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.091302287 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110153658 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096140496 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121659393 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086950971 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.116561487 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.093887534 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.115816548 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109788602 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090275089 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112014464 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093249755 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112335787 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069267269 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090668405 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.117481487 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.086163388 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.118802117 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116889579 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094263318 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111344494 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099390242 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110430762 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092035668 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111319455 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.088164967 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112369048 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.09241444 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.109518315 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090543289 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.11952474 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088055667 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.116355757 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.098483351 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.110466602 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117734719 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086546233 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110666861 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.10219628 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120661488 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.08732633 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115557178 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085683597 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.11875165 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085348219 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.11025553 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086538525 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.110856056 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092669636 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110747376 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090091112 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.117462198 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125174907 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086649689 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114524253 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090414338 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110811314 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093524118 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110884331 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087294086 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112588391 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.07769016 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113970868 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086663153 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118100609 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089906544 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119384156 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089022353 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120677677 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091474399 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.11674928 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092879855 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110282491 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074385339 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116161164 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08957022 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113520429 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087408706 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111961626 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08688427 seconds)
done (took 16.903156762 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088392978 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183628968 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152705239 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141708065 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107337803 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111498824 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122325273 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118403838 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113354399 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142435468 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110482531 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131618835 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148557329 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.08701585 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112358847 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091675995 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112938628 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102318685 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146012327 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132755597 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164346638 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086394457 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147690984 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135353114 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121164612 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.113743506 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112068101 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092762267 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.11569122 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103938345 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131701355 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.091243698 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112492288 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134129316 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105006378 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119678495 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087219305 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118734097 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088036944 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111921572 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141967226 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133718244 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092703811 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117629788 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091768313 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113838512 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089367617 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121424549 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097925437 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116214251 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127296503 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156071174 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091137078 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121490716 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086894639 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122288473 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121752908 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090399177 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113146942 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090166165 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111724985 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.09065703 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126606989 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141752603 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091907708 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121647413 seconds)
  done (took 8.603979992 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104520412 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140132929 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.130731386 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106311863 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11144978 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088799971 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.111993652 seconds)
  done (took 1.737181525 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088375757 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134139568 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111717932 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136039765 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133411513 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.10970257 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122620454 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088819403 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131657638 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089363575 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134366369 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150619937 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089846833 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119767382 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137688053 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088645632 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137188856 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08823845 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116831282 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.1123773 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117471473 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134648985 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091919278 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113641812 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103231888 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.11351678 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162811203 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094262634 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11520255 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091868027 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111533331 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.166656178 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102559555 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124462009 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088655347 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128832021 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.146180708 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087733236 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.129766904 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093787183 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127403583 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089281734 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115081432 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.0862572 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117990796 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.123575879 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090062881 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114223454 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.090980139 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133303015 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089854246 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126765696 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089259283 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117341724 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.09040409 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119189202 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12318896 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090498923 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13482931 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090567229 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130592159 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105274322 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128464562 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132373389 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091571005 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127462429 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102933017 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116461921 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090932882 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117215513 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130128674 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086459059 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.11541331 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099809736 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115332639 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112580954 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137145643 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090367729 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.12516622 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114147314 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089187203 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114319304 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112489226 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118413471 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089339901 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120864793 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091353513 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112217128 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088390501 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.119361243 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.113648691 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.09070228 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.118391182 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089870733 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116675885 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106724481 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115603825 seconds)
  done (took 11.824791432 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090229375 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116676313 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091060681 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114773097 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090813061 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114774617 seconds)
  done (took 1.572466101 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114382332 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117461545 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103995394 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120499529 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155841718 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.105039454 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.13024242 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122998292 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107789519 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127390882 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129117292 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104740167 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136189251 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120694128 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103981802 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120494722 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103812219 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126050367 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126551394 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097372737 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137511294 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121081707 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096652559 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131974855 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118369183 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.09523296 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125792693 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102920849 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127660153 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123254422 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096550044 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117455997 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096658888 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124465445 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129397777 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095420124 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120272215 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118730071 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10092683 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118614764 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105117299 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122608176 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127251268 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093720245 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124466008 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.12089447 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094887608 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125627002 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103814875 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119772 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119508445 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094370769 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117539841 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094911792 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121573112 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122861703 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095026481 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129916654 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.096639628 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.121148504 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117910317 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093567648 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124241648 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.11812741 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104691751 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119401166 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095510022 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12159375 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12156146 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.09678934 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119789404 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093404876 seconds)
  done (took 9.209528891 seconds)
done (took 33.889067044 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.684277234 seconds)
  done (took 1.636821164 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.834808436 seconds)
  done (took 1.790278891 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.677608489 seconds)
  done (took 17.65996557 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.493935319 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.580092028 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.999132054 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178262348 seconds)
  done (took 3.204849455 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.952733115 seconds)
  done (took 1.926615092 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.283640805 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.233598584 seconds)
  done (took 1.478527695 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.769773563 seconds)
  done (took 1.738573716 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.365881948 seconds)
  done (took 2.326082469 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.327576713 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185146477 seconds)
  done (took 1.481510187 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.547816726 seconds)
  done (took 1.51659957 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.80231225 seconds)
  done (took 7.775727855 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.267884181 seconds)
  done (took 1.248117602 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301877754 seconds)
  done (took 1.273724528 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.479534888 seconds)
  done (took 4.452735826 seconds)
done (took 50.475061996 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099199368 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127643618 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102705585 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123997638 seconds)
  done (took 1.419137077 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100402461 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120458091 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100155341 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119624378 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126133745 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095413302 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.12241997 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100600065 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120292629 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097058139 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121480426 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119526776 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099583945 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122856672 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093509555 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123986717 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099720637 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121519795 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123721202 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.098006198 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118684716 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097833251 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124916651 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094746445 seconds)
  done (took 3.637426778 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099950105 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119091751 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096247176 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118303797 seconds)
  done (took 1.417681428 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099935046 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131477063 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105194109 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124898614 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131735522 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106919456 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.11729577 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092409139 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119108935 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099968026 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.115669248 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.114152224 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132252319 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.125238645 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101694816 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114117164 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.092286976 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131437846 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124577765 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100344288 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118278713 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099936637 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.114792102 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.110050467 seconds)
  done (took 3.702578358 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170930151 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127209668 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139515331 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095042833 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160033845 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139927528 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088404732 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141030773 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088001264 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130413828 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118185014 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132782653 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128912825 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087493962 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113472562 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087830174 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129592117 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128153934 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090736451 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127543715 seconds)
  done (took 3.413068692 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097556644 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116679098 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089006172 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115945135 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099900121 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121208275 seconds)
  done (took 1.625278189 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09141538 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114631044 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089116554 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113799382 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094743883 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114489112 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089026457 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114573061 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089896222 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114527531 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089139653 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.116110505 seconds)
  done (took 2.216447943 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.500604827 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.12050323 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120085352 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089006666 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.121848799 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.08958554 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129177925 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092207656 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140082925 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088143256 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11571336 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091951043 seconds)
  done (took 2.683574135 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234235904 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126919948 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287313247 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.369719467 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155218128 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1778332 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.281028789 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160978523 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.225710612 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166323045 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204305363 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223160252 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151828903 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190961539 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13838746 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.14515732 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203967337 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247258119 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154046345 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20885124 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227665897 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168088961 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181309976 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151164455 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138387295 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17263394 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094127426 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129920825 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234887481 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175905454 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214408813 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161471071 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145973274 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209886292 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254075002 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220905784 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284064297 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135231573 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.150030058 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167068243 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260996981 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138562632 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20328498 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154954723 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131346863 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217744503 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166369585 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176921085 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.152796527 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138884927 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19448727 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238536589 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192181076 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138984878 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299739886 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148010742 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.200270596 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194610491 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252000028 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200838332 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212718211 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094677225 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187969316 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218316368 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1867013 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.174432952 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.208137889 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149480005 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200606236 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188923224 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165123404 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221195451 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.185024934 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139732449 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16970767 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173144253 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172419587 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258776273 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212173428 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095629852 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168117026 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149847854 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13440725 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.19517701 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09818275 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239843315 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143977804 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.162560945 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213576393 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159579422 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160549124 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201920738 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229528639 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148721663 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083285256 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154664528 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155997936 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193130075 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139501625 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158260326 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162327239 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130913114 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184450742 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124377608 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184030797 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117708673 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174796147 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182782046 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127597484 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161695311 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152175922 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.12596538 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20103517 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200505272 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142546888 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132730292 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210235579 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180128129 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150751455 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1773788 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22707064 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118183207 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149452231 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228432963 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217765356 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140409424 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22979998 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156109025 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107930257 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132350963 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182466704 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155627775 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161832847 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134821098 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184669978 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235159989 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098559423 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139235888 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193101478 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133678673 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132258747 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162742697 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148819555 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138596005 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.125573004 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.154094432 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20840577 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180544233 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155462761 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166390056 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153839989 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253647275 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141666613 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.124722348 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148965065 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120569082 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194970202 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224822219 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10428031 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230493846 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172748945 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203996567 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195154776 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107500127 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176280837 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130204346 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093260193 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221572561 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16834577 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162738964 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.195845425 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227124132 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.178931928 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.1823588 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198754592 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174867304 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16698763 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156586601 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111279733 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160499477 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197949344 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.097053049 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.14504342 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.13425222 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147808929 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116859777 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133387634 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223048538 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170980908 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190197298 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159479393 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149383138 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180839579 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128779532 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174721822 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177146332 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148681489 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.225721121 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195839105 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185655282 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144140993 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226360507 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.095008179 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125250901 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.115681113 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196575005 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106865718 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136804085 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16474071 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18190162 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180792149 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20461506 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210788258 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197807045 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190420715 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.096287448 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169379276 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185959248 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205110535 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.16695836 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139353031 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151276939 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179927699 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158870404 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255446555 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169249396 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176556019 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234983744 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.150587791 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105691233 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152258366 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192759982 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154552749 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204154734 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120330905 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140729345 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162221702 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.13369059 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160359499 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184908634 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163533737 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215159411 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.148992756 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185205281 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127807945 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164712527 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160242639 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166144181 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081230043 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176473175 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233682906 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149217372 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168498606 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189970849 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131822334 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307084358 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243412271 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196952489 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138289918 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156432199 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161729485 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164266681 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172643495 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178844805 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160766162 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187259428 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159617425 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136950446 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141169567 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121779725 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151355722 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132240086 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148888502 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.17779493 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139835201 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185755487 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164077515 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160372953 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173072961 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150913349 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145103549 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150695427 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21515479 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18386879 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239745924 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.1518532 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.181252241 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233626789 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098023192 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133216249 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133261404 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178787422 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109296844 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222998112 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.188640292 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229402425 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183874045 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1935681 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139960882 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120335987 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157765373 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175348388 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208354945 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152192133 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.159718587 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231645548 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.119631664 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132540162 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1783937 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316914334 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119190291 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225268789 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080054886 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.281586652 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12471914 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132417751 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137105588 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235051923 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136506942 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.187650211 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171508249 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171776011 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165274964 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151013021 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191819065 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243201114 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202786113 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180411913 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.133027006 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156264953 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176290898 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220851202 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157710545 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111996537 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231702413 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197356257 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196050078 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141360906 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168806279 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167642091 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157616232 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214592864 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10812951 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234598072 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134296904 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194893188 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153721916 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145330321 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177020554 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.213439828 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114212816 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216078588 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185664908 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135359131 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105149575 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195794073 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181910618 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158294197 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099316016 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208342457 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098083559 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221213141 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23148924 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134740704 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155494169 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148172734 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134676713 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154764182 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159229547 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114008915 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.164510703 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20270236 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136044765 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218006119 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205181609 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168982703 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174710784 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145814159 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692662691 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131353106 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196598569 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1595598 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234575715 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151764134 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173980656 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159254616 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168151665 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196680238 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160328144 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231613395 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220796492 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.178874524 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131514628 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157093395 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162693182 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143147333 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122700016 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168652034 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16044433 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154787946 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.20578985 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173398915 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.106642585 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14057922 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227432794 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132367572 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211875094 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180004287 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138371045 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173150723 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188452723 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133756376 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179490266 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237164863 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141662866 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122917447 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134805893 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157598988 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264160399 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097361985 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234446939 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184990348 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160466875 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168976605 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147306304 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222406591 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158720592 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186098659 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14903111 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160469926 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157931049 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137807331 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102689326 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156348205 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168158142 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150813082 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158733572 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.164828297 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195715112 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123225909 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117476156 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314715832 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193580099 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244337575 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.10680527 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136010687 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162665604 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152055547 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.17850836 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177830935 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135706512 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136493644 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136321301 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.131199698 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138900569 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130130815 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224053249 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165904383 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208206607 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136142815 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276566499 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111557749 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155735605 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114903446 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.103513932 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150408764 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14686439 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158573246 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.218096808 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239610424 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148225122 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.13310155 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149938247 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098667851 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137188789 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163895311 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16504101 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177910819 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145111395 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.079551042 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156446889 seconds)
  done (took 83.400685985 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162826249 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131993477 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145856539 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201698983 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175551301 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269449633 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209935496 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252444734 seconds)
  done (took 2.625078879 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094738791 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146090724 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157737762 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132284406 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09194945 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118577104 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.345632409 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133457109 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.117513391 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121564422 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173546037 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094028709 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.549688832 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.09059352 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119487397 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107289996 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091387549 seconds)
  done (took 3.755525245 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.475516451 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.717256726 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.511757282 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097332529 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.189974176 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112698605 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.788731572 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.196292232 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.114780391 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.483812311 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.784615237 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.158148399 seconds)
  done (took 18.710921431 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.115029202 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136383677 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123064598 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.152284022 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140235635 seconds)
  done (took 1.751544766 seconds)
done (took 131.327398179 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.103905297 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.404035153 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070896941 seconds)
  done (took 1.588539246 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107831772 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136471495 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107962683 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135818055 seconds)
  done (took 1.577113482 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097792217 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126423728 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108724621 seconds)
  done (took 1.416164659 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.324096956 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.190950725 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.170114373 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106933914 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129351653 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102683322 seconds)
  done (took 1.424749401 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097490954 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127499254 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098101944 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130582286 seconds)
  done (took 1.540584993 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094616799 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070520845 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100539101 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074509777 seconds)
  done (took 1.422674502 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113842727 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131718137 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104749683 seconds)
  done (took 1.438100923 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130180424 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139709834 seconds)
  done (took 1.357232452 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106554605 seconds)
  done (took 1.190464279 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118208864 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169816411 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.179982297 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.161897363 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.20396094 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.160112182 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.142988843 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.138005954 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.128428154 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.141224675 seconds)
  done (took 2.632894642 seconds)
done (took 17.457478521 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103243062 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.518568995 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.384283907 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.1447507 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723362858 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380234675 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.037352747 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145416376 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166185625 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092864454 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138637673 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672686066 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.066653477 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.474315844 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.023607576 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.377510109 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676320975 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121243533 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120276177 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094296752 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.024841054 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091807773 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122442721 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092708764 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.70392154 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426045586 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095032738 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.37631738 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092657513 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126885057 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.3833684 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12210862 seconds)
  done (took 17.19731499 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095527909 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174350676 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09748132 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137839338 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123359502 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094126551 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12418306 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093327687 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179644291 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122280825 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109963895 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121830405 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125730423 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095028304 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141081496 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09233073 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124810297 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092475725 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121616886 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122574906 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112601453 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120954971 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094279849 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121684717 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093141762 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135980364 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094868231 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120717504 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120454907 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099040997 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127042931 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094023935 seconds)
  done (took 4.811109298 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141337104 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182577431 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128077662 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127379422 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169055576 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124307945 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199292909 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117648183 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181837256 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122576309 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139281442 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.09281106 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156222569 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093774019 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142343437 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120074017 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096530635 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121718499 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092661752 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123338607 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140575569 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093392174 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.1222887 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094290831 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122440746 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107765493 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123782324 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121142548 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093369773 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127563874 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099838074 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122894631 seconds)
  done (took 5.1369103 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097729548 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125956846 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110007516 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138221938 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095544935 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125782048 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098403192 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124629993 seconds)
  done (took 2.008173166 seconds)
done (took 30.236830414 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111315743 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127156467 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.1070631 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133981037 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102167969 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132317482 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092257536 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134506424 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134383782 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101797929 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137936844 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091780363 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122347194 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091593179 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13448409 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097503715 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132071382 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101879701 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133066021 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132137233 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094034341 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132988598 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103887643 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134130685 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103752827 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133762849 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137297119 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099371343 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123126648 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094611719 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.12532398 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103803095 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.12306288 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105380068 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126481869 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.09729161 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123842987 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.09556209 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133128074 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132979529 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100329393 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133435442 seconds)
  done (took 5.994191976 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.106994212 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140403271 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104845341 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081153334 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117488008 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080691921 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138522874 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079097782 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110255013 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107516874 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074426703 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106565525 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078348605 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101377838 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077200511 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075967488 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108408527 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075770125 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076460156 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106345779 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079982518 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073115598 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108537401 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078575628 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07446199 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109382928 seconds)
  done (took 3.569352493 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.101129061 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134350021 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112548157 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183204103 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161300131 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099582538 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131881137 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.110302978 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.137891035 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120120455 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097109972 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149824273 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109796304 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129102301 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092474766 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137300796 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135959628 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093744943 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12730991 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111520964 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.13855591 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102865165 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140843432 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132578635 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092547274 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124021786 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096729652 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134320927 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097340776 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132396652 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096523087 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.126164936 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122904956 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104799074 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125742468 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095024835 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14216624 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102942221 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131117415 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092714076 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.129982913 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122109509 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114235926 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.162266936 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091959932 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130245032 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.096102534 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133441702 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121895127 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111778222 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132091893 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092000337 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126346904 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091508956 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121998469 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106424732 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124090896 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094174531 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131256509 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126756721 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106236466 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125217775 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109247275 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122077496 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101381009 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121540019 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092953664 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12157851 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.115072455 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123373324 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161936677 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093026601 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.12396533 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102143768 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130203438 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128531434 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094439487 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138098523 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102268207 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126363937 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.103098108 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125897696 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.09557244 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.14088378 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.095114576 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.124565835 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.094491335 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.129509541 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124488401 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095214666 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136331395 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092148997 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124942561 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111298783 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121971673 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.093905392 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128604693 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126692372 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093101342 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13725583 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098910405 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123330954 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.10366008 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.122527219 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.095240464 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.1330614 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125944753 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092716941 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126449834 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.09978211 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123074181 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094252588 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125725139 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094842333 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133766082 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099127651 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.126889104 seconds)
  done (took 14.829663279 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.22770612 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214966679 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.206232645 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.292313382 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136096399 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114848205 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211411392 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155212883 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123097185 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159338843 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.174640086 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182837155 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.169767997 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181023673 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171516242 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093294049 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142261165 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165628951 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215386066 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.257969796 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143390692 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100637719 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.160754827 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158887108 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136708395 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.131194654 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110148403 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134340157 seconds)
  done (took 5.788120277 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.10858233 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155755994 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097880235 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144741031 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149151279 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093284194 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.1276861 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095129956 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135468887 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136594911 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092802926 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129320962 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100855383 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132592033 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123719519 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104340343 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132006089 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095030726 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126739652 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097482682 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134169394 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102620039 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.1271104 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.092589278 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.132426952 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121450691 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.088083091 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143326501 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.09277846 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.145107054 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121342649 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101982089 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136578334 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094266225 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122832003 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094684614 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125099617 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.09587717 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124412871 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091455763 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122095332 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077525661 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122393054 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106834125 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.12888835 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080097553 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129684326 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.098858194 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.123790676 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120377604 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096425184 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125410429 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097163649 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130857009 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096754723 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124310839 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096650494 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115640248 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.09978804 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125049048 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084618071 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.120816917 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099517864 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118277998 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101595194 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127998373 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092930874 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126296473 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098131203 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128858827 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094779558 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129638505 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091893491 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127099833 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095637889 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12892536 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096358055 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122363515 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.093375449 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.124134725 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075411874 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123608148 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074078007 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126375049 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092547109 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122411149 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096592221 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130305187 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13802983 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095274971 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131539699 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094519415 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.12177759 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096418935 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112978848 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.09621459 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139760692 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.14180764 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09337848 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121576185 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108683127 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126329457 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092609143 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106139128 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102700655 seconds)
  done (took 12.971725579 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.126991352 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.15492899 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095787409 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.142847238 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157541104 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158148926 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100808775 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131115667 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.094976186 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142966849 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093892649 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132426067 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094465411 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138410729 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157243426 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.105683222 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126186913 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107928593 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127958181 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169711692 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111779553 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143149586 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110863722 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125051986 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.099138571 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.140584285 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162121037 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108939803 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.138150594 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142621725 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108799499 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161223598 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.1135504 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.128432674 seconds)
  done (took 5.487652085 seconds)
done (took 49.731570609 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.203753609 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.415446776 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.192615148 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.126538592 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.216813499 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.225463242 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.202043247 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.194332374 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.651057182 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.193350023 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.45376435 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.843941261 seconds)
done (took 60.046021125 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.260389094 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.331359514 seconds)
    (2/2) benchmarking "String"...
    done (took 1.461377537 seconds)
  done (took 3.924716951 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.553850425 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.14950035 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.457376191 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.195520001 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.198163856 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.483539137 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.857955438 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.547638252 seconds)
  done (took 28.013290873 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.205168167 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.281632233 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.222408511 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.203682588 seconds)
  done (took 6.038038419 seconds)
done (took 47.914153523 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.221390816 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.230014194 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.207585212 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.176542651 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.301255298 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.211653109 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.411379047 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.301334282 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.213397329 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.181150204 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.215494792 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.192168222 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.215371098 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.496862588 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.20629634 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.198521452 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.247078436 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.846868284 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.596891016 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.205135754 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.210488641 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.197700732 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.209523601 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.194273406 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.215256569 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.194373965 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.211750606 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.199950614 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.796621519 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.197389017 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.207260143 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.611975653 seconds)
  done (took 190.448393921 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.194967086 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.211802259 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.329858482 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.245739764 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.616106171 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.39622712 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.332594688 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.691121185 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.218256727 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.223494428 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.444443923 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.200241723 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.515494177 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.169521273 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.223950552 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.274715624 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.400888728 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.517078757 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.247212398 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.373875684 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.198906922 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.579873495 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.513283473 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.406134306 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.233668732 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.242376923 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.219309372 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.210310323 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.381407883 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.351257686 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.196213767 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.202442524 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.819567846 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.056825591 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.216966068 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.212027628 seconds)
  done (took 149.995707282 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.261431413 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.196249562 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.196418823 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.196284228 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.194937882 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.229730175 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.193870384 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.781133539 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.783708032 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.728054546 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.660171739 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.54032395 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.481831311 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.199218871 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.291579378 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.210479816 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.19413551 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.212452277 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.238445542 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.201992545 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.196671317 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.780840592 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.214345891 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.751937871 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.376826162 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.215649632 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.228890394 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.586237042 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.196296326 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228635796 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.527547476 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.248252321 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.193567063 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.575963814 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.09961813 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310732247 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.198234526 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.22928306 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.196637365 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.475545901 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.196153691 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.196044294 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.197637852 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.20255286 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.855956851 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.19631144 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.782193338 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.201092832 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.172518686 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.197092682 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.197950775 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.981064848 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.871422706 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.214862158 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.197167268 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.201083749 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.198692991 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.199827258 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.232340772 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.749442394 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.294318704 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.215980895 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.202613441 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.232762448 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.199070794 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.741335545 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.219781091 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.978293426 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.259327994 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.420171481 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.780831846 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.200173861 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.295080024 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.321082732 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.197724915 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.197265653 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.197189417 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.199171144 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.19670987 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.307266915 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.19852738 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.626598992 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.374989488 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.216019002 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.547148463 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.294874076 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.198188708 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.605284624 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.20025999 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.196720363 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.972972085 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.296137313 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.196358907 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.199757299 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.197639398 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.630059351 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.783304149 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.503282777 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.200486483 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.930650928 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.200792859 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.646665067 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.763941134 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.911729737 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.201776959 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.309277965 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.373909538 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.219922501 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.19889037 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.560669975 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.197171297 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.262427496 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.200696345 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.198153961 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.600008416 seconds)
  done (took 368.807101022 seconds)
done (took 711.638077441 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.819284601 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.8114383 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.916669448 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.80024754 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.766864407 seconds)
  done (took 10.245274193 seconds)
done (took 11.374298255 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.39058051 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.391031672 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.263023239 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.393577258 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.232223913 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.409124571 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.372934861 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.228139096 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.30502221 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.286636992 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.305493287 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.258466206 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.231672277 seconds)
  done (took 18.198880464 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.516531989 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.531725228 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268723167 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.520014 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244904093 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.50991427 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.407466956 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.422443878 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.418371153 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.236989 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.216724916 seconds)
  done (took 16.426406344 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.544749496 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.521890939 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.270776379 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.518850594 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.243388952 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.52213332 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.404500848 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.421046061 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.427032624 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.238216501 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.218575046 seconds)
  done (took 16.465185048 seconds)
done (took 52.220537336 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.212923577 seconds)
  done (took 2.346605992 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.248673598 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.412599418 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.231130833 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.21810743 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.214618138 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.215808027 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.21836238 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.215164729 seconds)
  done (took 11.107342025 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.214714345 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.211432333 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.216414837 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.210976921 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.215609084 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.212031034 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.209390222 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.214237268 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.216233867 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.214303137 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.211053981 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.213382523 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.213919981 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.213034745 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.212722309 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.214013591 seconds)
  done (took 20.549145326 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.215162909 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.213806697 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.212689964 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.211049677 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.213177101 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.212780862 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.214941808 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.211503423 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.213072388 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.214526562 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.21391605 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.214501222 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.214334624 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.213908008 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.214288102 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.215215859 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.212966545 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.213481376 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.216572435 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.211794574 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.213803762 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.212749764 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.214884653 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.212336018 seconds)
  done (took 30.266109505 seconds)
done (took 65.40295204 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.364751146 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.911576902 seconds)
  done (took 9.409932682 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.215765463 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.215634476 seconds)
  done (took 3.568902732 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.215714851 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.21380308 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.217001997 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.217840782 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.216953541 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.216572094 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.213860683 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.21520871 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.215730689 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.215952627 seconds)
  done (took 13.295328044 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.217636922 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.216759074 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.215159672 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.216618979 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.217044709 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.214839326 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.215716563 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.216334133 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.216785861 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.213952544 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.218976469 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.216544682 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.217937869 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.214875048 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.218299327 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.21581826 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.215388259 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.216394097 seconds)
  done (took 23.032939308 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.217212216 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.217309324 seconds)
  done (took 3.571843366 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.216717792 seconds)
    (2/7) benchmarking "second"...
    done (took 1.215976607 seconds)
    (3/7) benchmarking "month"...
    done (took 1.21637958 seconds)
    (4/7) benchmarking "year"...
    done (took 1.216210088 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.214760565 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.213605475 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.215433285 seconds)
  done (took 9.646106727 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.219247732 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.394445294 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.474745221 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.821726136 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.220731682 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.223315551 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.05264334 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.222875534 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.221597921 seconds)
  done (took 13.988111509 seconds)
done (took 77.64861347 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.226756972 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.231121252 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.394672913 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.233870494 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.234446554 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.557176763 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.230160079 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.339517816 seconds)
done (took 37.589185845 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.222999252 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.1988961 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.007418679 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.200760704 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.252763673 seconds)
  done (took 18.799845932 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.269595223 seconds)
    (2/2) benchmarking "read"...
    done (took 1.553068547 seconds)
  done (took 4.959188251 seconds)
done (took 31.121195284 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221796745 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.221124879 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.217346182 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.220098353 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.22056653 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.217416267 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.221066162 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.215179445 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.217619174 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.221545672 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.221546638 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.219473637 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.22043407 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220626432 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21907278 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218380385 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222438853 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.217997905 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.219210705 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217953053 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21922786 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220781575 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.218822192 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.217906527 seconds)
  done (took 30.409459086 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.221016959 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.220186515 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.220961343 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.221016159 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.218225528 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.223045768 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.223902178 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.219703129 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.221879329 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.22071455 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.218189429 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.217503947 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.2231385 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.220182445 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222101225 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.219621941 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.221464219 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219637717 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223245455 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.221114486 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.221601754 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221239308 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.219619622 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223308202 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.221328271 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.222036533 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.222918359 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.222256402 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223576476 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.220192429 seconds)
  done (took 37.776925545 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.22844433 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.231924602 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.222421076 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.22369896 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.223171596 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.224398302 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.223608883 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.224246654 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.223461569 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.223956029 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.224767011 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.224729092 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.22451025 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.224170231 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.224386514 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.225064894 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.224416929 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.22552163 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.223167547 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.22541878 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.2241738 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.225117337 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.22422506 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.224030678 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.225595777 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.224557599 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.225079708 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.224651981 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.224233105 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.224910419 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.225260408 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.225197137 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.22445961 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.225288773 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.22387672 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.225085101 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.229805844 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.232851959 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.224198686 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.224194507 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.225926353 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.226279242 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.226659996 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.225095825 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.225645369 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.226755233 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.226835367 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.225954885 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.226929158 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.226278088 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.226609345 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.226595619 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.226421264 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.227270167 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.227534119 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.227199559 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.227009746 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.226560837 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.227406334 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.227415625 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.227558841 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.226638198 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.226890266 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.228255324 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.226076842 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.228510525 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.227284536 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.226686645 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.225854843 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.228276772 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.227979435 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.227545223 seconds)
  done (took 89.408192053 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.226715028 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.225656795 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.224049953 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.224090295 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22477569 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.226457077 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.22474699 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225431254 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227069352 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.228036823 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227989769 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.225491198 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226596936 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.229563945 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225157988 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.224277409 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.229170642 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226694923 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.227452164 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.227635421 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.227879296 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.225997322 seconds)
  done (took 28.128532616 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224084271 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.232592969 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.225827581 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.226884309 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.227083059 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.227396731 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.228462485 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.230815576 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226653439 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.225805359 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222718496 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22721513 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.223588789 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226639969 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225622365 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.22912134 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230279186 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.228546843 seconds)
  done (took 23.238115613 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.227704893 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.228767445 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.229007014 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.226532357 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.229422478 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.231592991 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228055951 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.229722557 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.23105381 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.22790827 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.230304965 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232927001 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.231086093 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229371666 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226285026 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.228490672 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.232218126 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229689544 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230637352 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.228602252 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.228664207 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231259696 seconds)
  done (took 28.196796498 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230105717 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.230194419 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.225640566 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.229814472 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.22949514 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.229769695 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.233118669 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.228819415 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.232708587 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.232429552 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229661105 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.23299784 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.230070369 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.229614381 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.227003982 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226622908 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.232523916 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.230653772 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231153067 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.230963264 seconds)
  done (took 25.754999148 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.234468781 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.234247328 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.234129123 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.234441558 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234033835 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.235786568 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.233786272 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.234196787 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.235919476 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.235033681 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.234061133 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.233566681 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.234796989 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.235772468 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.234376129 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.235280398 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.232798859 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.233900992 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.235610375 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.233122361 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.235862162 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.234556377 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.235356906 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.23491858 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.234271708 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.234845248 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.235911508 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.2359106 seconds)
  done (took 35.722748382 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.235712913 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.234673422 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.233289975 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.232969021 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.233899372 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.232073352 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.230141308 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.233004495 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.236322004 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.233752785 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.235895866 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.233844491 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.236128288 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.236547042 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.235404985 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.23623538 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236889636 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.232758011 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232232907 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232941375 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.237174938 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237066646 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.236582598 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.233751256 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23505031 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.236055904 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233208313 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.234474701 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238242621 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.232956488 seconds)
  done (took 38.192816513 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.257341771 seconds)
    (2/2) benchmarking "in"...
    done (took 1.255613545 seconds)
  done (took 3.669275982 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.235003201 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236571584 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.236331671 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.235899215 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.236047509 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.237475294 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.237393134 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.236156482 seconds)
  done (took 11.047482311 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.23811173 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.238198165 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.236404038 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.237850501 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.238704845 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.237661382 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244790442 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.25799512 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.238577543 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.240189352 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.245500966 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.246703366 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.240399677 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.239608572 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.23784583 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.239907545 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.238727287 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.239802308 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.238615323 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.239775149 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.240678493 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.240114262 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24084564 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.236222626 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.239843992 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.250917371 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.2641142 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.23927759 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.239359619 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.24383641 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.239227627 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.241645794 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.239897473 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.239679338 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.240750645 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.238896943 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.246552831 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.258654268 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.245444842 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.260515389 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241318078 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.237732204 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.239523705 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.240645414 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.242129205 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.241062364 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.241523245 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.23743346 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.239555761 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.243223095 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.248929295 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240685812 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.238674492 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243754062 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.242197896 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.246642017 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.261388646 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.245301957 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.253585578 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.250994023 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.275231811 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.267088533 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.242887427 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.242217313 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.251895677 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.269166317 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.248839986 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.261062728 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.239441783 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.243447135 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.248886804 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.274674038 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.268511607 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.24219917 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.242327643 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.243165961 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243003543 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242693682 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24955496 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.265331532 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.242307597 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.244138515 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.24969656 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26864297 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.243433625 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.242085808 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.244303835 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.242674343 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.244156296 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.253891211 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.263757986 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.245494983 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.243641827 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.243279678 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.244565 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.24421734 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.24318434 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244837707 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.242976718 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.24581045 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.243481483 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.247936749 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.25395763 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244707353 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.245118874 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.250364197 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.265122076 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.243948387 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.250394621 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.245519945 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245187544 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.245091501 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.250358311 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.240910842 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24807514 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.254965857 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.244473682 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.246916727 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.245552298 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.245783112 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.254779031 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.274055489 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.247700771 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.246555021 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.249835789 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.260279231 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245875001 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.248871086 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.246768181 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.243882396 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.243226899 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.247678611 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.245522735 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.247257881 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.247119906 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.246298629 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.245087822 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.246520088 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.247250471 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.248436173 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.248155503 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.247018295 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.247649409 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.248572949 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.247590492 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.248827522 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.253199523 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.266008669 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.247216259 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.248565792 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.244806761 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248078057 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.248006341 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.247195121 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.247980587 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249032204 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.246879387 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.24851909 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.248525761 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.247534827 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247989119 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.248177184 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.251564948 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.2490764 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.250695203 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.24728127 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.245696719 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.249807149 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.24902547 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.247362593 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.249462312 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.246800014 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.252003382 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.258116122 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.248968594 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.249219969 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.251156451 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249784022 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.249930976 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.2495235 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.252353776 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.259464578 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.247774952 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.256354962 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.270028015 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249224258 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.250317569 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.24986302 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.249187017 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250553938 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.253382498 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.261286396 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.262279861 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.275765506 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.251875422 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.255733537 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.25199091 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.254549438 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.253841146 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.250299193 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.250825299 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249784339 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.251137681 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249945552 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.252173977 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.249227122 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.251326757 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.251417405 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.251749866 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.251911117 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251893257 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.251894119 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.251863968 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.249046433 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.252790888 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.252036649 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.251161575 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.250575868 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.250138138 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.25109853 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.252298276 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.252626529 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.258190513 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.250466169 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.255353361 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.253387737 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.251880721 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.253064986 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.252681956 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255905813 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.253533087 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.260009654 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.272800777 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.253578437 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259385995 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.272689297 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.251104167 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.255672986 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.253347828 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.251060091 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.255779173 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.264870928 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.254979478 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.254000371 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.253824762 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254079285 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253789003 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.260016838 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.272135848 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.254055445 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.25529825 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.253892015 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.252033614 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.255059505 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.253468841 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.25450065 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257614743 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254339025 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.255647109 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255611261 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.25391339 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.255589763 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.254059642 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257563578 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.265386958 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.260164957 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.254917496 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.256672727 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.255437933 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.260469457 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.252581595 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.254649742 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.255787958 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.265815067 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.281268064 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.261469197 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.27764097 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.256361187 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.261522084 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.276323131 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.259160929 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256399292 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255082277 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.255631496 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.255168691 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.253208713 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.257062641 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.2566138 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.256940779 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.25827823 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.263036203 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.257314783 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.256267954 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.254635632 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.25792517 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.258643929 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.256565998 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.258919505 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.258624437 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259693879 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.255414245 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.257749195 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.264050306 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.27845508 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.2587632 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.257954937 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.257891559 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.257797974 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.258447759 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.25896486 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.262364087 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.269287675 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.261817861 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.270651224 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.259483487 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.26790122 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.259705771 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.262059441 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.268503278 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.255566309 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.257224971 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.258820353 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.260302429 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266779757 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.27919809 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.261142564 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.263734081 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259854407 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.258717818 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.258301342 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.257803383 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.260502167 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.259885501 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.264521697 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.278389144 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.262518293 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260849246 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.25705708 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.260825706 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.261229118 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.26047894 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262970128 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.259149136 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.259822551 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.261260839 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.259544113 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.261319477 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.2604067 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.261382076 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.257866375 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.263303912 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.267514953 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.285105579 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.265804333 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.261799797 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.26743131 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278976353 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269650086 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.283076018 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.258645667 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.263713475 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.259605871 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.26420163 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.262201406 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.26244239 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.2603535 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.263359495 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.266863955 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.263165716 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.264858943 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.261098063 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.263569065 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.26053535 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271316698 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.289514075 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.26255365 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.266816434 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.260956395 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.261755909 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.265890786 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.262538909 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.261969857 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.265813105 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273770953 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.27559611 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.265260887 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.26376113 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.263989462 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264752889 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.260608279 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.263799285 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.263486179 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.261687831 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.264386191 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.26249018 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26552433 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.262797202 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.26303285 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266233271 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.263503395 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.271055157 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.282847783 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.263770386 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266613213 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.266628653 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.263769975 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.264215207 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.263911606 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265059648 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265671684 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.265006669 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274085946 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.274896511 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.265932128 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.262816843 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.263313609 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.26347702 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.263236102 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.265038231 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.266113949 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.26490315 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.264492203 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.267507104 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.264105112 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.261482215 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.263679919 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.26663579 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266501127 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271023031 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.275165347 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.264590624 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.261500805 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.266486431 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.264123627 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.263795674 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.266084402 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.270826433 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.286872034 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.277292725 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.273143993 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.270285891 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.268725845 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266735393 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.274293002 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.262203384 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.265044662 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.265753955 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.264938508 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.265087358 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.272900623 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268161555 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.27317301 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.289205209 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.265932874 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.277896716 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.290017411 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.267441823 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.268112094 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.272353561 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.26761619 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.264509926 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.270823338 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.267388829 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274851028 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.291566432 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.268814484 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.270825383 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.267415049 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.269585751 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.274509358 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26883841 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.267644425 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.26754519 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.269263156 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.268535806 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.268894143 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.263980352 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.266247004 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.268043716 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.273378827 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.279109816 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.268717883 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26975991 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.270011915 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.269184277 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.269698917 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.268327009 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.267054901 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.266099779 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.270119182 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.268490491 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.270644125 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.273548642 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.271084982 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.272163512 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.272544456 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.272071369 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.272057174 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.28219057 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.281306702 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.267276279 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.270152881 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.272184878 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.271021009 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268241403 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.270293999 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.268718196 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.273991857 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.271495403 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.271272318 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.272642815 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.271643896 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.287319088 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.291183385 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.271141308 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.271576273 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274563854 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.271891326 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.270416207 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.270508721 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.270906784 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.27504839 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.279609271 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.273077808 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.277616742 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.292491983 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.2745004 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.279318255 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.273571106 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.283036771 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.275998415 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.272747689 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.27244763 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.275597762 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.294016765 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27230919 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.2835295 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.307324428 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.294143711 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.274716 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.27080593 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270833519 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.273885654 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.274430741 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.274220477 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.27304585 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.272624638 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.274668765 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.272394348 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.277273069 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.273869976 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.274620144 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.27731702 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.271470727 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.274526562 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.270319983 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.272593294 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.271741628 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.271802474 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.272519821 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.273403654 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.271336392 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.284153957 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.29914326 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.275224462 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.27414635 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.271435339 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.274778439 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.277310733 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.284821615 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.280512949 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.272360151 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.271803352 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.275213525 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274589579 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.274594564 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.273892724 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.273831916 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276182171 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.272438304 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.289159663 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.301622555 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.284012415 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.275110684 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.273285075 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.275169224 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.273913466 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.275144357 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275386386 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.275384527 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.279507337 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.279260568 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.275972268 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.277380277 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.280663126 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.285865365 seconds)
  done (took 752.270490698 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.272145337 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273525565 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273054652 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.274030828 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272682461 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273811673 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273295239 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.273388387 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.277045396 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.274181698 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.271340758 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274561711 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.273686907 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.273918972 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275944143 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.27274642 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276167999 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.274462661 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.272750595 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274727724 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.275030814 seconds)
  done (took 27.941498992 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.276288782 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.274645969 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.273045066 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.275391022 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.273172281 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.276258432 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.274484568 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277499609 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.276593971 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275710183 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.27863536 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275562233 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.274933425 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.275477442 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276106002 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.279312445 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.27876661 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.275456074 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.278119686 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.277229752 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.277381252 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.277509966 seconds)
  done (took 29.270868741 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.278935272 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.279714197 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.275286926 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.275659182 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.280782173 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.27770126 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.277664074 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.279571535 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.278447346 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.27960046 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.276702665 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.280477383 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.287949055 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.284590322 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.279467792 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.280115399 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.422457224 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.27808435 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.279201442 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.277978408 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.27672559 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.287577709 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.297738663 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.278121606 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.278084693 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.277130212 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.28026619 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.280516405 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.280638436 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.281659774 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.283062007 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.279633608 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.279215034 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.283087646 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.278749941 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.282259728 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.286697896 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.280002348 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.276181879 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.283558561 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.288831124 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.304518939 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.28099908 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.286725849 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.304615339 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.281557664 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.286112307 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.290191065 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.27642709 seconds)
  done (took 64.156511911 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.282318536 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.282675885 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.280099277 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.279504512 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.282263504 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.283306914 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.285391476 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.28366957 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.279875171 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.278564374 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.285375127 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.282459572 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.283499778 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.282820583 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.285336843 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.280299881 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.27978256 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.280390782 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.281899138 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.281082974 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.27954179 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.283665045 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.284461966 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.281983392 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.285513473 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.28370049 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.282074219 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.284873254 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.281836825 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.280004864 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.286376469 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.284919127 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.283814429 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.281374842 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.282112337 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.285322196 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.282947756 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.283062888 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.284414921 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.283602785 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.288376433 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.285962596 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.285093522 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.283584296 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.281527684 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.284641891 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.282815974 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.283133813 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.280414892 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.283592383 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.285089727 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.282571799 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.287489657 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.284898476 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.287938939 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.286108102 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.28353957 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.282981325 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.284982941 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.284815793 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.281885169 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.285047154 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.281749088 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.287509925 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.287442284 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.281749283 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.282565429 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.289032369 seconds)
  done (took 88.468000119 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.285284379 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.285077818 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286786189 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287348251 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.286684243 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.286860859 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.286878057 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.285686566 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.285202837 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.289660428 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.288777324 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.287352895 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.286610418 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.286009057 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.2874233 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.285356202 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.284046251 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.28607628 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.28447276 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.285600268 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.285532749 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.287112998 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.287467078 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.287294435 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.285540381 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.28311303 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.286977058 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.286375355 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.285694453 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.284998934 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.288623093 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.285683442 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.284788969 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.287203689 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.287374005 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.286675 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.287722216 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.286348371 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.288727365 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.28535544 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.28756349 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.286348583 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.28696401 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.288999307 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.2856261 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.287117664 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.285367029 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.288312352 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.286893957 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.286526908 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.286620084 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.286852142 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286545188 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.289177095 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.289066936 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.28841667 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.286631483 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.286567766 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28936015 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.287324384 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.289072894 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.287748362 seconds)
  done (took 80.979516705 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288774903 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.289531299 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.286313422 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.28795671 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.290251354 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.285893161 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.289906485 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.289674534 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.28968765 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.290109824 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29030108 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.286954445 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286569447 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291039482 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.288848856 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288286407 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.287419706 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.2868892 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.289439657 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.287978053 seconds)
  done (took 26.97396199 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.2870476 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.291862748 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.287479975 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.288663868 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.291023183 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.289554489 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.290799989 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2910402 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289984678 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2905489 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.293901722 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.29221511 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288301821 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.28930538 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.293725536 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.290423575 seconds)
  done (took 21.849123562 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.2911443 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.292882572 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.293595323 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.292329075 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.290549969 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.28955876 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.291909826 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.290283491 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.28929088 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.292872488 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.292724054 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.293657352 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.29273915 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.292413165 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.290435645 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.293644269 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.289637038 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.288898802 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.292679564 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.291706702 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.291673276 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.290907411 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.293348514 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.293527449 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.29169849 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.291998936 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.290722248 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.292269904 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.290040078 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.294025257 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.291449168 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.293430751 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.290162659 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.291990941 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.293698819 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.290858042 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.294410575 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.292852484 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.294633401 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.292956273 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.294952429 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.290262603 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.293624057 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.295406319 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.291689692 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.294200594 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.291706259 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.292142453 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.293280925 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.291533478 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.294371349 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.296076931 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.294407687 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.296256921 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.296030259 seconds)
  done (took 72.291252202 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.294238035 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.296671889 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.29189966 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.295490654 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.29379878 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.293654634 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.296233572 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.29753192 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.293258886 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.294276966 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.294809971 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.300082927 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294639175 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.296490751 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.293231178 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.296760753 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.29481352 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.293160195 seconds)
  done (took 24.517947071 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.293574111 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.293629392 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.295498333 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.293914426 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.2944051 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.295493722 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.294249669 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.295011246 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295686477 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.295392512 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294668554 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.299394299 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297782244 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.295910013 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.293214357 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293224246 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.300752062 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.296591332 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.294389955 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294375006 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.301181411 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.297911031 seconds)
  done (took 29.712991529 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.295425442 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.296489447 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.296280502 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.312831769 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.31677016 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.320235378 seconds)
  done (took 9.04683203 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305817091 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297529479 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.294799459 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29926765 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298077792 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297290748 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296848685 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294548833 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297009183 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296606195 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294608608 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29726646 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296700169 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296070953 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298937927 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297871374 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296443296 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296250052 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299193216 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299203462 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296909007 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300592607 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295765655 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297906141 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29635711 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297297235 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299680265 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296926512 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296233343 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300149818 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299220648 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296607784 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298723313 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300722588 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300328196 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299339793 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298763022 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299325487 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300490552 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297882757 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.300987937 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30022266 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301067643 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297888729 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30196052 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297696347 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297071903 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298820648 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298060368 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301719156 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300461773 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298863165 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301186817 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301354452 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301411627 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30281366 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299532507 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298921254 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302724537 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299043005 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299685188 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300657384 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298428889 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298860344 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303817456 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298579618 seconds)
  done (took 86.959118371 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299461208 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298812219 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299645407 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300645099 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299788854 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299399358 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29973334 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300096874 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299483115 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298845926 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303627689 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300262802 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299100094 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298865761 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298299054 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298697582 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300008206 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300310378 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2991667 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303502104 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299323178 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301043758 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300456226 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300050845 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300143614 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303786785 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302196394 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300411505 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300267382 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300057222 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300412798 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301722218 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300559269 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.301173353 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300577647 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300284199 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301397195 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30066324 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300847625 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30310971 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301270153 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306694384 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302399141 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30176234 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304810364 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303567526 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301308418 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304959544 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305168514 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304906867 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303082096 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303669902 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30339498 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303235807 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304973014 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303737269 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302775655 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302672789 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303641804 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305394976 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304266574 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303136552 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307573831 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305475484 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303382416 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302319331 seconds)
  done (took 87.132156383 seconds)
done (took 1754.257923336 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.374184603 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.335178179 seconds)
  done (took 13.923037564 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.46741271 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.421438485 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.303472266 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.301382496 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.301893927 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.30759248 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.319014061 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.304708536 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.304720327 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.30472008 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.304492488 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.492721342 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.302620918 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.30691899 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.304503708 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.401012527 seconds)
  done (took 42.673157821 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.334147374 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.30944894 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.431550833 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.330782998 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.333930389 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.504031947 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.368216017 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.308078599 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.498472824 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.359292837 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.978834092 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.334271658 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.308540681 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.495090463 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.330955341 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.508900036 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.576315017 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.983183058 seconds)
  done (took 30.513620034 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.804958504 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.329989345 seconds)
  done (took 9.354525646 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.329626423 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.308302255 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.309837739 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.308534128 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.30137651 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.316892355 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.308755721 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.304981463 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.319655373 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.453621439 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.310690496 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.317065518 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.332967427 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.313125044 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.309712979 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.347053632 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.469761344 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.309667338 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.308212522 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.317692739 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.31220248 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.442403598 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.355704495 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.30805314 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.448314659 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.306864837 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.312400266 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.318443128 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.449824056 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.309126358 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.309231719 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.310704573 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.311477337 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.93081705 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.786289427 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.329768524 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.336278551 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.320384086 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.311279112 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.516150068 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.313346695 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.319699443 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.31368161 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.783335413 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.449121988 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.434600812 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.63999802 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.329671344 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.314897889 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.376861368 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.313343351 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.313076634 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.343312293 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.089558036 seconds)
  done (took 111.184859983 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.327906629 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.716181218 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.47774645 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.327815425 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.115166421 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.09152855 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.328513903 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.618851915 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.352546405 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.307119772 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.595556876 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.841768087 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.327666021 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.386980682 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.7857925 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.403587308 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.306373554 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.226979674 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.322000675 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.309279531 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.815075714 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.309101383 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.321097164 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.42011414 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.346059382 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.784951409 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.81277881 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.719196776 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.325826693 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.30791543 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.805254866 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.324972997 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.327207401 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.310321493 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.580176782 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.691815473 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.681914245 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.326486516 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.308727643 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.308302154 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.3302585 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.800574379 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.692602834 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.325896179 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.330524342 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.793493657 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.323787146 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.317920911 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.314654244 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.520358972 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.99937914 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.308991328 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.798722591 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.309505907 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.764298361 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.375436364 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.384373287 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.818750646 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.325842081 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.497447411 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.367951045 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.309482803 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.314212907 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.312629136 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.309925325 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.680020573 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.701948778 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.311488823 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.678750673 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.815313049 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.335452626 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.869924355 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.227599876 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.318593542 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.366075175 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.310744367 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.010086809 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.829194192 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.357680426 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.310177056 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.666246981 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.330804308 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.599978754 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.328737869 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.330123675 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.827851351 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.31588222 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.357927511 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.31606615 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.310882345 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.076949782 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.312388974 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.607866709 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.352022149 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.310658549 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.310372391 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.362073704 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.315410487 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.309503184 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.317331294 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.870411388 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.337084566 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.295558541 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.334229296 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.322574061 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.316309605 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.311043079 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.310542146 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.541774649 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.816979799 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.331645495 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.313015324 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.312132616 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.314176499 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.433455397 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.316756348 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.664306322 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.337490871 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.334069105 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.316902683 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.124513642 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.376710331 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.312395047 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.318108883 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.246250499 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.518236857 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.332900535 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.314594291 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.313703288 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.337975325 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.642563277 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.333557476 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.392479449 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.323099294 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.056775705 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.33932506 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.350240261 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.657747981 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.31520119 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.314216083 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.318234626 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.316423005 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.605699576 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.599592181 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.623308623 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.317832063 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.33210036 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.029770748 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.344413609 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.462888427 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.334695738 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.297695096 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.514584133 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.510492613 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.31493797 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.917148767 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.313516666 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.538119301 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.317935923 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.635936651 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.835111445 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.331328648 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.319037728 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.06157084 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.03022277 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.083509797 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.31548885 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.611465335 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.292330886 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.795338686 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.316023096 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.315905023 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.887915487 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.320557364 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.321243173 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.316571165 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.316640152 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.376171513 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.491476032 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.573495193 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.322407098 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.79241311 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.37430452 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.316438574 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.336602843 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.317262687 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.666634095 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.386692755 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.32230309 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.351848542 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.31867816 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.325532787 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.816622597 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.285496835 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.322221013 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.471988293 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.988426768 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.334051359 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.317538832 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.991069369 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.541448407 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.890982368 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.362326411 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.651390537 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.343774826 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.356354515 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.0081879 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.40353119 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.856843705 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.337698078 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.318777949 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.944740614 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.33444654 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.411330026 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.320586984 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.31949163 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.888973104 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.336416283 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.31891656 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.732000387 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.355844707 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.577768642 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.320177493 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.362727066 seconds)
  done (took 1109.217098501 seconds)
done (took 1318.081989768 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.320594299 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.320162907 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.305640372 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.325366799 seconds)
  done (took 26.50759701 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.330859882 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.326315295 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.328056677 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.327720825 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.328469675 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.3250238 seconds)
  done (took 9.208508381 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.788150499 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.324877354 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.326163538 seconds)
  done (took 19.679318319 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.546560917 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.712967142 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.712029435 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.743232239 seconds)
  done (took 10.956687305 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.328314397 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.326623409 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.326722955 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.327603713 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.332329161 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.333578742 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.330149156 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.330842405 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.334075673 seconds)
  done (took 13.208323886 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.333910828 seconds)
done (took 82.129794535 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.436654916 seconds)
    (2/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.767072099 seconds)
    (3/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.846867279 seconds)
    (4/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.352606945 seconds)
    (5/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.613207115 seconds)
    (6/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.445535831 seconds)
    (7/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.750078192 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.303933967 seconds)
    (9/286) benchmarking ("sort", Int8, false)...
    done (took 4.351603092 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.384411744 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.348634549 seconds)
    (12/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.301113584 seconds)
    (13/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.384039837 seconds)
    (14/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.314008441 seconds)
    (15/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.872802612 seconds)
    (16/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.513706585 seconds)
    (17/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.318813914 seconds)
    (18/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.303451993 seconds)
    (19/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.241084633 seconds)
    (20/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.411490195 seconds)
    (21/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.338317088 seconds)
    (22/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.323734196 seconds)
    (23/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.370251501 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.961434995 seconds)
    (25/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.414315351 seconds)
    (26/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.745480735 seconds)
    (27/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.829458054 seconds)
    (28/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.303901536 seconds)
    (29/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.303578894 seconds)
    (30/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.081845939 seconds)
    (31/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.313927508 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 6.348772462 seconds)
    (33/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.437582509 seconds)
    (34/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.410666414 seconds)
    (35/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.44605816 seconds)
    (36/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.510374599 seconds)
    (37/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.327624594 seconds)
    (38/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.302835898 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.477730191 seconds)
    (40/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.42985392 seconds)
    (41/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.303221051 seconds)
    (42/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.306003937 seconds)
    (43/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.374924868 seconds)
    (44/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.351883149 seconds)
    (45/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.347006101 seconds)
    (46/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.425431432 seconds)
    (47/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.305421112 seconds)
    (48/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.437369771 seconds)
    (49/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.721234704 seconds)
    (50/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.304095571 seconds)
    (51/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.432633803 seconds)
    (52/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.787968384 seconds)
    (53/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.326089874 seconds)
    (54/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.438539616 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.581368559 seconds)
    (56/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.922487094 seconds)
    (57/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.311264895 seconds)
    (58/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.427017179 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.308634772 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.045704839 seconds)
    (61/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.302966367 seconds)
    (62/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.305139446 seconds)
    (63/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.40495869 seconds)
    (64/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.304546265 seconds)
    (65/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.350742129 seconds)
    (66/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.306675349 seconds)
    (67/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.70837295 seconds)
    (68/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.351897988 seconds)
    (69/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.321468634 seconds)
    (70/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.344867417 seconds)
    (71/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.342051525 seconds)
    (72/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.702999361 seconds)
    (73/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.355579748 seconds)
    (74/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.341802627 seconds)
    (75/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.005562622 seconds)
    (76/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.326729584 seconds)
    (77/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.416905646 seconds)
    (78/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.242142862 seconds)
    (79/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.234793956 seconds)
    (80/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.378453399 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.029181773 seconds)
    (82/286) benchmarking ("sort", Float64, true)...
    done (took 6.329970575 seconds)
    (83/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.365814315 seconds)
    (84/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.346349054 seconds)
    (85/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.896017121 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.129261238 seconds)
    (87/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.568679075 seconds)
    (88/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.453090642 seconds)
    (89/286) benchmarking ("sort", Int64, false)...
    done (took 5.576648142 seconds)
    (90/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.377529091 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.275740391 seconds)
    (92/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.414611297 seconds)
    (93/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.061865211 seconds)
    (94/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.901078644 seconds)
    (95/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.347414451 seconds)
    (96/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.340633955 seconds)
    (97/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.355959645 seconds)
    (98/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.308653131 seconds)
    (99/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.32541278 seconds)
    (100/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.407094737 seconds)
    (101/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.458001855 seconds)
    (102/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.320795336 seconds)
    (103/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.830612463 seconds)
    (104/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.194370666 seconds)
    (105/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.634649368 seconds)
    (106/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.354984749 seconds)
    (107/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.516437227 seconds)
    (108/286) benchmarking ("sort", BigInt, false)...
    done (took 6.347063071 seconds)
    (109/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.101828336 seconds)
    (110/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.560056672 seconds)
    (111/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.309554233 seconds)
    (112/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.339149718 seconds)
    (113/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.83981342 seconds)
    (114/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.876425414 seconds)
    (115/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.358519567 seconds)
    (116/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.31016815 seconds)
    (117/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.154177207 seconds)
    (118/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.882498116 seconds)
    (119/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.33613628 seconds)
    (120/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.085528233 seconds)
    (121/286) benchmarking ("sort", Bool, false)...
    done (took 1.852385659 seconds)
    (122/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.37008404 seconds)
    (123/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.147347231 seconds)
    (124/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.432060735 seconds)
    (125/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.325734698 seconds)
    (126/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.588855883 seconds)
    (127/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.329162254 seconds)
    (128/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.347611409 seconds)
    (129/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.533413182 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.175479841 seconds)
    (131/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.229674596 seconds)
    (132/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.610258731 seconds)
    (133/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.543807672 seconds)
    (134/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.205928351 seconds)
    (135/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.394992429 seconds)
    (136/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.31000304 seconds)
    (137/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.739242458 seconds)
    (138/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.320448488 seconds)
    (139/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.15890196 seconds)
    (140/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.434189293 seconds)
    (141/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.267969296 seconds)
    (142/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.015887222 seconds)
    (143/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.337647081 seconds)
    (144/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.41738146 seconds)
    (145/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.462468717 seconds)
    (146/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.737940196 seconds)
    (147/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.412099492 seconds)
    (148/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.371299632 seconds)
    (149/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.03818769 seconds)
    (150/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.212233189 seconds)
    (151/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.30883023 seconds)
    (152/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.431834952 seconds)
    (153/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.333583845 seconds)
    (154/286) benchmarking ("sort", Int8, true)...
    done (took 6.356157035 seconds)
    (155/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.389298855 seconds)
    (156/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.222481111 seconds)
    (157/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.358405139 seconds)
    (158/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.638501799 seconds)
    (159/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.372095325 seconds)
    (160/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.316928521 seconds)
    (161/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.336030047 seconds)
    (162/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.328498643 seconds)
    (163/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.555846432 seconds)
    (164/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.374488755 seconds)
    (165/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.44304893 seconds)
    (166/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.335495792 seconds)
    (167/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.784872252 seconds)
    (168/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.313966385 seconds)
    (169/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.329520872 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.767049795 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.14405487 seconds)
    (172/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.03478044 seconds)
    (173/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.319916472 seconds)
    (174/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.430066163 seconds)
    (175/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.327591675 seconds)
    (176/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.314045669 seconds)
    (177/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.349960421 seconds)
    (178/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.719765542 seconds)
    (179/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.616878928 seconds)
    (180/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.459722232 seconds)
    (181/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.359420728 seconds)
    (182/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.639383661 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.050893217 seconds)
    (184/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.383993314 seconds)
    (185/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.347175963 seconds)
    (186/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.148322818 seconds)
    (187/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.353239932 seconds)
    (188/286) benchmarking ("sort", Float32, false)...
    done (took 5.398595947 seconds)
    (189/286) benchmarking ("sort", Bool, true)...
    done (took 5.457166204 seconds)
    (190/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.415700282 seconds)
    (191/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.723933232 seconds)
    (192/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.259338355 seconds)
    (193/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.213812237 seconds)
    (194/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.351272654 seconds)
    (195/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.314525165 seconds)
    (196/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.339926379 seconds)
    (197/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.339818698 seconds)
    (198/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.377857606 seconds)
    (199/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.358088195 seconds)
    (200/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.425666573 seconds)
    (201/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.765231842 seconds)
    (202/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.611288257 seconds)
    (203/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.380327978 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.546853474 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.998164995 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.766029373 seconds)
    (207/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.88496635 seconds)
    (208/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.321721858 seconds)
    (209/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.333664117 seconds)
    (210/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.875448864 seconds)
    (211/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.319671843 seconds)
    (212/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.629248017 seconds)
    (213/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.38171377 seconds)
    (214/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.343457066 seconds)
    (215/286) benchmarking ("sort", BigInt, true)...
    done (took 6.337739916 seconds)
    (216/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.663289905 seconds)
    (217/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.32058432 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.397957707 seconds)
    (219/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.103342175 seconds)
    (220/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.014666671 seconds)
    (221/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.365664445 seconds)
    (222/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.36029315 seconds)
    (223/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.211961899 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.799202828 seconds)
    (225/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.824241971 seconds)
    (226/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.347275636 seconds)
    (227/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.335297596 seconds)
    (228/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.162138651 seconds)
    (229/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.358058048 seconds)
    (230/286) benchmarking ("sort", Float64, false)...
    done (took 5.735578956 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.338631507 seconds)
    (232/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.985611634 seconds)
    (233/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.323350929 seconds)
    (234/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.986679361 seconds)
    (235/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.692544909 seconds)
    (236/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.882047553 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.56261782 seconds)
    (238/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.486285124 seconds)
    (239/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.887647851 seconds)
    (240/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.076271494 seconds)
    (241/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.148242986 seconds)
    (242/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 4.019485381 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.368774478 seconds)
    (244/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.366221664 seconds)
    (245/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.018669412 seconds)
    (246/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.420304824 seconds)
    (247/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.012283068 seconds)
    (248/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.539201841 seconds)
    (249/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.754249287 seconds)
    (250/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.053826257 seconds)
    (251/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.366259742 seconds)
    (252/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.452730538 seconds)
    (253/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.331631106 seconds)
    (254/286) benchmarking ("sort", Float32, true)...
    done (took 6.341479809 seconds)
    (255/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.428155657 seconds)
    (256/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.365385705 seconds)
    (257/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.340598937 seconds)
    (258/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.369482758 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.706465462 seconds)
    (260/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.067071295 seconds)
    (261/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.209938654 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.424345893 seconds)
    (263/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.21123258 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.443303772 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.469584262 seconds)
    (266/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.752234584 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.18237977 seconds)
    (268/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.842082625 seconds)
    (269/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.339131767 seconds)
    (270/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.982920178 seconds)
    (271/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.454832473 seconds)
    (272/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.428654068 seconds)
    (273/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.354124679 seconds)
    (274/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.24085379 seconds)
    (275/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.760512149 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.38042146 seconds)
    (277/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.458990817 seconds)
    (278/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.646995076 seconds)
    (279/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.975288176 seconds)
    (280/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.339264195 seconds)
    (281/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.446109104 seconds)
    (282/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.501521805 seconds)
    (283/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.780121282 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.365399296 seconds)
    (285/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.366283031 seconds)
    (286/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.320276276 seconds)
  done (took 949.790068638 seconds)
done (took 951.030532649 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.376656086 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.372255652 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.352742961 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.375205463 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.464603884 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.379209427 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.364044385 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.354387152 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.401633564 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.403855928 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.35215511 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.381561016 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.356319471 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.354436327 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.355386619 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.369371358 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.478684708 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.354299471 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.3710793 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.364152214 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.373028422 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.352725115 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.405462101 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.381592565 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.3566933 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.358577738 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.359177719 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.374241796 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.46661648 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.35914806 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.359312516 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.367545324 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.480499492 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.352811884 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.349182377 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.375497835 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.369490495 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.365401161 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.360630628 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.389200252 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.920639954 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.375683607 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.357041543 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.357356457 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.357566197 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.361327366 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.357827698 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.36368732 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37009483 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37319838 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.909595802 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.388566972 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.36082786 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.355785298 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.367399703 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.358314007 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.360427578 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376622047 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.376104119 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.374913639 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.466502194 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.362223511 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.358807043 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.374007895 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.365559595 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.950239622 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.370578564 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.362369584 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.924468962 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.381450925 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.952975656 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.385258807 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.358134307 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.37154322 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.392228268 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.482043654 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.351231163 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.358476046 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.366161152 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.35687741 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.368831703 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.373182306 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.362999344 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.358969525 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.375117381 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.384871953 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.369492972 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.361635133 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.368812009 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.379468132 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.366095176 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.370601418 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.362056604 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.354431382 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.369519251 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.361637231 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.362716215 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.363846345 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.36403672 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.37111222 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.926542039 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.397836843 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.356061131 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.356919714 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.358923853 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.373137866 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.927260034 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.378068088 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.38055635 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.407872223 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.361129215 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.471816222 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.365195163 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37808332 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.370133133 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.363954022 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.354351373 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.475011907 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.917211513 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.393429629 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.360682473 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.36025202 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.379795501 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.362767818 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.35766694 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.531778496 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.363169107 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377154499 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.483232863 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.374480569 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.393777015 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.36214482 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.365955955 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.386300547 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380955131 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.393725515 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.36438847 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.383881186 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.378796655 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.359314482 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.375732606 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.37217109 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.364976206 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.368341475 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.358504514 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.384189189 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.378464111 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.377945214 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.384632116 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.483164935 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.36360812 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.537992 seconds)
done (took 231.248919385 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.420059554 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.354802044 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.4402414 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.358133201 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.461506853 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.458677277 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.354866977 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.356235489 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.354719452 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.734576719 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.355727284 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.356743444 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.351243866 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.355682049 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.44167942 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.357679383 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.357396046 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.697326808 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.35975784 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.428671508 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.357878364 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.35692153 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.359185165 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.738525866 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.359218797 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.360264353 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.429093407 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.3586884 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.705736626 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.352335916 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.357256078 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.705971282 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.44889351 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.377753862 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.369632367 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.36808097 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.462036183 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.38078986 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.440142908 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.43980582 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.441281317 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.400810229 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.357789007 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.355593628 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.362314676 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.361069196 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.357806843 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.387919764 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.35853724 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.35817254 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.699787566 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.369663595 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.35950598 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.359879115 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.360244991 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.389829026 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.359530871 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.362158457 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.450844415 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.361597341 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.424730318 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.741489027 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.739325419 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.362901384 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.35926442 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.360912158 seconds)
  done (took 150.154363086 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.43025678 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.435429698 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.482249821 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.382004959 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.413889174 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.486628055 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.379133817 seconds)
  done (took 11.279428665 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.366114239 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.362519406 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.412002739 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.410375225 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.362508737 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.510744013 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.363171627 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.374333156 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.361771477 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.415498976 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.36360426 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.362797747 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.369875356 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.365290577 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.411113501 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.373219779 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.476167569 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.3647038 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.362790577 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.513644347 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.361972871 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.371459863 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.41460236 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.37420494 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.365093393 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.368958533 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.928900442 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.364217712 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.361960919 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.364354642 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.362011221 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.400911408 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.365716906 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.362068507 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.360719912 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.480010117 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.364830836 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.361925349 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.365889609 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.357620652 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.362921907 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.365364977 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.365533749 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.362959428 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.366695144 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.386763991 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.366435467 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.365328932 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.367098253 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.366401691 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.415897008 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.366243207 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.363999836 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.363490838 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.421307294 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.37388502 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.368095175 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.362741193 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.365749394 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.363792147 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.516424742 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.412213675 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.36594025 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.41587555 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.36721411 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.367879346 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.367592374 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.366656235 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.420178221 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.367633198 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.414525192 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.364155877 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.521134181 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.389976592 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.368482306 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.369217743 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.369837913 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.366399962 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.362476849 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.371328824 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.364947911 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.36871908 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.371065689 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.364344101 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.365401878 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.46882722 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.475126564 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.365743657 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.380259759 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.376215534 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.367025316 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.420895933 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.36935962 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.367261407 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.419572498 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.481846372 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.421236037 seconds)
  done (took 156.287955876 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.371957991 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.37483299 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.370719128 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.382875883 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.370038202 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.369291963 seconds)
  done (took 9.515229717 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.371227873 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.372929985 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.370752847 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.370961277 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.36969583 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.370005658 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.369862699 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.370947352 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.374865965 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.369716358 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.37094444 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.370471261 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.372011377 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.369746207 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.369660713 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.370684702 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.369035765 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.367963772 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.370544912 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.370220797 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.463834906 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.370054764 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.371312009 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.370982014 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.377458792 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.370962217 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.377434536 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.371360928 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.371339466 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.378280381 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.390824078 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.370514538 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.37172008 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.377744982 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.374595577 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.371736878 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.376279768 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.371812517 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.37001966 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.37196535 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.372490948 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.373537905 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.372369369 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.373085966 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.375015467 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.378175497 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.379069178 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.380686353 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.373756929 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.374603585 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.373785241 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.373501764 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.373935859 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.372708338 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.374476783 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.394877129 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.377892066 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.374763518 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.374437408 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.375162176 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.376828035 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.375416177 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.375475398 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.378987567 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.382198934 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.374829823 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.378499159 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.379094 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.375213898 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.375905421 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.374484885 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.374383323 seconds)
  done (took 101.300227911 seconds)
done (took 429.804418973 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.439793448 seconds)
  done (took 7.719367015 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.791384138 seconds)
  done (took 8.074172874 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.70209773 seconds)
  done (took 24.993282301 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.371626998 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.420158528 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.370771889 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.378288771 seconds)
  done (took 26.827915901 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.988313989 seconds)
  done (took 8.271130972 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.369028412 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.386662738 seconds)
  done (took 14.044805227 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.677808593 seconds)
  done (took 7.961570316 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.458053629 seconds)
  done (took 7.747885944 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.386210858 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.388629765 seconds)
  done (took 14.074708562 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.349263311 seconds)
  done (took 7.634309894 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.55184054 seconds)
  done (took 8.834791018 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.371956269 seconds)
  done (took 7.658352124 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.370157189 seconds)
  done (took 7.653495968 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.162084877 seconds)
  done (took 10.44701545 seconds)
done (took 163.224657556 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.369826043 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.374872606 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.372042611 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.370341749 seconds)
  done (took 26.773649721 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.409662656 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.409840413 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.411682585 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.422907287 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.412865232 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.410720824 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.403388163 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.401489015 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.420249698 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.413633131 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.414481695 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.41326218 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.431228296 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.40284645 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.412769375 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.411144381 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.421288032 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.411656601 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.402318671 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.413728315 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.37816124 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.422922188 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.413481488 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.380515412 seconds)
  done (took 35.130248481 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.896864355 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.447463488 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.531198491 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.428896249 seconds)
  done (took 7.5890131 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.428114959 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.432753408 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.447252864 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.483618409 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.513501365 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.442190236 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.405402428 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.398928387 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.386852791 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.43202265 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.508002581 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.446756592 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.523735235 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.37751905 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.574059851 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.379158629 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.379039408 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.431758539 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.483843087 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.49885747 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.379254694 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.432138524 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.434360835 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.449585035 seconds)
  done (took 35.955879439 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.380003337 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.398243026 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.379889813 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.377549193 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.387137718 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.378897905 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.379513628 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.381004281 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.380295623 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.385583237 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.379872873 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.391755848 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.377950371 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.381100012 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.385996781 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.380922644 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.384744126 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.381072508 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.380442846 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.385798594 seconds)
  done (took 28.946347108 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.374160932 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.226850642 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.724658121 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.630631269 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.375196821 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.37470065 seconds)
  done (took 27.996525983 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.458953338 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.628072474 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.38148205 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.793638974 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.892118177 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.403319233 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.381023556 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.645101359 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.010286299 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.012286361 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.451584387 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.456676614 seconds)
  done (took 20.805082769 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.386882643 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.381627279 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.381280182 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.417594892 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.441940712 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.405619874 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.387791465 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.375815759 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.452086494 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.470289867 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.40729987 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.444059529 seconds)
  done (took 38.242881536 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465649231 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.428364084 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.482423312 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.47134006 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.103639526 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590293524 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.437852901 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.827308908 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.382789381 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651452664 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387124731 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469023577 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.636818028 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386133102 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384509299 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.489307566 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.626237948 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901131597 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382343546 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.753997522 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40477294 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.380931623 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.851124665 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.411279502 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590553914 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.525542646 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.640658018 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.153864278 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.707867108 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.391577872 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39078387 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381595268 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655073785 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110969004 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505289577 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392649545 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394017644 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.929503504 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.378557905 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.747502905 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388609441 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.383580663 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393296765 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380642865 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.320927189 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387811048 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.84137001 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.388013499 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.091648054 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.380971255 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391504993 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474855709 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.385004037 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.372322216 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.453675349 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.409502758 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.380137009 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47747899 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97182805 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.28951983 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387487858 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.323644662 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.381582116 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.699172176 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072493674 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.50323834 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.386424962 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.385651306 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316989315 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.846686635 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406161571 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521153331 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.405979363 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.043610519 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174390759 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.404662318 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.313694112 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969218385 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38696074 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.323223548 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.612074278 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.160770179 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323261867 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.326964351 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.316995077 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138776867 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391973565 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.87774887 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405497392 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.855354247 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.394216189 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400092533 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4071067 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.608741439 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.261143513 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382127076 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.385094236 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497865329 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406398034 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.836184148 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3196635 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.388667541 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642329006 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.595503949 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40031837 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.51473959 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624507036 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386638963 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.405551613 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.397685331 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.402973172 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.020165824 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.41509033 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.334116966 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409830023 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.163049557 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172368921 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402692096 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.49315265 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.401584362 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654272207 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.211192906 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.549285603 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453895616 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389965623 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.38467914 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.783808907 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.982227104 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.544969834 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.382035981 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388959718 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.402843174 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.385432403 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348955367 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.392726258 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40903072 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.16410408 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.611251757 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403792695 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669701324 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320687658 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525147119 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.404393501 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.61021248 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.694667329 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.406114912 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.127811452 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397411585 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.394913149 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.42419814 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405766562 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488921254 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41008451 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.396014084 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.651689846 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.391228935 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.391427371 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.887376024 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.173394124 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395098869 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.392853432 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397692278 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048588606 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380610517 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.392788285 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.282164281 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.401591654 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455298088 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.392158702 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.399473879 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.453137555 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413421685 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.395104657 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.393250723 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611760621 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39932395 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.761385598 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472775115 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.601295398 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.03905898 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422132986 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.322167287 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.097594948 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.08165695 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388924385 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.579118255 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.387819394 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400568178 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401730021 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.388395393 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.029686151 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411135707 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.761403786 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.402780989 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.399970135 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.395933873 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388931789 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.408373071 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.367837258 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415297264 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.407399231 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533807383 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.402113445 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.324320524 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.906843737 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.39446102 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.392590102 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.168431926 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426344861 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.76344612 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901503745 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.651350566 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393122735 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.404459582 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.901522142 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.436234222 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.40553818 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407435837 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400225017 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.442352489 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418671502 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.402305718 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.773163731 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.771752437 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956513965 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197090075 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014076223 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420045509 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.393112083 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.28170509 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.843980836 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327570613 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.051197067 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603228946 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.862006293 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348967696 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610923817 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.708560683 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.263692323 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404884802 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622223915 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399154857 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.396260701 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42962745 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.605954954 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427873652 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.399972785 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.328796428 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.673833224 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650458491 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401836317 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.477815839 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.84355353 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41416154 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.179493262 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.461714911 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.806943449 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.600318802 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.025300406 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.787602807 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.408999842 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.401909291 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901894792 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.399108419 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.924408921 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076594302 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.434173803 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.616129483 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334482468 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.405328519 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.404658036 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.391135486 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.910022343 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.401582403 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.655163328 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.408387435 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3286889 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.40139101 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991115629 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.271335046 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.400974021 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397557953 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193733773 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397808004 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.730691536 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.410172769 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.399860581 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419990978 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.331390793 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330104176 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.090342134 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.404928699 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365174965 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935091776 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.397261075 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407487855 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398431442 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268913007 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.652924607 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.409496621 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.048295944 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643577787 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393837418 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439202965 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.497157148 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412538525 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.379328627 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.277924296 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.632151394 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404876604 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.622451564 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.526293796 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.309751173 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.411332684 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.609570043 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.279743748 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.398944275 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673916086 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.12997339 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.402844344 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201523609 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442140113 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.399862365 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.416479118 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.400329072 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418388372 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489841404 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.409553125 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.408999681 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.408119181 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.58793998 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404470835 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401201823 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.412964856 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493022771 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.386086393 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.458886354 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.177763304 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.055356098 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231626717 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.067008068 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432026678 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.400472798 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400124942 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334540697 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551517131 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.928111693 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674550937 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521202606 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.399189815 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442505353 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408000708 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405414435 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618277336 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675301557 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.381631869 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406391222 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.195788591 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.560031532 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.412620569 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.612325962 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942777469 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007632647 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516451951 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.404783394 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.856678446 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677104515 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.493835664 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401243646 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.996842472 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.409129929 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.862835031 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.429771733 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403470647 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550927748 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.412286176 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112635055 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.432445707 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.55771013 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.176655534 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.821345455 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.666858307 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.946524477 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.415674141 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.0579918 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.204053429 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.668982109 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471327549 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.414985326 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.519999442 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551183182 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.407953656 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.305640202 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.403716158 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258829223 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.113568156 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.412485289 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.055464748 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687811253 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.402152562 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.406611337 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428136091 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.414188461 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.628069567 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.166966306 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.630826652 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.41742601 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.413002418 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.978059874 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055564736 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.436739079 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340877945 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.410192137 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.687960363 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.669946666 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42769337 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.857598139 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.114772494 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999365288 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.381980065 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426209521 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414658979 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.188657998 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05529614 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.437200471 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958519965 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.066631997 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406456886 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685983175 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.410994137 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.404666536 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687681197 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.408962363 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.420339444 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.424061541 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.064208318 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.281570148 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.414342964 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.851216406 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.342618999 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.635372476 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.439985926 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342611951 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408009789 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.599743889 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.40751542 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527344599 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418900964 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.411193482 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411113067 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.146141286 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.686310768 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.412841723 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.407112075 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.393358524 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.420498562 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510547311 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.666597624 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413051162 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.080286469 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.760358657 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.666561584 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.412298041 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.391663828 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.41218746 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406594936 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.132227109 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.426789944 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.41118208 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017409355 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.417639422 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.425443848 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.414187193 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.625288677 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62063145 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.421197397 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.421513349 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420139117 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430890651 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.307443825 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.184394069 seconds)
  done (took 1684.248872318 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.423420157 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.450251929 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.439071055 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.488111801 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.475985885 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.490594 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.511530309 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.500193692 seconds)
  done (took 53.098554449 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.407881123 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.58683657 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.443648853 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.409319097 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.418721384 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.416000222 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.917877777 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.430462676 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.419512235 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.42030658 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.419479281 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.415361548 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.148580248 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.421482199 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.419352392 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.400511422 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.419460662 seconds)
  done (took 66.846713051 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.426039713 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.974569403 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.46191621 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.419546528 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.227263277 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.428293091 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.035335416 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.479689998 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.445494752 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.474062875 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.074857205 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.461381118 seconds)
  done (took 82.234389817 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.431215536 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.431172067 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.433480357 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.429267236 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.430313674 seconds)
  done (took 8.477323511 seconds)
done (took 2117.629168415 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.421154276 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.230697495 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.153493562 seconds)
  done (took 5.709908482 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.560014468 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.609515284 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.730257703 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.736293458 seconds)
  done (took 7.961302976 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.694938963 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.799000081 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.631204289 seconds)
  done (took 6.451163194 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.739390086 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.433227539 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.444862153 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.414438481 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.420811727 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.422423515 seconds)
  done (took 20.582653142 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.417761392 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.422288465 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.4175049 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.422753229 seconds)
  done (took 7.006839908 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.39589275 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.126590453 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.395591572 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.416664515 seconds)
  done (took 18.659125835 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.163611529 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.17717524 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.162834019 seconds)
  done (took 7.827751619 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.450160238 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.444269569 seconds)
  done (took 4.22185461 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.717501793 seconds)
  done (took 3.041748544 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.433607023 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.472450051 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.569187173 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.453991802 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 5.128555518 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.416035768 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.28238235 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.807917966 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.426800652 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.947312 seconds)
  done (took 33.265559663 seconds)
done (took 132.090504452 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.656806135 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.81958297 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.626315188 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.626734722 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.644029604 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.625469515 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.622124355 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.588154609 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.134586386 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.121765831 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.671371818 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.645653629 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.780684448 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.81897321 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.780204813 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.442008464 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.64687495 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.705135676 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.321055164 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.428308092 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.62545617 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.267180192 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.496588688 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.291091591 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.643467605 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.575672955 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.848870415 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.43905347 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.430257643 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.872160394 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.578158177 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.416606351 seconds)
  done (took 199.517054644 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.41656074 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.43587057 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.41852183 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.417484261 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.422176067 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.416576371 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.420765186 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.435490179 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.438416388 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.417154718 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.418295739 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.43578021 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.418361661 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.417775848 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.419358665 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.417480887 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.425463821 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.427083388 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.419604158 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.418465783 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.439428946 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.432016337 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.418542456 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.418805575 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.444452917 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.419407031 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.443026142 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.418165333 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.454602525 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.419770119 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.440367253 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.424827407 seconds)
  done (took 206.959809008 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.419754972 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.418841688 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.438863345 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.435816215 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.437665405 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.438111482 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.438467849 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.445099433 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.419066892 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.438607394 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.440432786 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.427415232 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.421073119 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.418292701 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.421707524 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.419440788 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.418413491 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.420185899 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.448595781 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.418190228 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.420680181 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.419463771 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.445050873 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.419968387 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.420477474 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.427821073 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.420295417 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.421504376 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.439885954 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.425713951 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.430378443 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.420005594 seconds)
  done (took 207.027144113 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.625098329 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.430022771 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.42904469 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.391533048 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.430673658 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.427355219 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.42635579 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.620845859 seconds)
  done (took 15.114198707 seconds)
done (took 629.945741965 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.874181598 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.580530753 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.642725323 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.44845157 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.293321214 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.47113849 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.449038873 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.638618958 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.396451216 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.643683789 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.764972896 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.466504504 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.915699623 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.448031897 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.724277095 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.555968653 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.361813945 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.495228115 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.792430781 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.05786589 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.728691881 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.03078989 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.658264053 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.383049016 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.928426183 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.012757947 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.259641833 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.356242506 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.468531629 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.799827517 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.213807525 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.505472515 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.523477862 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.516783635 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.576747084 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.557854697 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.498267997 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.520651384 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.664008688 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.791499529 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.057473181 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.209378499 seconds)
  done (took 97.615396174 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.414095894 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.413665897 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.411862181 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.41205036 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.414853812 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.413576266 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.413757836 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.413772105 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.415836209 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.412036098 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.411712575 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.415422968 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.413783931 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.415937273 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.414054251 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.413676773 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.414875928 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.41586885 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.414669722 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.414521971 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.415099181 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.413157067 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.414471752 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.413839764 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.415068662 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.414742874 seconds)
  done (took 38.101418439 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.435010462 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.695129569 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.880183458 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.439169765 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.433149752 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.439478509 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.524080679 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.434380646 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.436902933 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.436394336 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.599066697 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.437765973 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.474396529 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.913981384 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.438465122 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.435290943 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.437974905 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.435311169 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.707733817 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.444037487 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.543813691 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.436730553 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.522449528 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.445318193 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.459439707 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.436422488 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.441796353 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.029968937 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.456141374 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.599502624 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.345696176 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.527202514 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.966291872 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.914617849 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.350297443 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.442866814 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.439046744 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.604177665 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.438091683 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.436829005 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.524798818 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.435870015 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.895502339 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.126989207 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.457041648 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.439777166 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.052834528 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.622597702 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.714895298 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.444765014 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.920181593 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.439033796 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.438916932 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.439567497 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.717785113 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.443846843 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.437662618 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.068434102 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.463029154 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.528453727 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.438977371 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.437196294 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.716003572 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.438004957 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.704508504 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.440490614 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.447982821 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.459113271 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.899262842 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.440525332 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.156153397 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.45999728 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.438549346 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.602171613 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.703226593 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.088871851 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.462761294 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.721218212 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.981629642 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.543891187 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.440635584 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.025594436 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.54849935 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.442880897 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.443110948 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.442981792 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.442314383 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.484428483 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.524103888 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.088684749 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.162317516 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.095689125 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.550924816 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.453155809 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.441749905 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.073337075 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.463909781 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.441334153 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.890568341 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.151929726 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.460519476 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.451084521 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.158486053 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.463210244 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.535374464 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.445843856 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.905366668 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.44094626 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.489205162 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.443607109 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.448156119 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.465639359 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.536343028 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.447987946 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.444231434 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.124327154 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.635147665 seconds)
  done (took 190.351571418 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.447818854 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.434932621 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.447024999 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.434569285 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.433626557 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.44230234 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.434117096 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.43347928 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.44312514 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.436006134 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.435979494 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.436475546 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.437149506 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.445204947 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.445793078 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.444100652 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.098722371 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.440251364 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.43480972 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.436507862 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.272912225 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.437674772 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.436989029 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.436888511 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.43946556 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.44081552 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.44428054 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.441548879 seconds)
  done (took 155.138603046 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.445282099 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.081183762 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.463704526 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.596606464 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.471972535 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.442747108 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.592014159 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.508673818 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.464613353 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.445748143 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.443162763 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.785475555 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.445200114 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.02629417 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.666817058 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.627091626 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.0309786 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.46382938 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.442835439 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.446167436 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.600350451 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.455145063 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.785877259 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.079751424 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.46638315 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.0811079 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.429322419 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.447405353 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.445831253 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.082669879 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.461180016 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.79005249 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.5351807 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.519744078 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.100855645 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.045527157 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.04650188 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.612442407 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.445263468 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.444531908 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.446678626 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.430157648 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.084191199 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.466195948 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.446908475 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.077363528 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.469894317 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.449093345 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.45313098 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.446919206 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.514020932 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.532582639 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.810056071 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.091054237 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.556334247 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.466625384 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.594138943 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.838058451 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.450249463 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.029961817 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.429777098 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.092904079 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.467468646 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.430842365 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.450328283 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.456985284 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.626293565 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.598077846 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.032199742 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.467166448 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.036552674 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.643173732 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.451691399 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.449669063 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.451203556 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.092451746 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.050703772 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.644514478 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.608585156 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.678674512 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.439672271 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.449473906 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.433739179 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.542030995 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.456201323 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.094876085 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.05040837 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.470240153 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.449896682 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.452448476 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.452651102 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.654671551 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.11861194 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.56033444 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.030115549 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.814721224 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.794983929 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.453217224 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.519655096 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.470385914 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.800783624 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.453876536 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.518287215 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.907459259 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.797799764 seconds)
  done (took 174.114514319 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.728226746 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.774775655 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.55058909 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.615529065 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.104370078 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.045379652 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.805661816 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.605528574 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.571859112 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.73698051 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.71880234 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.540882402 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.702084648 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.537420382 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.220548703 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.550063552 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.570220409 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.607815219 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.62467818 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.52365399 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.186854677 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.769892409 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.665367459 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.450178405 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.551661365 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.301914347 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.049426104 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.002020831 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.646202222 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.87934042 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.046852584 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.638853457 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.4936343 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.199291948 seconds)
  done (took 70.37113196 seconds)
done (took 727.025912377 seconds)
SAVING RESULT...
DONE!
